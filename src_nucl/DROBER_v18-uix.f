      PROGRAM DROBER
      IMPLICIT double precision (A-H,O-Z)
C     OBERPROGRAMM FUER DREITLEILCHEN NUKLEONOPERATOREN
C
C     VERSION AUGUST 97
C     11.8.97 ES WIRD AUF DIE REIHENFOLGE DER WECHSELWIRKENDEN TEILCHEN
C             GEACHTET H.M.H
C     3.9.97 BERECHNUNG DER WW TEILCHEN KORRIGIERT H.M.H.
C     5.9.97 EXPLIZITER ISOSPINAUSTAUSCH EINGEBAUT
C     23.3.98 OPERATOR 5 UND 6 MIT ZUSAETZLICHEM FAKTOR 2*SQ(3),
C             SOWIE OP 6 UND 8 MIT MINUSZEICHEN VERSEHEN H.M.H.
C     28.5.98 ZYKLISCHE SUMME UEBER WECHSELWIRKENDE TEILCHEN EINGEBAUT H.M.M.
C     30.6.98 ALLE VV FUR TENSOR*TENSOR MIT FAKTOR 81 MULTIPLIZIERT,
C             D.H. OPERATOREN 7-13  H.M.H.
C     19.8.98 WEGEN UNTERSCHIEDLICHER DEFINITION DER 2N- UND 3N-OPERATOREN
C             MUSS BEI ALLEN 3N-OPERATOREN EIN FAKTOR (-)**K/SQRT(2K+1)
C             ANGEBRACHT WERDEN. ZUSAETZLICH WURDE IM OPERATOR 7,D.H. IN
C             (T x T)0 ANTI-KOMMUTATOR, EIN FAKTOR 0.5 UND IM OPERATOR 11,
C             D.H. IN (T x T)2 ANTI-KOMMUTATOR EIN FAKTOR 5 ANGEBRACHT H.M.H.
C     15.2.99 DURCH EINLESEN VON IBOUND UNGLEICH NULL (4.PARAMETER AUF         
C             ERSTER KARTE) WIRD EINE ISOSPIN KOPPLUNG FUER BOUND-STATE        
C             FUNKTIONEN ERMOEGLICHT H.M.H. 
C    28.2.00  DURCH EINLESEN VON INDEP UNGLEICH NULL (5.PARAMETER AUF
C             ERSTER KARTE) WERDEN ALLE KOMBINATIONEN VON ZERLEGUNGEN LINKS
C             UND RECHTS GERECHNET UND AUF VERSCHIEDNE FILES GESCHRIEBEN,
C             DEREN NAMEN EINGELESEN WERDEN VON inob H.M.H.
C    28.2.00 OPERATOREN WERDEN NUR NOCH BERECHNET FALLS SPINKOPPLUNG
C             MOEGLICH IST H.M.H.
C    16.5.00 2 ZUSAETZLICHE OPERATOREN FUER NEUE 3N-WECHSELWIRKUNG H.M.H.
C    28.4.04 FEHLER IM TENSOR RANG=3, LABEL 717 IN ELEML KORRIGIERT H.M.H.
C
C EINGABE
C
C JEDER INDEX I) BEZEICHNET EINE KARTE
C INTEGERS IM FORMAT 10I3,REALS IM FORMAT E12.4
C
C    1) NBAND5,NAUS,IDRU,IBOUND,INDEP
C       NBAND2 FUER ERGEBNISSE; AN QUAF
C       NAUS=1: AUSDRUCK DER DC'S UND MATRIXELEMENTE WIE AUF BAND
C       IDRU=2: ZUSAETZLICH AUSDRUCK DER ELEMENTARREN LISTEN IN ELEML
C          ACHTUNG: NBAND3 = 4 IST EIN WEITERES ZWISCHENBAND!
C        IBOUND UNGLEICH NULL, ISOSPIN KOPPLUNG MOEGLICH     
C        INDEP < 0 HEADER FUER QUAF MIT VIELEN ZERLEGUNGEN SCHREIBEN
C         INDEP > 0 MATRIXELEMENTE FUER VERSCHIEDENE ZERLEGUNGEN AUF
C         FILES, DEREN NAMEN AM ENDE EINGELESEN WERDEN
C         ZUERST DER JOB MIT INDEP >0, DANN DER MIT INDEP <0

C    2) STEUERZAHLEN NREG(K),K=1, NZOPER
C              NREG(K)=0  OPERATOR K WIRD NICHT GERECHNET
C                     =1  OPERATOR K WIRD GERECHNET
C    3) ZAHL DER MAXIMAL ZU PERMUTIERENDEN TEILCHEN ODER GRUPPEN     KZP
C    4) ZAHL DER ZERLEGUNGEN=NZF,ZAHL DER TEILCHEN =NZT          NZF NZT
C
C
C DER FOLGENDE DATENSATZ MUSS FUER JEDE ZERLEGUNG WIEDERHOLT WERDEN
C    A) ZAHL DER CLUSTER,ZAHL DER SPIN-ISOSPIN-          NZC,NZG,MZG,NOL
C       PRODUKTE,ZAHL DER KOMBINATIONEN DER SPIN-ISOSPIN-PRODUKTE,
C       NUMMER DER AUSGEZEICHNETEN RELATIVFUNKTION
C    B) ZAHL DER TEILCHEN IM CLUSTER N, N=1,NZC              NGRV(2,N, )
C   C1) 1.SPIN-ISOSPIN-PRODUKT                                       NZH
C   C2) 2.SPIN-ISOSPIN-PRODUKT                                       NZH
C ....                                                               NZH
C CNZG) NZG.SPIN-ISOSPIN-PRODUKT                                     NZH
C
C     MIT DEN FOLGENDEN COF KOENNEN FESTGELEGT ERDEN
C     S,S3 UND T,T3
C
C   D1) KOEFFIZIENT DES  1.  SPIN-ISOSPIN-PROD. ZUR  1. KOMBINATION  COF
C       KOEFFIZIENT DES  1.  SPIN-ISOSPIN-PROD. ZUR  2. KOMBINATION  COF
C                                                   ...
C       KOEFFIZIENT DES  1.  SPIN-ISOSPIN-PROD. ZUR MZG.KOMBINATION  COF
C   D2) KOEFFIZIENT DES  2.  SPIN-ISOSPIN-PROD. ZUR  1. KOMBINATION  COF
C       KOEFFIZIENT DES  2.  SPIN-ISOSPIN-PROD. ZUR  2. KOMBINATION  COF
C                                                   ...
C       KOEFFIZIENT DES  2.  SPIN-ISOSPIN-PROD. ZUR MZG.KOMBINATION  COF
C ....
C DNZG) KOEFFIZIENT DES NZG. SPIN-ISOSPIN-PROD. ZUR  1. KOMBINATION  COF
C       KOEFFIZIENT DES NZG. SPIN-ISOSPIN-PROD. ZUR  2. KOMBINATION  COF
C                                                   ...
C       KOEFFIZIENT DES NZG. SPIN-ISOSPIN-PROD. ZUR MZG.KOMBINATION  COF
C     PROTON  SPIN AUF  = 1
C     PROTON  SPIN AB   = 2
C     NEUTRON SPIN AUF  = 3
C     NEUTRON SPIN AB   = 4
C     BEI JEDER FUNKTION MUSS DIE Z-KOMPONENTE DES SPINS MAXIMAL SEIN
C     NOL GIBT DIE ZAHL DER CLUSTER IN DER ERSTEN GRUPPE AN
C
C
      INCLUDE 'par/DROBER'
C
C     NZOPER: ANZAHL DER OPERATOREN
C     NZFMAX: MAXIMALE ANZAHL DER ZERLEGUNGEN
C     NZTMAX:    "       "     "  TEILCHEN
C     NNMAX:     "       "     "  VON NULL VERSCHIEDENEN PDC'S
C     MZGMAX:    "       "     "  GEKOPPELTEN   SPIN-ISOSPIN-FUNKTIONEN
C     NZGMAX:    "       "     "  UNGEKOPPELTEN    "      "         "
C     NZCMAX:    "       "     "  CLUSTER
C     MAXID:     "       "     "  IDENTISCHEN TEILCHEN(I.A.=NZCMAX)
C     NZCMAF: MAXID!
C     NDIMVV: (NZCMAX + NZT/CLUSTER -1)!/NZT!/(NZCMAX-1)!
C     NZSORT: ANZAHL DER TEILCHENSORTEN
C
      PARAMETER (NZTMA1=NZTMAX-1,  NZMAT=MZGMAX*MZGMAX,
     *  PI = 3.1415926535897932384D0)
C
      COMMON /COMY/ D(100)
C
      COMMON /CSPIN/ NALG(NZTMAX,3)
C
      COMMON /CUM/ NPERM(NZCMAX+1,NZCMAF)
C
      COMMON /CKO/ VEC(NZTMAX,NZTMA1,NZFMAX),
     *             C(NZTMA1,NZTMA1,2*NZCMAX-1),
     *             RVEC(NZTMAX,NZTMAX),SVEC(NZTMAX,NZTMAX)
C
      COMMON /CPER/ MAXLIQ,MAXLIS,MAXLIT,MZGS,NBAND3
C
      COMMON /CEL/ SNTP(NDIM1), VV(NZOPER,NZUP), MISO(NZOPER),
     *             KBAND,MERKS(NZUP,NZGMAX,NZGMAX),MG(NZCMAX),
     *             NDEL,NFAK(MAXID+1),NFL,NFR, MAXLI,IDRU, MKDM
C
      COMMON /SJA/ NGRU(2,NZCMAX+1,2),NZT,NZV, KSU, JSU(2,NZCMAX+1)
C
      COMMON SNSP(NDIM1),I1,I2,I3,MGW(NZCMAX+1),
     *      MMOEG(NDIM3),MSQ(NZCMAX*NZCMAX,NZCMAX*NZCMAX,NZCMAX*NZCMAX),
     *       MSR(NZCMAX,NZCMAX),MVV(NDIMVV,NZCMAX)
C
      COMMON /STX/ JHUX(NNMAX)
C
      DIMENSION NV(NZCMAX),NREG(NZOPER), KOM(NZOPER,NZFMAX,NZFMAX)
      DIMENSION NS(NZGMAX,NZFMAX),MS(MZGMAX,NZFMAX)
      DIMENSION MB(NZFMAX),MC(NZFMAX),MZG(NZFMAX),NOL(NZFMAX)
      DIMENSION NZC(NZFMAX),NZG(NZFMAX),NSS(2,NZGMAX,NZFMAX)
      DIMENSION NMASSE(2,NZGMAX,NZFMAX),NLAD(2,NZGMAX,NZFMAX)
      DIMENSION MSS(2,MZGMAX,NZFMAX),MMASSE(2,MZGMAX,NZFMAX)
      DIMENSION MLAD(2,MZGMAX,NZFMAX),NREG1(NZOPER)
      COMMON /UTT/ UTOT(NNMAX,MZGMAX,MZGMAX),JXAL(NNMAX),
     *             IWQ(NNMAX)
      DIMENSION FAKTOR(MZGMAX,MZGMAX), NZH(NZTMAX,NZGMAX,NZFMAX)
      COMMON /DUMMY/ COF(MZGMAX,NZGMAX,NZFMAX),
     *         NCOF1(MZGMAX,NZGMAX,NZFMAX),
     *         NCOF2(MZGMAX,NZGMAX,NZFMAX)
      DIMENSION NGRV(2,NZCMAX,NZFMAX),NGRV1(2,NZCMAX)
      DIMENSION NSU(NZCMAX,NZFMAX), NSU1(NZFMAX), NSU2(NZFMAX),
     *          NKSU(NZFMAX), KISO(NZOPER), IDONE(NZFMAX*NZFMAX)
      DIMENSION LC(NZTMAX), IMV(NZMAT), UM(NZMAT), NKDM(NZOPER)
C
      CHARACTER*50 VARFOR(NZOPER)
      CHARACTER*80 INFILE(NZFMAX*NZFMAX)
C
      DATA VARFOR/'('' NORM-ARTIG'')',
     2'('' SPIN-SPIN ANTI-KOMMUTATOR'')',
     3'('' SPIN-SPIN KOMMUTATOR'')',
     4'('' SPIN-TENSOR ANTI-KOMMUTATOR'')',
     5'('' SPIN-TENSOR KOMMUTATOR R_IK'')',
     6'('' SPIN-TENSOR KOMMUTATOR R_IJ'')',
     7'('' TENSOR-TENSOR ANTI-KOMMUTATOR RANG 0'')',
     8'('' TENSOR-TENSOR KOMMUTATOR RANG 0'')',
     9'('' TENSOR-TENSOR ANTI-KOMMUTATOR RANG 1'')',
     +'('' TENSOR-TENSOR KOMMUTATOR RANG 1'')',
     1 '('' TENSOR-TENSOR ANTI-KOMMUTATOR RANG 2 '')',
     2 '('' TENSOR-TENSOR KOMMUTATOR RANG 2 '')',
     3'('' TENSOR-TENSOR KOMMUTATOR RANG 3'')',
     4'('' SPIN-SPIN SPIN-ISOSPIN'')',
     5'('' TENSOR UND ISOSPIN SUMME JACOBI'')'/
C
      DATA KISO/1,1,6,2,6,6,1,6,2,6,2,6,6,3,3/
      DATA NKDM/1,4,6,9,18,18,4,6,6,19,9,18,27,3,18/
C
      OPEN(UNIT=3,STATUS='UNKNOWN',FORM='UNFORMATTED')
      OPEN(UNIT=4,STATUS='UNKNOWN',FORM='UNFORMATTED')
      OPEN(UNIT=15,FILE='INOB',STATUS='OLD')
      OPEN(UNIT=16,FILE='OUTPUT')
      OPEN(UNIT=8,FILE='DROBOUT',STATUS='UNKNOWN',FORM='UNFORMATTED')
      OPEN(UNIT=9,STATUS='UNKNOWN',FORM='UNFORMATTED')
C
      INPUT=15
      NBAND2= 8
      NBAND3= 4
      NB9=9
      MEFI=23
      DO 61 I=1,NZOPER
 61   MISO(I)=KISO(I)
      WRITE(NOUT,1111)
1111  FORMAT(' DROBER_STREU VOM 15.2.1999')
      DO 329 I=1,NDIM1
329   SNSP(I)= 0.
 1000 FORMAT(24I3)
 1001 FORMAT(10I3)
 1011 FORMAT (16H  DEFINITION DES   ,I3,4H TEN,
     127H SPIN-ISOSPIN-PRODUKTES ZUR    ,I3,4H TEN,
     2 18H CLUSTEREINTEILUNG   )
 1012 FORMAT(9H  CLUSTER     ,I3,5X,4I3)
 1013 FORMAT  (45H  DEFINITION DER ZUSAMMENGESETZTEN STRUKTUREN  )
 1014 FORMAT (3H0 /,I3,2H ,,I3,4H ) = ,/)
 1015 FORMAT(5(F10.4,4H  //,I3,2H ,,I3,4H )   ))
2011  FORMAT   (19H0 BERECHNET WERDEN )
 1090 FORMAT(1H0)
 5000 FORMAT (21H SPEICHERPLATZBEDARF:,3I10)
 1100 FORMAT(//,1X,'ZERLEGUNG LINKS:',I3,5X,'ZERLEGUNG RECHTS:',I3,
     *          5X,'OPERATOR:',I3)
 1250 FORMAT(/,1X,'FEHLER IM INPUT ODER AUF NBAND5',/)
 6100 FORMAT(/,1X,'ES WIRD VOELLIG NEU GERECHNET',/)
C
      D(1)=.0
      D(2)=.0
      DO 199 I=2,99
      HMH=I 
  199 D(I+1) = LOG(HMH)+D(I)
CC
      DO   70   K = 1,NZOPER
      DO   70   M = 1,NZUP
   70 VV(K,M) = 0.
      VV(1,1) = 1.D0
      F=4.D0
      VV(2,1) = F 
      VV(2,2) =-4.D0*F
      VV(2,3) =-2.D0*F
      VV(2,4) = 2.D0*F
      F=4.D0
      VV(3,1) = F 
      VV(3,2) = -F 
      VV(3,3) = F 
      VV(3,4) = -F 
      VV(3,5) = F 
      VV(3,6) = -F 
      F = 16.D0 * SQRT(6.D0*PI/5.D0)
      VV(4,1) = F
      VV(4,2) = -0.5D0 * F
      VV(4,3) = VV( 4,2)
      VV(4,4) = - F / SQRT( 6.D0)
      VV(4,5) = -VV(4,4)
      VV(4,6) = VV( 4,4)
      VV(4,7) = 0.5D0 * F
      VV(4,8) = VV(4,7)
      VV(4,9) = F
      F=8.D0 *SQRT(6.D0*PI/5.D0)
      VV(5,1)= F
      VV(5,2)= -F
      VV(5,3)= F
      VV(5,4)= -F*0.5D0
      VV(5,5)= -F
      VV(5,6)= F*0.5D0
      VV(5,7)= F/SQRT(6.D0)
      VV(5,8)= -F/SQRT(6.D0)
      VV(5,9)= 2.*F/SQRT(6.D0)
      VV(5,10)= F/SQRT(6.D0)
      VV(5,11)= -2.*F/SQRT(6.D0)
      VV(5,12)= -F/SQRT(6.D0)
      VV(5,13)= F
      VV(5,14)= -F*0.5D0
      VV(5,15)= -F
      VV(5,16)= F*0.5D0
      VV(5,17)= F
      VV(5,18)= -F
      DO 68 K=1,18
 68   VV(6,K)= -VV(5,K)
      F=8.D0*PI/SQRT(5.D0)
      DO 71 K=1,4
71    VV(7,K)= VV(2,K)*F
      F= -16.D0*PI/SQRT(5.D0)
      VV(8,1) = F
      VV(8,2) = -F
      VV(8,3) = F
      VV(8,4) = -F
      VV(8,5) = F
      VV(8,6) = -F
      F=-48.D0*PI/SQRT(5.D0)
      VV(9,1) =  F
      VV(9,2) = -F
      VV(9,3) = SQRT(2.D0)*F
      VV(9,4) = -SQRT(2.D0)*F
      VV(9,5) = F
      VV(9,6) = -F
      F=-24.D0*PI/(5.D0*SQRT(5.D0))
      VV(10,1)= -6.D0*F
      VV(10,2)= -6.D0*F
      VV(10,3)= -4.D0*F
      VV(10,4)= 4.D0*F
      VV(10,5)= F
      VV(10,6)= F
      VV(10,7)= -F*SQRT(2.D0)
      VV(10,8)= -F*SQRT(2.D0)
      VV(10,9)= -F*SQRT(2.D0)
      VV(10,10)= 4.D0*F*SQRT(2.D0)
      VV(10,11)= -F*SQRT(2.D0)
      VV(10,12)= 4.D0*F*SQRT(2.D0)
      VV(10,13)= F*SQRT(2.D0)
      VV(10,14)= 6.D0*F
      VV(10,15)= 6.D0*F
      VV(10,16)= 4.D0*F
      VV(10,17)= -4.D0*F
      VV(10,18)= -F
      VV(10,19)= -F
      F=-2.D0*SQRT(7.D0/10.D0*PI)
      DO 72 K=1,9
72    VV(11,K)= VV(4,K)*F
      F= 48.D0*PI/5.D0*SQRT(7.D0/3.D0)
      VV(12,1)= F
      VV(12,2)= -F
      VV(12,3)= F
      VV(12,4)= -F
      VV(12,5)= 0.5D0*F
      VV(12,6)= -0.5D0*F
      VV(12,7)= 2.D0*F/SQRT(6.D0)
      VV(12,8)= F/SQRT(6.D0)
      VV(12,9)= F/SQRT(6.D0)
      VV(12,10)= -F/SQRT(6.D0)
      VV(12,11)= -F/SQRT(6.D0)
      VV(12,12)= -2.D0*F/SQRT(6.D0)
      VV(12,13)= F
      VV(12,14)= -F
      VV(12,15)= 0.5D0*F
      VV(12,16)= -0.5D0*F
      VV(12,17)= -F
      VV(12,18)= F
      F=-96.D0*PI/5.D0*SQRT(2.D0)
      VV(13,1) = F
      VV(13,2) = -F/SQRT(6.D0)
      VV(13,3) = -F/SQRT(6.D0)
      VV(13,4) = -F/SQRT(6.D0)
      VV(13,5) = -F/SQRT(15.D0)
      VV(13,6) = -F/SQRT(15.D0)
      VV(13,7) =  F/SQRT(15.D0)
      VV(13,8) =  F/SQRT(15.D0)
      VV(13,9) =  F/SQRT(15.D0)
      VV(13,10) = -F/SQRT(15.D0)
      VV(13,11) = .5D0*F/SQRT(5.D0)
      VV(13,12) = .5D0*F/SQRT(5.D0)
      VV(13,13) = .5D0*F/SQRT(5.D0)
      VV(13,14) = .5D0*F/SQRT(5.D0)
      VV(13,15) = .5D0*F/SQRT(5.D0)
      VV(13,16) = .5D0*F/SQRT(5.D0)
      VV(13,17) = -.5D0*F/SQRT(5.D0)
      VV(13,18) =  F/SQRT(15.D0)
      VV(13,19) =  F/SQRT(15.D0)
      VV(13,20) = -F/SQRT(15.D0)
      VV(13,21) = -F/SQRT(15.D0)
      VV(13,22) = -F/SQRT(15.D0)
      VV(13,23) =  F/SQRT(15.D0)
      VV(13,24) = -F/SQRT(6.D0)
      VV(13,25) = -F/SQRT(6.D0)
      VV(13,26) = -F/SQRT(6.D0)
      VV(13,27) = -F
      VV(14,1) = -4.D0
      VV(14,2) = 4.D0
      VV(14,3) = 4.D0
       F = 12.D0 * SQRT(2.D0*PI/15.D0)
      VV(15,1) = F
      VV(15,2) = -0.5D0 * F
      VV(15,3) = VV( 15,2)
      VV(15,4) = - F / SQRT( 6.D0)
      VV(15,5) = -VV(15,4)
      VV(15,6) = VV( 15,4)
      VV(15,7) = 0.5D0 * F
      VV(15,8) = VV(15,7)
      VV(15,9) = F
      VV(15,10) = F
      VV(15,11) = -0.5D0 * F
      VV(15,12) = VV( 15,2)
      VV(15,13) = - F / SQRT( 6.D0)
      VV(15,14) = -VV(15,4)
      VV(15,15) = VV( 15,4)
      VV(15,16) = 0.5D0 * F
      VV(15,17) = VV(15,7)
      VV(15,18) = F

C

C
      KBAND=3
      READ (INPUT,1000) NBAND5,NAUS,IDRU,IBOUND,INDEP
      IF(NBAND5.NE.0) OPEN(UNIT=12,FILE='OBALT',STATUS='OLD',
     *                     FORM='UNFORMATTED')
      IF(INDEP.NE.0) WRITE(NOUT,*) 'INDEP UNGLEICH NULL!  ',INDEP
      READ(INPUT,1000) (NREG(K),K=1, NZOPER)
      READ(INPUT,1000) KZP
      IF(KZP.GT.MAXID) STOP 'MAXID'
      NFAK(1)=1
      DO 300 K=1,KZP
  300 NFAK(K+1)=K*NFAK(K)
C         NFAK(I) = (I-1)!
C         DEFINITION VON NPERM, NPERM(1,K) =SIGNUM VON PERMUTATION K
C         NPERM(I,K) ENTHAELT DIE PERMUTATION
      NPERM(1,1)=1
      NPERM(2,1)=1
      DO 702 NZP=2,KZP
      NBL=NFAK(NZP)
      NBH=NZP-1
      DO 702 L=1,NZP
      NZVL=L-1
      DO702 M=1,NBL
      ML=(L-1)*NBL+M
      NPERM(1,ML)=NPERM(1,M)*(-1)**(L+1)
      DO 704 NZL=1,NBH
      IF(NZL+L.GT.NZP) GOTO 706
      NVL=NZL
      GO TO 704
  706 NVL=NZL+1
  704 NPERM(NVL+1,ML)=NPERM(NZL+1,M)
      NZVS=NZP+1-NZVL
      NPERM(NZVS,ML)=NZP
  702 CONTINUE
      READ(INPUT,1000)NZF,NZT
  714 FORMAT(7H0NZT = ,I3,30HIST ZU GROSS, MAX 12 MOEGLICH    )
      IF (NZT.LE.12) GOTO 710
        WRITE(NOUT,714) NZT
      STOP
  710 CONTINUE
      NZV= NZT-1
C        BLOCK EINGABE
      DO 1 K=1,NZF
      READ (INPUT,1001) NZC(K),NZG(K),MZG(K),NOL(K)
      IFEK=0
      IF(NZC(K).LE.NZCMAX) GOTO 2211
      WRITE(NOUT,*)'ZERLEGUNG ',K,' NZC ',NZC(K),' DIM=',NZCMAX
      IFEK=K
2211  IF(NZG(K).LE.NZGMAX) GOTO 2212
      WRITE(NOUT,*) ' ZERLEGUNG ',K,' NZG ',NZG(K),' DIM=',NZGMAX
      IFEK=K
2212  IF(MZG(K).LE.MZGMAX) GOTO 2213
      WRITE(NOUT,*) ' ZERLEGUNG ',K,' MZG ',MZG(K),' DIM=',MZGMAX
      IFEK=K
2213  M=NZC(K)
      IF(NOL(K).GE.4 .OR. NZC(K)-NOL(K) .GE. 4) GOTO 2214
      NSU(1,K)=NOL(K)
      NSU(2,K)=NZC(K)-NOL(K)
      NSU1(K)=1
      NSU2(K)=1
      NKSU(K)=2
      GOTO 2233
2214  WRITE(NOUT,*) 'SUBSTRUKTUR FUER BEIDE FRAGMENTE EINLESEN'
C     NKSU GIBT DIE ANZAHL DER SUBSTRUKTREN AN, STANDARD = 2
C     NSU GIBT DIE CLUSTER JE SUBSTRUKTUR AN
C     EINE SUBSTRUKTUR SIND ALLE CLUSTER, DIE IHRE RELATIVKOORDINATEN
C     IN DER STANDARD REIHENFOLGE BILDEN
      READ(INPUT,1001) NKSU(K),(NSU(IX,K),IX=1,NKSU(K))
      NSU1(K)=1
      IX=2
      JHX=NSU(1,K)
2230  IF(JHX+NSU(IX,K) .GT. NOL(K)) GOTO 2231
      NSU1(K)= NSU1(K) +1
      JHX=JHX+ NSU(IX,K)
      IX= IX+1
      GOTO 2230
2231  IF(JHX.NE. NOL(K)) STOP ' FEHLER IN SUBSTRUKTUR FRAGMENT 1'
      DO 2232 IWY=NSU1(K)+1,NKSU(K)
2232  JHX=JHX+NSU(IWY,K)
      IF(JHX.NE.NZC(K)) STOP ' FEHLER IN SUBSTRUKTUR FRAGMENT 2'
      NSU2(K)= NKSU(K) - NSU1(K)
2233  READ (INPUT,1001) (NGRV(2,L,K), L=1,M)
      IF(NGRV(2,M,K).GT.0) GOTO 2244
      WRITE(NOUT,*) 'CLUSTER MIT TEILCHENZAHL = 0',(NGRV(2,L,K),L=1,M)
      IFEK=K
2244  NGRV(1,1,K) =1
      DO 2 L=2,M
    2 NGRV(1,L,K) =NGRV(1,L-1,K)+NGRV(2,L-1,K)
C      NGRV(1,..) ANFANGSNR DER CLUSTER,NGRV(2,..) TEILCHEN IM CLUSTER
      IF(NGRV(1,M,K)+NGRV(2,M,K).EQ.NZT + 1) GOTO 2245
      WRITE(NOUT,*) 'GESAMT-TEILCHENZAHL  FALSCH',(NGRV(2,L,K),L=1,M)
      IFEK=K
2245  KK = NOL(K) + 1
      KK = NGRV(1,KK,K)
      LM=NZG(K)
      DO 3 L=1,LM
    3 READ (INPUT,1000) (NZH(N,L,K),N=1,NZT)
C       EINLESEN DER ELEMENTAREN SPINFUNKTIONEN
      IF(IFEK.EQ.0) GOTO 2246
      WRITE(NOUT,*) ' FEHLER IN ZERLEGUNG ',K
      STOP 2246
2246  DO 940 L=1,LM
C       BESTIMMUNG DER GESAMTSPINS NS, FRAGMENTSPINS NSS
C        FRAGMENTMASSEN NMASSE, FRAGMENTLADUNGEN NLAD
      NS(L,K)=0
      NSS(1,L,K) = 0
      NSS(2,L,K) = 0
      NMASSE(1,L,K) = KK - 1
      NMASSE(2,L,K) = NZT - KK + 1
      NLAD(1,L,K) = 0
      NLAD(2,L,K) = 0
      DO 940 N=1,NZT
      NNS =           2*(NZH(N,L,K)-2*(NZH(N,L,K)/2))-1
        KZ = 1
      IF(N.GE.KK) KZ = 2
      NLAD(KZ,L,K) = NLAD(KZ,L,K) -(NZH(N,L,K)-1)/2 + 1
      NSS(KZ,L,K) = NSS(KZ,L,K) + NNS
  940 NS(L,K)=NS(L,K)+NNS
      N=MZG(K)
      DO 7   L = 1,LM
    7 READ (INPUT,1000) (NCOF1(LL,L,K),NCOF2(LL,L,K),LL=1,N)
C      CHECK EINGABE
      DO 950 LL=1,N
      I=0
      DO 951 L=1,LM
      IF (NCOF1(LL,L,K).EQ.0) GOTO 951
       IF(I.GT.0) GOTO 954
       I=1
C       SETZEN DER WERTE
      MS(LL,K)=NS(L,K)
      MMASSE(1,LL,K) = NMASSE(1,L,K)
      MMASSE(2,LL,K) = NMASSE(2,L,K)
      MLAD(1,LL,K) = NLAD(1,L,K)
      MLAD(2,LL,K) = NLAD(2,L,K)
      MSS(1,LL,K) = IABS(NSS(1,L,K))
      MSS(2,LL,K) = IABS(NSS(2,L,K))
      GO TO 951
C         CHECK DER WERTE
  954 IF(ABS(MS(LL,K)-NS(L,K))+ABS(MMASSE(1,LL,K)- NMASSE(1,L,K))+              
     1 ABS(MMASSE(2,LL,K)-NMASSE(2,L,K)) .GT. 0) THEN                           
          WRITE(NOUT,1040) L,LL,K                                               
         STOP 'SPIN'                                                            
      ENDIF                                                                     
 1040 FORMAT(' FEHLER IM SPINPRODUKT',I4,' DER GEKOPPELTEN FUNKTION',I4,        
     *' IN ZERLEGUNG',I4)                                                       
      IF(IBOUND .NE. 0)  GOTO 956                                               
      IF( ABS(MLAD(1,LL,K)-NLAD(1,L,K))+                                        
     2     ABS(MLAD(2,LL,K)-NLAD(2,L,K)).NE.0)  THEN                            
          WRITE(NOUT,1040) L,LL,K                                               
         STOP 'LADUNG'                                                          
      ENDIF 
  956 MSS(1,LL,K) = MAX0(MSS(1,LL,K),IABS(NSS(1,L,K)))
      MSS(2,LL,K) = MAX0(MSS(2,LL,K),IABS(NSS(2,L,K)))
951   CONTINUE
  950 CONTINUE
C      BERECHNUNG DER COEFFIZIENTEN
      DO 1   L = 1,LM
      DO 1   LL = 1,N
      COF(LL,L,K) = .0
      IF(NCOF1(LL,L,K).EQ.0) GOTO1
      AB1 = NCOF1(LL,L,K)
      AB2 = NCOF2(LL,L,K)
      COF(LL,L,K) = (AB1/ABS(AB1)) * SQRT(ABS(AB1)/AB2)
    1 CONTINUE
C      HIERNACH WERDEN NCOF1,NCOF2,NMASSE,NLAD,NSS NICHT MEHR VERWENDET
C      NEUER BLOCK
C
      IF(INDEP.NE.0 .OR. NBAND5.LE.0) GOTO 90
      DO 92 KL=1,NZF
      DO 92 KR=1,KL
   92 READ(INPUT,1000) (KOM(L,KL,KR),L=1,NZOPER)
      REWIND NBAND5
      GO TO 93
   90 CONTINUE
      IF(NBAND5.EQ.0) WRITE(NOUT,6100)
      DO 94 KL=1,NZF
      DO 94 KR=1,KL
      DO 94 L=1,NZOPER
   94 KOM(L,KL,KR)=0
   93 CONTINUE
C
C     AUSDRUCK DER FUNKTIONSEIGENSCHAFTEN
      DO 6 K=1,NZF
      LM=NZG(K)
      DO 5 L=1,LM
      WRITE (NOUT,1011) L,K
      WRITE (NOUT,1090)
      MM=NZC(K)
      DO 5 M=1,MM
      N1=NGRV(1,M,K)
      N2=NGRV(2,M,K)+N1-1
    5 WRITE (NOUT,1012) M,(NZH(N,L,K),N=N1,N2)
      WRITE (NOUT,1013)
      WRITE (NOUT,1090)
      LM=MZG(K)
      DO 6 L=1,LM
      WRITE (NOUT,1014) L,K
      MM=NZG(K)
      WRITE (NOUT,1015) (COF(L,M,K),M,K,M=1,MM)
    6 WRITE(NOUT,1016)  MMASSE(1,L,K),MMASSE(2,L,K),MLAD(1,L,K),
     1        MLAD(2,L,K),MSS(1,L,K),MSS(2,L,K),MS(L,K)
 1016 FORMAT(/30H ZERLEGUNG IN DIE GRUPPEN VON   ,I2,4H UND,I2,
     1     10H NUKLEONEN  /4H MIT,I2,4H UND,I2,10H LADUNGEN   /
     2     12H SPINS SIND  ,I2,7H /2 UND,I2,3H /2  /
     3   15H GESAMTSPIN IST   ,I2,3H /2    /)
      WRITE (NOUT,1090)
      WRITE (NOUT,2011)
      DO 4039 IHH=1,NZOPER
      IF(NREG(IHH).NE.0) WRITE(NOUT,VARFOR(IHH))
4039  CONTINUE
C     NOTIEREN DER FUNKTIONSEIGENSCHAFTEN
      REWIND NBAND2
      WRITE(NBAND2) NZF,NZT,(NREG(K),K=1, NZOPER),INDEP
      DO 4 K=1,NZF
      M=NZC(K)
      WRITE(NBAND2) NZC(K),MZG(K),NOL(K)
      LL=MZG(K)
      WRITE(NBAND2) ((MMASSE(N,L,K),MLAD(N,L,K),MSS(N,L,K),N=1,2),
     1     MS(L,K),L=1,LL)
    4 WRITE (NBAND2) ((NGRV(N,L,K),L=1,M),N=1,2)
C      NIERNACH WERDEN MLAD,MMASSE,MSS NICHT MEHR VERWENDET
      IF(NBAND5.EQ.0) GOTO 99
      READ(NBAND5) NZF1,NZT1,(NREG1(K),K=1,NZOPER)
      IF(NZT-NZT1.NE.0) GOTO 250
      DO 95 IK=1,NZOPER
      IF(NREG(IK)-NREG1(IK).NE.0) GOTO 250
   95 CONTINUE
      DO 96 IK=1,NZF1
      READ(NBAND5) NZC1,MZG1,NOL1
      IF(NZC(IK)-NZC1.NE.0) GOTO 250
      IF(MZG(IK)-MZG1.NE.0) GOTO 250
      IF(NOL(IK)-NOL1.NE.0) GOTO 250
      READ(NBAND5)
      READ(NBAND5)((NGRV1(JKH,IKH),IKH=1,NZC1),JKH=1,2)
      DO 96 IKH=1,NZC1
      DO 96 JKH=1,2
      IF(NGRV(JKH,IKH,IK)-NGRV1(JKH,IKH).NE.0) GOTO 250
   96 CONTINUE
      GOTO 99
  250 WRITE(NOUT,1250)
      STOP
   99 CONTINUE
C
      IF(INDEP.LT.0) STOP 
c      'HEADER WRITTEN'
C     AUSSTIEG FUER KOPF FUER QUAF SCHREIBEN, KEINE BERCHNUNG VON MATRIXELEMENT
C
      IF(INDEP.GT.0) THEN
         ICOUNT= 0
         DO 377 ILF=1,NZF*NZF
         IDONE(ILF)= 0
         IF(NBAND5.NE.0) READ(INPUT,1000) IDONE(ILF)
377      READ(INPUT,378) INFILE(ILF)
378   FORMAT(A48)
         DO 373 MFL=1,NZF
         I1=NZC(MFL)
         I3=I1-1
         JSU(1,1)=1
         DO 371 M=1,I1
         JSU(2,M)=NSU(M,MFL)
         JSU(1,M+1)= JSU(1,M) + JSU(2,M)
         NGRU(1,M,1) =NGRV(1,M,MFL)
371      NGRU(2,M,1)=NGRV(2,M,MFL)
         NGRU(1,NZC(MFL)+1,1)= NGRU(1,NZC(MFL),1) + 1
          KSU=NKSU(MFL)
373      CALL SJACK(I1,NSU1(MFL),NSU2(MFL),MFL)
      ENDIF
C     EINLESEN DER FILENAMEN UND BESETZEN VON VEC(.,.,MFL)
C
C     MATRIXELEMENTE ZWISCHEN EINFACHEN ALGEBRAISCHEN STRUKTUREN
      DO 10 MFL=1,NZF
      I1=NZC(MFL)
      I3=I1-1
      I5=I3-1
      JSU(1,1)=1
      DO 12 M=1,I1
      JSU(2,M)=NSU(M,MFL)
      JSU(1,M+1)= JSU(1,M) + JSU(2,M)
      NGRU(1,M,1) =NGRV(1,M,MFL)
   12 NGRU(2,M,1)=NGRV(2,M,MFL)
      NGRU(1,NZC(MFL)+1,1)= NGRU(1,NZC(MFL),1) + 1
      KSU=NKSU(MFL)
      IF(KOM(1,MFL,1).EQ.0) GOTO 112
      READ(NBAND5)
      READ(NBAND5)
      READ(NBAND5)
 112  CONTINUE
      CALL SJACK(I1,NSU1(MFL),NSU2(MFL),MFL)
      IF(INDEP.EQ.0) THEN
         WRITE(NBAND2) ((RVEC(M,N),M=1,NZV),N=1,NZT)
         WRITE(NBAND2) ((SVEC(N,M),M=1,NZV),N=1,NZT)
         WRITE(NBAND2) (((C(M,N,K),M=1,NZV),N=1,NZV),K=1,2*I1-1)
      ENDIF
C
      IMFL=MFL
      IF(INDEP.NE.0) IMFL=NZF
      DO 100 MFR=1,IMFL
C
      IF(INDEP.NE.0) THEN
         ICOUNT=ICOUNT+1
         IF(IDONE(ICOUNT).EQ.1) GOTO 100
         NBAND2=MEFI
         OPEN(UNIT=MEFI,FILE=INFILE(ICOUNT),STATUS='UNKNOWN',
     *   FORM='UNFORMATTED')
         WRITE(NBAND2) ((RVEC(M,N),M=1,NZV),N=1,NZT)
         WRITE(NBAND2) ((SVEC(N,M),M=1,NZV),N=1,NZT)
         WRITE(NBAND2) (((C(M,N,K),M=1,NZV),N=1,NZV),K=1,2*I1-1)
      ENDIF
C
      I2=NZC(MFR)
      I4=I2-1
      IF(KOM(1,MFL,MFR).NE.0) READ (NBAND5)
      WRITE(NBAND2)  ((VEC (M,K,MFR),M=1,NZT),K=1,I4)
      DO 13 M=1,I2
      NGRU(1,M,2)=NGRV(1,M,MFR)
   13 NGRU(2,M,2)=NGRV(2,M,MFR)
C     ADRESSENSUCHREGISTER
C      HIER WERDEN DIE MOEGLICHEN TEILCHENAUSTAEUSCHE VORBEREITET
      DO 22 K=1,I1
      I=0
      NZ=NGRU(2,K,1)
      NZZ=(NZ+1)**I2-(NZ+1)**I4
C      NZZ ZAEHLT DIE MOEGLICHKEITEN AB NZ TEILCHEN AUF I2 CLUSTER ZU
C     VERTEILEN, OHNE TEILCHENZAHLERHALTUNG,DIESE WIRD ERST NACH LOOP 24
C     IN ORDNUNG GEBRACHT
      DO 23 L=1,NZZ
      J=0
      KK=L
      DO 24 M=1,I2
      MM=I2-M+1
      NV(MM)=KK/(NZ+1)**(MM-1)
      KK=KK-NV(MM)*((NZ+1)**(MM-1))
   24 J=J+NV(MM)
      IF(J.NE.NZ) GOTO 23
      DO 26 M=1,I2
      IF(NV(M).GT.NGRU(2,M,2)) GOTO 23
   26 CONTINUE
      I=I+1
      IF (I.GT.NDIMVV) STOP 'NDIMVV'
      MVV(I,K) = L
C      IN MVV(K,L) STEHT DIE NUMMER NZZ,DIE TEILCHEN VON CLUSTER L LINKS
C      AUF DIE CLUSTER RECHTS ZU VERTEILEN. ES GIBT MG(L) MOEGLICHKEITEN
C      DAFUER
   23 CONTINUE
   22 MG(K)=I
C      MG(K) ENTHAELT DIE ANZAHL DER TEILCHENAUSTAEUSCHE DES K-TEN
C      CLUSTERS LINKS IND DIE CLUSTER RECHTS
      MGW(1)=1
      DO 27 K=1,I1
   27 MGW(K+1)=MGW(K)*MG(K)
C        UNTERBLOCK ENDE
      MAXLIQ=MGW(I1)
C      MGW(I1) ENTHAELT EINE OBERE ABSCHAETZUNG DER ANZAHL DER DOPPEL-
C      NEBENKLASSEN SYMBOLE, NAEMLICH DIE PRODUKTE DER ZEILENAUSTAEUSCHE
      WRITE(NOUT,*) ' MAXLIQ,NDIM3',MAXLIQ,NDIM3
      IF(MAXLIQ.GT.NDIM3) STOP
      DO 48 K=1,MAXLIQ
   48 MMOEG(K)=0
      I=0
      KK=1
   28 DO 29 K=KK,I1
   29 NV(K)=1
      DO 30 K=1,I1
      M=NV(K)
   30 MB(K)=MVV(M,K)
      DO 31 L=1,I2
      L1=I2-L+1
      M=0
      DO 32 K=1,I1
      MC(K)=MB(K)/((NGRU(2,K,1)+1)**(I2-L))
      MB(K)=MB(K)-MC(K)*((NGRU(2,K,1)+1)**(I2-L))
   32 M=M+MC(K)
      IF(M.NE.NGRU(2,L1,2)) GOTO 40
   31 CONTINUE
      I=I+1
      J=NV(1)
      IF(I5.LE.0) GOTO 1401
      DO 34    K = 1,I5
   34 J=J+(NV(K+1)-1)*MGW(K+1)
 1401 MMOEG(J) = I
   40 DO 41 K=1,I1
      KK=I1-K+1
      IF(NV(KK).LT.MG(KK)) GOTO 42
   41 CONTINUE
      GO TO 44
   42 NV(KK)=NV(KK)+1
      KK=KK+1
      GO TO 28
C      UNTERBLOCK ENDE
   44 MAXLIT=I
C      MAXLIT IST DIE ANZAHL DER DOPPELNEBENKLASSEN
C    MMOEG(J)=N BEDEUTET,DAS DC-SYMBOL N HAT DIE ADRESSE J,WOBEI
C     J FESTLEGT WELCHE SPALTENAUSTAEUSCHE VORZUNEHMEN SIND VON LINKS
C     NACH RECHTS. J=NV(1)+SUMME (NV(K+1)-1)*MGW(K+1),K=1,NZCL-2
      J=1
      DO 46 K=1,I1
      DO 46 L=1,I2
      MSR(L,K)=J
   46 J=J+1
      N=1
      M=I1*I2
      DO 47 K=1,M
      DO 47 L=1,M
      DO 47 LD=1,M
      MSQ(LD,L,K)=N
   47 N=N+1
      MAXLIS=M**3
C      MAXLIS =ANZAHL DER MOEGLICHEN WW IN EINEM DC
      MAXLI=MAXLIT*MAXLIS
C     MAXLI= ANZAHL DER PUNKTIERTEN DC
      WRITE(NOUT,*) ' MAXLI,NDIM1', MAXLI,NDIM1
      IF(MAXLI.GT.NDIM1) STOP
      NZGL=NZG(MFL)
      NZGR=NZG(MFR)
      MZGL=MZG(MFL)
      MZGR=MZG(MFR)
      MZGS = MZGR*MZGL
      DO 50   MKC = 1, NZOPER
C        LOOP UEBER OPERATOREN
      IF(0.EQ.NREG(MKC))GO TO 50
      MKDM=NKDM(MKC)
      NTE2=0
      WRITE(NOUT,1100) MFL,MFR,MKC
      IF(KOM(MKC,MFL,MFR).EQ.0) GOTO 152
      READ(NBAND5) NNN,NNN,NNN
      WRITE(NOUT,5000) MKC,NNN
      IF(KOM(MKC,MFL,MFR).GT.0) WRITE(NBAND2) NNN,NNN,NNN
      IF(NNN.EQ.0) GOTO 50
      DO 150 IM=1,NNN
      READ(NBAND5) LH, IMQ, (IMV(I),UM(I),I=1,IMQ)
      IF(KOM(MKC,MFL,MFR).LT.0) GOTO 150
      WRITE(NBAND2) LH, IMQ, (IMV(I),UM(I),I=1,IMQ)
  150 CONTINUE
      IF(KOM(MKC,MFL,MFR).GT.0) GOTO 50
  152 CONTINUE
      ICALCU=0
      DO 130 KFL=1,MZGL
      DO 130 KFR=1,MZGR
      NDEL=MS(KFL,MFL)-MS(KFR,MFR)
      NDEL = NDEL/2
      NDELK=MS(KFL,MFL)-MS(KFR,MFR)
      ITEN=0
      IF(MKC.EQ.9 .OR. MKC.EQ.10) ITEN=2
      IF(MKC.EQ.4 .OR. MKC.EQ.5 .OR. MKC.EQ.6 .OR.
     *   MKC.EQ.11 .OR. MKC.EQ.12 .OR. MKC.EQ.15) ITEN=4
      IF(MKC.EQ.13) ITEN=6
      FAKTOR(KFL, KFR)=0.
      Y=CLG(MS(KFR,MFR),ITEN,MS(KFL,MFL),MS(KFR,MFR),NDELK)
      IF(Y.NE.0.) THEN
                  FAKTOR(KFL,KFR)=SQRT( MS(KFL,MFL) + 1.D0)/Y
                 ICALCU=1
      ENDIF
130   CONTINUE
      IF(ICALCU.EQ.0) GOTO 700
C     HIER WIRD ELEML UEBERSPRUNGEN FALLS EINE SPINKOPPLUNG NICHT
C     MOEGLICH IST
C
      WRITE(NOUT,VARFOR(MKC))
      DO 52   K= 1,MAXLI
52    SNTP(K)=0
      REWIND KBAND
      DO 60 NFL=1,NZGL
C         LOOP ELEMENTARE SPINFUNKTIONEN LINKS
      DO 64 K=1,NZT
   64 NALG(K,1)=NZH(K,NFL,MFL)
      DO 60 NFR=1,NZGR
C         LOOP ELEMENTARE SPINFUNKTIONEN RECHTS
      DO 65 K=1,NZT
   65 NALG(K,2)=NZH(K,NFR,MFR)
      NDEL = NS(NFL,MFL) - NS(NFR,MFR)
      NDEL = NDEL/2
c     write(nout,*) 'nfl,nfr',nfl,nfr
      CALL ELEML(MKC)
60    CONTINUE
C         ELEMENTARE LISTEN ERSTELLT
      JPTOT=0
      DO 66 I=1,MAXLI
      IF(ABS(SNTP(I)).LT. 1.D-11) GOTO 66
      JPTOT=JPTOT + 1
      if(jptot.gt.nnmax) write(nout,*)'bei elementnr',i,' = ',sntp(i),
     *' wird dimension',nnmax,'erreicht',jptot
      JXAL(JPTOT)= I
66    CONTINUE
      NNN=JPTOT
      REWIND NBAND3
      CALL PERME(MKC,K,1,SNTP,JXAL,JPTOT,IDRU)
C      MIT DIESEM AUFRUF WERDEN DIE NNN REPRESENTANTEN FUER WW INDC AUF
C      NBAND3 GESCHRIEBEN
       WRITE(NOUT,777) NNN
777    FORMAT(' ES GIBT',I5,' PDCS ':' UND ',I3,' UNTEROPERATOREN')
       IF(NNN.GT.NNMAX) STOP 'NNMAX'
      IF(NNN.EQ.0) GOTO 700
C     MATRIXELEMENTE ZWISCHEN ZUSAMMENGESETZTEN STRUKTUREN
      REWIND KBAND
      DO 132 KFR=1,MZGR
      DO 132 KFL=1,MZGL
      DO 132 K=1,NNN
132   UTOT(K,KFL,KFR)=0.
      DO 134 NFL=1,NZGL
      DO 134 NFR=1,NZGR
      DO 134 MUP=1,MKDM
      IF(MERKS(MUP,NFL,NFR).EQ.0) GOTO 134
       READ(KBAND) IKM,(JHUX(KKX),SNSP(KKX),KKX=1,IKM)
c      write(nout,*)'nfl,nfr,mup,ikm',nfl,nfr,mup,ikm
       JA=1
       DO 168 I=1,IKM
       DO 166 J=JA,JPTOT
       IF(JHUX(I) .NE. JXAL(J)) GOTO 166
       IWQ(I)= J
       GOTO 168
166    CONTINUE
       JA= J+1
168    CONTINUE
C      ZUORDNUNG DER MATRIXELEMETE FESTGELEGT
      DO 138 KFR=1,MZGR
      DO 138 KFL=1,MZGL
      A = FAKTOR(KFL,KFR)* COF(KFL,NFL,MFL)*COF(KFR,NFR,MFR)
c     write(nout,*)'kfr,kfl,a',kfr,kfl,a
      IF(A.EQ.0.) GOTO 138
      DO 139 K=1,IKM
c     write(nout,*)'k,snps',k,snsp(k)
139   UTOT(IWQ(K),KFL,KFR)=UTOT(IWQ(K),KFL,KFR)+A*SNSP(K)
138   CONTINUE
134   CONTINUE
      IF (NAUS.GT.1) WRITE (NOUT,1003)
1003  FORMAT(' AUSDRUCK DER BERECHNETEN TERME ',/)
      REWIND NBAND3
      REWIND NB9
      NTE2=0
      DO 810    K = 1,NNN
      READ (NBAND3) N1, N2, N3,(LC(I6),I6=1,NZT)
      IF (NAUS.LT.2) GOTO 888
      WRITE (NOUT,1000) N1, N2, N3, (LC(I6), I6=1, NZT)
      WRITE (NOUT,1004) ((UTOT(K,KFL,KFR), KFL=1, MZGL), KFR=1, MZGR)
888   CONTINUE
      IMQ=0
      IM= -1
      DO 11 I=1,MZGL
      DO 11 J=1,MZGR
      IM= IM+1
      IF(ABS(UTOT(K,I,J)).LT.1.D-10) GOTO 11
      IMQ= IMQ+1
      IMV(IMQ)= IM
      UM(IMQ)= UTOT(K,I,J)
11    CONTINUE
      IF(IMQ.EQ.0) GOTO 810
      NTE2=NTE2+1
      LH=(N1*10+N2)*10+N3
      DO 51 I=1,NZT
 51   LH=LH*10+LC(I)
8     WRITE(NB9) LH,IMQ, (IMV(I),UM(I),I=1,IMQ)
810   CONTINUE
      REWIND NB9
      WRITE(NOUT,*)'MFL,MFR,MKC', MFL,MFR,MKC,' VON',NNN,' PDCS SIND',
     * NTE2,' UNGLEICH NULL'
      IF(NAUS*NTE2.GT.0) WRITE(NOUT,*) ' AUSDRUCK WIE AUF BAND'
700   WRITE(NBAND2) NTE2,NTE2,NTE2
      DO 9 MTE=1,NTE2
      READ(NB9) LH,IMQ, (IMV(I),UM(I),I=1,IMQ)
      IF(NAUS.GT.0)  WRITE(NOUT,1999) LH,(IMV(I),UM(I),I=1,IMQ)
1999  FORMAT(' NNN-PERMUTATION ',I12,/,( I12,3X,E12.6))
9     WRITE(NBAND2) LH,IMQ, (IMV(I),UM(I),I=1,IMQ)
C      CLOSE(UNIT=6,STATUS='KEEP')
C      OPEN(UNIT=6,FILE='OUTPUT',ACCESS='APPEND',FORM='FORMATTED')
C      ENDE LOOP OPERATOREN
50    CONTINUE
  100 CONTINUE
   10 CONTINUE
      WRITE(NOUT,3010)
 3010 FORMAT(' ENDE DER RECHNUNG VON DROBER')
      STOP
1004  FORMAT(1X,8E12.4)
      END
      SUBROUTINE ELEML(MKC)
      IMPLICIT double precision (A-H,O-Z)
C     SUBROUTINE ZUR AUFSTELLUNG DER ELEMENTAREN LISTEN
C
C
      INCLUDE 'par/DROBER'
C
C
      COMMON /CSPIN/ NALG(NZTMAX,3)
C
      COMMON /CUM/ NPERM(NZCMAX+1,NZCMAF)
C
      COMMON /CEL/ SNTP(NDIM1), VV(NZOPER,NZUP), MISO(NZOPER),
     *             KBAND,MERKS(NZUP,NZGMAX,NZGMAX),MG(NZCMAX),
     *             NDEL,NFAK(MAXID+1),NFL,NFR, MAXLI,IDRU, MKDM
C
      COMMON /SJA/ NGRU(2,NZCMAX+1,2),NZT,NZV, KSU, JSU(2,NZCMAX+1)
C
      COMMON SNSP(NDIM1),I1,I2,I3,MGW(NZCMAX+1),
     *      MMOEG(NDIM3),MSQ(NZCMAX*NZCMAX,NZCMAX*NZCMAX,NZCMAX*NZCMAX),
     *       MSR(NZCMAX,NZCMAX),MVV(NDIMVV,NZCMAX)
C
      COMMON /STX/ JHUX(NNMAX)
C
      DIMENSION NV(NZCMAX),NSG(NZCMAX,NZCMAX),NH(MAXID+2,NZSORT),
     *             NKOR(NZTMAX,7), NP(NZSORT+1)
      DIMENSION NW(NZCMAX),NHILF(NZSORT), NHAL(NZTMAX)
C
C
C
      DO 320 K=1,NZSORT
      I=0
      DO 321 L=1,NZT
      IF(NALG(L,1).NE.K) GOTO 321
          I=I+1
      NH(I+2,K)=L
  321 NH(1,K)=NFAK(I+1)
      NH(2,K)=I
  320 CONTINUE
C      NH(2,K) =  I =ANZAHL DER TEILCHEN VOM TYP K,  NH(1,K)= I!
C       NH(2+...I,K)= NUMMMER DES TEILCHEN VOM TYP K
      DO 324 K=1,NZSORT
      I=0
      DO 323 L=1,NZT
      IF (NALG(L,2).NE.K) GOTO 323
      I=I+1
 323  CONTINUE
 324  NHILF(K)=I
      DO 325 MUP=1,MKDM
325   MERKS(MUP,NFL,NFR)=0
      IF(MKC.NE.1) GOTO  328
C     DIESE OPERATOREN KOENNEN DIE ANZAHL DER JEWEILIGEN TEILCHEN
C     SORTEN NICHT AENDERN
  326   DO 330 K=1,NZSORT
       IF (NH(2,K).NE.NHILF(K)) RETURN
 330   CONTINUE
 328  GO TO (301,302,303,304,305,305,302,303,303,306,304,305,307,308,
     *       305),MKC
  301 LKC=1
      GO TO 20
  302 LKC=4
      GO TO 20
  303 LKC=6
      GO TO 20
  304 LKC=9
      GO TO 20
305   LKC=18
      GO TO 20
 306  LKC=19
      GO TO 20
 307  LKC=27
      GO TO 20
  308 LKC=3
   20 DO 1 MLKC=1,LKC
      IF(MLKC.GT.1) GOTO 12
      DO 21 K=1,MAXLI
   21 SNSP(K) = 0
   12 ISPZ1 = 0
      NKC= MLKC
      IF(MKC.EQ.15 .AND. MLKC.GT.9) NKC=MLKC -9
C 
      GOTO(200,200,200,202,1202,1202,200,200,201,1201,202,1202,203,200,
     *     202 ),MKC
C      CHECK OB MATRIXELEMENT FUER SPINDIFFERENZ MOEGLICH IST
  200 IF(NDEL) 90,220,90
  201 IF(IABS(NDEL).GT.1) GOTO 90
       IF(NDEL) 207,208,209
  207 IF(NKC-4) 90,90,220
  208 GOTO (90, 90,220,220,90,90), NKC
  209 IF(NKC-3) 220,90,90
 1201 IF(IABS(NDEL).GT.1) GOTO 90
       IF(NDEL) 1207,1208,1209
 1207 IF(NKC-13) 90,90,220
 1208 IF((NKC-6)*(NKC-14)) 220,90,90
 1209 IF(NKC-7) 220,90,90
  202 IF(IABS(NDEL).GT.2)GOTO  90
       IF(NDEL) 211,212,213
  212 GO TO (90,90,90,220,220,220,90,90,90),NKC
  211 IF(NDEL+2.GT.0) GOTO 215
       IF(NKC-9) 90,220,90
  215 GO TO (90,90,90,90,90,90,220,220,90),NKC
  213 IF(NDEL.LT.2) GOTO 217
        IF(NKC-1) 90,220,90
  217 GO TO(90,220,220,90,90,90,90,90,90),NKC
 1202 IF(IABS(NDEL).GT.2)GOTO  90
       IF(NDEL) 1211,1212,1213
 1212 GO TO (90,90,90,90,90,90,220,220,220,220,220,220,
     *       90,90,90,90,90,90),NKC
 1211 IF(NDEL+2.GT.0) GOTO 1215
       IF(NKC-17) 90,220,220
 1215 GO TO (90,90,90,90,90,90,90,90,90,90,90,90,
     *       220,220,220,220,90,90),NKC
 1213 IF(NDEL.LT.2) GOTO 1217
        IF(NKC-2) 220,220,90
 1217 GO TO(90,90,220,220,220,220,
     *      90,90,90,90,90,90,90,90,90,90,90,90),NKC
  203 IF(IABS(NDEL).GT.3)GOTO  90
      GOTO (2001,2002,2003,2004,2005,2006,2007),NDEL+4
 2001 IF(NKC-27) 90,220,90
 2002 IF((NKC-23)*(NKC-27)) 220,90,90
 2003 IF((NKC-17)*(NKC-24)) 220,90,90
 2004 IF((NKC-10)*(NKC-18)) 220,90,90
 2005 IF((NKC-4)*(NKC-11)) 220,90,90
 2006 IF((NKC-1)*(NKC-5)) 220,90,90
 2007 IF(NKC-1) 90,220,90
  220 ISPZ1 = ISPZ1+1
C     IT IST 1.WW TEILCHEN 'I', JT IST 2.WW TEILCHEN 'J', KT IST 3.WW TEILCHEN K
      DO 28 ISTS=1,NZT-2
      DO 27 JSTS=ISTS+1,NZT-1
      DO 26 KSTS=JSTS+1,NZT
c     do 28 ists=1,nzt
c     do 27 jsts=1,nzt
c     if(jsts.eq.ists) goto 27
c     do 26 ksts=1,nzt
c     if(ksts.eq.ists .or. ksts.eq.jsts) goto 26
      NCYCL=0
      IT=ISTS
      JT=JSTS
      KT=KSTS
   25 DO 29 K=1,NZT
      NKOR(K,2)=K
   29 NALG(K,3)=NALG(K,2)
      IFT=1
      IPP=1
      GOTO(100,32,31,35,36,37,32,31,34,38,35,39,40,41,42 ),MKC
31    GOTO(331,332,333,334,335,336),NKC
331   IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(KT,3)=NALG(KT,3)+1
      IFT = 2*MOD(NALG(JT,3),2) -1
      GOTO 100
332   IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(JT,3)=NALG(JT,3)+1
      IFT = 2*MOD(NALG(KT,3),2) -1
      GOTO 100
333   IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      NALG(IT,3)=NALG(IT,3)+1
      IFT = 2*MOD(NALG(KT,3),2) -1
      GOTO 100
334   IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      NALG(KT,3)=NALG(KT,3)+1
      IFT = 2*MOD(NALG(IT,3),2) -1
      GOTO 100
335   IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      NALG(JT,3)=NALG(JT,3)+1
      IFT = 2*MOD(NALG(IT,3),2) -1
      GOTO 100
336   IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      NALG(IT,3)=NALG(IT,3)+1
      IFT = 2*MOD(NALG(JT,3),2) -1
      GOTO 100
C       ZENTRALPOTENTIAL
   32 IF(MOD(NKC,2).EQ.1) GOTO 43
C      AUSTAUSCH DER WW-TEILCHEN
       NKOR(KT,2) =JT
      NKOR(JT,2)=KT
C     NKOR(.,2) ENTHAELT EVENTUELLE VERTAUSCHUNG DURCH WECHSELWIRKUNG
   43 IF(NKC.LE.2) GOTO 100
       M1=-MOD(NALG(KT,3),2)
      M2=-MOD(NALG(JT,3),2)
      M3=2*((NALG(KT,3)+1)/2)
      M4=2*((NALG(JT,3)+1)/2)
      NALG(KT,3)=M3+M2
      NALG(JT,3)=M4+M1
C      SPINAUSTAUSCH DURCH BARTLETT UND HEISENBERGOPERATOREN
      GOTO 100
C      NKC BEI SIGMA x SIGMA 1=+0,2=0+,3=+-,4=-+,5=-0,6=0-
 34    GOTO (46,47,48,49,50,51),NKC
   46 IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(KT,3),2) -1
      GOTO 100
   47 IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(JT,3),2) -1
      GOTO 100
   48 IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      NALG(KT,3)=NALG(KT,3)+1
      GOTO 100
   49 IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      GOTO 100
   50 IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      IFT=2*MOD(NALG(KT,3),2) -1
      GOTO 100
   51 IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      IFT=2*MOD(NALG(JT,3),2) -1
      GOTO 100
C     NKC BEI TENSOR  1=++,2=+0,3=0+,4=+-,5=00,6=-+,7=0-,8=-0,9=--
   35 GO TO (61,61,62,63,62,61,62,63,63),NKC
   61 IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      I=1
      GOTO 64
   62 I=2*MOD(NALG(KT,3),2)-1
      GO TO 64
   63 IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      I=1
   64 GO TO(65,66,65,65,66,67,67,66,67),NKC
   65 IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      J=1
      GOTO 68
   66 J=2*MOD(NALG(JT,3),2)-1
      GO TO 68
   67 IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      J=1
   68 IFT=I*J
      GOTO 100
 36   GOTO(501,502,503,504,505,506,507,508,509,510,511,512,513,514,
     *     515,516,517,518),NKC
 501  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 502  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 503  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(KT,3)=NALG(KT,3)-1
      NALG(JT,3)=NALG(JT,3)+1
      GOTO 100
 504  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(JT,3),2)) IFT= -1
      GOTO 100
 505  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      NALG(JT,3)=NALG(JT,3)-1
      GOTO 100
 506  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 507  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 508  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 509  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 510  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 511  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 512  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 513  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      GOTO 100
 514  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(JT,3),2)) IFT= -1
      GOTO 100
 515  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      GOTO 100
 516  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 517  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)+1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 518  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)+1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 37   GOTO(601,602,603,604,605,606,607,608,609,610,611,612,613,614,
     *     615,616,617,618),NKC
 601  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 602  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 603  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(JT,3)=NALG(JT,3)-1
      NALG(KT,3)=NALG(KT,3)+1
      GOTO 100
 604  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(KT,3),2)) IFT= -1
      GOTO 100
 605  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      NALG(KT,3)=NALG(KT,3)-1
      IFT= 1
      GOTO 100
 606  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 607  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 608  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 609  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 610  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 611  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 612  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 613  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      GOTO 100
 614  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(KT,3),2)) IFT= -1
      GOTO 100
 615  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      GOTO 100
 616  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 617  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)+1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 618  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(IT,3)=NALG(IT,3)+1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 38   GOTO(801,802,803,804,805,806,807,808,809,810,811,812,813,814,
     *     815,816,817,818,819),NKC
 801  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      NALG(IT,3)=NALG(IT,3)-1
      GOTO 100
 802  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      NALG(IT,3)=NALG(IT,3)-1
      GOTO 100
 803  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(KT,3),2)) IFT= -1
      GOTO 100
 804  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      NALG(JT,3)=NALG(JT,3)-1
      GOTO 100
 805  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      IF(MOD(NALG(IT,3),2).NE.MOD(NALG(KT,3),2)) IFT= -1
      GOTO 100
 806  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      IF(MOD(NALG(IT,3),2).NE.MOD(NALG(JT,3),2)) IFT= -1
      GOTO 100
 807  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 808  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      NALG(IT,3)=NALG(IT,3)+1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 809  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 810  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 811  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(KT,3)=NALG(KT,3)+1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 812  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 813  IFT=(2*MOD(NALG(KT,3),2) - 1)*(2*MOD(NALG(JT,3),2) - 1)
     *   *(2*MOD(NALG(IT,3),2) - 1)
      GOTO 100
 814  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      GOTO 100
 815  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      NALG(IT,3)=NALG(IT,3)+1
      GOTO 100
 816  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(KT,3),2)) IFT= -1
      GOTO 100
 817  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)+1
      GOTO 100
 818  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 819  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 39   GOTO(901,902,903,904,905,906,907,908,909,910,911,912,913,914,
     *     915,916,917,918),NKC
 901  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 902  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 903  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(KT,3)=NALG(KT,3)-1
      NALG(JT,3)=NALG(JT,3)+1
      GOTO 100
 904  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(JT,3)=NALG(JT,3)-1
      NALG(KT,3)=NALG(KT,3)+1
      GOTO 100
 905  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 906  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 907  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 908  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 909  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 910  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 911  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 912  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 913  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      GOTO 100
 914  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      GOTO 100
 915  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 916  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 917  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)+1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 918  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(IT,3)=NALG(IT,3)+1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 40   GOTO(701,702,703,704,705,706,707,708,709,710,711,712,713,714,
     *     715,716,717,718,719,720,721,722,723,724,725,726,727),NKC
 701  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(JT,3)=NALG(JT,3)-1
      NALG(KT,3)=NALG(KT,3)-1
      GOTO 100
 702  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 703  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 704  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 705  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(KT,3)=NALG(KT,3)-1
      NALG(JT,3)=NALG(JT,3)+1
      GOTO 100
 706  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      NALG(JT,3)=NALG(JT,3)-1
      NALG(KT,3)=NALG(KT,3)+1
      GOTO 100
 707  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)-1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 708  IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)-1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 709  IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)-1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(JT,3),2)) IFT= -1
      GOTO 100
 710  IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      NALG(JT,3)=NALG(JT,3)-1
      GOTO 100
 711  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 712  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 713  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 714  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 715  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 716  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 717  IFT=(2*MOD(NALG(KT,3),2) - 1)*(2*MOD(NALG(JT,3),2) - 1)
     *   *(2*MOD(NALG(IT,3),2) - 1)
      GOTO 100
 718  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)-1
      GOTO 100
 719  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)-1
      GOTO 100
 720  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 721  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      IF(MOD(NALG(JT,3),2).NE.MOD(NALG(IT,3),2)) IFT= -1
      GOTO 100
 722  IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(IT,3)=NALG(IT,3)+1
      IF(MOD(NALG(KT,3),2).NE.MOD(NALG(JT,3),2)) IFT= -1
      GOTO 100
 723  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.1) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)-1
      GOTO 100
 724  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)+1
      IFT=2*MOD(NALG(JT,3),2) - 1
      GOTO 100
 725  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(IT,3)=NALG(IT,3)+1
      IFT=2*MOD(NALG(KT,3),2) - 1
      GOTO 100
 726  IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      NALG(KT,3)=NALG(KT,3)+1
      NALG(JT,3)=NALG(JT,3)+1
      IFT=2*MOD(NALG(IT,3),2) - 1
      GOTO 100
 727  IF(MOD(NALG(JT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
      IF(MOD(NALG(IT,3),2).EQ.0) GOTO 126
      NALG(JT,3)=NALG(JT,3)+1
      NALG(KT,3)=NALG(KT,3)+1
      NALG(IT,3)=NALG(IT,3)+1
      GOTO 100
 41   GOTO (100,3410,3430),NKC
C     SPIN-SPIN: EINS, AUSTAUSCH IK, AUSTAUSCH JK
3410  IF(MOD(NALG(IT,3)+NALG(KT,3),2) .EQ.0) GOTO 100
      IF(MOD(NALG(IT,3),2) .EQ. 1) THEN
          NALG(IT,3)=NALG(IT,3) +1
          NALG(KT,3)=NALG(KT,3) -1
          GOTO 100
       ELSE 
          NALG(IT,3)=NALG(IT,3) -1
          NALG(KT,3)=NALG(KT,3) +1
          GOTO 100
       ENDIF 
3430  IF(MOD(NALG(JT,3)+NALG(KT,3),2) .EQ.0) GOTO 100
      IF(MOD(NALG(JT,3),2) .EQ. 1) THEN
          NALG(JT,3)=NALG(JT,3) +1
          NALG(KT,3)=NALG(KT,3) -1
          GOTO 100
       ELSE 
          NALG(JT,3)=NALG(JT,3) -1
          NALG(KT,3)=NALG(KT,3) +1
          GOTO 100
       ENDIF 
C     NKC BEI TENSOR IK + JK  1=++,2=+0,3=0+,4=+-,5=00,6=-+,7=0-,8=-0,9=--
   42 I1T= IT
       IF(MLKC.NE.NKC) I1T= JT
       GO TO (4261,4261,4262,4263,4262,4261,4262,4263,4263),NKC
 4261 IF(MOD(NALG(I1T,3),2).EQ.1) GOTO 126
       NALG(I1T,3)=NALG(I1T,3)-1
       I=1
       GOTO 4264
 4262 I=2*MOD(NALG(I1T,3),2)-1
       GO TO 4264
 4263 IF(MOD(NALG(I1T,3),2).EQ.0) GOTO 126
       NALG(I1T,3)=NALG(I1T,3)+1
       I=1   
 4264 GO TO(4265,4266,4265,4265,4266,4267,4267,4266,4267),NKC
 4265 IF(MOD(NALG(KT,3),2).EQ.1) GOTO 126
       NALG(KT,3)=NALG(KT,3)-1
       J=1
       GOTO 4268
 4266 J=2*MOD(NALG(KT,3),2)-1
       GO TO 4268
 4267 IF(MOD(NALG(KT,3),2).EQ.0) GOTO 126
       NALG(KT,3)=NALG(KT,3)+1
       J=1   
 4268 IFT=I*J
       GOTO 100

C      IFT IST DAS ELEMENTARE SPINMATRIXELEMENT OHNE PERM UND FAKTOREN
C      AN DIESER STELLE IST NALG(.,3) DIE SPINFUNKTION DER RECHTEN SEITE
C      NACH ANWENDUNG DER SPINOPERATOREN
C     AUFSUCHEN DER PERMUTATION P0
 100  DO 96 I=1,NZT
 96   NHAL(I)=NALG(I,3)
      IFTA=IFT
      DO 1200 NISO= 1,MISO(MKC)
      IFT=IFTA
C     ISOSPIN OPERATOREN
      IF(NISO.EQ.1) GOTO 289
      DO 191 I=1,NZT
 191  NALG(I,3)=NHAL(I)
 289  GOTO (99,99,98,290,98,98,99,98,290,98,290,98,98,3290,3290),MKC
C      AUSTAUSCH DER WECHSELWIRKENDEN TEILCHEN IK, BZW. JK =I1T
3290  IF(NISO.GT.1) GOTO 3291
      IFT=-IFT
      GOTO 99
3291  I1T=IT
      IF(NISO.EQ.3) I1T=JT
      IF((NALG(KT,3)-1)/2 - (NALG(I1T,3)-1)/2) 3292,99,3293
3292  NALG(KT,3)=NALG(KT,3) +2
C     KT=PROTON,  JT=NEUTRON
      NALG(I1T,3)=NALG(I1T,3) -2
      GOTO 99
3293  NALG(KT,3)=NALG(KT,3) -2
C     JT=PROTON,  KT=NEUTRON
      NALG(I1T,3)=NALG(I1T,3) +2
      GOTO 99
C      AUSTAUSCH DER WECHSELWIRKENDEN TEILCHEN
 290  IF(NISO.GT.1) GOTO 291
      IFT=-IFT
      GOTO 99
 291  IF((NALG(KT,3)-1)/2 - (NALG(JT,3)-1)/2) 292,294,293
 292  NALG(KT,3)=NALG(KT,3) +2
C     KT=PROTON,  JT=NEUTRON
      NALG(JT,3)=NALG(JT,3) -2
      GOTO 294
 293  NALG(KT,3)=NALG(KT,3) -2
C     JT=PROTON,  KT=NEUTRON
      NALG(JT,3)=NALG(JT,3) +2
 294  IFT=2*IFT
      GOTO 99
  98  GOTO (190,192,193,194,195,196) , NISO
 190  IF(NALG(IT,3).LT.3) GOTO 1200
      IF(NALG(KT,3).GT.2) GOTO 1200
      NALG(IT,3)=NALG(IT,3)-2
      NALG(KT,3)=NALG(KT,3)+2
      IPP=1 - 2*((NALG(JT,3)-1)/2)
      GOTO 199
 192  IF(NALG(IT,3).LT.3) GOTO 1200
      IF(NALG(JT,3).GT.2) GOTO 1200
      NALG(IT,3)=NALG(IT,3)-2
      NALG(JT,3)=NALG(JT,3)+2
      IPP= 2*((NALG(KT,3)-1)/2) -1
      GOTO 199
 193  IF(NALG(JT,3).LT.3) GOTO 1200
      IF(NALG(IT,3).GT.2) GOTO 1200
      NALG(JT,3)=NALG(JT,3)-2
      NALG(IT,3)=NALG(IT,3)+2
      IPP=1 - 2*((NALG(KT,3)-1)/2)
      GOTO 199
 194  IF(NALG(JT,3).LT.3) GOTO 1200
      IF(NALG(KT,3).GT.2) GOTO 1200
      NALG(JT,3)=NALG(JT,3)-2
      NALG(KT,3)=NALG(KT,3)+2
      IPP= 2*((NALG(IT,3)-1)/2) -1
      GOTO 199
 195  IF(NALG(KT,3).LT.3) GOTO 1200
      IF(NALG(JT,3).GT.2) GOTO 1200
      NALG(KT,3)=NALG(KT,3)-2
      NALG(JT,3)=NALG(JT,3)+2
      IPP=1 - 2*((NALG(IT,3)-1)/2)
      GOTO 199
 196  IF(NALG(KT,3).LT.3) GOTO 1200
      IF(NALG(IT,3).GT.2) GOTO 1200
      NALG(KT,3)=NALG(KT,3)-2
      NALG(IT,3)=NALG(IT,3)+2
      IPP= 2*((NALG(JT,3)-1)/2) -1
      GOTO 199
 199  IFT =IFT*IPP
  99  DO 101 K=1,NZT
      NKOR(K,1)=K
  101 NKOR(K,3)=K
      I=1
      DO 104 K=1,NZT
      IF(NALG(K,1).EQ.NALG(K,3)) GOTO 104
       K1=K+1
      DO 106 L=K1,NZT
      IF(NALG(K,1).EQ.NALG(L,3)) GOTO 107
  106 CONTINUE
      GO TO 1200
C     SPINMATRIXELEMENT =0, NEUES PAAR WW-TEILCHEN
  107 NALG(L,3)=NALG(K,3)
      NALG(K,3)=NALG(K,1)
      J=NKOR(L,3)
      NKOR(L,3)=NKOR(K,3)
      NKOR(K,3)=J
      I=-I
  104 CONTINUE
      NP(1)=I
C      NP(1) ENTHAELT VORZEICHEN DER PERMUTATION P0,
C      NKOR(.,3) ENTHAELT DIE PERMUTATION P0
      DO 108 K=1,NZT
      L=NKOR(K,3)
  108 NKOR(L,4) =K
C      NKOR(.,4) INVERSE PERMUTATION ZU NKOR(.,3), P0**-1
      DO 110 K=1,NZT
      L=NKOR(K,2)
  110 NKOR(K,5)=NKOR(L,4)
C    NKOR(.,5) (INVERSE) PERMUTATION ZU NKOR(.,2)*P0**-1
      IT1=NKOR(IT,4)
      JT1=NKOR(JT,4)
      KT1=NKOR(KT,4)
      DO 120 NF1=1,NH(1,1)
      DO 1121 KH=1,NH(2,1)
1121  NKOR(NH(KH+2,1),1)=NH(NPERM(KH+1,NF1)+2,1)
      NP(2)=NPERM(1,NF1)*NP(1)
      DO 120 NF2=1,NH(1,2)
      DO 1122 KH=1,NH(2,2)
1122  NKOR(NH(KH+2,2),1)=NH(NPERM(KH+1,NF2)+2,2)
      NP(3)=NPERM(1,NF2)*NP(2)
      DO 120 NF3=1,NH(1,3)
      DO 1123 KH=1,NH(2,3)
1123  NKOR(NH(KH+2,3),1)=NH(NPERM(KH+1,NF3)+2,3)
      NP(4)=NPERM(1,NF3)*NP(3)
      DO 120 NF4=1,NH(1,4)
      DO 1124 KH=1,NH(2,4)
1124  NKOR(NH(KH+2,4),1)=NH(NPERM(KH+1,NF4)+2,4)
      NP(5)=NPERM(1,NF4)*NP(4)
C     DURCH DIE 112* DO LOOPS  WERDEN ALLE PERMUTAIONEN P' IN NKOR(.,1)
C     ERZEUGT UND IN NP(NZSORT+1) DAS VORZEICHEN DER PERMUTATION
      DO 124 K=1,NZT
      DO 124 L=1,2
      M=NKOR(K,L+3)
      N=NKOR(M,1)
  124 NKOR(K,L+5)=N
      IT2=NKOR(IT1,1)
      JT2=NKOR(JT1,1)
      KT2=NKOR(KT1,1)
C      NKOR(.,6)=(P0**-1)*P',NKOR.,6) WIRD IM FOLGENDEN NICHT VERWENDET
C      NKOR(.,7)=PW*(P0**-1)*P'
C     KONSTRUKTION DES DREIFACH PUNKTIERTEN DC-SYMBOLS
      DO 130 K=1,I1
      K1=NGRU(1,K,1)
      K2=NGRU(2,K,1)+K1-1
      DO 130 L=1,I2
      L1=NGRU(1,L,2)
      L2=NGRU(2,L,2)+L1-1
      NSG(L,K)=0
      DO 132 M=K1,K2
      DO 1132 N=L1,L2
      IF(NKOR(N,7).EQ.M) NSG(L,K)=NSG(L,K) +1
C      NSG(L,K) ENTHAELT DAS DC-SYMBOL FUER DAS L-TE CLUSTER RECHTS
C      UND K-TE CLUSTER LINKS
      IF(NKOR(N,7).EQ.IT2) MS21=L
      IF(NKOR(N,7).EQ.JT2) MS22=L
      IF(NKOR(N,7).EQ.KT2) MS23=L
1132   CONTINUE
      IF(M.EQ.IT2) MS11=K
      IF(M.EQ.JT2) MS12=K
      IF(M.EQ.KT2) MS13=K
  132 CONTINUE
  130 CONTINUE
C      ADRESSRECHNUNG
      if(idru.gt.3) write(nout,*)'niso,it,jt,kt,it1,jt1,kt1,nkor(n,4)',
     *              niso,it,jt,kt,it1,jt1,kt1,(nkor(n,4),n=1,nzt),
     *'ipp,it2,jt2,kt2,nkor(n,7)', ipp,it2,jt2,kt2,(nkor(n,7),n=1,nzt)
      if(idru.gt.3) write(nout,*) 'ms11',ms11, 'ms21',ms21, 
     *'ms12',ms12, 'ms22',ms22, 'ms13',ms13, 'ms23',ms23
     *,' nf1 ',nf1,' nf2 ',nf2,' nf3 ',nf3,' nf4 ',nf4
      DO 150 K=1,I1
      NW(K)=0
      DO 151 L=1,I2
  151 NW(K)=NW(K)+NSG(L,K)*(NGRU(2,K,1)+1)**(L-1)
      MM=MG(K)
      DO 154 M=1,MM
      IF(NW(K).EQ.MVV(M,K)) GOTO 150
  154 CONTINUE
  150 NV(K)=M
C     NV ENTHAELT DIE JEWEILIGE NR DES AUSTAUSCHES
      J=1
      DO 152 K=1,I3
  152 J=J+(NV(K)-1)*MGW(K)
C     J = ADRESSE DES DC-SYMBOLS,WIE IN HAUPT BEI 1401 BERECHNET
      J=MMOEG(J)
C     J=NUMMER DES DC-SYMBOLS
      J=((I1*I2)**3)*(J-1)
      M=MSR(MS21,MS11)
C      DOPPELNEBENKLASSENINDEX VON TEILCHEN 1
      N=MSR(MS22,MS12)
C      DOPPELNEBENKLASSENINDEX VON TEILCHEN 2
      L=MSR(MS23,MS13)
C      DOPPELNEBENKLASSENINDEX VON TEILCHEN 3
      J=J+MSQ(L,N,M)
C      J=ADRESSE DES PUNKTIERTEN DC,SO DASS ALLE MOEGLICHEN WW FUER EIN
C      DC NACHEINANDER ERFOLGEN
      SNSP(J) = SNSP(J) + (NP(5)*IFT)*VV(MKC,NKC)
      if(idru.gt.2) write(nout,*) 'nkc,ift,np(5),it,jt,kt,j,snsp',
     *           nkc,ift,np(5),it,jt,kt,j,snsp(j)
  120 CONTINUE
 1200 CONTINUE
126   NCYCL=NCYCL+1
c     goto 26
      NCYCL=MOD(NCYCL,3)
      IF(NCYCL.EQ.0) GOTO 26
      KTHJ=KT
      KT=JT
      JT=IT
      IT=KTHJ
      GOTO 25
  26  CONTINUE
  27  CONTINUE
  28  CONTINUE
   90 CONTINUE
C        ALLE MATRIXELEMENTE WERDEN AUFSUMMIERT
      IF (ISPZ1.EQ.0) GOTO 1
      SJJ = 0.
      IKM= 0
      DO 53    I = 1,MAXLI
C      LOOP UEBER ALLE PUNKTIERTEN DC
      SIW3 = ABS(SNSP(I))
      IF(SIW3.LT.1.D-11) GOTO 53
      SJJ = SJJ + SIW3
       SNTP(I)=SNTP(I)+SIW3
       IKM= IKM +1
       JHUX(IKM)= I
   53 CONTINUE
      IF(IKM.GT.NNMAX) WRITE(NOUT,*) 'IKM,NNMAX',IKM,NNMAX
      IF(IKM.GT.NNMAX) STOP 'NNMAX,ELEML'
      IF(SJJ.LT.1.D-11) GOTO 1
      MERKS(mlkc,NFL,NFR) = 1
      WRITE(KBAND) IKM,(JHUX(I),SNSP(JHUX(I)),I=1,IKM)
      IF (IDRU.LT.2) GOTO 407
      WRITE(NOUT,600)  NFL,NFR,IKM
      CALL PERME(MKC,mlkc,-1,SNSP,JHUX,IKM,IDRU)
  600 FORMAT(20H ELEMENTARE LISTE    ,2I3,' ANZAHL DER ME ',I5)
  407 DO 408 I=1,IKM
  408 SNSP(JHUX(I))=0.
    1 CONTINUE
      RETURN
      END
      SUBROUTINE PERME(MKC,NKC,KENN,SNSTP,JHUX,IKM,IDRU)
      IMPLICIT double precision (A-H,O-Z)
C      PERME WIRD GERUFEN MIT KENN=-1 VON ELEML ZUM AUSDRUCK FUER JEDE
C      ELEMENTARE SPINFUNKTION
C      PERME WIRD GERUFEN MIT KENN=1 VON HAUPT IMMER,SCHREIBT REPRESENTANT
C      FUER PUNKTIERTES DC AUF NBAND3
C
C      MAXLIT=ANZAHL DER DC
C      MAXLIQ=ANZAHL DER ZEILENAUSTAESCHE .GE. MAXLIT
C      MAXLIS=ANZAHL DER MOEGLICHEN 3-TEILCHEN WW IN EINEM DC
C
      INCLUDE 'par/DROBER'
C
      COMMON /CPER/ MAXLIQ,MAXLIS,MAXLIT,MZGS,NBAND3
C
      COMMON /SJA/ NGRU(2,NZCMAX+1,2),NZT,NZV, KSU, JSU(2,NZCMAX+1)
C
      COMMON SNSP(NDIM1),I1,I2,I3,MGW(NZCMAX+1),
     *      MMOEG(NDIM3),MSQ(NZCMAX*NZCMAX,NZCMAX*NZCMAX,NZCMAX*NZCMAX),
     *       MSR(NZCMAX,NZCMAX),MVV(NDIMVV,NZCMAX)
C
      DIMENSION NV(NZCMAX-1),NSG(NZCMAX,NZCMAX), NSH(4,NZCMAX,NZCMAX)
     *         ,SNSTP(NDIM1),JHUX(NNMAX), NZD(NZTMAX)
C
      LKH=1
      I12=I1*I2
      DO 1 K=1,MAXLIT
C     LOOP UEBER DC
      NAD=(K-1)*MAXLIS
      DO 2 LH=LKH,IKM
      AHX=JHUX(LH)-NAD
      IF((AHX-1.)*(AHX-MAXLIS).LE.0.) GOTO 3
 2    CONTINUE
      GOTO 1
C     FALLS KEIN BEITRAG FUER DIESES DC
C       KONSTRUKTION EINES REPRESENTANTEN DES PUNKTIERTEN DC-SYMBOLS
 3     DO 6 L=1,MAXLIQ
      IF(K.EQ.MMOEG(L)) GOTO 10
    6 CONTINUE
   10 M=L
C     M=ADRESSE DES K-TEN DC-SYMBOLS
C     KONSTRUKTION DES DC-SYMBOLS
      DO 12 N=2,I1
      NN=I1-N+1
      NV(NN)=(M-1)/MGW(NN)+1
      M=M-(NV(NN)-1)*MGW(NN)
      I=NV(NN)
      II=MVV(I,NN)
      DO 16 I=1,I2
      IJ=I2-I+1
      NSG(IJ,NN)=II/(NGRU(2,NN,1)+1)**(IJ-1)
   16 II=II-NSG(IJ,NN)*(NGRU(2,NN,1)+1)**(IJ-1)
   12 CONTINUE
      DO 18 M=1,I2
      NSG(M,I1)=NGRU(2,M,2)
      DO 18 N=1,I3
   18 NSG(M,I1)=NSG(M,I1)-NSG(M,N)
      IF(IDRU.LT.4) GOTO 119
      write(nout,*) 'dc-symbol,spaltenindex rechts'
      do 19 j=1,i1
19    write(nout,*) (nsg(l,j),l=1,i2)
C     NSG(L,K) ENHAELT DAS DC,L-TES CLUSTER RECHTS,K-TES CLUSTER LINKS
C     BESTIMMEN DES REPRESENTANTEN DES DC-SYMBOLS
119   I=1
      DO 20 J=1,I1
      DO 20 L=1,I2
      M=NSG(L,J)
      IF(M.LE.0) GOTO 20
       DO 21   N = 1,M
      NSH(N,L,J)=I
   21 I=I+1
   20 CONTINUE
      I=1
      DO 24 L=1,I2
      DO 24 J=1,I1
      M=NSG(L,J)
      IF(M.LE.0) GOTO 24
       DO 25   N = 1,M
      NZD(I)=NSH(N,L,J)
   25 I=I+1
   24 CONTINUE
C     REPRESENTANT BESTIMMT
      DO 30 LKH=LH,IKM
      MHILF=JHUX(LKH)-NAD
      IF(MHILF.GT.MAXLIS) GOTO 1
      M1=(MHILF-1)/(I12*I12)
      MHILF=MHILF- M1*I12*I12
      M2=(MHILF-1)/I12  +1
      M3=MOD(MHILF-1,I12)+1
      M1=M1 +1
    
      K1=(M1-1)/I2+1
      L1=M1-(K1-1)*I2
      K2=(M2-1)/I2+1
      L2=M2-(K2-1)*I2
      K3=(M3-1)/I2+1
      L3=M3-(K3-1)*I2
      N1=NSH(1,L1,K1)
C      N1 REPRESENTANT FUER WW TEILCHEN 1
      IF(M1.EQ.M2) GOTO 36
       N2=NSH(1,L2,K2)
C     N2=REPRESENTANT FUER WW TEILCHEN 2
      IF(M3.EQ.M2) GOTO 37
       N3=NSH(1,L3,K3)
C     N3=REPRESENTANT FUER WW TEILCHEN 3
      GO TO 40
 37    N3=NSH(2,L3,K3)
      GO TO 40
   36 N2=NSH(2,L2,K2)
      IF(M3.EQ.M2) GOTO 38
       N3=NSH(1,L3,K3)
      GO TO 40
 38    N3=NSH(3,L3,K3)
   40 IF(KENN.LT.0) GOTO 140
      WRITE(NBAND3) N1, N2, N3, (NZD(I6),I6=1,NZT)
      GO TO 30
  140 WRITE(NOUT,101)SNSTP(JHUX(LKH)),JHUX(LKH),MKC,NKC,N1,N2,N3,
     * (NZD(I),I=1,NZT)
   30 CONTINUE
    1 CONTINUE
      RETURN
  101 FORMAT(1X,1G12.5,I9,2X,4H (/O,I2,I2,2H (,I2,2H ,,I2,2H ,,I2,
     *     3H )/ , 12I3)
      END
      SUBROUTINE SJACK(K1,KSU1,KSU2,MFL)
      IMPLICIT double precision (A-H,O-Z)
C     DIESE SUBROUTINE BERECHNET DIE JACOBI KOORDINATEN UND SCHREIBT
C     SIE AUF BAND
C     EINGABE !  K1 = ZAHL DER CLUSTER, MFL= NR DER ZERLEGUNG
C     KSU1 IST DIE ANZAHL DER SUBSTRUKTUREN IN FRAGMENT1
C     KSU2 IST DIE ANZAHL DER SUBSTRUKTUREN IN FRAGMENT2
C     SVEC ENTHAELT DIE JACOBIKOORDINATEN ALS FUNKTION DER EINTEILCHEKOORD
C     DIE ORTHOGONALE TRANSFORMATION WIRD OHNE!!! DEN SCHWERPUNKT AUSGEFUE
C     RVEC ENTHAELT DIE DAZU TRANSPONIERTE MATRIX
C     C(.,.,K) =1, KENNZEICHNET DIE INNEREN JACOBIKOOR. VON CLUSTER K
C      C(.,.,K) =1 FUER K=NZC CHARAKTERISIERT DIE RELATIV KOORDINATEN
C
C
      INCLUDE 'par/DROBER'
C
      PARAMETER (NZTMA1=NZTMAX-1)
C
      COMMON /CKO/ VEC(NZTMAX,NZTMA1,NZFMAX),
     *             C(NZTMA1,NZTMA1,2*NZCMAX-1),
     *             RVEC(NZTMAX,NZTMAX),SVEC(NZTMAX,NZTMAX)
C
      COMMON /SJA/ NGRU(2,NZCMAX+1,2),NZT,NZV, KSU, JSU(2,NZCMAX+1)
C
      K2=K1-1
      K4=K1 + K2
      DO 2124 K=1,NZV
      DO 2124 L=1,NZT
2124  SVEC(L,K)=0.
      DO 2125 K=1,NZV
      DO 2125 L=1,NZV
      DO 2125 I=1,K4
2125  C(K,L,I)=0.
      I = 0
C
C     BLOCK CLUSTER INTERNE KOORDINATEN
C
      DO 10   K = 1,K1
      IF(NGRU(2,K,1).EQ.1) GOTO 10
       DO 12   L = 1,NGRU(2,K,1) -1
      I = I + 1
      DO 13   M = 1,L
   13 SVEC(NGRU(1,K,1) + M - 1 ,I) = -1./DBLE(L)
   12 SVEC( NGRU(1,K,1) + L ,I) = 1.
   10 CONTINUE
C
C     BLOCK CLUSTER INTERNE KOORDINATEN ZUEND
C
C     BLOCK SUBSTRUKTUR INTERNE KOORDINATEN
C
      DO 110 K=1,KSU
      IF(JSU(2,K).EQ.1) GOTO 110
      DO 112 L= 2,JSU(2,K)
      I= I + 1
      L1=NGRU(1,JSU(1,K) + L-1,1)
      L5=NGRU(1,JSU(1,K) ,1)
      DO 113 M= L5,L1 -1
113   SVEC(M,I)= -1./DBLE(L1 - L5)
      DO 123 M=	L1, L1 + NGRU(2,JSU(1,K) +L-1,1) -1
123   SVEC(M,I)= 1./DBLE(NGRU(2,JSU(1,K) +L-1,1))
112   CONTINUE
110   CONTINUE
C
C     BLOCK SUBSTRUKTUR INTERNE KOORDINATEN ZUEND
C
C     BLOCK SUBSTRUKTUR RELATIV KOORDINATEN
C
      IF(KSU1.EQ.1) GOTO 14
       DO 16   K = 2,KSU1
      I = I + 1
      L1 = NGRU(1,JSU(1,K),1) -1
      DO 17   M = 1,L1
   17 SVEC(M,I) = -1./ DBLE(L1)
      L3 = NGRU(1,JSU(1,K+ 1),1) -1
      DO 16   M = L1+1,L3
   16 SVEC(M,I) =  1./ DBLE(L3- L1)
   14 IF(KSU2.EQ.1) GOTO 24
      DO 21   K = 2,KSU2
      I = I + 1
      L1 = NGRU(1,JSU(1,KSU1+ 1),1)
      L5 = NGRU(1,JSU(1,KSU1+ K),1) -1
      DO 22   M = L1,L5 + 1
   22 SVEC(M,I) =-1./ DBLE(L5-L1+1)
      L3 = NGRU(1,JSU(1,KSU1+ K + 1),1) - 1
      DO 23   M = L5 + 1,L3
   23 SVEC(M,I) = 1./ DBLE(L3 - L5)
   21 CONTINUE
C
C     BLOCK SUBSTRUKTUR RELATIV KOORDINATEN ZUEND
C
C     RELATIV- UND SCHWERPUNKT KOORDINATE
C
   24  L4 = NGRU(1,JSU(1,KSU1 + 1),1) - 1
      DO 26   M  = 1,L4
      SVEC(M,NZV) = -1.D0/ DBLE(L4)
   26 SVEC(M,NZT) = 1.D0/ DBLE(NZT)
      DO 27   M = L4 + 1,NZT
      SVEC(M,NZV) = 1.D0/ DBLE(NZT-L4)
   27 SVEC(M,NZT) = 1.D0/ DBLE(NZT)
C
C     RELATIV- UND SCHWERPUNKT KOORDINATE ZUEND
C
C     NORMIERUNG
C
      DO 60   K = 1,NZT
      A = .0
      DO 61   L = 1,NZT
   61 A = A + SVEC(L,K)**2
      A = 1./ SQRT(A)
      DO 62  L = 1,NZT
   62 SVEC(L,K) = A*SVEC(L,K)
   60 CONTINUE
      DO 30   K = 1,NZT
      DO 30   L = 1,NZT
      RVEC(L,K) = SVEC(K,L)
   30 CONTINUE
      WRITE(NOUT,40)
       DO 34   K = 1,NZV
      L1 = NZV - K2 + K
      WRITE(NOUT,41)    K,(SVEC(M,K ),M,M=1,NZT)
      IF(K.GE.K1) GOTO 34
        DO 70    M = 1,NZT
   70 VEC(M,K,MFL) = SVEC(M,L1)
C      VEC ENTHAELT DIE CLUSTERRELATIVKOORDINATEN
   34 CONTINUE
   40 FORMAT(//28H DEFINITION DER KOORDINATEN      //)
   41 FORMAT(3H S(,I2,3H) =,10(F6.3,3H R(,I2,1H)  ) / 7X,
     1         2(F6.3,3H R(,I2,1H)))
   42 FORMAT(3H R(,I2,3H) =,10(F6.3,3H S(,I2,1H)  ) / 7X,
     1         2(F6.3,3H S(,I2,1H)))
   43 FORMAT(//)
      WRITE(NOUT,43)
      DO 36   K = 1,NZT
   36 WRITE(NOUT,42)   K,(RVEC(M,K),M,M=1,NZV)
      WRITE(NOUT,43)
      DO 37 K= 1,K2
37    WRITE (NOUT,45) K,(VEC(M,K,MFL),M,M=1,NZT)
45    FORMAT(' VEC(',I2,')=',10(F6.3,' R(',I2,')'))
      WRITE(NOUT,43)
      IIZ = 0
      DO 2130 K=1,K1
      NNZ   = NGRU(2,K,1)  - 1
      IF(NNZ.EQ.0) GOTO 2130
       DO 2132    M = 1,NNZ
      IIZ = IIZ + 1
 2132 C(IIZ,IIZ,K) = 1.
      WRITE(NOUT,44) (C(M,M,K),M=1,NZV)
   44 FORMAT(10F10.4)
 2130 CONTINUE
      WRITE(NOUT,43)
      DO 50   K = 1,K2
      KK=NZV-K2+K
      KI = K1 + K
   50 C(KK,KK ,KI) = 1.
      DO 51 K=1,K4
51      WRITE (NOUT,44) (C(M,M,K),M=1,NZV)
      RETURN
      END
      DOUBLE PRECISION FUNCTION CLG(J1,J2,J3,M1,M2)
C
C     CLG BERECHNET DIE CLEBSCH-GORDAN-KOEFFIZIENTEN
C     (J1/2,M1/2;J2/2,M2/2|J3/2,(M1+M2)/2) NACH
C     EDMONDS 'ANGULAR MOMENTUM IN QUANTUM MECHANICS',
C     PRINCETON, 1960 GLEICHUNGEN (3.10.60), (3.7.3)
C     UND TABELLE 2 (1. GLEICHUNG)
C
C     BENUTZT COMMON /COMY/ MIT DEN LOGRITHMEN DER
C     FAKULTAETEN
C
C     M. UNKELBACH 1989
C     LETZTE AENDERUNG: 06.02.89
C
C
      INTEGER JW1, JW2, JW3, MW1, MW2, MW3, JSUM, JSUM1,
     *        JDIF1, JDIF2, JDIF3, JMSUM1, JMSUM2, JMSUM3,
     *        JMDIF1, JMDIF2, JMDIF3, JJM1, JJM2, IMAX, IMIN,
     *        I, J1, J2, J3, M1, M2
C
      DOUBLE PRECISION FAKLN, CLGH
C
      COMMON /COMY/ FAKLN(0:99)
C     FAKLN(I) = LOG(I!)
C
C
C
C
      JW1=J1
      JW2=J2
      JW3=J3
      MW1=M1
      MW2=M2
C
C     CHECK, OB CLG = 0
      CLG=0.
      IF (JW1.LT.IABS(MW1)) RETURN
      IF (JW2.LT.IABS(MW2)) RETURN
      IF (JW3.GT.JW1+JW2.OR.JW3.LT.IABS(JW1-JW2)) RETURN
      MW3=MW1+MW2
      IF (JW3.LT.IABS(MW3)) RETURN
      JMSUM1=JW1+MW1
      JMSUM2=JW2+MW2
      JMSUM3=JW3+MW3
      IF (MOD(JMSUM1,2).EQ.1) RETURN
      IF (MOD(JMSUM2,2).EQ.1) RETURN
      IF (MOD(JMSUM3,2).EQ.1) RETURN
C
C
      JSUM=(JW1+JW2+JW3)/2
      JSUM1=JSUM+1
      JDIF1=JSUM-JW1
      JDIF2=JSUM-JW2
      JDIF3=JSUM-JW3
C
      IF (IABS(MW1)+IABS(MW2).EQ.0) GOTO 100
C
C     NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      JMSUM1=JMSUM1/2
      JMDIF1=JMSUM1-MW1
      JMSUM2=JMSUM2/2
      JMDIF2=JMSUM2-MW2
      JMSUM3=JMSUM3/2
      JMDIF3=JMSUM3-MW3
      JJM1=JDIF1+JMDIF1
      JJM2=JDIF3-JMDIF1
      IMIN=MAX0(0,-JJM2)
      IMAX=MIN0(JMDIF1,JMDIF3)
C
      CLGH=0.
      DO 50, I=IMIN, IMAX
       CLGH=CLGH+DBLE(1-2*MOD(I,2))*
     *     EXP(FAKLN(JMSUM1+I)+FAKLN(JJM1-I)-FAKLN(I)-FAKLN(JMDIF1-I)-
     *         FAKLN(JMDIF3-I)-FAKLN(JJM2+I))
50    CONTINUE
C
      IF (IMIN.GT.IMAX) CLGH=1.
      CLGH=CLGH*EXP((FAKLN(JDIF3)+FAKLN(JMDIF1)+FAKLN(JMDIF2)+
     *             FAKLN(JMDIF3)+FAKLN(JMSUM3)-FAKLN(JSUM1)-
     *             FAKLN(JDIF1)-FAKLN(JDIF2)-FAKLN(JMSUM1)-
     *             FAKLN(JMSUM2)+FAKLN(JW3+1)-FAKLN(JW3))*.5D0)
      CLG=CLGH*DBLE(1-2*MOD(JMDIF1,2))
C
C     ENDE DER BERECHNUNG FUER NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      RETURN
C
C
C
100   CONTINUE
C     PARITAETSCLEBSCH
C
      IF (MOD(JSUM,2).EQ.1) RETURN
C
      CLGH=EXP((FAKLN(JDIF1)+FAKLN(JDIF2)+FAKLN(JDIF3)-FAKLN(JSUM1)+
     *         FAKLN(JW3+1)-FAKLN(JW3))*.5D0+
     *        FAKLN(JSUM/2)-FAKLN(JDIF1/2)-FAKLN(JDIF2/2)-
     *        FAKLN(JDIF3/2))
      CLG=CLGH*DBLE(1-2*MOD((JSUM+JW1-JW2)/2,2))
C
C
C     ENDE DER RECHNUNG FUER PARITAETSCLEBSCH
      RETURN
      END
