      PROGRAM DRQUA_ANTI_KOM
C     FUER SMIN STATTDESSEN
CC    SUBROUTINE QUAF
      IMPLICIT double precision (A-H,O-Z)
C
C     FUER URBANA 3N-POTENTIAL
C     VERSION FUER 6 CLUSTER
C     FUER SMIN VORBEREITET
C     JEWEILS 'SMIN' SUCHEN UND DIE ENTSPRECHENDEN AENDERUNGEN DURCHFUEHREN
C     DIE LAENGE DES COMMON BLOCKS 'COMOV' MUSS MIT DER IN SMINH PASSEN
C     DESHALB DURCHGEHEND 'par/DRQUA_AK' durch 'par.SMIN' ANDERN
C
C     QUAF BERECHNET DIE REDUZIERTEN ORSTRAUMMATRIXELEMENTE
C     UND MULTIPLIZIERT SIE MIT DEN REDUZIERTEN SPINMATRIX-
C     ELEMENTEN
C
C     27.8.98 ZUORDNUNG FUER NB KORRIGIERT H.M.H.
C     1.9.98  POTENTIAL UND ZUGEHOERIGE PARAMETER WERDEN JETZT VON EXTRA
C             FILE EINGELESEN, DAMIT NNN-WECHSELWIRKUNG EINFACHER ZU
C             HANDHABEN H.M.H.
C     25.8.99 FUER TUCSON-MELBOURNE 'D1'-TERM WIRD JETZT 'LREG'=2 VERWENDET
C             MIT 'RJK' UND 'QJK' IM POTENTIAL FUER OPERATOR 3 UND 6 H.M.H.
C     29.11.99 ES WERDEN UNTEROPERATOREN MIT LPOT=2 ODER 1 ZUR BEHANDLUNG DER
C             KOORDINATEN BENUTZT, DAZU KOORDINATEN DER WW-TEILCHEN IM 
C             AUFRUF VON BEGRI H.M.H.
C     26.4.00 FUER TEXAS-LOS ALAMOS WIRD DAS PION AUF WECPOT(3) UND DAS OMEGA
C             AUF WECPOT(2) GELEGT IN DER FORM T_PI(R_JK)*(Y_O(R_IK)+Y_O(R_IJ))
C     16.5.00 FUER VPVS WERDEN ZUSAETZLICHE OPERATOREN SPIN-SPIN UND TENSOR
C             AUF DIE OPERATOREN 16 UNE 17 GELEGT H.M.H.
C
C     1. OPERATOR: NORM
C     2. OPERATOR: ZENTRAL
C     3. OPERATOR: SPIN-SPIN ANTI
C     4. OPERATOR: SPIN-SPIN KOM
C     5. OPERATOR: SPIN-TENSOR R_IK ANTI
C     6. OPERATOR: SPIN-TENSOR R_IJ ANTI
C     7. OPERATOR: SPIN-TENSOR R_IK KOM
C     8. OPERATOR: SPIN-TENSOR R_IJ KOM
C     9. OPERATOR: TENSOR-TENSOR RANG=0 ANTI
C    10. OPERATOR: TENSOR-TENSOR RANG=0 KOM
C    11. OPERATOR: TENSOR-TENSOR RANG=1 ANTI
C    12. OPERATOR: TENSOR-TENSOR RANG=1 KOM
C    13. OPERATOR: TENSOR-TENSOR RANG=2 ANTI
C    14. OPERATOR: TENSOR-TENSOR RANG=2 KOM
C    15. OPERATOR: TENSOR-TENSOR RANG=3 KOM
C    16 .OPERATOR: SPIN-SPIN
C    16 .OPERATOR: TENSOR
C
C
C     INPUT DES PROGRAMMS
C      INTEGERS IM FORMAT 24I3, REALS IM FORMAT 6E12.4
C
C      BEZEICHNUNG DER BAENDER, AUSDRUCK VARIABLEN
C      FILENAME FUER POTENTIAL,UNIT=25
C     von INPOT=25: DIE STEUERKARTE FUER DIE ZU RECHNENDEN OPERATOREN
C     von INPOT=25: DIE STEUERKARTEN FUER DIE KORRELATIONSFUNKTIONEN
C     von INPOT=25: DIE DEFINITION DER POTENTIALE
C
C EINGABE FUER DIE FUNKTIONEN
C
C JEDER INDEX I) ENTSPRICHT EINER KARTE
C
C DER FOLGENDE DATENSATZ MUSS FUER JEDE FUNKTION (K=1,NZF) WIEDERHOLT
C WERDEN
C  A) ZAHL DER PARAMETERSAETZE                                     NZPAR
C     DIE INNEREN WEITEPARAMETER
C     DIE RADIALWEITEPARAMETER
C WENN NBAND5=0,WIRD ALLES NEU GERECHNET,WENN NBAND5#0,WIRD VON DIESEM B
C  TEIL UBERNOMMEN
C
C
      INCLUDE 'par/DRQUA_AK'
C     NZOPER: ANZAHL DER OPERATOREN IN QUAF
C     NZOPOB:   "     "      "      "  OBER
C     NZOPLU:   "     "      "      "  LUDWIG
C     NZTMAX: MAXIMALE ANZAHL DER TEILCHEN
C     NZFMAX:     "      "     "  ZERLEGUNGEN
C     NZCMAX:     "      "     "  CLUSTER
C     MZGMAX:     "      "     "  SPINFUNKTIONEN
C     NZLWMA:     "      "     "  DREHIMPULSSTRUKTUREN
C     NZRHOM:     "      "     "  BASISVEKTOREN PRO ZERLEGUNG
C     NZPARM:     "      "     "  SAETZTE INNERER WEITEN
C     MZPARM:     "      "     "  RADIALPARAMETER
C     NZPOMA:     "      "     "  POLYNOMSTRUKTUREN
C     NZIQMA:     "      "     "  SIGMAFAKTOREN AUS LUDWIG
C     NZPOTM:     "      "     "  POTENTIALE
C     NPDC:       "      "     "  PDC'S AUS OBER
C
c    dimensionierung nzavma mag zu klein sein, besser 2*nzcmax hmh ??????
      PARAMETER (NZAVMA=2*NZCMAX-1, NZVMAX=NZTMAX-1,
     *           NZMAT=MZGMAX*MZGMAX,
     *           NDIM4=NZPOMA*NZLWMA, NZLRH=(2*NZCMAX-3)*(NZCMAX-1))
C
      COMMON /LUP/ KVK(NDIM1), JQ(NDIM1), INDPO(NDIM1),
     *    MVK(NDIM1,NZIQMA), EPO(NDIM1), WERTL(NDIM4,NDIM4),
     *    IZ,JZ, KZAHL, LUPAUS, IQM, KZHX(0:NZIQMA)
C
      COMMON /LUR/ IENT(NZOPLU), NBAND3
C
      COMMON /BIG/ DM(NDIM,NDIM,2)
C
      COMMON /BEG/    NAUS
C
      COMMON /CSH/ NSH1(NDIM5), NSH2(NDIM5), SH(NDIM5), NSH
C
      COMMON /COMOV/ NOVQ(NZFMAX), MOVQ(NZFMAX),
     *               COV(2*NZCMAX-2,NZPARM,NZFMAX),
     *               ROV(MZPARM,NZFMAX)
C
      COMMON  MKC, NZV, QO(NZVMAX,NZVMAX), 
     *        VZ(NZVMAX,NZVMAX), WERT(NDIM4,NDIM4), 
     *        LPARR, MC1, MD1, MFL, NCC,  NZAV, NZV1, INIX,
     *        RPAR(MZPARM,NZFMAX), VR(NZTMAX,NZCMAX-1)
C
      COMMON /STOREQ/ COF(NZPARM,NZRHOM,NZFMAX), RVEC(NZVMAX,NZTMAX),
     *          SVEC(NZTMAX,NZVMAX), U(MZGMAX,MZGMAX,NPDC),
     *          UU(MZGMAX,MZGMAX), VW(NZTMAX,NZCMAX-1),
     *          NUM(5,NZRHOM,NZFMAX), NREG(NZOPOB)
      DIMENSION WECPOT(NZPOTM,3,NZOPER)
      DIMENSION NZC(NZFMAX), MZG(NZFMAX), NOL(NZFMAX),
     *          NGRV(2,NZCMAX,NZFMAX), 
     *          NZPAR(NZFMAX), NZPOT(NZOPER)
      DIMENSION MS(MZGMAX,NZFMAX), MZPAR(NZFMAX),
     *          POLL(NZVMAX,NZVMAX), 
     *          CPAR(NZAVMA-1,NZPARM,NZFMAX)
      DIMENSION QFCL(NZVMAX,NZVMAX,2*NZCMAX-1), LC(NZTMAX,NPDC),
     *          QFCR(NZVMAX,NZVMAX,2*NZCMAX-1), LC1(NZTMAX),
     *          QFO(NZVMAX,NZVMAX), POR(NZVMAX,NZVMAX),
     *          QIK(NZVMAX,NZVMAX), POL(NZVMAX,NZVMAX),
     *          QJK(NZVMAX,NZVMAX), RJK(NZVMAX),UR(NZVMAX),RIK(NZVMAX)
      DIMENSION LREG(NZOPER), KOM(NZOPER,NZFMAX,NZFMAX)
      DIMENSION MMASSE(2,MZGMAX,NZFMAX), MLAD(2,MZGMAX,NZFMAX),
     *          MSS(2,MZGMAX,NZFMAX),IVEK1(NZFMAX)
      DIMENSION NZLW(NZFMAX), LW(2*NZCMAX-1,NZLWMA,NZFMAX),
     *          LZWERT(5,NZLWMA,NZFMAX), NZRHO(NZFMAX),
     *          NZC1(NZFMAX), IVEK(NZFMAX), K1VEC(NZFMAX),
     *          NZPO(NZFMAX), KP(NZCMAX-1,NZPOMA,NZFMAX)
      DIMENSION LREG1(NZOPER), NZRHO1(NZFMAX), ITPO(NZFMAX),
     *          NT1(NPDC), NT2(NPDC), JREOB(NZOPER), JRELU(NZOPER),
     *          NT3(NPDC)
      DIMENSION          IMV(NZMAT), UM(NZMAT)
C
      CHARACTER*80 INFILO, INFILU
      CHARACTER*50 VARFOR(NZOPER)
      CHARACTER*80 CPOTFIL

      CHARACTER*80 INFILE, OUTPUTout1, OUTPUTout2

      call getarg(1,INFILE)
      OPEN(UNIT=15,FILE=INFILE,STATUS='OLD')
      
      call getarg(2,OUTPUTout1)
      OPEN(UNIT=16,FILE=OUTPUTout1)
      
      call getarg(3,OUTPUTout2)
      OPEN(UNIT=10,FILE=OUTPUTout2,STATUS='UNKNOWN',FORM='UNFORMATTED')

      DATA VARFOR/'('' NORM'')','('' ZENTRAL '')',
     *'('' SPIN-SPIN-POTENTIAL ANTI'')',
     *'('' SPIN-SPIN-POTENTIAL KOM'')',
     *'('' SPIN-TENSOR-POTENTIAL ANTI R-IK'')',
     *'('' SPIN-TENSOR-POTENTIAL ANTI R-IJ'')',
     *'('' SPIN-TENSOR-POTENTIAL KOM R-IK'')',
     *'('' SPIN-TENSOR-POTENTIAL KOM R-IJ'')',
     * '('' TENSOR-TENSOR RANG=0 ANTI '')',
     * '('' TENSOR-TENSOR RANG=0 KOM '')',
     * '('' TENSOR-TENSOR RANG=1 ANTI '')',
     * '('' TENSOR-TENSOR RANG=1 KOM '')',
     * '('' TENSOR-TENSOR RANG=2 ANTI '')',
     * '('' TENSOR-TENSOR RANG=2 KOM '')',
     * '('' TENSOR-TENSOR RANG=3 KOM '')',
     *'('' SPIN-SPIN-POTENTIAL VPVS'')',
     *'('' SPIN-TENSOR-POTENTIAL VPVS R-IK'')'/
C
      DATA NZPOT/NZOPER*1/
C
      DATA JRELU/1,0,0,0,2,0,0,0,3,0,4,0,5,0,6,7,8/
      DATA JREOB/1,0,2,3,4,0,5,6,7,8,9,10,11,12,13,14,15/
C
C     FUER SMIN SIND DIE MIT 'CC' VERSEHENEN KARTEN ZU AKTIVIEREN UND
C     DIE ANGEGEBENEN ZEILEN ZU DEAKTIVIEREN
C
      OPEN(UNIT=9 ,FILE='DRLUOUT',STATUS='OLD',FORM='UNFORMATTED')
      OPEN(UNIT=8 ,FILE='DROBOUT', STATUS='OLD',FORM='UNFORMATTED')
C     IN SMIN MUESSEN DIESE OPEN STATEMENTS UNWIRKSAM GEMACHT WERDEN
C      WRITE(NOUT, 1111)
1111  FORMAT('1 DRQUA_AK_N VERSION VOM 16.5.00')
      INPUT=15
      INPOT=25
      DO 1   K=1,NZPOTM
      DO 1 L=1,NZOPER
      WECPOT(K,1,L)=1.
      WECPOT(K,2,L)=0.
    1 WECPOT(K,3,L)=0.
      READ (INPUT,1002) NBAND1,NBAND2,NBAND3,IDUM,NBAND5,NAUS,MOBAUS
     1 ,LUPAUS, ISTOP
      IF(NBAND5.NE.0) OPEN(UNIT=12,FILE='DRQUAALT',STATUS='UNKNOWN',
     *      FORM='UNFORMATTED')
      READ(INPUT,993) CPOTFIL                                                   
993   FORMAT(A80)                                                               
      OPEN(UNIT=25,FILE=CPOTFIL,STATUS='OLD',FORM='FORMATTED')
      READ(INPOT,1002)(LREG(K),K=1, NZOPER)
 1020 FORMAT(6E20.4)
C     POTENTIAL EINLESEN
      READ (INPOT,1002)  (NZPOT(K), K=2,NZOPER)
      DO 530 K=2,NZOPER
      IF(NZPOT(K).EQ.0) LREG(K) = 0
  530 CONTINUE
      DO 742 MKC=2,NZOPER
      IF(NZPOT(MKC).EQ.0) GOTO 742
      DO 741 K=1,NZPOT(MKC)
741   READ(INPOT,1020)(WECPOT(K,M,MKC),M=1,3)
742   CONTINUE
1042  FORMAT(' ANZAHL DER POTENTIALE',I4)
1044  FORMAT(//)
1043  FORMAT(' VORFAKTOR=',G15.6,' BETA IJ ',F11.5,
     1   ' BETA IK  =',F11.5)
C     POTENTIAL EINLESEN
      DO 757 MKC=2,NZOPER
      IF(NZPOT(MKC).EQ.0) GOTO 757
      WRITE(NOUT,1044)
      WRITE(NOUT,VARFOR(MKC))
      WRITE(NOUT,1042) NZPOT(MKC)
      WRITE(NOUT,1043)((WECPOT(I,M,MKC),M=1,3),I=1,NZPOT(MKC))
757   CONTINUE
C     EINLESEN DER FUNKTIONSEIGENSCHAFTEN UND PARAMETER
      REWIND  NBAND2
      READ(NBAND2) NZF,NZT,(NREG(K),K=1,NZOPOB),INDEKO
      IF(INDEKO.NE.0) WRITE(NOUT,*)' OBERMATRIXELEMENTE VON EINZELFILES'
      NZV=NZT-1
      IF(MOBAUS.GT.0) WRITE(NOUT,*)' NZF,NZT,(NREG(K),K=1,NZOPOB)',
     *                NZF,NZT,NZV,(NREG(K),K=1,NZOPOB)
      IF(NBAND5.LE.0) GOTO 90
      DO 92 KL=1,NZF
      DO 92 KR=1,KL
   92 READ(INPUT,1002) (KOM(L,KL,KR),L=1,NZOPER)
      REWIND NBAND5
      GO TO 93
   90 CONTINUE
      WRITE(NOUT,6100)
      DO 94 KL=1,NZF
      DO 94 KR=1,KL
      DO 94 L=1,NZOPER
   94 KOM(L,KL,KR)=0
   93 CONTINUE
      NZV1 = NZV - 1
      WECPOT(1,1,1)=2./ DBLE(NZT*(NZT-1)*(NZT-2))
      DO 20  K = 1,NZF
      READ (NBAND2) NZC(K),MZG(K),NOL(K)
      IF(MOBAUS.GT.0) WRITE(NOUT,*)' NZC(K),MZG(K),NOL(K)',
     *                NZC(K),MZG(K),NOL(K)
      M = MZG(K)
      IF(M.LE.MZGMAX) GOTO 6002
      WRITE(NOUT,*) 'ZERLEGUNG,MZG,MZGMAX',K,MZG(K),MZGMAX
      GO TO 250
6002  NOL(K)=NOL(K)+1
      READ (NBAND2) ((MMASSE(N,L,K),MLAD(N,L,K),MSS(N,L,K),N=1,2),
     1     MS(L,K),L=1, M)
      IF(MOBAUS.GT.0) WRITE(NOUT,*) 'MMASSE,MLAD,MSS,MS',
     * ((MMASSE(N,L,K),MLAD(N,L,K),MSS(N,L,K),N=1,2),MS(L,K),L=1, M)
      M = NZC(K)
      READ (NBAND2) ((NGRV(N,L,K),L=1,M),N=1,2)
      IF(MOBAUS.GT.0) WRITE(NOUT,*)'NGRV',((NGRV(N,L,K),L=1,M),N=1,2)
   20 CONTINUE
C
      REWIND NBAND3
      READ(NBAND3) NZF1,(NZLW(K),NZC1(K),K=1,NZF1),(IENT(K),K=1,NZOPLU),
     1  (NZPO(MH),MH=1,NZF1),INDELU
      IF(INDELU.NE.0) WRITE(NOUT,*)' LUDWMATRIXELEMENTE VON EINZELFILES'
      IF(NAUS.GT.0) WRITE(NOUT,248) NZF1,IENT,(NZLW(K),NZC1(K),NZPO(K),
     1  K=1,NZF1)
248    FORMAT(' VON LUPO,ZAHL DER ZERLEGUNGEN',I4,' OPERATOREN',7I4,/,
     1  (' ZAHL DER DREHIMPULSE',I4,' ZAHL DER CLUSTER',I4,
     2  'ZAHL DER POLYNOME',I4,/))
      IF(NZF.EQ.NZF1) GOTO 251
      STOP 251
  250 STOP 250
  251 DO 252 K=1,NZF
      ITPO(K)=0
      IF(NZPO(K).NE.0) ITPO(K)=2
      NZPO(K)=MAX0(1,NZPO(K))
      IF(NZC(K).NE.NZC1(K)) STOP 252
  252 CONTINUE
C
C     UEBERPRUEFUNG, OB GERECHNETE OPERATOREN IN OBER, LUDWIG UND
C     QUAF ZUSAMMENPASSEN
C
      IF (IENT(1).EQ.0 .OR. NREG(1).EQ.0) STOP 253
      IF (LREG(3).EQ.0) GOTO 255
      IF (NREG(2).EQ.0) STOP 255
255   IF (LREG(4).EQ.0) GOTO 256
      IF (NREG(3).EQ.0) STOP  256
256   IF (LREG(5).EQ.0) GOTO 257
      IF (NREG(4)*IENT(2).EQ.0) STOP  257
257   IF (LREG(6).EQ.0) GOTO 258
      IF (NREG(4)*IENT(2).EQ.0) STOP  258
258   IF (LREG(7).EQ.0) GOTO 259
      IF (NREG(5)*IENT(2).EQ.0) STOP  259
259   IF (LREG(8).EQ.0) GOTO 1253
      IF (NREG(6)*IENT(2).EQ.0) STOP 1253
1253  IF (LREG(9).EQ.0) GOTO 1254
      IF (NREG(7)*IENT(3).EQ.0) STOP 1254
1254  IF (LREG(10).EQ.0) GOTO 1255
      IF (NREG(8)*IENT(3).EQ.0) STOP 1255
1255  IF (LREG(11).EQ.0) GOTO 1256
      IF (NREG(9)*IENT(4).EQ.0) STOP 1256
1256  IF (LREG(12).EQ.0) GOTO 1257
      IF (NREG(10)*IENT(4).EQ.0) STOP 1257
1257  IF (LREG(13).EQ.0) GOTO 1258
      IF (NREG(11)*IENT(5).EQ.0) STOP 1258
1258  IF (LREG(14).EQ.0) GOTO 1259
      IF (NREG(12)*IENT(5).EQ.0) STOP 1259
1259  IF (LREG(15).EQ.0) GOTO 1260
      IF (NREG(13)*IENT(6).EQ.0) STOP 1260
1260  IF (LREG(16).EQ.0) GOTO 1261
      IF (NREG(14)*IENT(7).EQ.0) STOP 1261
1261  IF (LREG(17).EQ.0) GOTO 262
      IF (NREG(15)*IENT(8).EQ.0) STOP 262
262   CONTINUE
C     CHECK OBER/LUDWIG ZU ENDE
C
C     KONSTRUKTION DER BAHNDREHIMPULSE
      DO 264 K=1,NZF
      M1=2*NZC(K)-3
      M2=NZLW(K)
      IF(M2.LE.NZLWMA) GOTO 6000
      WRITE(NOUT,*) 'ZERLEGUNG,NZLW,NZLWMA',K,NZLW(K),NZLWMA
      GO TO 250
 6000 CONTINUE
      M3=NZC(K)-1
      MPO=NZPO(K)
      READ(NBAND3) ((LW(M,L,K),M=1,M1),L=1,M2),((KP(M,KH,K),M=1,M3),
     1 KH=1,MPO)
      IF(LUPAUS.LT.1) GOTO 263
      DO 1333 L=1,M2
1333  WRITE (NOUT,1334) (LW(M,L,K),M=1,M1),NOL(K)
1334  FORMAT(' LWERT, NOL',10I5)
263   CONTINUE
      DO 265 L=1,M2
      DO 266 M=1,3
  266 LZWERT(M,L,K)=0
      LZWERT(4,L,K)=LW(M3,L,K)
      LZWERT(5,L,K)=LW(M1,L,K)
      GOTO(261,265,267,268,276,282,261), NZC(K)
261   STOP 'NZC'
C     3-CLUSTER
  267 LZWERT(3,L,K)=LW(1,L,K)
      IF(NOL(K).EQ.NZC(K)) LZWERT(1,L,K)=LW(1,L,K)
      IF(NOL(K).EQ.2) LZWERT(2,L,K)=LW(1,L,K)
      GO TO 265
C     4-CLUSTER
  268 LZWERT(3,L,K)=LW(4,L,K)
      IF(NOL(K).LT.NZC(K)) GOTO 272
      LZWERT(1,L,K)=LZWERT(3,L,K)
      GO TO 265
  272 IF(NOL(K).GT.2) GOTO 275
      LZWERT(2,L,K)=LZWERT(3,L,K)
      GO TO 265
  275 LZWERT(1,L,K)=LW(1,L,K)
      LZWERT(2,L,K)=LW(2,L,K)
      GOTO 265
C     5-CLUSTER
276   LZWERT(3,L,K)=LW(6,L,K)
      GOTO (277,278,279,280,281,277),NOL(K)
277   STOP 'NOL'
278   LZWERT(2,L,K)=LW(6,L,K)
      GOTO 265
279   LZWERT(1,L,K)=LW(1,L,K)
      LZWERT(2,L,K)=LW(5,L,K)
      GOTO 265
280   LZWERT(1,L,K)=LW(5,L,K)
      LZWERT(2,L,K)=LW(3,L,K)
      GOTO 265
281   LZWERT(1,L,K)=LW(6,L,K)
      GOTO 265
C     6-CLUSTER
282   LZWERT(3,L,K)=LW(8,L,K)
      GOTO (277,283,284,285,286,287,277),NOL(K)
283   LZWERT(2,L,K)=LW(8,L,K)
      GOTO 265
284   LZWERT(1,L,K)=LW(1,L,K)
      LZWERT(2,L,K)=LW(7,L,K)
      GOTO 265
285   LZWERT(1,L,K)=LW(6,L,K)
      LZWERT(2,L,K)=LW(7,L,K)
      GOTO 265
286   LZWERT(1,L,K)=LW(7,L,K)
      LZWERT(2,L,K)=LW(4,L,K)
      GOTO 265
287   LZWERT(1,L,K)=LW(8,L,K)
  265 CONTINUE
  264 CONTINUE
C      BAHNDREHIMPULSE ENDE
C      KONSTRUKTION DER BASISVEKTOREN
      I=0
      WRITE (NOUT,1000)
 1000 FORMAT(1H1)
      DO 22  K = 1,NZF
      NZPAR(K) = 0
      MZPAR(K) = 0
       READ(INPUT,1002) NZRHO(K)
      KK=NZRHO(K)
      IF(KK.LE.NZRHOM) GOTO 388
      WRITE(NOUT,*) 'ZERLEGUNG,NZRHO,NZRHOM',K,NZRHO(K),NZRHOM
      GOTO 250
388   IVEK(K)=I
      IF(KK.EQ.0) GOTO 22
      M = 2*NZC(K) - 2
      WRITE (NOUT,1001)  K
 1001 FORMAT(//25H WEITEPARAMETER FUER DIE ,  I3,
     1       47H TE CLUSTERSTRUKTUR IN REZIPROKEN FERMIQUADRAT     )
      READ (INPUT,1002)  NZPAR(K) ,MZPAR(K)
CC    NZPAR(K)=NOVQ(K)
CC    MZPAR(K)=MOVQ(K)
C     DIESE KOMMENTARE SIND IN SMIN ZU AKTIVIEREN UND DAS VORANGEHENDE READ
C     UNWIRKSAM ZU MACHEN
 1002 FORMAT(20I3)
      IF(MZPAR(K).GT.MZPARM) STOP 'MZPARM ZU KLEIN'
      LM = NZPAR(K)
      KM=MZPAR(K)
      IF(LM.LE.NZPARM) GOTO 390
      WRITE(NOUT,*) ' ZUVIELE INTERNE PARAMETERSAETZE',NZPAR(K),NZPARM
      GOTO 250
390   DO 24  L = 1,LM
      READ (INPUT,1003)  (CPAR(N,L,K),N=1,M)
      DO 124 N=NZC(K)+1,M
      IF(CPAR(N,L,K).GT.0.)  GOTO 124
      WRITE(NOUT,*)' WEITE ',N,' FALSCH'
      STOP 'INTERNE WEITE FALSCH'
  124 CONTINUE
 1003 FORMAT(6E12.4)
   24 WRITE (NOUT,1004)L,(  CPAR(N,L,K),N=1,M)
 1004 FORMAT(/I3,' TER SATZ INNERER WEITEN',/,(8F12.6))
      READ(INPUT,1003)  (RPAR(L,K),L=1,KM)
      DO 125 L=1,KM
CC    RPAR(L,K)=ROV(L,K)
C     FUER SMIN AKTIVIEREN UND DAS READ DEAKTIVIEREN
      IF(RPAR(L,K).GT.1.E-8) GOTO 125
      WRITE(NOUT,*) ' IN ZERLEGUNG ',K,' IST DIE RELATIVWEITE ',L,
     *              ' FALSCH'
125   CONTINUE
C
      WRITE(NOUT,1005)   (RPAR(L,K),L=1,KM)
 1005 FORMAT(/22H SATZ RADIALPARAMETER   /3(8F12.6/))
      DO 240 N=1,KK
      READ(INPUT,1002) NUM(1,N,K),NUM(2,N,K),NUM(4,N,K),NUM(5,N,K)
C     NUM(5,.,.) # 0: BASISVEKTOR WIRD NICHT NEU GERECHNET
C
      NUM(4,N,K)=MAX(1,NUM(4,N,K))
      NUM(3,N,K)=IVEK(K)+N
      READ(INPUT,1003) (COF(L,N,K),L=1,LM)
      WRITE(NOUT,1050) NUM(3,N,K),K,NUM(1,N,K),NUM(2,N,K),NUM(4,N,K),
     1  (COF(L,N,K),L=1,LM)
 1050 FORMAT(//15H DEFINITION DER,I3,22H TEN BASISFUNKTION IST/
     1 I3,13H TE ZERLEGUNG,I3,23H TE SPINISOSPINFUNKTION/I3,
     2 26H TE BAHNDREHIMPULSFUNKTION,I3,' TES POLYNOM',/,
     3 ' SUMMATION UEBER INNERE WEITEN MIT KOEFFIZIENTEN',/,(1P6E12.4))
      IF (NUM(5,N,K).GT.0) WRITE (NOUT,1051)
  240 CONTINUE
      I=I+KK
   22 CONTINUE
C     ENDE DEFINITION BASISVEKTOREN
2011  FORMAT(////18H BERECHNET WERDEN )
      WRITE (NOUT,2011)
      DO 611 IPV=1,NZOPER
      IF(LREG(IPV).GT.0) WRITE(NOUT,VARFOR(IPV))
611   CONTINUE
      REWIND NBAND1
      IF(NBAND5.LE.0) GOTO 800
      READ(NBAND5) NZF1,(LREG1(K),K=1,NZOPER),I1,
     1 (NZRHO1(K),K=1,NZF1)
      IVEK1(1)=0
      MFEH1 = 1
      MFEH2 = NZF
      MFEH3 = NZF1
      IF(NZF.LT.NZF1) GOTO 890
      DO 804 K=1, NZOPER
      MFEH1 = 3+ K
      MFEH2 = LREG(K)
      MFEH3 = LREG1(K)
      IF(LREG(K)-LREG1(K))804,804,806
  806 DO 807 ML=1,NZF1
      DO 807 MR=ML,NZF1
  807 KOM(K,ML,MR)=0
  804 CONTINUE
      DO 805 K=1,NZF1
      MFEH1=11 + K
      MFEH2=NZRHO(K)
      MFEH3 = NZRHO1(K)
      IVEK1(K+1)=IVEK1(K)+NZRHO1(K)
  805 CONTINUE
      DO 6020 ML=1,NZF
      DO 6020 MR=1,ML
      IF(ML.LE.NZF1) GOTO 6020
      DO 6022 MC=1, NZOPER
 6022 KOM(MC,ML,MR)=0
 6020 CONTINUE
      GO TO 800
  890 WRITE(NOUT,891) MFEH1,MFEH2,MFEH3
  891 FORMAT( 17H VERGLEICHSFEHLER ,3I4)
      STOP
  800 CONTINUE
      WRITE(NBAND1) NZF,(LREG(K),K=1,NZOPER),I,(NZRHO(K),K=1,NZF)
      DO 950  K = 1,NZF
      M=MZG(K)
      N3=MZPAR(K)
      MC1=NZC(K)-1
      K1VEC(K)=N3
      KK=NZRHO(K)
      IF(KK*N3.LE.NDIM)GOTO 930
      WRITE(NOUT,*) ' NDIM FUER ZERLEGUNG ',NZF,' ZU KLEIN, MINIMAL ',
     *             KK*N3
      STOP 930
930   IF(KK.LE.0) GOTO 809
      DO 4536 N=1,KK
      N1=NUM(1,N,K)
      N2=NUM(2,N,K)
       N4=NUM(4,N,K)
      WRITE(NBAND1) N3,MMASSE(1,N1,K),MMASSE(2,N1,K),MLAD(1,N1,K),
     1 MLAD(2,N1,K),MSS(1,N1,K),MSS(2,N1,K),MS(N1,K),
     2 (LZWERT(L,N2,K),L=1,5),(RPAR(L,K),L=1,N3),KP(MC1,N4,K)
 4536 CONTINUE
809   IF(NBAND5.LE.0) GOTO810
       IF(K.GT.NZF1)GOTO 810
       KK1=NZRHO1(K)
      DO 813 N=1,KK1
813    READ(NBAND5)
810   CONTINUE
  950 CONTINUE
      ISTOPP=0
C
C
      IF(INDEKO.NE.0) THEN
      MEFOB=23
      CLOSE(UNIT=8,STATUS='KEEP')
      NBAND2=MEFOB
      ENDIF
         IF(INDELU.NE.0) THEN
         MEFLU=25   
         CLOSE(UNIT=9,STATUS='KEEP')
         NBAND3=MEFLU
         ENDIF
C     BESTIMMUNG DER ORTSMATRIXELEMENTE VOR EINSETZEN DER DREHIMPULSE
      DO 40  MFL = 1,NZF
      IZLW=NZLW(MFL)
      IZPW=NZPO(MFL)
      IRHO=NZRHO(MFL)
      IK1=K1VEC(MFL)
      MC = NZC(MFL)
      MC1= MC - 1
      MC2 = MC + MC1
      MC3 = MC2 - 1
      NC= NZPAR(MFL)
      NCC = MZPAR(MFL)
      IF(INDEKO.EQ.0) THEN
         READ(NBAND2)   ((RVEC(M,N),M=1,NZV),N=1,NZT)
         READ(NBAND2)   ((SVEC(N,M),M=1,NZV),N=1,NZT)
         READ(NBAND2)   (((QFCL(M,N,K),M=1,NZV),N=1,NZV),K=1,MC2)
      ENDIF
      DO 40 MFR=1,MFL
      JZLW=NZLW(MFR)
      JZPW=NZPO(MFR)
      JRHO=NZRHO(MFR)
      JK1=K1VEC(MFR)
      WRITE(NOUT,3009) MFL,MFR
3009  FORMAT(//,19H ZWISCHEN ZERLEGUNG,I3,15H UND ZERLEGUNG ,I3,
     124H WIRD ZUR ZEIT GERECHNET )
      MD=NZC(MFR)
      MD1= MD - 1
      IF(INDEKO.NE.0) THEN
         READ(INPUT,378) INFILO
378      FORMAT(A80)
         OPEN(UNIT=MEFOB,FILE=INFILO,STATUS='OLD',FORM='UNFORMATTED')
          REWIND MEFOB
         READ(NBAND2)   ((RVEC(M,N),M=1,NZV),N=1,NZT)
         READ(NBAND2)   ((SVEC(N,M),M=1,NZV),N=1,NZT)
         READ(NBAND2)   (((QFCL(M,N,K),M=1,NZV),N=1,NZV),K=1,MC2)
      ENDIF
      IF(INDELU.NE.0) THEN
         READ(INPUT,378) INFILU
         OPEN(UNIT=MEFLU,FILE=INFILU,STATUS='OLD',FORM='UNFORMATTED')
          REWIND MEFLU
      ENDIF
      READ(NBAND2)    ((VW(M,K),M=1,NZT),K=1,MD1)
      MD2 = MD + MD1
      MD3 = MD2 - 1
      ND = NZPAR(MFR)
      NDD = MZPAR(MFR)
      DO 42 MKC=1, NZOPER
      IZ=(IZPW-1)*NZLWMA+IZLW
      JZ=(JZPW-1)*NZLWMA+JZLW
      NZAV=MC1+MD1
      IF(LREG(MKC).GT.0) WRITE(NOUT,VARFOR(MKC))
      ELREG= LREG(MKC) - 1
C     OPERATOR 1   2    3    4    5    6    7    8    9    10
      GO TO (3008,3008,3008,3008,3004,3004,3004,3004,3002,3002,
     *       3002,3002,3002,3002,3002,3008,3004),MKC 
3002  NZAV=NZAV+2
      GO TO 3008
3004      NZAV=NZAV+1
3008  CONTINUE
      NL = MZG(MFL)
      NR = MZG(MFR)
      IF(JREOB(MKC).EQ.0) GOTO 440
      IF(NREG(JREOB(MKC)).EQ.0) GOTO 440
      READ(NBAND2)    IDUM,NTE,NTE
      IF(NTE.LE.NPDC) GOTO 6029
      WRITE(NOUT,*) ' ZUVIELE PDCS',NTE,' DIMENSION ',NPDC
      STOP 'NPDC'
6029  CONTINUE
      IF(NTE.EQ.0) GOTO 440
      DO 922   MTE = 1,NTE
      READ(NBAND2) LH,IMQ, (IMV(I),UM(I),I=1,IMQ)
      DO 11 I=1,NL
      DO 11 J=1,NR
      U(I,J,MTE)= 0.
11    CONTINUE
      DO 12 IK=1,IMQ
      I= IMV(IK)/NR
      J=MOD(IMV(IK),NR)
12    U(I+1,J+1,MTE)=UM(IK)
      DO 7 I=1,NZT
      LC(NZT+1-I,MTE)=MOD(LH,10)
7     LH=LH/10 
      NT3(MTE)=MOD(LH,10)
      LH=LH/10 
      NT2(MTE)=MOD(LH,10)
      NT1(MTE)= LH/10 
      IF(MOBAUS.EQ.0) GOTO 922
      IF(LREG(MKC).EQ. 0) GOTO 922
      WRITE (NOUT,838) NT1(MTE), NT2(MTE), NT3(MTE),(LC(K,MTE),K=1,NZT)
 838  FORMAT (10H VON OBER ,20I3)
      IF(MOBAUS.LT.2) GOTO 922
      WRITE (NOUT,839) ((U(NFL,NFR,MTE),NFL=1,NL), NFR=1,NR)
 839  FORMAT (1P10E12.4)
922   CONTINUE
C
C       READ LUPO ELEMENTE
440   IF(JRELU(MKC).EQ.0) GOTO 441
      IF(IENT(JRELU(MKC)).EQ.0 ) GOTO 441 
      CALL LURE(MKC,ITV2)
      IF(LUPAUS.GE.0) WRITE(NOUT,*)' ',ITV2,' LUC-MATRIXELEMENTE'
441   IF(LREG(MKC).EQ.0)  GOTO 6033
      IF (KOM(MKC,MFL,MFR)) 6030,6031,6032
 6030 WRITE(NOUT,6034)
      GO TO 6033
 6031 WRITE(NOUT,6035)
      GO TO 6033
 6032 WRITE(NOUT,6036)
 6033 CONTINUE
      IF(KOM(MKC,MFL,MFR).EQ.0) GOTO 95
      IF(MFL.NE.MFR)GOTO 97
      NNN=( NZRHO1(MFL)*(NZRHO1(MFL)+1))/2
      GO TO 99
97    NNN=NZRHO1(MFL)*NZRHO1(MFR)
   99 CONTINUE
      IF(LREG(MKC)*NNN.LE.0) GOTO 42
      DO 540 N=1,NNN
      READ (NBAND5) NUML,NUMR,II1,II2,(((DM(K,L,I),K=1,II1),L=1,II2),
     1  I=1,2)
      IF(KOM(MKC,MFL,MFR).LE.0) GOTO 540
      NUML=NUML-IVEK1(MFL)+IVEK(MFL)
      NUMR=NUMR-IVEK1(MFR)+IVEK(MFR)
      WRITE (NBAND1) NUML,NUMR,II1,II2,(((DM(K,L,I),K=1,II1),L=1,II2),
     1  I=1,2)
  540 CONTINUE
      IF(KOM(MKC,MFL,MFR).EQ.1) GOTO 42
      WRITE(NOUT,6037)
6037  FORMAT(' FUER DIESEN OPERATOR WIRD ERGAENZT')
95    IF(IRHO*JRHO.LE.0) GOTO 42
      IF(LREG(MKC).LE.0) GOTO 42
      DO 460 N=1,NDIM
      DO 460 M=1,NDIM
      DM(M,N,1)=.0
  460 DM(M,N,2)=.0
      DO 490 M=1,NZT
  490 LC1(M)=0
      IF(MFR.NE.MFL) GOTO 464
464   IF (NTE*ITV2.LE.0) GOTO 900
      DO 44 MTE=1,NTE
      IF(NAUS.LT.1) GOTO 1491
      WRITE(NOUT,*) MTE,' TES OBERMATRIXELEMENT'
C
C     FUER SMIN MUESSEN DIESE STATEMENTS BESEITIGT WERDEN
      CLOSE(UNIT=16,STATUS='KEEP')
      OPEN(UNIT=16,FILE=OUTPUTout1,ACCESS='APPEND')
C
1491  MM=0
      DO 491 M=1,NZT
  491 MM=MM+IABS(LC(M,MTE)-LC1(M))
      IF(MM.EQ.0) GOTO 492
      DO 494 M=1,NZT
  494 LC1(M)=LC(M,MTE)
      DO 470 M=1,NZT
      MM=LC(M,MTE)
  470 VR(MM,1)=VW(M,MD1)
      TS=.0
      TD=.0
      NA= 1
      DO 471 M=1,NZT
      TS=TS+ ABS(VR(M,1)+SVEC(M,NZV))
  471 TD=TD+ ABS(VR(M,1)-SVEC(M,NZV))
      IF(TS*TD.GT.0.000001) NA=0
C     PERMUTATION UEBER FRAGMENTGRENZEN
      DO 50   M = 1,NZV
      DO 50   N = 1,M
      DO 51   K= 1,MD2
   51 QFCR(M,N,K) = .0
      DO 50 K=1,MD1
   50 VR(M,K) = .0
      DO 290  K = 1,MD
      I1 = NGRV(1,K,MFR)
      I2 = NGRV(2,K,MFR) + I1 - 1
      IF(NGRV(2,K,MFR).LE.1)GOTO 290
      FZZ = 1./ DBLE(NGRV(2,K,MFR))
      I3=I2-1
      DO 52  L1 = I1,I3
      I4=L1+1
      DO 52  L2 =I4,I2
      L3 = LC(L1,MTE)
      L4 = LC(L2,MTE)
      DO 52  M = 1,NZV
      DO 52  N = 1,NZV
      MM=MIN0(M,N)
      NN=MAX0(N,M)
   52 QFCR(NN,MM,K) = QFCR(NN,MM,K) + (RVEC(M,L3)-RVEC(M,L4))*
     1(RVEC(N,L3)-RVEC(N,L4)) *FZZ
  290 CONTINUE
      DO 53  K = 2,MD
      KI = MD1 + K
      DO 100   M = 1,NZT
      MM = LC(M,MTE)
      DO 100  N = 1,NZV
  100 VR(N,K-1) = VR(N,K-1) + VW(M,K-1) *RVEC(N,MM)
      DO 53   M = 1,NZV
      DO 53   N = 1,NZV
      MM=MIN0(M,N)
      NN=MAX0(N,M)
      QFCR(NN,MM,KI ) = QFCR(NN,MM,KI ) + VR(M,K-1)*VR(N,K-1)
   53 CONTINUE
  492 CONTINUE
      DO 54  M = 1,NZV
      UR(M) = RVEC(M,NT1(MTE)) - RVEC(M,NT2(MTE))
      RIK(M) = RVEC(M,NT1(MTE)) - RVEC(M,NT3(MTE))
      RJK(M) = RVEC(M,NT2(MTE)) - RVEC(M,NT3(MTE))
      IF(MKC.GT.15) THEN
C     hier ist rik die jacobikoordinate des dritten teilchens
         RIK(M)= RVEC(M,NT1(MTE))+RVEC(M,NT2(MTE))-2.*RVEC(M,NT3(MTE))
         RIK(M)= RIK(M)/SQRT(6.)
      ENDIF
      DO 54  N = 1,NZV
      QIK(M,N)=.0
      QJK(M,N)=.0
   54 QFO(M,N)=.0
      IF(NAUS.GT.2) WRITE(NOUT,*) 'UR ',(UR(M),M=1,NZV)
      IF(NAUS.GT.2) WRITE(NOUT,*) 'RIK ',(RIK(M),M=1,NZV)
      IF(NAUS.GT.2) WRITE(NOUT,*) 'RJK ',(RJK(M),M=1,NZV)
      DO 55   M = 1,NZV
      DO 55   N = 1,NZV
      MM=MIN0(M,N)
      NN=MAX0(N,M)
      QFO(NN,MM) = QFO(NN,MM) + UR(M)*UR(N)
      QIK(NN,MM) = QIK(NN,MM) + RIK(M)*RIK(N)
      QJK(NN,MM) = QJK(NN,MM) + RJK(M)*RJK(N)
   55 CONTINUE
      DO 80 IPOT=1, NZPOT(MKC)
      FAK=WECPOT(IPOT,1,MKC)
      DO 81 M=1,NL
      DO 81 N=1,NR
      UU(M,N)=U(M,N,MTE)
   81 CONTINUE
      DO 60   KPAR = 1,NC
      DO 62   M = 1,NZV
      DO 62   N = 1,NZV
   62 POL(M,N) = .0
      DO 64   M = 1,NZV
      IF(MC3.LE.0) GOTO 64
      DO 63   K = 1,MC3
   63 POL(M,M)=POL(M,M) + CPAR(K,KPAR,MFL)*QFCL(M,M,K)
   64 CONTINUE
       DO 70 LPAR=1,ND
C       FUER UNTEROPERATOREN
        LPOT=0
        IF(LREG(MKC).EQ.2)  LPOT=2
C
      I=0
      DO 101 M=1,IRHO
      KSL= NUM(1,M,MFL)
      KLL= NUM(2,M,MFL)
      KPL=NUM(4,M,MFL)
      JPL=(KPL-1)*NZLWMA+KLL
      NUML= NUM(3,M,MFL)
      TS = COF(KPAR,M,MFL)
      IF (ABS(TS).LT.1.D-10) GOTO 101
      MADL = (M-1) * IK1
      DO 105 N=1,JRHO
      KSR= NUM(1,N,MFR)
      KLR= NUM(2,N,MFR)
      KPR=NUM(4,N,MFR)
      JPR=(KPR-1)*NZLWMA+KLR
      NUMR= NUM(3,N,MFR)
      IF (NUML.LT.NUMR) GOTO 105
      IF(WERTL(JPL,JPR).NE.1.) GOTO 105
       A = TS * UU(KSL,KSR)*COF(LPAR,N,MFR)
      IF(ABS(A).LT.1.D-20) GOTO 105
      MADR = (N-1) * JK1
      IF (I.LT.NDIM5) GOTO 110
      WRITE (NOUT,111) I
 111  FORMAT ('0NSH ZU KLEIN', I4)
      STOP
 110  I = I + 1
      NSH1(I) = NDIM * (MADR-1) + MADL
      NSH2(I) = NDIM4 * (JPR-1) + JPL
      SH(I) = A
 105  CONTINUE
 101  CONTINUE
      NSH = I
      IF (NSH.EQ.0) GOTO 70
      DO 72   M = 1,NZV
      DO 72   N = 1,NZV
   72 POR(M,N) = .0
      DO 74  M = 1,NZV
      DO 74  N = M,NZV
      IF(MD3.LE.0) GOTO 74
      DO 73  K = 1,MD3
   73 POR(N,M)=POR(N,M)+CPAR(K,LPAR,MFR)*QFCR(N,M,K)
   74 CONTINUE
  774 CONTINUE
C     EINSPRUNG FUER UNTEROPERATOREN
      DO 67 M=1,NZV
      DO 67  N = M,NZV
      IF(LPOT.EQ.0) POLL(N,M)=POL(N,M)+
     1  WECPOT(IPOT,2,MKC)*QFO(N,M)
     2  +WECPOT(IPOT,3,MKC)*QIK(N,M)
      IF(LPOT.EQ.2) POLL(N,M)=POL(N,M)+
     1  WECPOT(IPOT,2,MKC)*QIK(N,M)
     2  +WECPOT(IPOT,3,MKC)*QJK(N,M)
      IF(LPOT.EQ.1) POLL(N,M)=POL(N,M)+
     1  WECPOT(IPOT,2,MKC)*QFO(N,M)
     2  +WECPOT(IPOT,3,MKC)*QJK(N,M)
67    CONTINUE
      DO 76 LPARR=1,NDD
      DO 77 M=1,NZV
      DO 77 N=M,NZV
   77 QO(N,M)=POLL(N,M)+POR(N,M)+RPAR(LPARR,MFR)*QFCR(N,M,MD2)
      NB=NA
      IF(NA.EQ.0) GOTO 170
      IF((LPOT.EQ.0 .OR. LPOT.EQ.1).AND.ABS(UR(NZV)).GT.1.D-6) GOTO 160
      IF((LPOT.EQ.0 .OR. LPOT.EQ.2).AND.ABS(RIK(NZV)).GT.1.D-6) GOTO 160
      IF((LPOT.EQ.1 .OR. LPOT.EQ.2).AND.ABS(RJK(NZV)).GT.1.D-6) GOTO 160
      GOTO 170
160   IF(MKC.EQ.1) GOTO 170
      NB=0
170   CONTINUE
c     write(nout,*)'pol',((pol(n,m),n=1,nzv),m=1,nzv)
c     write(nout,*)'poll',((poll(n,m),n=1,nzv),m=1,nzv)
c     write(nout,*)'por',((por(n,m),n=1,nzv),m=1,nzv)
c     write(nout,*)'qo',((qo(n,m),n=1,nzv),m=1,nzv)
      IF(LPOT.EQ.0) CALL BEGRI(NB,FAK,UR,RIK)
      IF(LPOT.EQ.1) CALL BEGRI(NB,FAK,RJK,RIK)
      IF(LPOT.EQ.2) CALL BEGRI(NB,FAK,RJK,RIK)
   76 CONTINUE
C      LOOP RADIALWEITEN RECHTS
       IF(LPOT.NE.2) GOTO 70
         LPOT=LPOT-1
         GOTO 774
   70 CONTINUE
C     LOOP INNNERE WEITEN RECHTS
   60 CONTINUE
C      LOOP INNERE WEITEN LINKS
   80 CONTINUE
C       LOOP POTENTIAL
   44 CONTINUE
C       LOOP OBER
  900 CONTINUE
      DO 480 M=1,IRHO
      NUML=NUM(3,M,MFL)
      DO 481 N=1,JRHO
      NUMR=NUM(3,N,MFR)
      IF(NUML.LT.NUMR) GOTO 481
      IF (NUM(5,M,MFL)*NUM(5,N,MFR).GT.0) GOTO 482
C     HIER WERDEN DIE BASISVEKTOREN UEBERSPRUNGEN
      M1=(M-1)*IK1+1
      M2=M*IK1
      N1=(N-1)*JK1+1
      N2=N*JK1
      II1 = 1
      A = 0.
      DO 510 I=1,2
      DO 510 L=N1,N2
      DO 510 K=M1,M2
 510  A = A + ABS(DM(K,L,I))
      IF(A.GT.0.) GOTO512
      WRITE (NBAND1) NUML,NUMR,II1,II1,A,A
      GOTO 481
512   WRITE(NBAND1) NUML,NUMR,IK1,JK1,(((DM(K,L,I),K=M1,M2),L=N1,N2),
     1 I=1,2)
      IF (NAUS.EQ.0) GOTO 481
      WRITE (NOUT,1002) NUML, NUMR, IK1, JK1
      IF(NAUS.LT.1) GOTO 481
      WRITE (NOUT,1021) (((DM(K,L,I), K=M1,M2),L=N1,N2),I=1,2)
1021  FORMAT(1X,10E12.5)
482   IF(NUM(5,M,MFL)*NUM(5,N,MFR).GT.0) WRITE(NOUT,*) 'M,N',M,N,
     *  ' NUM5', NUM(5,M,MFL),NUM(5,N,MFR)
  481 CONTINUE
  480 CONTINUE
C      LOOP BASISVECTOR
C
C
      ISTOPP=ISTOPP+1
      IF (ISTOP.GT.0.AND.ISTOPP.GE.ISTOP) STOP 777
C     HIER KANN PROGRAMM NACH BERECHNUNG VON ISTOP OPERATOREN GESTOPPT
C     WERDEN
C
C     FUER SMIN MUESSEN DIESE STATEMENTS BESEITIGT WERDEN
      CLOSE(UNIT=16,STATUS='KEEP')
      CLOSE(UNIT=10,STATUS='KEEP')
      OPEN(UNIT=10,FILE=OUTPUTout2,STATUS='UNKNOWN',ACCESS='APPEND',
     *      FORM='UNFORMATTED')
      OPEN(UNIT=16,FILE=OUTPUTout1,ACCESS='APPEND')
   42 CONTINUE
C        LOOP OPERATOREN
   40 CONTINUE
      WRITE(NOUT,3011)
3011  FORMAT(//,' ENDE DER RECHNUNG VON QUAF')
      CLOSE(UNIT=9,STATUS='KEEP')
      CLOSE(UNIT=12,STATUS='KEEP')
CC    RETURN
C     FUER SMIN AKTIVIEREN UND STOP DEAKTIVIEREN
      STOP
 6100 FORMAT(/31H ES WIRD VOELLIG NEU GERECHNET /)
 6034 FORMAT(34H FUER DIESEN OPERATOR WIRD ERSETZT /)
 6035 FORMAT(40H FUER DIESEN OPERATOR WIRD NEU GERECHNET /)
 6036 FORMAT(34H FUER DIESEN OPERATOR WIRD KOPIERT /)
1051  FORMAT(1X,'DIESER BASISVEKTOR WIRD NICHT NEU GERECHNET')
      END
      SUBROUTINE LURE(MKC,ITV2)
      IMPLICIT double precision (A-H,O-Z)
C     LURE LIEST MATRIXELEMENTE AUS LUDWIG EIN
C
      INCLUDE 'par/DRQUA_AK'
C
      PARAMETER (NZAVMA=2*NZCMAX-1, NDIM4=NZPOMA*NZLWMA,
     *           NZLRH=(2*NZCMAX-3)*(NZCMAX-1))
C
      COMMON /LUP/ KVK(NDIM1), JQ(NDIM1), INDPO(NDIM1),
     *    MVK(NDIM1,NZIQMA), EPO(NDIM1), WERTL(NDIM4,NDIM4),
     *    IZ,JZ, KZAHL, LUPAUS, IQM, KZHX(0:NZIQMA)
C
      COMMON /LUR/ IENT(NZOPLU), NBAND3
C
      COMMON /BEG/   NAUS
C
      ITV2=0
      IU=2
C    OPERATOR 1  2   3   4   5   6   7   8    9   10
      GOTO (10, 400, 400,400, 10,400,400,400, 10, 400,
     *      10, 400, 10 ,400,10, 10, 10), MKC
C
10    DO 30, I=1, IZ
       DO 30, J=1, JZ
        WERTL(I,J)=0.
30    CONTINUE
       READ (NBAND3) KZAHL, IQMH
       IF (IQMH.GT.NZIQMA) GOTO 445
       IF (LUPAUS.GT.0) WRITE (NOUT,1000)  KZAHL, IQMH
       IF (KZAHL.EQ.0) GOTO 200
       IQM=MAX0(IQMH,1)
       IF (KZAHL.GT.NDIM1) GOTO 444
       READ (NBAND3) (JQ(KW),INDPO(KW),EPO(KW),(MVK(KW,IW),
     *                IW=1,IQM), KW=1,KZAHL)
C    SORTIEREN NACH ANZAHL DER SIGMA FAKTOREN
        CALL ORDSRT(KZAHL)
C
       CALL FAPOR(1,KZAHL)
200   CONTINUE
C
      ITV2=KZAHL
C
400   RETURN
C
444   WRITE (NOUT,1001)  KZAHL, NDIM1
      STOP 444
445   WRITE (NOUT,1002)  IQMH, NZIQMA
      STOP 445
1000  FORMAT(/,' RECORD AUS LUDWIG:',
     *       ' RECORDLAENGE',I7,'   IQM',I5)
1001  FORMAT(/,1X,'RECORD AUS LUDWIG ZU LANG',/,
     *       ' KZAHL, NDIM1:',3I8)
1002  FORMAT(/,1X,'ZU VIELE SIGMAFAKTOREN',/,
     *       ' IQM, NZIQMA:',3I4)
      END
      SUBROUTINE FAPOR(IA,IE)
      IMPLICIT double precision (A-H,O-Z)
C     FAPOR REPRODUZIERT DIE DREIMPULS- UND POLYNOMSTRUKTUR
C
      INCLUDE 'par/DRQUA_AK'
C
      PARAMETER (NZAVMA=2*NZCMAX-1, NDIM4=NZPOMA*NZLWMA,
     *           NZLRH=(2*NZCMAX-3)*(NZCMAX-1))
C
      COMMON /LUP/ KVK(NDIM1), JQ(NDIM1), INDPO(NDIM1),
     *    MVK(NDIM1,NZIQMA), EPO(NDIM1), WERTL(NDIM4,NDIM4),
     *    IZ,JZ, KZAHL, LUPAUS, IQM, KZHX(0:NZIQMA)
C
      COMMON /CSH/ NSH1(NDIM5), NSH2(NDIM5), SH(NDIM5), NSH
C
      IF(LUPAUS.EQ.0) GOTO 100
      WRITE(NOUT,10) IA,IE
10    FORMAT(' VON LUDWIG ELEMENTE VON',I8,' BIS ',I10)
      IF(LUPAUS.LT.2) GOTO 100
      DO 15 I=IA,IE
15    WRITE(NOUT,20) JQ(I),INDPO(I),EPO(I),(MVK(I,J),J=1,JQ(I))
20    FORMAT(I5,' INDEX',I10,' EPO ',E12.5,' MVK',19I3)
100   DO 1 I=IA,IE
      KPL=INDPO(I)/100000+1
      KPR=MOD(INDPO(I)/10000,10)+1
      LL=MOD(INDPO(I)/100,100)+1
      LR=MOD(INDPO(I),100)+1
      LPL=(KPL-1)*NZLWMA+LL
      LPR=(KPR-1)*NZLWMA+LR
      WERTL(LPL,LPR) = 1.
       L = NDIM4 * (LPR-1) + LPL
      KVK(I) = L
    1 CONTINUE
      RETURN
      END
      SUBROUTINE HAUPT
      IMPLICIT double precision (A-H,O-Z)
C     HAUPT FUEHRT HAUPTACHSENTRANSFORMATION DURCH
C     TRANSFORMATION IN VZ, HAUPTACHSENWERTE IN QO
C
      INCLUDE 'par/DRQUA_AK'
      PARAMETER (NZVMAX=NZTMAX-1)
C
      COMMON  MKC, NZV, QO(NZVMAX,NZVMAX), 
     *        VZ(NZVMAX,NZVMAX)
C
      DO 1   K = 1,NZV
      VZ(K,K) = 1.
      IF(NZV-K)   1,1,2
    2 A = .5/QO(K,K)
      K1 = K + 1
      DO 7   M = K1,NZV
      VZ(M,K) = .0
      B = A*QO(M,K)
      DO 5   L = 1,K
    5 VZ(M,L) = VZ(M,L) - B*VZ(K,L)
      QO(M,M) = QO(M,M) - B*B*QO(K,K)
      IF(NZV-M)   7,7,6
    6 M1 = M + 1
      DO 4   N = M1,NZV
    4 QO(N,M) = QO(N,M) - A*QO(M,K)*QO(N,K)
    7 CONTINUE
    1 CONTINUE
      RETURN
      END
      SUBROUTINE BEGRI(NB,FF1,UR,RIK)
      IMPLICIT double precision (A-H,O-Z)
C
C
      INCLUDE 'par/DRQUA_AK'
C
C
      PARAMETER (NZAVMA=2*NZCMAX-1, NZVMAX=NZTMAX-1,
     *           NDIM4=NZPOMA*NZLWMA, NZLRH=(2*NZCMAX-3)*(NZCMAX-1))
C
      COMMON /BIG/ DM(NDIM,NDIM,2)
C
      COMMON /BEG/   NAUS
C
      COMMON /CSH/ NSH1(NDIM5), NSH2(NDIM5), SH(NDIM5), NSH
C
      COMMON  MKC, NZV, QO(NZVMAX,NZVMAX), 
     *        VZ(NZVMAX,NZVMAX), WERT(NDIM4,NDIM4), 
     *        LPARR, MC1, MD1, MFL, NCC,  NZAV, NZV1, INIX,
     *        RPAR(MZPARM,NZFMAX), VR(NZTMAX,NZCMAX-1)
      DIMENSION RIK(NZVMAX), UR(NZVMAX)
C
      DIMENSION P(NZAVMA,NZVMAX), BETA(NZVMAX), 
     *          S((NZAVMA*(NZAVMA+1))/2+1),
     *          ZH(NZAVMA),  SS(NZAVMA*(NZAVMA+1)+2)
C
      DIMENSION WERTT(NDIM4*NDIM4), DMM(NDIM*NDIM,2)
C
      EQUIVALENCE (WERT,WERTT), (DM,DMM)
C
      DATA PHI2 /1.77245385090552D0/
C
      DO 80   M = 1,NZV
      DO 80   N = 1,NZAV
   80 P(N,M) = 0.
      INZ1=(NZAV*(NZAV+1))/2
      DO 81 M=1,INZ1
81    S(M)=0.
      CALL HAUPT
      FFF=1.
      IF(NZV1.EQ.0) GOTO 71
       DO 1   M = 1,NZV1
      BETA(M)=1./ SQRT(QO(M,M))
    1 FFF=PHI2*BETA(M)*FFF
   71 CONTINUE
      BETA(NZV) = 1.
      DO 2 N=1,MC1
      NN=NZV-MC1+N
      DO 2 M=NN,NZV
    2 P(N,M)=VZ(M,NN)*BETA(M)
C      VZ(M,N) TRANSFORMATIONSMATRIX VON S(N) AUF T(M)
C     VZ(M,N)=T(N,M) EQ 7.9
C      P(M,N)=P(M,N) EQ 7.11
      DO 4 N=1,MD1
      NN=MC1+N
      DO 4 M=1,NZV
      DO 6 K=1,M
    6 P(NN,M)=VR(K,N)*VZ(M,K)+P(NN,M)
    4 P(NN,M)=P(NN,M)*BETA(M)
C      P= TRANSFORMATIONS-MATRIX VON RELATIV AUF DIAGONALKOORDINATEN T
C      BEREITS DIVIDIERT DURCH WURZEL BETA
C   OPERATOR 1  2  3  4  5  6  7  8  9  10
      GOTO ( 10,10,10,10,72,7 ,72,7 ,70,70,
     *       70,70,70,70,70,10,72), MKC
   70 DO 88 M=1,NZV
      DO 90 K=1,M
      P(NZAV-1,M)=P(NZAV-1,M)+UR(K)*VZ(M,K)
   90 P(NZAV,M)=P(NZAV,M)+RIK(K)*VZ(M,K)
      P(NZAV-1,M)=P(NZAV-1,M)*BETA(M)
   88 P(NZAV,M)=P(NZAV,M)*BETA(M)
      GOTO 10
    7 DO 8 M=1,NZV
      DO 9 K=1,M
    9 P(NZAV,M)=P(NZAV,M)+UR(K)*VZ(M,K)
    8 P(NZAV,M)=P(NZAV,M)*BETA(M)
      GOTO 10
   72 DO 82 M=1,NZV
      DO 94 K=1,M
   94 P(NZAV,M)=P(NZAV,M)+RIK(K)*VZ(M,K)
   82 P(NZAV,M)=P(NZAV,M)*BETA(M)
   10 CONTINUE
      DO 3  M = 1,NZAV
    3 ZH(M) = P(M,NZV)
      I=0
      DO 12 M=1,NZAV
      DO 12 N=M,NZAV
      I=I+1
      DO 12   K = 1,NZV1
   12 S(I)=S(I)+P(N,K)*P(M,K)
C      S= SIGMA-FAKTOREN
C     SIGMA(N,N') EQ 7.14
 14   DO 170  KPARR = 1,NCC
      BETA(NZV) = 1./ SQRT(QO(NZV,NZV)+RPAR(KPARR,MFL))
      FFW = FFF *PHI2*BETA(NZV)
      FF=FFW**3*FF1
      DO 91   M = 1,NZAV
   91 P(M,NZV) = ZH(M)*BETA(NZV)
      IF(NAUS.LT.3) GOTO 136
      DO 132 M=1,NZV
132   WRITE(NOUT,*) ' P ',(P(N,M),N=1,NZAV)
136   I = 0
      DO 93   M = 1,NZAV
      DO 93   N = M,NZAV
      I = I + 1
   93 SS(I) = 2.*(S(I) + P(N,NZV)*P(M,NZV))
      IF(NAUS.GT.2) WRITE(NOUT,*)' SS',(SS(IH),IH=1,(NZAV*(NZAV+1))/2)
     *              ,' FF',FF
      CALL MAT(FF,SS)
      I0 = NDIM * LPARR + KPARR
      DO 100 M=1,NSH
      I2 = NSH2(M)
      CC= SH(M) * WERTT(I2)
      IF (CC.EQ.0.) GOTO 100
      I1 = NSH1(M) + I0
      IF (NB) 110,110,111
C       DMM(.,.,2) ENTHAELT ALLE BEITRAEGE
C       DMM(.,.,1) ENTHAELT NUR BEITRAEGE FUER NB=0
 110  DMM(I1,1) = DMM(I1,1) + CC
 111  DMM(I1,2) = DMM(I1,2) + CC
      IF(NAUS.GT.1) WRITE(NOUT,120) M,I1,I2,SH(M),CC,DMM(I1,1),DMM(I1,2)
120   FORMAT(' M,I1,I2,SH,CC,DMM1,2 ',3I5,E14.6,3E20.14)
  100 CONTINUE
  170 CONTINUE
      RETURN
      END
      SUBROUTINE MAT(H,S)
      IMPLICIT double precision (A-H,O-Z)
C
C
      INCLUDE 'par/DRQUA_AK'
C
      PARAMETER (NZAVMA=2*NZCMAX-1, NZVMAX=NZTMAX-1,
     *           NDIM4=NZPOMA*NZLWMA, NZLRH=(2*NZCMAX-3)*(NZCMAX-1))
C
      COMMON /LUP/ KVK(NDIM1), JQ(NDIM1), INDPO(NDIM1),
     *    MVK(NDIM1,NZIQMA), EPO(NDIM1), WERTL(NDIM4,NDIM4),
     *    IZ,JZ, KZAHL, LUPAUS, IQM, KZHX(0:NZIQMA)
C
      COMMON  MKC, NZV, QO(NZVMAX,NZVMAX), 
     *        VZ(NZVMAX,NZVMAX), WERT(NDIM4,NDIM4)
C
      DIMENSION S(NZAVMA*(NZAVMA+1)+2)
      DIMENSION WERTT(900),F(NDIM1)
      EQUIVALENCE (WERT,WERTT)
      DO 4   LR = 1,JZ
      DO 4   LL = 1,IZ
    4 WERT(LL,LR) = .0
      IF(LUPAUS.GT.3) WRITE(NOUT,*) ' S ',(S(N),N=1,20),' H ',H
      N=1
      IF(KZAHL.EQ.0) GOTO 1
      IF(ABS(H).LT.1.D-15)  GOTO 1
      DO 20 K=1,KZAHL
20    F(K)=EPO(K)*H
      IF(KZHX(0).GT.KZHX(1)) GOTO 41
      DO 40 M=1,IQM
      DO 30 K=KZHX(M),KZAHL
30    F(K)=F(K)*S(MVK(K,M))
40    CONTINUE
41    DO 50 K=1,KZAHL
      WERTT(KVK(K)) = WERTT(KVK(K)) + F(K)
      IF(LUPAUS.LT.3) GOTO 50
      IF(ABS(F(K)).LT.1.D-15) GOTO 50
      WRITE(NOUT,100) KVK(K),
     ,K,KZAHL,WERTT(KVK(K)),EPO(K),F(K)
50    CONTINUE
100   FORMAT(' KVK,K,K2,W,E,F',3I4,E17.10,2E13.6)
    1 CONTINUE
      RETURN
      END
      SUBROUTINE ORDSRT(KOBEH)
      IMPLICIT double precision (A-H,O-Z)
C     ORDSRT SORTIERT DEN GESAMTEN COMMONBLOCK LUP NACH AUFSTEIGENDER
C     ANZAHL VON SIGMAFAKTOREN
      INCLUDE 'par/DRQUA_AK'
C
      PARAMETER (NZAVMA=2*NZCMAX-1, NDIM4=NZPOMA*NZLWMA,
     *           NZLRH=(2*NZCMAX-3)*(NZCMAX-1))
C
      COMMON /LUP/ KVK(NDIM1), JQ(NDIM1), INDPO(NDIM1),
     *    MVK(NDIM1,NZIQMA), EPO(NDIM1), WERTL(NDIM4,NDIM4),
     *    IZ,JZ, KZAHL, LUPAUS, IQM, KZHX(0:NZIQMA)
C
C    KZHX(IQ) GIBT DIE NIEDRIGSTE ELEMENT NUMMER AN MIT MINDESTENS
C                 IQ FAKTOREN IM RECORD
C
      KUNTH=1
      KZAHL=KOBEH
      IQMH=IQM
      DO 10 IQ=0,IQMH
10    KZHX(IQ)=0
C
      DO 100, IQ=0, IQMH
C        LOOP ANZAHL SIGMAFAKTOREN
C
         KZHX(IQ)=KUNTH
         KUNTEN=KUNTH
         KOBH  =KZAHL
C
         DO 80, KH=KUNTEN, KZAHL
C
            IF (JQ(KH).EQ.IQ) GOTO 80
C           SIGMAFAKTOR FALSCH PLAZIERT
            KOBEN=KOBH
            DO 60, IH=KOBEN, KH+1, -1
               IF (JQ(IH).NE.IQ) GOTO 60
C              KANDIDAT ZUM AUSTAUSCH GEFUNDEN
               INT=JQ(IH)
               JQ(IH)=JQ(KH)
               JQ(KH)=INT
               INT=INDPO(IH)
               INDPO(IH)=INDPO(KH)
               INDPO(KH)=INT
               RE=EPO(IH)
               EPO(IH)=EPO(KH)
               EPO(KH)=RE
               DO 20, KQ=1, IQMH
                  IND=MVK(IH,KQ)
                  MVK(IH,KQ)=MVK(KH,KQ)
                  MVK(KH,KQ)=IND
20             CONTINUE
               KOBH=IH-1
               GOTO 70
C
60          CONTINUE
C           KEINEN TAUSCHKANDIDATEN MEHR GEFUNDEN, NAECHSTES IQ NEHMEN
            KUNTH=KH
            GOTO 90
C
70          CONTINUE
C           TAUSCHPARTNER GEFUNDEN UND GETAUSCHT, WEITERSUCHEN
C
80       CONTINUE
C
C        ENDE LOOP ANZAHL SIGMAFAKTOREN
90      IF(JQ(KZAHL).EQ.0) GOTO 110
100   CONTINUE
110   CONTINUE
      IF(LUPAUS.GT.1) WRITE(NOUT,999) (KZHX(IH),IH=0,IQMH)
999   FORMAT(' KZHX ',20I4)
      RETURN
      END
