(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    847596,      15655]
NotebookOptionsPosition[    841057,      15549]
NotebookOutlinePosition[    841501,      15566]
CellTagsIndexPosition[    841458,      15563]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"ParallelEvaluate", "[", 
     RowBox[{"Off", "[", 
      RowBox[{
       StyleBox[
        RowBox[{"General", "::", "munfl"}], "MessageName"], 
       StyleBox[",", "MessageName"], 
       RowBox[{"FindFit", "::", "cvmit"}]}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Off", "[", 
    RowBox[{
     StyleBox[
      RowBox[{"General", "::", "munfl"}], "MessageName"], 
     StyleBox[",", "MessageName"], 
     RowBox[{"General", "::", "stop"}], ",", 
     RowBox[{"LinearSolve", "::", "luc"}], ",", 
     RowBox[{"FindFit", "::", "cvmit"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8296300966415033`*^9, 3.829630143697412*^9}, 
   3.8296301981102867`*^9, {3.830085788224523*^9, 3.830085830927006*^9}, {
   3.830085922017994*^9, 3.830085922454791*^9}, {3.830254676397111*^9, 
   3.830254683576117*^9}, {3.8357535253401318`*^9, 3.835753526480729*^9}, 
   3.835757939272066*^9, {3.841374283992467*^9, 3.841374298670226*^9}, 
   3.876982287566571*^9, 
   3.8863949178510523`*^9},ExpressionUUID->"653e6f27-b0ac-45fc-bdc8-\
97ea1f24bb4a"],

Cell[BoxData["\<\"/home/johannesk/kette_repo/limit_cycles/src_mathematica/\
good_fits\"\>"], "Output",
 CellChangeTimes->{{3.885789979260504*^9, 3.8857899803723907`*^9}, 
   3.88579007619263*^9, 3.885790144670609*^9, 3.885893317780836*^9, 
   3.885893402628194*^9, 3.885973645223077*^9, 3.886026047883564*^9, 
   3.886044125840271*^9, 3.88604511894895*^9, 3.886045272681233*^9, 
   3.8861291236294947`*^9, 3.886219164255301*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"8c61aed9-0aef-4833-88e7-ac6d49da7df3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Nuclear", " ", "E2"}], "=", 
    RowBox[{
     RowBox[{"2.22", " ", "E3"}], "=", 
     RowBox[{
      RowBox[{"8.48", " ", "\[HBar]c"}], "=", "198"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LECsNUCL", "=", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<../LECs_nucl_Joki.dat\>\"", ",", "\"\<Table\>\""}], "]"}],
       "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"activeLEC", "=", 
     RowBox[{"LECsNUCL", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806896936913022*^9, 3.8068970008591266`*^9}, 
   3.806897170588989*^9, 3.8069185960989933`*^9, 3.828961525247902*^9, {
   3.82896195420479*^9, 3.828961958065777*^9}, 3.829047005911919*^9, 
   3.829049549313146*^9, 3.829050563497466*^9, {3.829111485536989*^9, 
   3.82911149275898*^9}, {3.829111954111908*^9, 3.8291119612539*^9}, {
   3.829112252140929*^9, 3.829112261893633*^9}, {3.829112573732985*^9, 
   3.829112651253894*^9}, {3.8291128337762623`*^9, 3.829112883724078*^9}, {
   3.829113166587775*^9, 3.8291131806499767`*^9}, {3.829113328957966*^9, 
   3.829113359441307*^9}, {3.829113389516396*^9, 3.829113421977861*^9}, 
   3.82911359058664*^9, {3.831020999626773*^9, 3.831021052854327*^9}, {
   3.831021137239236*^9, 3.831021161717834*^9}, {3.831021192429678*^9, 
   3.831021281026369*^9}, {3.831021336132536*^9, 3.831021437429002*^9}, {
   3.831032542266756*^9, 3.8310325557267437`*^9}, {3.834050512313829*^9, 
   3.834050517106021*^9}, {3.834050604750242*^9, 3.834050630559705*^9}, {
   3.834050750565744*^9, 3.83405077321001*^9}, {3.834050823224724*^9, 
   3.8340508902194643`*^9}, {3.834050957167952*^9, 3.834050973889583*^9}, {
   3.834052294530594*^9, 3.834052435905081*^9}, {3.83465332463794*^9, 
   3.8346534999392233`*^9}, {3.8357552237033463`*^9, 3.835755238065895*^9}, 
   3.835756956831279*^9, {3.835759112957494*^9, 3.8357591266674023`*^9}, {
   3.83575916390582*^9, 3.835759178021888*^9}, 3.83620997072495*^9, {
   3.83621035297618*^9, 3.836210429280836*^9}, {3.840523938427368*^9, 
   3.840524020511397*^9}, {3.840697378938952*^9, 3.840697451024289*^9}, {
   3.84137465740092*^9, 3.8413747378881598`*^9}, {3.8413747790104237`*^9, 
   3.8413747864186783`*^9}, {3.841374848538939*^9, 3.841374849132146*^9}, {
   3.841374890194478*^9, 3.841374964797176*^9}, 3.841375120156419*^9, {
   3.841375263998637*^9, 3.8413753719531593`*^9}, {3.841375402268126*^9, 
   3.841375402827441*^9}, {3.841375468144746*^9, 3.8413755600898323`*^9}, {
   3.855570823759363*^9, 3.855570831337441*^9}, 3.855571422722322*^9, {
   3.855651207266287*^9, 3.855651235174877*^9}, {3.855722420660387*^9, 
   3.855722425128508*^9}, {3.8603765100850153`*^9, 3.860376518611704*^9}, 
   3.860376579439577*^9, {3.875072442974223*^9, 3.875072573691984*^9}, {
   3.876266776807109*^9, 3.876266829985648*^9}, 3.876980116419195*^9, {
   3.876980157396861*^9, 3.876980179743556*^9}, 3.8769817535983562`*^9, {
   3.881214732169114*^9, 3.881214818255166*^9}, 3.881214867434598*^9, 
   3.881651217243663*^9, {3.881651265148467*^9, 3.881651269548263*^9}, {
   3.881730031418*^9, 3.881730078791593*^9}, 3.885429718807684*^9, {
   3.885429769971409*^9, 3.885429779421628*^9}, {3.8859733632464952`*^9, 
   3.8859733996630163`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"58b6ae4e-cc02-4d48-9cb9-35e73a732b50"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hbar", "=", "197.327053"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mm", "=", "938.92"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m1", "=", 
   RowBox[{"3", " ", "Mm"}]}], ";", 
  RowBox[{"m2", "=", 
   RowBox[{"3", " ", "Mm"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", 
   RowBox[{"m1", " ", 
    RowBox[{"m2", "/", 
     RowBox[{"(", 
      RowBox[{"m1", "+", "m2"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mh2", "=", 
   FractionBox[
    RowBox[{"2", " ", "\[Mu]"}], 
    SuperscriptBox[
     RowBox[{"(", "hbar", ")"}], "2"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<\!\(\*FractionBox[SuperscriptBox[\(\[HBar]\), \(2\)], \(2  \[Mu]\)]\) \
= \>\"", ",", 
    RowBox[{"1", "/", "mh2"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dimerCores", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2.00", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.49894", ",", "20.5763"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.31002", ",", "2.03082"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.230922", ",", "56.5742"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.136023", ",", "20.549"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.146917", ",", "20.5961"}], "}"}]}], "}"}]}], "}"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]Range", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "activeLEC", "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.830082358524274*^9, 3.8300823663157797`*^9}, {
   3.830082537201302*^9, 3.830082537387905*^9}, {3.8300848735709677`*^9, 
   3.830084875028632*^9}, {3.830167157273056*^9, 3.830167157902136*^9}, 
   3.830405743337331*^9, {3.8311012282156*^9, 3.831101270404479*^9}, {
   3.831101315678876*^9, 3.831101344436973*^9}, {3.83110142954226*^9, 
   3.831101439591865*^9}, {3.831101476215837*^9, 3.831101525039752*^9}, {
   3.831101798751298*^9, 3.831101798869615*^9}, {3.831102702112359*^9, 
   3.83110271990127*^9}, {3.8311838175160913`*^9, 3.831183818780045*^9}, {
   3.831184164997231*^9, 3.831184166055088*^9}, {3.831377118577701*^9, 
   3.8313771191640177`*^9}, {3.831384105406933*^9, 3.831384125104849*^9}, {
   3.8314519844611187`*^9, 3.831451984622528*^9}, {3.831615729709292*^9, 
   3.831615731371269*^9}, {3.831619786789652*^9, 3.831619811656218*^9}, {
   3.831722648819048*^9, 3.831722658717618*^9}, 3.831722692024437*^9, 
   3.831722918395677*^9, {3.8317232267389107`*^9, 3.831723234279372*^9}, {
   3.83172517702496*^9, 3.83172517913588*^9}, {3.8317255367605677`*^9, 
   3.8317255382098618`*^9}, 3.831725861501629*^9, {3.8317259860166483`*^9, 
   3.831726075561963*^9}, {3.831791593522347*^9, 3.831791593690034*^9}, {
   3.831795317273732*^9, 3.831795317406324*^9}, {3.831901002374483*^9, 
   3.831901008630803*^9}, {3.831901526303162*^9, 3.831901543867508*^9}, {
   3.8319016674291563`*^9, 3.831901716747959*^9}, {3.831901771282752*^9, 
   3.831901774091483*^9}, {3.831991946785798*^9, 3.8319919487051764`*^9}, {
   3.832314922326722*^9, 3.8323149225106153`*^9}, 3.8346381600446367`*^9, 
   3.834639668771867*^9, {3.834653545874679*^9, 3.8346535540909157`*^9}, {
   3.8346552759476748`*^9, 3.834655290297477*^9}, {3.83465540548203*^9, 
   3.8346554060383368`*^9}, {3.8346561580471983`*^9, 
   3.8346561606658583`*^9}, {3.835605613540668*^9, 3.835605613694296*^9}, {
   3.835665194742416*^9, 3.835665221512479*^9}, 3.835755258202922*^9, {
   3.8357577079588614`*^9, 3.8357577086613617`*^9}, 3.836215933259561*^9, {
   3.8405173239155827`*^9, 3.840517332935677*^9}, {3.840517476930221*^9, 
   3.840517479550274*^9}, {3.840530868486946*^9, 3.8405308718753843`*^9}, {
   3.840688846259037*^9, 3.8406888498032627`*^9}, {3.840702192506586*^9, 
   3.840702224785261*^9}, {3.840858763084635*^9, 3.840858764778303*^9}, {
   3.840859150752317*^9, 3.840859155998938*^9}, 3.8415725414485607`*^9, {
   3.8415726354920053`*^9, 3.841572666824752*^9}, {3.841572703912736*^9, 
   3.841572704373498*^9}, {3.8520293922986813`*^9, 3.8520294168591413`*^9}, {
   3.8520294507655315`*^9, 3.8520294623077016`*^9}, {3.855138256734597*^9, 
   3.855138257232785*^9}, {3.855309727761969*^9, 3.855309732148938*^9}, {
   3.855311522219215*^9, 3.855311523235752*^9}, {3.855570887682955*^9, 
   3.855570941640139*^9}, {3.8555709947513638`*^9, 3.85557105470498*^9}, {
   3.855720346609249*^9, 3.855720410613899*^9}, {3.8557204451213293`*^9, 
   3.855720523576931*^9}, {3.855720567138908*^9, 3.8557205855261*^9}, {
   3.855737422396502*^9, 3.8557374309496*^9}, 3.855739574641673*^9, {
   3.855833484671033*^9, 3.85583351269689*^9}, {3.855912522031412*^9, 
   3.855912522157153*^9}, {3.856083828965963*^9, 3.856083830532338*^9}, {
   3.8603766337548323`*^9, 3.860376633945304*^9}, {3.876981895578863*^9, 
   3.876981906281995*^9}, {3.876982373547111*^9, 3.876982374671156*^9}, {
   3.8769826195828447`*^9, 3.876982626855981*^9}, {3.87703621105529*^9, 
   3.877036215305921*^9}, {3.8770362560037622`*^9, 3.877036323216028*^9}, {
   3.877055460296286*^9, 3.8770554657732763`*^9}, {3.877055566570574*^9, 
   3.8770555670379677`*^9}, {3.8770556968455467`*^9, 3.877055700505698*^9}, {
   3.881214516573257*^9, 3.881214553829466*^9}, {3.881214596669283*^9, 
   3.881214684682786*^9}, {3.8812149293103647`*^9, 3.881214932953937*^9}, 
   3.88165190455663*^9, {3.881651940596526*^9, 3.881651944296399*^9}, {
   3.8816526434183598`*^9, 3.881652646391582*^9}, 3.881652967773328*^9, {
   3.8817300120193367`*^9, 3.881730013237975*^9}, {3.881730381074184*^9, 
   3.8817303830645647`*^9}, {3.881730494914953*^9, 3.881730496109775*^9}, {
   3.8817305978878403`*^9, 3.881730599388689*^9}, {3.881730643393938*^9, 
   3.881730644110693*^9}, {3.881730779433846*^9, 3.881730780702931*^9}, {
   3.881730918447208*^9, 3.881730919659218*^9}, {3.8842103888346233`*^9, 
   3.884210440794512*^9}, {3.884211601161422*^9, 3.884211601935669*^9}, {
   3.884392167023378*^9, 3.8843922096976547`*^9}, {3.884392540139711*^9, 
   3.8843925416962557`*^9}, {3.884403370831963*^9, 3.884403372060595*^9}, {
   3.884404114495083*^9, 3.884404115748169*^9}, {3.884404449557184*^9, 
   3.884404450973816*^9}, {3.88440456780939*^9, 3.884404568909408*^9}, {
   3.884404844348922*^9, 3.8844048455347347`*^9}, {3.8844055504145412`*^9, 
   3.884405551864994*^9}, {3.884405685224637*^9, 3.884405686482229*^9}, {
   3.8844058107860622`*^9, 3.8844058119434233`*^9}, {3.884406068482894*^9, 
   3.8844060697750473`*^9}, {3.884406467265251*^9, 3.884406468446217*^9}, {
   3.8844068307706633`*^9, 3.8844068320808573`*^9}, {3.884407846849098*^9, 
   3.884407848287491*^9}, {3.884408673555654*^9, 3.8844086747410793`*^9}, {
   3.884765507258594*^9, 3.884765534865128*^9}, {3.8847668239631767`*^9, 
   3.884766825449367*^9}, {3.884823223076294*^9, 3.8848232241588163`*^9}, {
   3.8850122428406067`*^9, 3.8850122544800158`*^9}, {3.885014532813892*^9, 
   3.885014533908082*^9}, {3.8853646219568644`*^9, 3.885364623303783*^9}, {
   3.885364709683135*^9, 3.88536471065042*^9}, {3.885364938583353*^9, 
   3.885364940301486*^9}, {3.885365341777729*^9, 3.885365342545933*^9}, {
   3.885365432115045*^9, 3.88536543316794*^9}, {3.8853655238117857`*^9, 
   3.88536552547402*^9}, {3.885429904055991*^9, 3.885429912021083*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"bf83628a-d951-423c-bbe8-0c24586b1e07"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*FractionBox[SuperscriptBox[\\(\[HBar]\\), \\(2\\)], \
\\(2  \[Mu]\\)]\\) = \"\>", "\[InvisibleSpace]", "13.823671823536552`"}],
  SequenceForm[
  "\!\(\*FractionBox[SuperscriptBox[\(\[HBar]\), \(2\)], \(2  \[Mu]\)]\) = ", 
   13.823671823536552`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.877055675340523*^9, 3.877055675447035*^9}, 
   3.877056177961293*^9, {3.881214846658543*^9, 3.881214870698656*^9}, {
   3.8812149423141127`*^9, 3.881214942426353*^9}, 3.881651279982519*^9, 
   3.881651613219248*^9, 3.881651906354641*^9, 3.8816519454151773`*^9, 
   3.8816526473215637`*^9, 3.881652968782064*^9, {3.881730105994976*^9, 
   3.8817301061064157`*^9}, {3.881730389992296*^9, 3.881730390116166*^9}, 
   3.8817304998872757`*^9, {3.881730686607732*^9, 3.881730686718339*^9}, 
   3.881730924504072*^9, {3.884210472650733*^9, 3.884210472742928*^9}, 
   3.88421054061773*^9, 3.884211612835244*^9, {3.8843922170260553`*^9, 
   3.884392217144064*^9}, 3.884392582870741*^9, {3.884404458299676*^9, 
   3.884404458413314*^9}, 3.884404572785242*^9, 3.884404848733047*^9, 
   3.8844055554462137`*^9, 3.884405689257699*^9, 3.884405814858053*^9, 
   3.884406072862152*^9, 3.884406471924618*^9, 3.884406835968952*^9, 
   3.884408685649785*^9, {3.8847655437873163`*^9, 3.8847655439241037`*^9}, {
   3.884766848741816*^9, 3.884766848865098*^9}, {3.8848232312915897`*^9, 
   3.884823231384369*^9}, {3.885012272246141*^9, 3.885012272424411*^9}, {
   3.885014545700667*^9, 3.885014545905702*^9}, {3.88536463852826*^9, 
   3.885364638650255*^9}, {3.885364720048114*^9, 3.885364720790847*^9}, {
   3.885364949257059*^9, 3.885364949424183*^9}, {3.885365353624016*^9, 
   3.8853653537828913`*^9}, {3.8853654425453033`*^9, 
   3.8853654432007008`*^9}, {3.885365538283258*^9, 3.8853655383716297`*^9}, 
   3.885429731837542*^9, 3.885429786275672*^9, 3.885429923931909*^9, 
   3.8854406631620073`*^9, 3.8854415394951468`*^9, {3.88578147938144*^9, 
   3.885781479641973*^9}, 3.885781723797435*^9, 3.8857818279997053`*^9, {
   3.885781882245954*^9, 3.88578188264424*^9}, 3.8857878181455317`*^9, 
   3.885789824587644*^9, {3.885789979572227*^9, 3.885789982219308*^9}, 
   3.8857900763609037`*^9, 3.88579014480184*^9, 3.885893317893812*^9, 
   3.8858934030399027`*^9, 3.885973645344606*^9, 3.886026047979539*^9, 
   3.8860441265126743`*^9, 3.8860451193712053`*^9, 3.886045273105721*^9, 
   3.8861291237148*^9, 3.886219164344091*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"8d72387e-f248-46a2-8972-96bf7b4691bd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RiccatiBesselJ", "[", 
    RowBox[{"z_", ",", "l_"}], "]"}], ":=", 
   RowBox[{"z", " ", 
    RowBox[{"SphericalBesselJ", "[", 
     RowBox[{"l", ",", "z"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RiccatiBesselN", "[", 
    RowBox[{"z_", ",", "l_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "l"}], " ", "z", " ", 
    RowBox[{"SphericalBesselY", "[", 
     RowBox[{"l", ",", "z"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.810732656566537*^9, 3.8107327240548153`*^9}, 
   3.85583038315562*^9, {3.855831353899652*^9, 3.855831357722906*^9}, {
   3.855831429434786*^9, 3.8558314329617767`*^9}, 3.85583330744737*^9, 
   3.855833470146158*^9, 3.8762677802384663`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"ca19f55d-800e-4f0d-8de0-39c420dba2ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Boundery", " ", "conditions", " ", "for", " ", "the", " ", 
    "wavefunction"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"alpha", "[", 
     RowBox[{"ra_", ",", "ka_", ",", "la_", ",", "ha_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"RiccatiBesselN", "[", 
      RowBox[{
       RowBox[{"ka", " ", 
        RowBox[{"(", 
         RowBox[{"ra", "+", "ha"}], ")"}]}], ",", "la"}], "]"}], "/", 
     RowBox[{"RiccatiBesselN", "[", 
      RowBox[{
       RowBox[{"ka", " ", "ra"}], ",", "la"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"beta", "[", 
     RowBox[{"rb_", ",", "kb_", ",", "lb_", ",", "hb_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"RiccatiBesselJ", "[", 
      RowBox[{
       RowBox[{"kb", " ", 
        RowBox[{"(", 
         RowBox[{"rb", "+", "hb"}], ")"}]}], ",", "lb"}], "]"}], "-", 
     RowBox[{
      RowBox[{"RiccatiBesselJ", "[", 
       RowBox[{
        RowBox[{"kb", " ", "rb"}], ",", "lb"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RiccatiBesselN", "[", 
         RowBox[{
          RowBox[{"kb", " ", 
           RowBox[{"(", 
            RowBox[{"rb", "+", "hb"}], ")"}]}], ",", "lb"}], "]"}], "/", 
        RowBox[{"RiccatiBesselN", "[", 
         RowBox[{
          RowBox[{"kb", " ", "rb"}], ",", "lb"}], "]"}]}], 
       ")"}]}]}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8098473071820097`*^9, 3.809847317226472*^9}, {
   3.809847573153267*^9, 3.809847665806992*^9}, {3.809847729396802*^9, 
   3.809847734585537*^9}, {3.8098479538264227`*^9, 3.809847966574915*^9}, {
   3.809848289852029*^9, 3.809848319080701*^9}, {3.8098483537623672`*^9, 
   3.809848397494103*^9}, {3.809848518776417*^9, 3.809848571830183*^9}, {
   3.8098492627933397`*^9, 3.80984931107325*^9}, {3.8098619500099773`*^9, 
   3.809861976307332*^9}, 3.809862724285603*^9, {3.80986300402169*^9, 
   3.8098630106232767`*^9}, {3.809863053584362*^9, 3.809863058036331*^9}, {
   3.809863288675404*^9, 3.809863291078908*^9}, 3.8098636108028603`*^9, {
   3.809863785277006*^9, 3.809863828179673*^9}, {3.8098725064058933`*^9, 
   3.809872521342906*^9}, {3.8107326398667297`*^9, 3.810732649847804*^9}, {
   3.8107330799145813`*^9, 3.810733111293742*^9}, {3.810733168121323*^9, 
   3.810733313522121*^9}, {3.8107341182906713`*^9, 3.810734203823607*^9}, {
   3.810734479009882*^9, 3.81073448941695*^9}, {3.834572206439838*^9, 
   3.834572252424436*^9}, {3.834631789889462*^9, 3.834631804593012*^9}, {
   3.834637822542837*^9, 3.834637824919507*^9}, {3.8520282182987714`*^9, 
   3.852028224117735*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"933eaeb0-c9b9-438c-96db-3602df43d9f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NormTT", "[", 
     RowBox[{"core_", "?", "ArrayQ"}], "]"}], ":=", 
    RowBox[{"Total", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"core", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"core", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{
          RowBox[{"core", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{
          RowBox[{"core", "[", 
           RowBox[{"[", "l", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Pi", "^", "4"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", "^", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"core", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                   RowBox[{
                    RowBox[{"core", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], " ", 
                
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"core", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                   RowBox[{
                    RowBox[{"core", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], 
               ")"}]}], ")"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"3", "/", "2"}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "core", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", "core", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "core", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", 
          RowBox[{"Length", "[", "core", "]"}]}], "}"}]}], "]"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VlocTF", "[", 
     RowBox[{
     "r_", ",", "lam_", ",", "Cc_", ",", "Dd_", ",", "Aa_", ",", "Bb_", ",", 
      "Gg_", ",", "Hh_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eta1", ",", "eta2", ",", "eta3", ",", "w1", ",", "w2", ",", "w3"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"eta2", "=", " ", 
        RowBox[{
         RowBox[{"3", "^", 
          RowBox[{"(", 
           RowBox[{"7", "/", "2"}], ")"}]}], 
         RowBox[{"Cc", " ", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Aa", "+", "Bb"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"Gg", "+", "Hh"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "lam", " ", "Bb"}], "+", 
                RowBox[{"Gg", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "lam"}], "+", 
                   RowBox[{"3", "Bb"}]}], ")"}]}], "+", 
                RowBox[{"2", " ", "lam", " ", "Hh"}], "+", 
                RowBox[{"3", "Bb", " ", "Hh"}], "+", 
                RowBox[{"Aa", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "lam"}], "+", 
                   RowBox[{"3", "Gg"}], "+", 
                   RowBox[{"3", "Hh"}]}], ")"}]}]}], ")"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"w2", "=", " ", 
        RowBox[{"3", 
         RowBox[{"(", 
          RowBox[{"Aa", "+", "Bb"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"Gg", "+", "Hh"}], ")"}], 
         RowBox[{"lam", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "lam", " ", "Bb"}], "+", 
            RowBox[{"Gg", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "lam"}], "+", 
               RowBox[{"3", "Bb"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "lam", " ", "Hh"}], "+", 
            RowBox[{"3", "Bb", " ", "Hh"}], "+", 
            RowBox[{"Aa", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "lam"}], "+", 
               RowBox[{"3", "Gg"}], "+", 
               RowBox[{"3", "Hh"}]}], ")"}]}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"eta3", " ", "=", 
        RowBox[{
         RowBox[{"3", "^", 
          RowBox[{"(", 
           RowBox[{"7", "/", "2"}], ")"}]}], 
         RowBox[{"Dd", " ", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Aa", "+", "Bb"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"lam", "+", "Gg", "+", "Hh"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"lam", " ", "Bb"}], "+", 
                RowBox[{"Gg", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", "lam"}], "+", 
                   RowBox[{"3", "Bb"}]}], ")"}]}], "+", 
                RowBox[{"4", " ", "lam", " ", "Hh"}], "+", 
                RowBox[{"3", "Bb", " ", "Hh"}], "+", 
                RowBox[{"Aa", 
                 RowBox[{"(", 
                  RowBox[{"lam", "+", 
                   RowBox[{"3", "Gg"}], "+", 
                   RowBox[{"3", "Hh"}]}], ")"}]}]}], ")"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"w3", " ", "=", " ", 
        RowBox[{"6", 
         RowBox[{"(", 
          RowBox[{"Aa", "+", "Bb"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"Gg", "+", "Hh"}], ")"}], 
         RowBox[{"lam", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"lam", " ", "Bb"}], "+", 
            RowBox[{"Gg", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", "lam"}], "+", 
               RowBox[{"3", "Bb"}]}], ")"}]}], "+", 
            RowBox[{"4", " ", "lam", " ", "Hh"}], "+", 
            RowBox[{"3", "Bb", " ", "Hh"}], "+", 
            RowBox[{"Aa", 
             RowBox[{"(", 
              RowBox[{"lam", "+", 
               RowBox[{"3", "Gg"}], "+", 
               RowBox[{"3", "Hh"}]}], ")"}]}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"eta1", " ", "=", 
        RowBox[{
         RowBox[{"3", "^", 
          RowBox[{"(", 
           RowBox[{"7", "/", "2"}], ")"}]}], 
         RowBox[{"Dd", " ", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Gg", "+", "Hh"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"lam", "^", "2"}], " ", "Bb"}], "+", 
                RowBox[{"2", "lam", " ", 
                 RowBox[{"Bb", "^", "2"}]}], "+", 
                RowBox[{"Gg", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"lam", "^", "2"}], "+", 
                   RowBox[{"8", " ", "lam", " ", "Bb"}], "+", 
                   RowBox[{"3", 
                    RowBox[{"Bb", "^", "2"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"lam", "^", "2"}], " ", "Hh"}], "+", 
                RowBox[{"8", " ", "lam", " ", "Bb", " ", "Hh"}], "+", 
                RowBox[{"3", 
                 RowBox[{"Bb", "^", "2"}], " ", "Hh"}], "+", 
                RowBox[{
                 RowBox[{"Aa", "^", "2"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "lam"}], "+", 
                   RowBox[{"3", "Gg"}], "+", 
                   RowBox[{"3", "Hh"}]}], ")"}]}], "+", 
                RowBox[{"Aa", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Gg", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"8", " ", "lam"}], "+", 
                    RowBox[{"6", "Bb"}]}], ")"}]}], "+", 
                   RowBox[{"4", "lam", 
                    RowBox[{"(", 
                    RowBox[{"lam", "+", 
                    RowBox[{"2", "Hh"}]}], ")"}]}], "+", 
                   RowBox[{"Bb", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", "lam"}], "+", 
                    RowBox[{"6", "Hh"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
             ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"w1", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", 
           RowBox[{"(", 
            RowBox[{"Aa", "+", "Bb"}], ")"}], "lam", 
           RowBox[{"(", 
            RowBox[{"Aa", "+", "Bb", "+", 
             RowBox[{"2", "lam"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"Gg", "+", "Hh"}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             RowBox[{"lam", "^", "2"}], " ", "Bb"}], "+", 
            RowBox[{"2", "lam", " ", 
             RowBox[{"Bb", "^", "2"}]}], "+", 
            RowBox[{"Gg", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"lam", "^", "2"}], "+", 
               RowBox[{"8", " ", "lam", " ", "Bb"}], "+", 
               RowBox[{"3", 
                RowBox[{"Bb", "^", "2"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"lam", "^", "2"}], " ", "Hh"}], "+", 
            RowBox[{"8", " ", "lam", " ", "Bb", " ", "Hh"}], "+", 
            RowBox[{"3", 
             RowBox[{"Bb", "^", "2"}], " ", "Hh"}], "+", 
            RowBox[{
             RowBox[{"Aa", "^", "2"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "lam"}], "+", 
               RowBox[{"3", "Gg"}], "+", 
               RowBox[{"3", "Hh"}]}], ")"}]}], "+", 
            RowBox[{"Aa", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Gg", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"8", " ", "lam"}], "+", 
                  RowBox[{"6", "Bb"}]}], ")"}]}], "+", 
               RowBox[{"4", "lam", 
                RowBox[{"(", 
                 RowBox[{"lam", "+", 
                  RowBox[{"2", "Hh"}]}], ")"}]}], "+", 
               RowBox[{"Bb", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", "lam"}], "+", 
                  RowBox[{"6", "Hh"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"eta2", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "w2"}], " ", 
           SuperscriptBox["r", "2"]}], "]"}]}], "+", 
        RowBox[{"eta3", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "w3"}], " ", 
           SuperscriptBox["r", "2"]}], "]"}]}], "+", 
        RowBox[{"eta1", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "w1"}], " ", 
           RowBox[{"r", "^", "2"}]}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WnolocTF", "[", 
    RowBox[{
    "r_", ",", "rp_", ",", "Ee_", ",", "lam_", ",", "Cc_", ",", "Dd_", ",", 
     "Aa_", ",", "Bb_", ",", "Gg_", ",", "Hh_", ",", "Ll_", ",", 
     "TwoMyOverHBsq_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "zeta1", ",", "zeta2", ",", "zeta3", ",", "a1", ",", "b1", ",", "c1", 
       ",", "a2", ",", "b2", ",", "c2", ",", "a3", ",", "b3", ",", "c3"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"zeta1", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a1", "=", 
       RowBox[{
        RowBox[{"4", "Bb", " ", "Hh"}], " ", "+", " ", 
        RowBox[{"Gg", " ", "Bb"}], "+", 
        RowBox[{"Gg", " ", "Hh"}], "+", 
        RowBox[{"Aa", " ", "Bb"}], " ", "+", 
        RowBox[{"Aa", " ", "Hh"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b1", "=", 
       RowBox[{
        RowBox[{"2", "Gg", " ", "Bb"}], " ", "-", 
        RowBox[{"Gg", " ", "Hh"}], " ", "-", 
        RowBox[{"2", " ", "Aa", " ", "Bb"}], " ", "+", 
        RowBox[{"2", " ", "Aa", " ", "Hh"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{
        RowBox[{"Gg", " ", "Bb"}], " ", "+", 
        RowBox[{"Hh", " ", "Gg"}], "+", 
        RowBox[{"4", "Aa", " ", "Gg"}], " ", "+", 
        RowBox[{"Aa", " ", "Bb"}], " ", "+", 
        RowBox[{"Aa", " ", "Hh"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"zeta2", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeta3", "=", "0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{
        RowBox[{"4", "Hh", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Bb"}], ")"}]}], "+", 
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], " ", "+", "Bb", "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Bb", "+", "Hh"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       RowBox[{
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "lam"}], "+", 
           RowBox[{"2", "Bb"}], "-", 
           RowBox[{"2", " ", "Hh"}]}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "lam"}], "-", 
           RowBox[{"2", "Bb"}], "+", 
           RowBox[{"2", "Gg"}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Bb", "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", 
           RowBox[{"4", "Gg"}], "+", "Bb", "+", "Hh"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"a3", "=", " ", 
       RowBox[{
        RowBox[{"4", "Bb", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{"Aa", "+", 
           RowBox[{"2", "lam"}], "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Bb", "+", "Hh"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b3", "=", 
       RowBox[{
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Bb"}], "-", 
           RowBox[{"4", "lam"}], "-", 
           RowBox[{"2", "Hh"}]}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "lam"}], "+", 
           RowBox[{"2", "Hh"}], "-", 
           RowBox[{"2", "Bb"}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c3", "=", 
       RowBox[{
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{"Bb", "+", 
           RowBox[{"2", "lam"}], "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "Gg"}], "+", 
           RowBox[{"2", "lam"}], "+", "Bb", "+", "Hh"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"4", " ", "Pi", " ", "r", " ", "rp"}], ")"}]}], " ", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zeta1", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "a1"}], " ", 
             RowBox[{"r", "^", "2"}]}], "-", 
            RowBox[{"c1", " ", 
             RowBox[{"rp", "^", "2"}]}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   RowBox[{"a1", "^", "2"}], " ", 
                   RowBox[{"r", "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"b1", "^", "2"}], " ", 
                   RowBox[{"rp", "^", "2"}]}], "-", 
                  RowBox[{"2", " ", "a1"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Ll", "+", "1"}], ")"}], " ", 
                RowBox[{"Ll", "/", 
                 RowBox[{"r", "^", "2"}]}]}], "-", 
               RowBox[{"TwoMyOverHBsq", " ", "Ee"}]}], ")"}], " ", 
             RowBox[{"I", "^", "Ll"}], "  ", 
             RowBox[{"SphericalBesselJ", "[", 
              RowBox[{"Ll", ",", 
               RowBox[{"I", " ", "b1", " ", "r", " ", "rp"}]}], "]"}]}], 
            "\[IndentingNewLine]", "-", 
            RowBox[{"4", " ", "a1", " ", "b1", " ", "r", " ", "rp", " ", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Ll", "^", "2"}], "+", 
                  RowBox[{"l", "^", "2"}]}], ")"}], " ", 
                RowBox[{
                 RowBox[{"I", "^", 
                  RowBox[{"(", 
                   RowBox[{"l", "+", "1"}], ")"}]}], "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}], " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"2", "/", 
                   RowBox[{"Sqrt", "[", "5", "]"}]}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Ll", "+", "l"}], ")"}], "/", "2"}], ")"}]}], " ", 
                RowBox[{"SphericalBesselJ", "[", 
                 RowBox[{
                  RowBox[{"1", "+", "l"}], ",", 
                  RowBox[{"I", " ", "b1", " ", "r", " ", "rp"}]}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"-", "Ll"}], ",", "Ll"}], "}"}]}], "]"}]}]}], 
           ")"}]}], "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"I", "^", "Ll"}], " ", "zeta2", " ", 
          RowBox[{"SphericalBesselJ", "[", 
           RowBox[{"Ll", ",", 
            RowBox[{"I", " ", "b2", " ", "r", " ", "rp"}]}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "a2"}], " ", 
             RowBox[{"r", "^", "2"}]}], "-", 
            RowBox[{"c2", " ", 
             RowBox[{"rp", "^", "2"}]}]}], "]"}]}], "\[IndentingNewLine]", 
         "+", 
         RowBox[{
          RowBox[{"I", "^", "Ll"}], " ", "zeta3", " ", 
          RowBox[{"SphericalBesselJ", "[", 
           RowBox[{"Ll", ",", 
            RowBox[{"I", " ", "b3", " ", "r", " ", "rp"}]}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "a3"}], " ", 
             RowBox[{"r", "^", "2"}]}], "-", 
            RowBox[{"c3", " ", 
             RowBox[{"rp", "^", "2"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
        ")"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.801892467318017*^9, 3.8018925002061853`*^9}, {
   3.801893158798995*^9, 3.801893161694428*^9}, {3.801894097701667*^9, 
   3.801894097941848*^9}, {3.801894438748991*^9, 3.801894440131065*^9}, {
   3.801894722165625*^9, 3.801894749067191*^9}, {3.801895847004627*^9, 
   3.801895848969494*^9}, {3.801909683960307*^9, 3.801909717316461*^9}, {
   3.801910042629107*^9, 3.801910053417841*^9}, {3.8019108398225727`*^9, 
   3.8019108437299356`*^9}, {3.801915129888688*^9, 3.801915131749421*^9}, {
   3.801977843420405*^9, 3.801977845517983*^9}, {3.801978719956852*^9, 
   3.8019787236474524`*^9}, {3.801997341404051*^9, 3.801997361000883*^9}, {
   3.80199768661966*^9, 3.801997687249464*^9}, 3.802063526510613*^9, {
   3.8020653312198553`*^9, 3.802065335198555*^9}, 3.802176010492588*^9, 
   3.8030157683918877`*^9, {3.8030167660294313`*^9, 3.8030167862260303`*^9}, 
   3.8030190968311043`*^9, 3.803019199213236*^9, {3.8030192485448503`*^9, 
   3.803019253151905*^9}, {3.803019290668828*^9, 3.803019315436187*^9}, {
   3.8030195792365026`*^9, 3.8030195794672422`*^9}, {3.803042274092853*^9, 
   3.803042274517417*^9}, {3.803200058968026*^9, 3.803200060653748*^9}, 
   3.8032137177922583`*^9, {3.80689780896726*^9, 3.8068978545299416`*^9}, {
   3.8069188037497816`*^9, 3.806918803903943*^9}, {3.806992401910433*^9, 
   3.80699240233816*^9}, {3.808023938621386*^9, 3.808023953680669*^9}, 
   3.811065068939959*^9, {3.811237374127685*^9, 3.8112373747730618`*^9}, {
   3.828961945141528*^9, 3.828961963411664*^9}, {3.828962126381213*^9, 
   3.828962146712731*^9}, {3.829025153262753*^9, 3.829025219513521*^9}, 
   3.8290262401462927`*^9, {3.829026422763246*^9, 3.829026434624408*^9}, {
   3.829026478331995*^9, 3.829026508690338*^9}, {3.829026551130254*^9, 
   3.829026582805099*^9}, {3.8290266195072117`*^9, 3.829026753812564*^9}, {
   3.829026932733026*^9, 3.8290269356298*^9}, {3.829027276468822*^9, 
   3.829027301769758*^9}, {3.8290276076949778`*^9, 3.829027675718071*^9}, {
   3.82902771324024*^9, 3.829027781531455*^9}, {3.829027837534582*^9, 
   3.829027872075479*^9}, {3.829027965053953*^9, 3.82902804579659*^9}, {
   3.829028106940831*^9, 3.829028216072899*^9}, {3.8290282817157097`*^9, 
   3.829028290054338*^9}, {3.8290283216320763`*^9, 3.829028332224819*^9}, {
   3.8290283689329433`*^9, 3.829028381865678*^9}, {3.829028424246985*^9, 
   3.829028454203835*^9}, {3.829028537755336*^9, 3.8290287434078903`*^9}, {
   3.829028786710608*^9, 3.8290288042494287`*^9}, {3.8290288502086983`*^9, 
   3.8290290565537157`*^9}, {3.829029383773424*^9, 3.829029392995202*^9}, {
   3.8290294311851673`*^9, 3.829029433151523*^9}, {3.8290295302241096`*^9, 
   3.8290295377740793`*^9}, {3.82902956887919*^9, 3.829029607565781*^9}, 
   3.829029952866518*^9, 3.829030052058166*^9, {3.829030130145849*^9, 
   3.829030137802986*^9}, {3.8290302387620153`*^9, 3.8290302392106657`*^9}, {
   3.8290304070214043`*^9, 3.829030421098668*^9}, {3.829030625985882*^9, 
   3.829030677109067*^9}, {3.829031085218238*^9, 3.829031096249442*^9}, {
   3.8290317014340277`*^9, 3.829031702837329*^9}, {3.829032082028879*^9, 
   3.8290320906337748`*^9}, {3.829032163044195*^9, 3.829032199377716*^9}, {
   3.829032264383943*^9, 3.829032266924317*^9}, {3.829032560510306*^9, 
   3.829032560686266*^9}, 3.829032724958557*^9, {3.829034092875155*^9, 
   3.829034093043749*^9}, {3.829040423747259*^9, 3.829040453943123*^9}, {
   3.829040796555052*^9, 3.829040796745625*^9}, {3.8290408973760853`*^9, 
   3.8290408975564747`*^9}, {3.829042146269074*^9, 3.8290421475839357`*^9}, {
   3.829045037037434*^9, 3.8290450381128283`*^9}, {3.829045075866453*^9, 
   3.829045077508686*^9}, {3.829045638524869*^9, 3.829045660299512*^9}, {
   3.8290456948047123`*^9, 3.8290457298640947`*^9}, {3.829045774534081*^9, 
   3.8290457747370863`*^9}, 3.8290458666528463`*^9, {3.829045896727647*^9, 
   3.829045903624382*^9}, 3.8290470256245604`*^9, {3.829047323380723*^9, 
   3.82904734836267*^9}, 3.829047447505147*^9, {3.82904897307802*^9, 
   3.829048982500882*^9}, 3.8290504817824507`*^9, {3.8290507967356977`*^9, 
   3.8290507969900007`*^9}, {3.829215663293272*^9, 3.829215669347509*^9}, {
   3.829215747201853*^9, 3.829215793098819*^9}, {3.8292158310650187`*^9, 
   3.829215885110899*^9}, {3.829215917702985*^9, 3.829215928924259*^9}, {
   3.8292160581307487`*^9, 3.829216069085018*^9}, {3.829217042690834*^9, 
   3.829217079393022*^9}, {3.829217256655546*^9, 3.829217265766756*^9}, {
   3.829217605673552*^9, 3.829217606178463*^9}, {3.829217982426296*^9, 
   3.829217987206685*^9}, {3.829218433942974*^9, 3.8292184357968683`*^9}, {
   3.829218517674664*^9, 3.829218524542429*^9}, 3.829218652414425*^9, {
   3.829218742769401*^9, 3.829218765815611*^9}, 3.829219027690482*^9, {
   3.8292190789894257`*^9, 3.829219079134283*^9}, {3.829219205637911*^9, 
   3.829219205871358*^9}, {3.8292196323464527`*^9, 3.829219653136817*^9}, {
   3.82921983465938*^9, 3.829219836320269*^9}, {3.829219969792766*^9, 
   3.829219972109107*^9}, {3.829220080493692*^9, 3.8292200808415947`*^9}, {
   3.829220114289222*^9, 3.829220115138957*^9}, {3.829220524393718*^9, 
   3.829220533178056*^9}, {3.829220905398019*^9, 3.829220925389814*^9}, 
   3.829221034086018*^9, {3.829221833782493*^9, 3.8292218339727*^9}, {
   3.8292219936050873`*^9, 3.8292219958804483`*^9}, {3.829222478002133*^9, 
   3.829222480265678*^9}, {3.829222768485291*^9, 3.829222775245501*^9}, 
   3.829283166704246*^9, {3.829283302005631*^9, 3.8292833025214643`*^9}, {
   3.8292833912991657`*^9, 3.829283391767819*^9}, {3.829284082955415*^9, 
   3.8292840858297*^9}, {3.829284264802721*^9, 3.829284264941513*^9}, {
   3.82928429870163*^9, 3.8292842988806562`*^9}, 3.829284618747243*^9, {
   3.829308408533846*^9, 3.829308429490027*^9}, {3.829390677431068*^9, 
   3.829390681573649*^9}, {3.829392761451092*^9, 3.82939276563743*^9}, {
   3.829394333911601*^9, 3.829394334071722*^9}, {3.829629969334939*^9, 
   3.82962997102838*^9}, 3.8296314679480667`*^9, {3.829631541051281*^9, 
   3.829631553638998*^9}, 3.8296324336993427`*^9, 3.829632818513318*^9, {
   3.829635009310836*^9, 3.829635027953731*^9}, {3.829635572253907*^9, 
   3.829635572723858*^9}, {3.829645815718639*^9, 3.829645815867497*^9}, {
   3.8296515366920853`*^9, 3.829651537105164*^9}, 3.829653174038562*^9, {
   3.829654248354002*^9, 3.829654249664966*^9}, {3.830081454085843*^9, 
   3.830081454711007*^9}, {3.8300822093471727`*^9, 3.830082209641708*^9}, {
   3.8300823479134483`*^9, 3.830082348727803*^9}, 3.831101067972599*^9, {
   3.831101161444682*^9, 3.831101164581204*^9}, {3.831898878271998*^9, 
   3.831898939209*^9}, {3.831898970911107*^9, 3.831899124930388*^9}, {
   3.831899163692109*^9, 3.831899166189124*^9}, {3.831899250587871*^9, 
   3.831899383771085*^9}, {3.831899447908812*^9, 3.8318995323924847`*^9}, {
   3.831899600768495*^9, 3.831899619714341*^9}, {3.831899666684527*^9, 
   3.831899938935375*^9}, {3.831900055298876*^9, 3.831900066462925*^9}, {
   3.831900417983684*^9, 3.831900474329039*^9}, {3.831900716904687*^9, 
   3.831900726274486*^9}, {3.831907855515967*^9, 3.831907856215623*^9}, {
   3.8319877033002357`*^9, 3.8319877072122593`*^9}, 3.831987945620595*^9, {
   3.831988297628137*^9, 3.831988322626186*^9}, {3.831988518631733*^9, 
   3.8319885208017187`*^9}, {3.831989198596623*^9, 3.8319892360941057`*^9}, {
   3.831989295685381*^9, 3.831989347275859*^9}, {3.8319894129637337`*^9, 
   3.831989419659133*^9}, {3.831991270736796*^9, 3.831991282177586*^9}, {
   3.8415677440150957`*^9, 3.841567811526626*^9}, {3.841568077865671*^9, 
   3.8415681086301603`*^9}, {3.841568194254199*^9, 3.841568210549117*^9}, {
   3.841568292525248*^9, 3.841568303574844*^9}, {3.841568358721343*^9, 
   3.841568363988818*^9}, {3.841568487478312*^9, 3.841568490225037*^9}, {
   3.841568548337976*^9, 3.841568570783893*^9}, {3.841568612043398*^9, 
   3.8415687391213427`*^9}, {3.841568847345256*^9, 3.8415688489736357`*^9}, {
   3.84156911957481*^9, 3.841569132710617*^9}, {3.841569265362671*^9, 
   3.84156926579792*^9}, {3.841569297176078*^9, 3.841569373099285*^9}, {
   3.841569474702115*^9, 3.84156947777103*^9}, {3.84156951100327*^9, 
   3.841569511781008*^9}, {3.841569543880797*^9, 3.841569544807575*^9}, {
   3.841569740839243*^9, 3.841569969056686*^9}, {3.841570003215819*^9, 
   3.841570052061222*^9}, {3.841570102956746*^9, 3.841570113926784*^9}, {
   3.841570185140707*^9, 3.841570229399667*^9}, {3.841570291745309*^9, 
   3.8415703628323298`*^9}, {3.8415704235479*^9, 3.841570467660336*^9}, {
   3.841570535498198*^9, 3.841570676177003*^9}, {3.84157370151686*^9, 
   3.8415737021694508`*^9}, {3.841648758858382*^9, 3.841648846270207*^9}, {
   3.841824858862773*^9, 3.8418248694761467`*^9}, {3.841824944942635*^9, 
   3.841824999728359*^9}, {3.841825033008472*^9, 3.841825139597019*^9}, {
   3.841825210672501*^9, 3.8418252146274757`*^9}, {3.841825321513179*^9, 
   3.841825398900426*^9}, {3.8418254401634207`*^9, 3.841825464636052*^9}, {
   3.8418255018110733`*^9, 3.841825517987542*^9}, {3.841825577357398*^9, 
   3.841825603622463*^9}, {3.8418256787516117`*^9, 3.8418256788312807`*^9}, {
   3.841825714034934*^9, 3.841825714123699*^9}, {3.841825820660972*^9, 
   3.841825837467999*^9}, {3.841825883587535*^9, 3.84182591417071*^9}, {
   3.8418259497220707`*^9, 3.841825977438492*^9}, {3.8418274071192837`*^9, 
   3.841827431503604*^9}, 3.841827527727193*^9, {3.841828450589056*^9, 
   3.841828453984212*^9}, 3.8429528916294537`*^9, 3.842952929745389*^9, {
   3.843214022625164*^9, 3.843214028896063*^9}, {3.855139257570621*^9, 
   3.8551392578559933`*^9}, 3.8551408886753607`*^9, {3.855309472317254*^9, 
   3.855309537911681*^9}, {3.855310175618671*^9, 3.855310197495757*^9}, {
   3.855311406567627*^9, 3.8553114483109083`*^9}, {3.855738814328362*^9, 
   3.855738814679195*^9}, 3.855829375897744*^9, {3.855829487259807*^9, 
   3.855829489040373*^9}, {3.8558298253361607`*^9, 3.855829829792454*^9}, {
   3.856411957105308*^9, 3.856411961225603*^9}, {3.856431327721566*^9, 
   3.856431333943243*^9}, {3.875082790793445*^9, 3.8750828959030123`*^9}, {
   3.875082951070619*^9, 3.875083003128962*^9}, {3.8750830331522417`*^9, 
   3.875083061704331*^9}, {3.875083113036057*^9, 3.8750832959996843`*^9}, {
   3.875083329338893*^9, 3.8750833866423473`*^9}, 3.875683682325513*^9, {
   3.8756944955132217`*^9, 3.875694539576473*^9}, {3.876105236998472*^9, 
   3.876105302643255*^9}, {3.87610855029954*^9, 3.876108558613761*^9}, {
   3.876108610027898*^9, 3.876108668786162*^9}, {3.876108708009933*^9, 
   3.876108720168108*^9}, {3.8761091203686523`*^9, 3.876109164889174*^9}, {
   3.8761092463208447`*^9, 3.876109297901437*^9}, {3.876109418146208*^9, 
   3.876109541936162*^9}, {3.876109602128745*^9, 3.876109640208702*^9}, {
   3.876109695522987*^9, 3.876109857756661*^9}, {3.8761098961294203`*^9, 
   3.87610994763923*^9}, {3.8761162111733313`*^9, 3.876116212235091*^9}, {
   3.876266746823936*^9, 3.876266769174567*^9}, {3.876266839165031*^9, 
   3.8762670813160458`*^9}, {3.876267119338045*^9, 3.876267302120058*^9}, {
   3.87626738246589*^9, 3.876267430615614*^9}, 3.876267849549697*^9, {
   3.8762680036429443`*^9, 3.8762680073065443`*^9}, {3.876272949164504*^9, 
   3.876272950461103*^9}, {3.876273098167901*^9, 3.876273119682022*^9}, {
   3.876811059243297*^9, 3.876811094794902*^9}, {3.876980210264368*^9, 
   3.876980210867654*^9}, {3.877055219267973*^9, 3.877055219538458*^9}, {
   3.87705528078961*^9, 3.8770552810132647`*^9}, {3.8770553821676702`*^9, 
   3.8770553972120523`*^9}, {3.877056169390284*^9, 3.877056212849986*^9}, {
   3.881214709403595*^9, 3.881214725940761*^9}, {3.8842104478500843`*^9, 
   3.8842104613303137`*^9}, 3.884389093515679*^9, 3.884389126168221*^9, {
   3.8843891849150333`*^9, 3.884389187020005*^9}, {3.884389285644466*^9, 
   3.884389358150239*^9}, {3.884389389954734*^9, 3.884389406255611*^9}, 
   3.886220300486787*^9, {3.886220378985017*^9, 3.88622041621382*^9}, {
   3.886220578110416*^9, 3.8862206544662848`*^9}, {3.886221121945621*^9, 
   3.886221138398641*^9}, {3.886221203032398*^9, 3.886221256270247*^9}, {
   3.8862212899486637`*^9, 3.886221377169681*^9}, {3.886221466522778*^9, 
   3.886221485769885*^9}, {3.886221520521635*^9, 3.886221532675531*^9}, {
   3.886221912053527*^9, 3.886221916881071*^9}, {3.8862219493479347`*^9, 
   3.886221989343895*^9}, {3.886222109297024*^9, 3.8862221183975573`*^9}, {
   3.886222657235841*^9, 3.886222657732451*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"1d34d1fa-fb94-4a35-9d0c-11b452365a0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SolveSecular", "[", 
    RowBox[{
     RowBox[{"Rdis_", "?", "NumberQ"}], ",", 
     RowBox[{"Npoints_", "?", "NumberQ"}], ",", 
     RowBox[{"momentum_", "?", "NumberQ"}], ",", 
     RowBox[{"Lin_", "?", "NumberQ"}], ",", 
     RowBox[{"lam_", "?", "NumberQ"}], ",", 
     RowBox[{"c0_", "?", "NumberQ"}], ",", 
     RowBox[{"d0_", "?", "NumberQ"}], ",", 
     RowBox[{"a00_", "?", "ArrayQ"}], ",", 
     RowBox[{"TwoMyOverHBsq_", "?", "NumberQ"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "hDif", ",", "Dmat", ",", "Kmat", ",", "Wmat", ",", "bcol", ",", "Amat",
        ",", "ucol", ",", "wf", ",", "tanDelta", ",", "usol", ",", 
       "energyMeV", ",", "nff", ",", "cij"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hDif", "=", 
       RowBox[{"Rdis", "/", "Npoints"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"energyMeV", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"momentum", "^", "2"}], ")"}], "/", "TwoMyOverHBsq"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Kmat", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Band", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            RowBox[{"Band", "[", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}], ",", 
           RowBox[{
            RowBox[{"Band", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Npoints", ",", "Npoints"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"normsqu", "=", 
       RowBox[{"1.", "/", 
        RowBox[{"NormTT", "[", "a00", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Wmat", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Npoints", ",", "Npoints"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"prefac", "=", 
       RowBox[{"(*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", " ", "\[Pi]"}], ")"}], "1.5"], "*)"}], "1"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Wmatt", "=", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"cij", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"a00", "[", 
              RowBox[{"[", "ii", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", 
            RowBox[{
             RowBox[{"a00", "[", 
              RowBox[{"[", "jj", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", 
            RowBox[{
             RowBox[{"a00", "[", 
              RowBox[{"[", "kk", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "  ", 
            RowBox[{
             RowBox[{"a00", "[", 
              RowBox[{"[", "ll", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", " ", "normsqu"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "cij"}], " ", 
              SuperscriptBox["hDif", "2"], " ", "TwoMyOverHBsq", " ", 
              RowBox[{"VlocTF", "[", 
               RowBox[{
                RowBox[{"i", " ", "hDif"}], ",", "lam", ",", "c0", ",", "d0", 
                ",", 
                RowBox[{
                 RowBox[{"a00", "[", 
                  RowBox[{"[", "ii", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"a00", "[", 
                  RowBox[{"[", "jj", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"a00", "[", 
                  RowBox[{"[", "kk", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"a00", "[", 
                  RowBox[{"[", "ll", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "Npoints"}], "}"}]}], "]"}], 
           "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", 
           RowBox[{"Length", "[", "a00", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"jj", ",", "1", ",", 
           RowBox[{"Length", "[", "a00", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"kk", ",", "1", ",", 
           RowBox[{"Length", "[", "a00", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ll", ",", "1", ",", 
           RowBox[{"Length", "[", "a00", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Wmat", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Wmatt", ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dmat", "=", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["hDif", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["momentum", "2"], "-", 
             FractionBox[
              RowBox[{"Lin", " ", 
               RowBox[{"(", 
                RowBox[{"Lin", "+", "1"}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"i", " ", "hDif"}], ")"}], "2"]]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "Npoints"}], "}"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Chop", "[", "Wmat", "]"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "4"}], ",", 
             RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], "//", "MatrixForm"}], 
         "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Amat", "=", 
       RowBox[{"Kmat", "+", "Dmat", "+", "Wmat"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bcol", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", "Npoints"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ucol", "=", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\"\<u\>\"", "##"], "&"}], ",", 
         RowBox[{"{", "Npoints", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bcol", "\[LeftDoubleBracket]", 
        RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", 
       RowBox[{"-", " ", 
        RowBox[{"beta", "[", 
         RowBox[{"Rdis", ",", "momentum", ",", "Lin", ",", "hDif"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Amat", "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Amat", "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "+", 
        RowBox[{"alpha", "[", 
         RowBox[{"Rdis", ",", "momentum", ",", "Lin", ",", "hDif"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"usol", "=", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"Amat", ",", "bcol"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tanDelta", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"RiccatiBesselJ", "[", 
           RowBox[{
            RowBox[{"momentum", "  ", "Rdis"}], ",", "Lin"}], "]"}], 
          RowBox[{"RiccatiBesselN", "[", 
           RowBox[{
            RowBox[{"momentum", " ", "Rdis"}], ",", "Lin"}], "]"}]], ")"}], 
        "-", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"usol", "\[LeftDoubleBracket]", 
           RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
          RowBox[{"RiccatiBesselN", "[", 
           RowBox[{
            RowBox[{"momentum", " ", "Rdis"}], ",", "Lin"}], "]"}]], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(N\), \(terms\)]\) = \>\"", ",", 
          RowBox[{
           RowBox[{"Length", "[", "a00", "]"}], "^", "4"}], ",", 
          "\"\< calculated for \!\(\*SubscriptBox[\(E\), \(rel\)]\) = \>\"", 
          ",", "energyMeV", ",", "\"\< MeV\>\""}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "tanDelta"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.799844193663694*^9, 3.799844230508864*^9}, {
   3.799844441240127*^9, 3.7998444608270397`*^9}, {3.799844511909587*^9, 
   3.799844516255533*^9}, {3.7998445959948177`*^9, 3.799844729887206*^9}, {
   3.79984480394598*^9, 3.7998448428953257`*^9}, {3.799844927142901*^9, 
   3.79984494453616*^9}, {3.799844982928282*^9, 3.7998451208467817`*^9}, {
   3.799845205204481*^9, 3.799845216833956*^9}, {3.7998452945936327`*^9, 
   3.799845352232326*^9}, {3.799845405290604*^9, 3.7998455540676823`*^9}, {
   3.79984563702781*^9, 3.799845748421855*^9}, {3.799845789111649*^9, 
   3.799845876284544*^9}, {3.799845946231172*^9, 3.799845961811461*^9}, {
   3.7998466664306307`*^9, 3.799846704347189*^9}, {3.799846820691683*^9, 
   3.799847031730378*^9}, {3.799847077882975*^9, 3.7998470988892803`*^9}, 
   3.7998473180575943`*^9, {3.799847608308605*^9, 3.799847627955985*^9}, {
   3.799847693131727*^9, 3.799847698714774*^9}, {3.799847783933577*^9, 
   3.7998478684696293`*^9}, {3.799847908280759*^9, 3.799847946499229*^9}, {
   3.799847977637109*^9, 3.799848002538436*^9}, {3.7998481584128437`*^9, 
   3.799848222982203*^9}, {3.799848272978325*^9, 3.799848275511722*^9}, {
   3.799848330997065*^9, 3.7998483375548487`*^9}, {3.799848589571003*^9, 
   3.799848640343828*^9}, {3.79984867482891*^9, 3.7998486753069477`*^9}, {
   3.799848766223956*^9, 3.799848885523119*^9}, 3.799848928103075*^9, {
   3.799848962416375*^9, 3.799849004175256*^9}, {3.799849085452805*^9, 
   3.7998490856999073`*^9}, {3.799849122505766*^9, 3.799849151473476*^9}, {
   3.7998492512811213`*^9, 3.799849251559629*^9}, 3.799849282162941*^9, {
   3.7998502689626102`*^9, 3.799850381190243*^9}, {3.799850431973194*^9, 
   3.7998505461945353`*^9}, {3.799850598974743*^9, 3.79985063021171*^9}, {
   3.799924676005452*^9, 3.799924778131298*^9}, {3.7999248750411263`*^9, 
   3.7999249376841297`*^9}, {3.799925000955814*^9, 3.799925095123474*^9}, {
   3.799925193860635*^9, 3.799925232862447*^9}, {3.79992527527987*^9, 
   3.799925344780155*^9}, {3.799925429765581*^9, 3.7999254411803637`*^9}, {
   3.799925480678334*^9, 3.7999255920619297`*^9}, {3.799925688109899*^9, 
   3.799925703407652*^9}, {3.799925786678752*^9, 3.799925786919655*^9}, {
   3.799926504868712*^9, 3.799926511403908*^9}, {3.79992654578473*^9, 
   3.799926655151861*^9}, {3.799926725006506*^9, 3.799926800200645*^9}, {
   3.7999270766666117`*^9, 3.7999270871158857`*^9}, {3.799927171210371*^9, 
   3.799927342307374*^9}, {3.799927374445335*^9, 3.799927374726967*^9}, {
   3.799927416477796*^9, 3.799927417804901*^9}, {3.799927451007119*^9, 
   3.799927479502017*^9}, {3.799927537494401*^9, 3.7999275399997*^9}, {
   3.7999283968882637`*^9, 3.799928421624054*^9}, {3.799928465136036*^9, 
   3.799928467530869*^9}, {3.7999285079618*^9, 3.799928544496697*^9}, {
   3.799928590135507*^9, 3.799928614297763*^9}, {3.7999286657554007`*^9, 
   3.799928692067577*^9}, {3.799929002487925*^9, 3.799929020072877*^9}, {
   3.799929347054367*^9, 3.799929472130046*^9}, {3.799929525262292*^9, 
   3.79992954340695*^9}, {3.799929577383519*^9, 3.7999296114145517`*^9}, {
   3.799934434749699*^9, 3.799934446826674*^9}, {3.7999344845313883`*^9, 
   3.799934691808429*^9}, {3.7999349123169613`*^9, 3.799934934315812*^9}, {
   3.799935027930644*^9, 3.799935028568728*^9}, {3.7999350722886763`*^9, 
   3.7999351056342583`*^9}, {3.799935152143138*^9, 3.799935271998769*^9}, {
   3.799935313988963*^9, 3.799935331280711*^9}, {3.79993537078939*^9, 
   3.799935372597519*^9}, {3.7999354276431847`*^9, 3.799935629198086*^9}, {
   3.799935772113929*^9, 3.799935801284212*^9}, {3.799935846592125*^9, 
   3.799935895726575*^9}, {3.799936313684577*^9, 3.799936357155007*^9}, {
   3.79993646021567*^9, 3.7999364706924953`*^9}, {3.799936548795611*^9, 
   3.7999366062701187`*^9}, {3.7999884664465437`*^9, 3.799988472228293*^9}, {
   3.799988514989059*^9, 3.799988551048834*^9}, {3.799988595134609*^9, 
   3.799988634692646*^9}, {3.799988747647192*^9, 3.799988748843103*^9}, {
   3.799988936167357*^9, 3.79998894496148*^9}, {3.799989015406828*^9, 
   3.799989038766877*^9}, {3.799989070366557*^9, 3.799989110943717*^9}, {
   3.7999891713129263`*^9, 3.7999891883863773`*^9}, {3.799989286160109*^9, 
   3.799989292718109*^9}, 3.79998932632767*^9, {3.799989398787711*^9, 
   3.799989546688485*^9}, {3.7999904733493557`*^9, 3.799990481804119*^9}, {
   3.799990533807106*^9, 3.799990578103994*^9}, {3.799990616703088*^9, 
   3.7999906965926456`*^9}, {3.799990727002733*^9, 3.7999907277214746`*^9}, {
   3.799990836717557*^9, 3.799990837249289*^9}, {3.799991153205656*^9, 
   3.799991235994212*^9}, {3.799991277917851*^9, 3.799991439373312*^9}, {
   3.799991492076641*^9, 3.7999915097700577`*^9}, {3.799991541466531*^9, 
   3.799991654458838*^9}, {3.7999917925511703`*^9, 3.7999918434518127`*^9}, {
   3.799991908358567*^9, 3.79999192743939*^9}, {3.799991972910569*^9, 
   3.799992061436681*^9}, {3.799992096905427*^9, 3.799992119691773*^9}, {
   3.799992172864959*^9, 3.7999921784147387`*^9}, {3.799992313538797*^9, 
   3.799992406694436*^9}, {3.7999929662084618`*^9, 3.799993062749951*^9}, {
   3.799993138292499*^9, 3.7999931388442698`*^9}, {3.7999931952235622`*^9, 
   3.7999932260773067`*^9}, {3.799993327194326*^9, 3.7999934777762947`*^9}, {
   3.799993547711424*^9, 3.799993605646385*^9}, {3.799993658013557*^9, 
   3.799993738809091*^9}, {3.79999378058265*^9, 3.799993810606718*^9}, {
   3.7999938413333273`*^9, 3.79999389793344*^9}, {3.7999939868336077`*^9, 
   3.7999939874209433`*^9}, {3.799994047718979*^9, 3.799994059129052*^9}, {
   3.799994135591795*^9, 3.799994148238324*^9}, {3.799994232139573*^9, 
   3.799994282787696*^9}, 3.7999944807491703`*^9, {3.7999945551351748`*^9, 
   3.799994617769114*^9}, {3.799994685667983*^9, 3.799994699800915*^9}, {
   3.799995005330387*^9, 3.799995040525578*^9}, 3.79999510528281*^9, {
   3.799995479859974*^9, 3.79999548053471*^9}, 3.799995553791123*^9, {
   3.799995722973968*^9, 3.799995913145459*^9}, 3.799996059469851*^9, {
   3.799996265317923*^9, 3.799996267062655*^9}, {3.79999632752061*^9, 
   3.799996327953368*^9}, 3.799996366233173*^9, {3.7999968507725897`*^9, 
   3.7999968745497913`*^9}, {3.80007496535467*^9, 3.8000749722731133`*^9}, {
   3.8000750160900545`*^9, 3.8000750254061146`*^9}, {3.8000753432434216`*^9, 
   3.8000753467123184`*^9}, {3.800075551731288*^9, 3.8000756228858185`*^9}, {
   3.800075737527067*^9, 3.8000757388553495`*^9}, {3.8000758116196213`*^9, 
   3.800075838238616*^9}, {3.8000758742567406`*^9, 3.800075879217273*^9}, {
   3.80007695006821*^9, 3.800077029572923*^9}, {3.800077279604842*^9, 
   3.800077343390944*^9}, {3.8000773766078606`*^9, 3.800077553486528*^9}, {
   3.8000775980411615`*^9, 3.8000776401045837`*^9}, {3.800077697137789*^9, 
   3.8000777013067207`*^9}, {3.800077760767965*^9, 3.800077793765132*^9}, {
   3.8000778264663115`*^9, 3.800077827254505*^9}, {3.8000778603859787`*^9, 
   3.8000778741467443`*^9}, {3.8000779137713346`*^9, 3.800077961190894*^9}, {
   3.8000780130031047`*^9, 3.800078030819998*^9}, 3.8000781540045357`*^9, 
   3.8000782051591053`*^9, {3.800078305104042*^9, 3.8000784169805217`*^9}, {
   3.8000784823989396`*^9, 3.800078487823582*^9}, {3.800078682208682*^9, 
   3.8000786829687977`*^9}, {3.8000787864506454`*^9, 3.800078894283725*^9}, {
   3.8000790588142133`*^9, 3.8000791216496506`*^9}, {3.8000791788586073`*^9, 
   3.800079243222021*^9}, {3.800079278599666*^9, 3.80007936457133*^9}, {
   3.8000795294375706`*^9, 3.80007954532176*^9}, {3.8000798118962293`*^9, 
   3.800079848633455*^9}, {3.800079932688916*^9, 3.8000799365290103`*^9}, {
   3.8000802398624735`*^9, 3.800080280065024*^9}, {3.800080341627653*^9, 
   3.8000803642588015`*^9}, {3.800080395306312*^9, 3.800080436169254*^9}, {
   3.800080516519368*^9, 3.8000805171965227`*^9}, {3.800080654035022*^9, 
   3.8000806685646057`*^9}, 3.800080750749682*^9, {3.800080874375285*^9, 
   3.800080875111829*^9}, {3.80008092129685*^9, 3.8000809341725316`*^9}, {
   3.8000810548372107`*^9, 3.800081056105132*^9}, {3.8000810929702463`*^9, 
   3.8000811095624847`*^9}, {3.8000940172588415`*^9, 3.80009401783049*^9}, {
   3.8000942896679916`*^9, 3.8000943138789616`*^9}, {3.80009491747377*^9, 
   3.800095006934316*^9}, {3.80009583809197*^9, 3.8000958947978163`*^9}, {
   3.800183407281279*^9, 3.8001834098027487`*^9}, {3.800344567872706*^9, 
   3.8003446489559383`*^9}, {3.800344865055419*^9, 3.80034487678575*^9}, {
   3.800344938377816*^9, 3.800344941968897*^9}, {3.80062365074096*^9, 
   3.8006236672037477`*^9}, {3.800707797049458*^9, 3.800707811371029*^9}, {
   3.800707895563611*^9, 3.800707946281095*^9}, {3.80070798069246*^9, 
   3.800707981074359*^9}, {3.80070802708425*^9, 3.800708047941217*^9}, {
   3.8007081848269567`*^9, 3.8007081996575212`*^9}, {3.800709992099866*^9, 
   3.800710026979464*^9}, {3.800775893582098*^9, 3.800775895527501*^9}, {
   3.800775940994974*^9, 3.800775942180678*^9}, {3.800787412479102*^9, 
   3.800787420448372*^9}, {3.800787710698966*^9, 3.800787771925763*^9}, {
   3.802005951353228*^9, 3.80200595640174*^9}, {3.802007385616667*^9, 
   3.802007404145932*^9}, {3.802007435375537*^9, 3.802007457913396*^9}, {
   3.802007495246876*^9, 3.8020075196308947`*^9}, {3.802064213782629*^9, 
   3.802064233517988*^9}, {3.802064264782897*^9, 3.802064283370596*^9}, {
   3.802080320687752*^9, 3.802080323968884*^9}, {3.802080986161145*^9, 
   3.802081000628293*^9}, {3.802084695820767*^9, 3.80208469896583*^9}, {
   3.802085848377822*^9, 3.802085882155978*^9}, 3.802086283689695*^9, {
   3.8020863342565193`*^9, 3.802086388433837*^9}, {3.8020867299193363`*^9, 
   3.802086732014345*^9}, {3.80208683736917*^9, 3.802086850617855*^9}, {
   3.802086892662299*^9, 3.802086990482793*^9}, {3.802087992210573*^9, 
   3.802087992978444*^9}, {3.8020883154980173`*^9, 3.8020883162764997`*^9}, {
   3.8020887779844723`*^9, 3.802088780135391*^9}, {3.802088838526451*^9, 
   3.802088839146234*^9}, {3.80209002926132*^9, 3.802090049056148*^9}, {
   3.802090705469558*^9, 3.8020907086826553`*^9}, {3.8020907447237186`*^9, 
   3.802090746873187*^9}, 3.802173090900278*^9, {3.802407782409938*^9, 
   3.802407786302537*^9}, {3.802428156908763*^9, 3.802428196926394*^9}, {
   3.80242829890408*^9, 3.80242834958454*^9}, 3.802428524480928*^9, 
   3.802428607144813*^9, {3.802428878685329*^9, 3.802428888211162*^9}, {
   3.802428936051935*^9, 3.802428938827497*^9}, {3.802429050379375*^9, 
   3.802429052918789*^9}, {3.803018365932871*^9, 3.8030183701616983`*^9}, {
   3.803121794019141*^9, 3.803121813418847*^9}, {3.803123046310863*^9, 
   3.8031230808913527`*^9}, {3.8032004179059353`*^9, 3.803200418928659*^9}, {
   3.803207423114007*^9, 3.80320743274937*^9}, {3.803207482294245*^9, 
   3.803207539447887*^9}, {3.8032076346992273`*^9, 3.803207675299769*^9}, {
   3.803207774616317*^9, 3.803207775828804*^9}, {3.803207816959113*^9, 
   3.803207867143499*^9}, {3.803208055543057*^9, 3.8032080848854647`*^9}, {
   3.803208367252927*^9, 3.8032083694828863`*^9}, 3.803208416553891*^9, {
   3.803208931796586*^9, 3.8032089386840277`*^9}, {3.803209027424718*^9, 
   3.8032090741807137`*^9}, {3.8032091790958*^9, 3.803209212567052*^9}, {
   3.8032093043657627`*^9, 3.803209357285877*^9}, {3.803209623152487*^9, 
   3.8032096443107986`*^9}, {3.803209958884386*^9, 3.8032099652138577`*^9}, {
   3.803210136309246*^9, 3.803210159328474*^9}, 3.8032102062093763`*^9, {
   3.80321037916393*^9, 3.8032104111009073`*^9}, 3.803210574517756*^9, {
   3.803210924192305*^9, 3.8032109311341887`*^9}, {3.803212569977618*^9, 
   3.80321261588428*^9}, {3.806920575343734*^9, 3.8069205797937446`*^9}, {
   3.806920846985707*^9, 3.806920863569208*^9}, {3.8087405121561413`*^9, 
   3.808740525648115*^9}, {3.809067772060987*^9, 3.809067849213327*^9}, {
   3.809068081955419*^9, 3.809068101399476*^9}, 3.809068334258327*^9, {
   3.809671294417556*^9, 3.809671367188324*^9}, 3.809678196453836*^9, {
   3.809679035076413*^9, 3.809679051116723*^9}, {3.8096801175999813`*^9, 
   3.809680135020228*^9}, {3.8098514240293007`*^9, 3.809851506226119*^9}, {
   3.80985155243821*^9, 3.809851554137392*^9}, {3.809851621847348*^9, 
   3.809851669081147*^9}, {3.809852565499466*^9, 3.809852570062813*^9}, {
   3.809852600365532*^9, 3.809852676277113*^9}, {3.8098527452964773`*^9, 
   3.8098528985256367`*^9}, {3.8098530399672318`*^9, 3.809853082109309*^9}, 
   3.809853127630151*^9, {3.8098533682936363`*^9, 3.8098533850027637`*^9}, {
   3.8098534644451017`*^9, 3.809853467694722*^9}, {3.809853499062636*^9, 
   3.809853590792116*^9}, {3.809853736639696*^9, 3.809853746386903*^9}, {
   3.8098537806348467`*^9, 3.8098537829986*^9}, {3.809853819405582*^9, 
   3.809853819750307*^9}, {3.809854551949188*^9, 3.809854553131732*^9}, {
   3.8099269825118437`*^9, 3.809927020467502*^9}, {3.809928121097967*^9, 
   3.8099281765026407`*^9}, {3.809929070175688*^9, 3.809929070892633*^9}, {
   3.809929125306304*^9, 3.809929125699844*^9}, {3.809929545391727*^9, 
   3.809929557676708*^9}, 3.8099318218816023`*^9, {3.809931858164618*^9, 
   3.809931865762574*^9}, {3.809931913111473*^9, 3.809931916326679*^9}, {
   3.809932569240436*^9, 3.809932569915555*^9}, {3.8099326276763773`*^9, 
   3.809932628755328*^9}, {3.8099330635453167`*^9, 3.809933064444811*^9}, 
   3.8099331052262163`*^9, {3.809933519019308*^9, 3.809933550560299*^9}, {
   3.809933591648569*^9, 3.809933621441395*^9}, {3.8099367255965347`*^9, 
   3.809936732306823*^9}, {3.8099376409784813`*^9, 3.809937641875082*^9}, {
   3.810734578224083*^9, 3.810734700538475*^9}, {3.810735114422081*^9, 
   3.810735283569613*^9}, {3.810882355841002*^9, 3.8108823638030443`*^9}, {
   3.810882579066205*^9, 3.810882620526643*^9}, {3.8109817943501377`*^9, 
   3.8109817945408583`*^9}, {3.821426341693012*^9, 3.821426366609893*^9}, 
   3.821429647580228*^9, {3.825407792463499*^9, 3.825407804688518*^9}, {
   3.825409006454506*^9, 3.8254090133047*^9}, {3.828964911256871*^9, 
   3.828964914449892*^9}, {3.8290252918418207`*^9, 3.8290253784778957`*^9}, {
   3.829025412492963*^9, 3.8290254260990753`*^9}, {3.829026175879011*^9, 
   3.82902619911973*^9}, {3.829026864074347*^9, 3.8290268948010683`*^9}, {
   3.8290306907882147`*^9, 3.8290307321495132`*^9}, {3.829031992585284*^9, 
   3.829031995745303*^9}, 3.8291097056926928`*^9, {3.829110478003386*^9, 
   3.82911048065366*^9}, {3.8292171307026777`*^9, 3.829217140033675*^9}, {
   3.829217570682005*^9, 3.8292175920837297`*^9}, {3.8292186933182497`*^9, 
   3.829218695576868*^9}, {3.8292194899626303`*^9, 3.829219516282468*^9}, {
   3.829219722221026*^9, 3.829219808906848*^9}, {3.829220616014531*^9, 
   3.829220672810478*^9}, 3.82922104306598*^9, {3.8292211341087627`*^9, 
   3.8292211941514597`*^9}, {3.82922123114109*^9, 3.8292212544517717`*^9}, {
   3.829221297587142*^9, 3.8292214349089537`*^9}, {3.829222131964431*^9, 
   3.829222157215315*^9}, {3.829222188597337*^9, 3.829222190919815*^9}, {
   3.829222314705717*^9, 3.829222322059657*^9}, 3.8311023139792423`*^9, {
   3.831102477797772*^9, 3.831102612232815*^9}, {3.831615038720523*^9, 
   3.831615040571928*^9}, {3.8316150779132032`*^9, 3.831615079855959*^9}, {
   3.831711972137498*^9, 3.83171200599697*^9}, {3.831794396256179*^9, 
   3.8317944033202353`*^9}, {3.831794442101242*^9, 3.8317944676163177`*^9}, {
   3.831794607435645*^9, 3.831794610961461*^9}, {3.83190077987712*^9, 
   3.831900855309862*^9}, 3.831907779891659*^9, 3.8319081859495993`*^9, {
   3.831908235428681*^9, 3.831908236380185*^9}, {3.831991722803873*^9, 
   3.831991725885995*^9}, {3.8341393318788548`*^9, 3.834139336112371*^9}, {
   3.834631555275609*^9, 3.834631584397361*^9}, {3.8346322534542637`*^9, 
   3.834632295846616*^9}, {3.834639369819707*^9, 3.8346393914913197`*^9}, {
   3.841571024024613*^9, 3.84157102508857*^9}, {3.841571392913176*^9, 
   3.841571417465238*^9}, {3.8415715556886806`*^9, 3.841571570199567*^9}, {
   3.841571677539032*^9, 3.841571728253522*^9}, {3.841571958488062*^9, 
   3.841571975921307*^9}, {3.841572011436118*^9, 3.8415720641222486`*^9}, {
   3.841572204423155*^9, 3.841572295750936*^9}, {3.841572417212858*^9, 
   3.841572425538875*^9}, {3.8416489243985167`*^9, 3.841648925889845*^9}, 
   3.841648963455215*^9, {3.841648997024519*^9, 3.841649021358337*^9}, {
   3.841649438580233*^9, 3.841649449524832*^9}, {3.8416504863392563`*^9, 
   3.8416505123633966`*^9}, {3.841650663432287*^9, 3.841650666106103*^9}, {
   3.841826165723908*^9, 3.841826190611351*^9}, {3.841826326095098*^9, 
   3.841826328889881*^9}, {3.841826392398587*^9, 3.841826400570425*^9}, {
   3.841826863276381*^9, 3.841826864839554*^9}, {3.841827040537311*^9, 
   3.84182704336581*^9}, 3.841827127413891*^9, {3.841827313279365*^9, 
   3.841827315303254*^9}, {3.8418276341263323`*^9, 3.8418276359043617`*^9}, {
   3.841827815136207*^9, 3.841827827923222*^9}, {3.841828614310586*^9, 
   3.8418286314801817`*^9}, {3.841828688692485*^9, 3.841828699885957*^9}, {
   3.841828778253668*^9, 3.8418288171526623`*^9}, 3.841828848175873*^9, {
   3.841828972331201*^9, 3.84182905238803*^9}, {3.8419118987625303`*^9, 
   3.841911904623579*^9}, {3.8419120544795847`*^9, 3.8419120673277063`*^9}, {
   3.8419125987250843`*^9, 3.841912651363162*^9}, {3.841913152368607*^9, 
   3.84191323345641*^9}, {3.841913273053026*^9, 3.841913274250862*^9}, {
   3.8419133597806597`*^9, 3.841913373626795*^9}, {3.841913600465466*^9, 
   3.841913602897298*^9}, {3.841914194359885*^9, 3.8419141986422243`*^9}, {
   3.841914282820601*^9, 3.841914351756329*^9}, {3.8419144559414253`*^9, 
   3.84191445647486*^9}, {3.841914487830793*^9, 3.8419144886774273`*^9}, {
   3.841914900048169*^9, 3.841914909637231*^9}, {3.841914970851769*^9, 
   3.841914994321884*^9}, {3.841915193943528*^9, 3.8419152224487743`*^9}, {
   3.841915255803546*^9, 3.841915256272504*^9}, 3.8419153177044287`*^9, {
   3.841915351703801*^9, 3.841915353260645*^9}, {3.842952978544484*^9, 
   3.842953070772779*^9}, {3.842953329231512*^9, 3.8429533308688803`*^9}, {
   3.843214076467773*^9, 3.8432140781251373`*^9}, {3.853433222979254*^9, 
   3.8534332236998997`*^9}, {3.8534332782360077`*^9, 3.853433322361244*^9}, {
   3.8538416449848766`*^9, 3.8538416496607637`*^9}, 3.854896103705266*^9, 
   3.8548964439793167`*^9, {3.8548964963238497`*^9, 3.854896534538065*^9}, {
   3.854896788120029*^9, 3.854896860589439*^9}, {3.8551381695401*^9, 
   3.8551381933093243`*^9}, {3.855138226180984*^9, 3.8551382307149076`*^9}, {
   3.8551384419477997`*^9, 3.8551384628281603`*^9}, {3.8551392294710703`*^9, 
   3.855139229937039*^9}, {3.855223245996191*^9, 3.855223264437994*^9}, {
   3.855225512508484*^9, 3.855225519102825*^9}, {3.855309574339238*^9, 
   3.8553095908159246`*^9}, {3.855311456897386*^9, 3.855311466666657*^9}, {
   3.855738749886683*^9, 3.8557387529407253`*^9}, {3.855739257329893*^9, 
   3.855739260660693*^9}, {3.8558263006238403`*^9, 3.855826318851335*^9}, 
   3.8558263916534233`*^9, 3.856431933789548*^9, {3.8564319708063993`*^9, 
   3.8564319767984324`*^9}, {3.856432094852029*^9, 3.8564320962103987`*^9}, {
   3.85643446497815*^9, 3.856434469014505*^9}, {3.856434522849461*^9, 
   3.856434570801791*^9}, {3.85643460661213*^9, 3.856434608114378*^9}, {
   3.8564346886154346`*^9, 3.856434724670094*^9}, {3.856436406902815*^9, 
   3.856436407398603*^9}, {3.8564364794403667`*^9, 3.8564364803644743`*^9}, {
   3.856513777756095*^9, 3.856513790278425*^9}, {3.856514267923616*^9, 
   3.856514290557982*^9}, 3.856514372136942*^9, {3.856514674988344*^9, 
   3.856514679387521*^9}, {3.856514882816506*^9, 3.8565149314105*^9}, 
   3.8565150821978197`*^9, {3.856515631246176*^9, 3.8565157366225157`*^9}, {
   3.856515847050394*^9, 3.8565158483065033`*^9}, {3.875083464966526*^9, 
   3.875083547589588*^9}, {3.875083583645959*^9, 3.8750835905142736`*^9}, {
   3.875083683962113*^9, 3.875083695921957*^9}, {3.8750837549639053`*^9, 
   3.875083766875103*^9}, {3.875083805757502*^9, 3.875084014644315*^9}, {
   3.8756848935899343`*^9, 3.875685094196081*^9}, {3.876117646018712*^9, 
   3.87611771835958*^9}, {3.876117759922542*^9, 3.876117838602028*^9}, {
   3.876118961047276*^9, 3.876118970190247*^9}, {3.8762674817437468`*^9, 
   3.8762674960494947`*^9}, {3.8762677139837513`*^9, 3.876267721930969*^9}, 
   3.8762678616140842`*^9, 3.8762683183746357`*^9, {3.876272560865924*^9, 
   3.8762725750986853`*^9}, {3.876273138136012*^9, 3.8762731460971403`*^9}, {
   3.876273496791423*^9, 3.876273497410933*^9}, 3.876273576203952*^9, 
   3.876287094732327*^9, 3.876287445174914*^9, {3.876299806779771*^9, 
   3.876299808178389*^9}, {3.87630684205429*^9, 3.8763068569136047`*^9}, {
   3.8769804906008673`*^9, 3.876980491068535*^9}, {3.877055778833086*^9, 
   3.8770557791731243`*^9}, {3.8816518514569798`*^9, 3.881651854133834*^9}, {
   3.881652122200842*^9, 3.8816522391941566`*^9}, {3.881653026312437*^9, 
   3.881653040838046*^9}, {3.8816532541559963`*^9, 3.881653305941975*^9}, {
   3.881653401867261*^9, 3.8816534024573927`*^9}, {3.881653533176447*^9, 
   3.8816535949210052`*^9}, {3.881654162454218*^9, 3.881654172113081*^9}, {
   3.881654238801531*^9, 3.881654241844913*^9}, {3.8816542753675537`*^9, 
   3.881654283714489*^9}, {3.88165495596985*^9, 3.881655006515341*^9}, 
   3.881655036527032*^9, {3.881655522124681*^9, 3.881655529599183*^9}, {
   3.881655582214588*^9, 3.881655583275587*^9}, {3.881655648249186*^9, 
   3.881655660926043*^9}, {3.881655774338138*^9, 3.8816558280475407`*^9}, 
   3.881655884333254*^9, {3.88165599485882*^9, 3.88165603228379*^9}, {
   3.881656100865925*^9, 3.881656212926361*^9}, 3.8854408360012302`*^9, {
   3.886222609721839*^9, 3.886222610368292*^9}, {3.886222649962356*^9, 
   3.886222651760696*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"3028559a-662e-4356-b9b5-ada81c3f8385"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetERE", "[", 
   RowBox[{"l_", ",", "rMax_", ",", "nPoints_", ",", "core_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"locall", "=", "l"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dataS", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tanDsL", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tanDs", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"eRange", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"0.01", ",", "0.1", ",", "0.03"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"LECc", " ", "=", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"activeLEC", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "locall"}], "&"}]}], 
         "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LECd", " ", "=", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"activeLEC", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "locall"}], "&"}]}], 
         "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"SetSharedVariable", "[", "tanDs", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"momFM", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"mh2", " ", "energ"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"TanDelSwave", "=", 
         RowBox[{"SolveSecular", "[", 
          RowBox[{
          "rMax", ",", "nPoints", ",", "momFM", ",", "0", ",", "locall", ",", 
           "LECc", ",", "LECd", ",", "core", ",", "mh2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"tanDs", ",", 
          RowBox[{"{", 
           RowBox[{"energ", ",", "TanDelSwave"}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"energ", ",", "eRange"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"tanDs", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"tanDs", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", 
      RowBox[{
      "Sort", " ", "all", " ", "the", " ", "momentum", " ", "since", " ", 
       "it", " ", "is", " ", "parallel"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Extract", " ", "the", " ", "ERE", " ", "Parameters"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Lrel", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dataS", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"mh2", " ", "eRange"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"mh2", " ", "eRange"}], " ", "]"}], "/", 
          RowBox[{"Re", "[", 
           RowBox[{"tanDs", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}]}], 
        "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"EreS", "=", 
      RowBox[{"Fit", "[", 
       RowBox[{
        RowBox[{"dataS", "\[LeftDoubleBracket]", 
         RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"p", "^", "2"}]}], "}"}], ",", "p"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a0tf", "=", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Coefficient", "[", 
         RowBox[{"EreS", ",", "p", ",", "0"}], "]"}], 
        RowBox[{"-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r0tf", "=", " ", 
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"EreS", ",", "p", ",", "2"}], "]"}], "*", "2."}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a0tf", ",", "r0tf", ",", "dataS"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.852262297124173*^9, 3.852262297124173*^9}, 
   3.8522626678443975`*^9, 3.8532267951977344`*^9, 3.853227124588494*^9, {
   3.853230498909873*^9, 3.853230519102766*^9}, {3.85323056358375*^9, 
   3.853230689577078*^9}, {3.8532308705205493`*^9, 3.8532308712537766`*^9}, 
   3.853231048818413*^9, 3.853231289893648*^9, {3.853298625530425*^9, 
   3.853298637683942*^9}, {3.8533002735976334`*^9, 3.8533002887755575`*^9}, {
   3.8533014821443253`*^9, 3.8533014858587027`*^9}, {3.8535226285993876`*^9, 
   3.8535226316622157`*^9}, 3.854895908307124*^9, 3.8548960211506567`*^9, {
   3.855229248986372*^9, 3.855229290007184*^9}, {3.855309712787837*^9, 
   3.855309717662904*^9}, {3.855311481860064*^9, 3.855311483768371*^9}, {
   3.855650771146367*^9, 3.855650852916173*^9}, {3.855739954296426*^9, 
   3.855739959539967*^9}, {3.8562617195048323`*^9, 3.856261744633113*^9}, {
   3.856263303436569*^9, 3.856263310396605*^9}, {3.8564314772238827`*^9, 
   3.856431487196451*^9}, {3.856431538535982*^9, 3.85643154245259*^9}, {
   3.8564315953330593`*^9, 3.85643160274969*^9}, 3.85643165797653*^9, {
   3.856431708992791*^9, 3.856431712106429*^9}, {3.8564318010960493`*^9, 
   3.856431805782648*^9}, {3.8565159742883387`*^9, 3.85651597750677*^9}, {
   3.875072644709866*^9, 3.87507275343948*^9}, {3.875072816418131*^9, 
   3.875072904761282*^9}, {3.875073151014079*^9, 3.875073155787969*^9}, {
   3.875073358726117*^9, 3.8750733611864233`*^9}, {3.87507348671796*^9, 
   3.8750734972629223`*^9}, {3.875073643186861*^9, 3.8750736530067053`*^9}, {
   3.875073690076045*^9, 3.875073773305233*^9}, {3.87507382416695*^9, 
   3.8750739575666447`*^9}, {3.875074000848612*^9, 3.875074004687408*^9}, {
   3.8750740375920963`*^9, 3.875074039838542*^9}, {3.8750740714123383`*^9, 
   3.875074080840233*^9}, {3.875084271891074*^9, 3.875084273119851*^9}, {
   3.875685291100933*^9, 3.875685341272833*^9}, {3.875685411682775*^9, 
   3.8756854139141912`*^9}, {3.8756856451720467`*^9, 3.875685658703032*^9}, 
   3.8756858077492237`*^9, {3.8769808456831083`*^9, 3.876980874393066*^9}, {
   3.8769809069774218`*^9, 3.876981035163525*^9}, {3.876981121311613*^9, 
   3.876981139396195*^9}, {3.8769811908095713`*^9, 3.8769812420744677`*^9}, {
   3.876981345227887*^9, 3.876981364082205*^9}, {3.876981450540691*^9, 
   3.8769814588597937`*^9}, {3.8769815386121817`*^9, 
   3.8769815395085297`*^9}, {3.87698167153968*^9, 3.87698167657003*^9}, {
   3.876981802133235*^9, 3.876981862925025*^9}, {3.876982027191504*^9, 
   3.876982092725515*^9}, {3.881653235263174*^9, 3.881653236840893*^9}, {
   3.885440719685811*^9, 3.8854407289682913`*^9}, {3.88544082518581*^9, 
   3.885440827437736*^9}, {3.88544289250159*^9, 3.885442893633552*^9}, {
   3.885893396609612*^9, 3.885893397594534*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"90416275-401e-4491-8557-84af7f68d3db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobiWavefunctions", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2.0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01061740"}], ",", "4.13404400", ",", 
           "0.27286900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00820667", ",", "4.13404400", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00232704"}], ",", "4.13404400", ",", 
           "0.06354700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00663043", ",", "3.47668300", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00824312", ",", "3.47668300", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00882996", ",", "3.47668300", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.48249900", ",", "1.41086700", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.05509460"}], ",", "1.41086700", ",", 
           "0.18057100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.31809900", ",", "1.41086700", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.50162500"}], ",", "1.26632400", ",", 
           "0.27286900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.07544860", ",", "1.26632400", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.33183300"}], ",", "1.26632400", ",", 
           "0.06354700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.17321700", ",", "0.84262700", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.03289340", ",", "0.84262700", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.16311400", ",", "0.84262700", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.13230000"}], ",", "0.25662000", ",", 
           "0.27286900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.18971000", ",", "0.25662000", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.27975700"}], ",", "0.25662000", ",", 
           "0.06354700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.45883000", ",", "0.24733700", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3.86811000"}], ",", "0.24733700", ",", 
           "0.18057100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.44169500", ",", "0.24733700", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00315959", ",", "0.00556100", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00699255"}], ",", "0.00556100", ",", 
           "0.18057100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01162550", ",", "0.00556100", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00052919", ",", "9.20551700", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00090575"}], ",", "9.20551700", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00019846"}], ",", "9.20551700", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.05794020", ",", "1.92216500", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.09777030"}], ",", "1.92216500", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.10221100"}], ",", "1.92216500", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.03306620"}], ",", "1.31386900", ",", 
           "1.90963000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.06791630", ",", "1.31386900", ",", "0.22164800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.20769300", ",", "1.31386900", ",", "0.06304600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.03301990", ",", "1.00860000", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.15354300"}], ",", "1.00860000", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.25679100"}], ",", "1.00860000", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01307010"}], ",", "0.22007800", ",", 
           "1.90963000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00014706", ",", "0.22007800", ",", "0.22164800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.12907900"}], ",", "0.22007800", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.02167700", ",", "0.12481900", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.04734000"}], ",", "0.12481900", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.32768600"}], ",", "0.12481900", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02038300"}], ",", "0.08951100", ",", 
           "1.90963000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.77814700", ",", "0.08951100", ",", "0.22164800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.75664800", ",", "0.08951100", ",", "0.06304600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00690824", ",", "0.07059200", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.24339700"}], ",", "0.07059200", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.59746100"}], ",", "0.07059200", ",", 
           "0.06304600"}], "}"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"4.0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00458098"}], ",", "10.55522400", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01136790", ",", "10.55522400", ",", "0.50551500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.02270740", ",", "10.55522400", ",", "0.11475700"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.04961920"}], ",", "5.06681000", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.06063370", ",", "5.06681000", ",", "0.50551500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.06508300", ",", "5.06681000", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.34673700"}], ",", "1.60615500", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.35959000", ",", "1.60615500", ",", "0.50551500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"1.24912000", ",", "1.60615500", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.51247900", ",", "1.41350500", ",", "4.77353400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.79196700"}], ",", "1.41350500", ",", 
           "0.50551500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.56730000"}], ",", "1.41350500", ",", 
           "0.11475700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.19744800"}], ",", "1.25872800", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.56620100", ",", "1.25872800", ",", "0.50551500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"1.53940000", ",", "1.25872800", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00115267", ",", "0.33103800", ",", "4.77353400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01668790"}], ",", "0.33103800", ",", 
           "0.50551500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.12163300"}], ",", "0.33103800", ",", 
           "0.11475700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00096886"}], ",", "0.27555800", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02503190"}], ",", "0.27555800", ",", 
           "0.50551500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.44081300", ",", "0.27555800", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00036285", ",", "0.05549300", ",", "4.77353400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00574768"}], ",", "0.05549300", ",", 
           "0.50551500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.07541940", ",", "0.05549300", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00912753", ",", "11.52004800", ",", "1.15339600"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02106490"}], ",", "11.52004800", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00927716"}], ",", "11.52004800", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02952810"}], ",", "6.93907300", ",", 
           "1.15339600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01076950"}], ",", "6.93907300", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01134370"}], ",", "6.93907300", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02627570"}], ",", "3.73198100", ",", 
           "1.15339600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.09169450"}], ",", "3.73198100", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.06370020"}], ",", "3.73198100", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.04294550", ",", "1.02516800", ",", "1.15339600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.15630900"}], ",", "1.02516800", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.09345540"}], ",", "1.02516800", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01720450", ",", "0.29212900", ",", "1.15339600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.10470700"}], ",", "0.29212900", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.17589800"}], ",", "0.29212900", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02948640"}], ",", "0.10880500", ",", 
           "1.15339600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.28674000", ",", "0.10880500", ",", "0.26045100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.25576700", ",", "0.10880500", ",", "0.06921300"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.01889250", ",", "0.07992100", ",", "1.15339600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.14249100"}], ",", "0.07992100", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.28664400"}], ",", "0.07992100", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00035011"}], ",", "0.00212900", ",", 
           "1.15339600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00208741", ",", "0.00212900", ",", "0.26045100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00418899"}], ",", "0.00212900", ",", 
           "0.06921300"}], "}"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"6.0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.00062059", ",", "22.11367000", ",", "7.18348300"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01211750", ",", "22.11367000", ",", "0.64982000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.02221600", ",", "22.11367000", ",", "0.11860500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.04489910"}], ",", "10.20688800", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.04803360", ",", "10.20688800", ",", "0.64982000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.06331490", ",", "10.20688800", ",", "0.11860500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "23.06490000"}], ",", "3.17864800", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"55.03550000", ",", "3.17864800", ",", "0.64982000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"35.77350000", ",", "3.17864800", ",", "0.11860500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"23.02960000", ",", "3.17669500", ",", "7.18348300"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "55.05410000"}], ",", "3.17669500", ",", 
           "0.64982000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "35.70400000"}], ",", "3.17669500", ",", 
           "0.11860500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00348992"}], ",", "1.77152600", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.19498800", ",", "1.77152600", ",", "0.64982000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.09566220", ",", "1.77152600", ",", "0.11860500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00099838"}], ",", "0.58969500", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.16368300"}], ",", "0.58969500", ",", 
           "0.64982000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.19464400", ",", "0.58969500", ",", "0.11860500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00002652"}], ",", "0.12010900", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00191004"}], ",", "0.12010900", ",", 
           "0.64982000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.28231900", ",", "0.12010900", ",", "0.11860500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00021903", ",", "0.02707800", ",", "7.18348300"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00403877"}], ",", "0.02707800", ",", 
           "0.64982000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.05870350", ",", "0.02707800", ",", "0.11860500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.15210800", ",", "11.01490100", ",", "1.76242800"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.60825100"}], ",", "11.01490100", ",", 
           "0.45681100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.53017300"}], ",", "11.01490100", ",", 
           "0.09890900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.19106400"}], ",", "9.93859100", ",", 
           "1.76242800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.71844400", ",", "9.93859100", ",", "0.45681100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.62131800", ",", "9.93859100", ",", "0.09890900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.01916960", ",", "6.75448800", ",", "1.76242800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.22536400"}], ",", "6.75448800", ",", 
           "0.45681100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.21887800"}], ",", "6.75448800", ",", 
           "0.09890900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.22475600", ",", "1.17395700", ",", "1.76242800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.79114000"}], ",", "1.17395700", ",", 
           "0.45681100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.10797000"}], ",", "1.17395700", ",", 
           "0.09890900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.16637900"}], ",", "1.08075000", ",", 
           "1.76242800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.75193900", ",", "1.08075000", ",", "0.45681100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"1.13919000", ",", "1.08075000", ",", "0.09890900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.01603430", ",", "0.58720700", ",", "1.76242800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.26600000"}], ",", "0.58720700", ",", 
           "0.45681100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.32337200"}], ",", "0.58720700", ",", 
           "0.09890900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00232547"}], ",", "0.20157400", ",", 
           "1.76242800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01257080", ",", "0.20157400", ",", "0.45681100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.09572980", ",", "0.20157400", ",", "0.09890900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00072643"}], ",", "0.01209200", ",", 
           "1.76242800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00429262", ",", "0.01209200", ",", "0.45681100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.03173840"}], ",", "0.01209200", ",", 
           "0.09890900"}], "}"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"8.0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "1.350050000000"}], ",", "29.837433", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "1.101763000000"}], ",", "29.837433", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.292022900000"}], ",", "29.837433", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "5.066550000000"}], ",", "8.021332", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "7.502069000000"}], ",", "8.021332", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "1.316996000000"}], ",", "8.021332", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "50.045930000000"}], ",", "6.819089", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "23.537650000000"}], ",", "6.819089", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4.345863000000"}], ",", "6.819089", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "38.349850000000"}], ",", "6.472970", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "17.221770000000"}], ",", "6.472970", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "3.338054000000"}], ",", "6.472970", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.008560050000"}], ",", "1.928825", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.264949800000"}], ",", "1.928825", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.104524000000"}], ",", "1.928825", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.025065260000"}], ",", "0.620773", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.023383680000"}], ",", "0.620773", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.052844610000"}], ",", "0.620773", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.026071950000"}], ",", "0.249573", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.004922941000"}], ",", "0.249573", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.024115290000"}], ",", "0.249573", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.016153620000"}], ",", "0.201153", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.002168304000"}], ",", "0.201153", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.005384575000"}], ",", "0.201153", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.910980900000"}], ",", "95.746994", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.106493300000"}], ",", "95.746994", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.034689410000"}], ",", "95.746994", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6.827391000000"}], ",", "25.353510", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.132411000000"}], ",", "25.353510", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.319185900000"}], ",", "25.353510", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "4.567933000000"}], ",", "11.856841", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.549231800000"}], ",", "11.856841", ",", "0.422598"}
           ], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.088119900000"}], ",", "11.856841", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "3.307262000000"}], ",", "5.971210", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.449431900000"}], ",", "5.971210", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.195909900000"}], ",", "5.971210", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.289124800000"}], ",", "1.731460", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.287979500000"}], ",", "1.731460", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.134991900000"}], ",", "1.731460", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.017155450000"}], ",", "0.350429", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.098680500000"}], ",", "0.350429", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.061948000000"}], ",", "0.350429", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.001277606000"}], ",", "0.048203", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.001547105000"}], ",", "0.048203", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.010311740000"}], ",", "0.048203", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.000153746900"}], ",", "0.012204", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.000091307040"}], ",", "0.012204", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.000313691700"}], ",", "0.012204", ",", 
           "0.091095"}], "}"}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.87997881138181*^9, 3.87997888240655*^9}, {
   3.879979047132784*^9, 3.879979124492281*^9}, {3.8799793299349747`*^9, 
   3.879979330527898*^9}, {3.879979379513853*^9, 3.879979473028241*^9}, {
   3.879979559777766*^9, 3.8799796541747303`*^9}, {3.8799798667419987`*^9, 
   3.879979940035074*^9}, {3.8799809488050117`*^9, 3.879981014099066*^9}, 
   3.879981134950248*^9, {3.879981187168734*^9, 3.8799812104899387`*^9}, 
   3.880069340594688*^9, {3.8800693800626297`*^9, 3.8800696292965183`*^9}, {
   3.88006966801653*^9, 3.880069697359706*^9}, {3.880069845597196*^9, 
   3.880069936366872*^9}, {3.880069997406066*^9, 3.880070028506919*^9}, {
   3.880070069693969*^9, 3.8800701675495358`*^9}, {3.880070585850917*^9, 
   3.880070586586556*^9}, {3.8805246502660437`*^9, 3.88052465067103*^9}, {
   3.880767007416758*^9, 3.880767007904817*^9}, {3.880767038693595*^9, 
   3.88076703921305*^9}, {3.881193873592485*^9, 3.88119388120263*^9}, {
   3.881193918494905*^9, 3.8811939852791967`*^9}, {3.881194079195204*^9, 
   3.881194080459393*^9}, {3.881194126125787*^9, 3.881194126799931*^9}, {
   3.884401503781804*^9, 3.884401718917144*^9}, {3.884406511593296*^9, 
   3.8844065145478086`*^9}, {3.885272745119813*^9, 3.885272750545686*^9}, {
   3.885440620159534*^9, 3.885440623922069*^9}, {3.885893438184784*^9, 
   3.885893448511142*^9}, {3.885973436409441*^9, 3.885973456160191*^9}, {
   3.885973502570406*^9, 3.885973637717575*^9}, {3.885973735500214*^9, 
   3.885973745581862*^9}, {3.8860259870666513`*^9, 3.8860260699468117`*^9}, {
   3.886026107598469*^9, 3.886026108528513*^9}, {3.886026208664525*^9, 
   3.8860262883959923`*^9}, 3.886026429646792*^9, {3.8860264858081636`*^9, 
   3.8860264862978563`*^9}, {3.8860306891788883`*^9, 3.886030691080044*^9}, {
   3.886032410271105*^9, 3.886032539482724*^9}, {3.886032583292101*^9, 
   3.88603263678168*^9}, {3.8860328338069277`*^9, 3.88603283399434*^9}, {
   3.886044110316873*^9, 3.886044110546784*^9}, {3.88604557077649*^9, 
   3.886045588207439*^9}, {3.8860490335738783`*^9, 3.886049052821246*^9}, {
   3.886050610859318*^9, 3.8860506139809093`*^9}, {3.886050723157034*^9, 
   3.8860507485457287`*^9}, {3.8860507798403378`*^9, 3.886050817097349*^9}, 
   3.886051186905405*^9, 3.8860513526725492`*^9, 3.886051494692792*^9, {
   3.886051764072358*^9, 3.886051777097571*^9}, {3.8860519819716673`*^9, 
   3.886052023343891*^9}, {3.88605357321213*^9, 3.8860535962503653`*^9}, {
   3.886129031099698*^9, 3.886129110415749*^9}, {3.886132267289234*^9, 
   3.886132276814495*^9}, {3.8861323144534807`*^9, 3.886132330993595*^9}, {
   3.886132889343792*^9, 3.886132927168478*^9}, {3.886225245610917*^9, 
   3.886225253378871*^9}, 3.886225289658082*^9, {3.8862253278723917`*^9, 
   3.8862253319656687`*^9}, {3.886225677172179*^9, 3.886225707510765*^9}},
 CellLabel->
  "In[502]:=",ExpressionUUID->"c4b5c0e5-01ff-487e-a8a0-12d32a2683dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FitCoreToGauss", "[", 
   RowBox[{"nGauss_", ",", "core_", ",", 
    RowBox[{"ami_", ":", 
     RowBox[{"-", "10"}]}], ",", 
    RowBox[{"ama_", ":", "10"}], ",", 
    RowBox[{"bmi_", ":", "0.0"}], ",", 
    RowBox[{"bma_", ":", "10"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nk", ",", "amin", ",", "amax", ",", "bmin", ",", "bmax"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nk", "=", "nGauss"}], ";", "\[IndentingNewLine]", 
     RowBox[{"amin", "=", "ami"}], ";", 
     RowBox[{"amax", "=", "ama"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bmin", "=", "bmi"}], ";", 
     RowBox[{"bmax", "=", "bma"}], ";", "\[IndentingNewLine]", 
     RowBox[{"modelCluster", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"aLn", "@", "i"}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"bLn", "@", "i"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rrel1", "^", "2"}], "+", 
               RowBox[{"rrel2", "^", "2"}]}], ")"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nk"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"amin", "<", 
             RowBox[{"aLn", "@", "i"}], " ", "<", "amax"}], ",", 
            RowBox[{"bmin", "<", 
             RowBox[{"bLn", "@", "i"}], " ", "<", "bmax"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nk"}], "}"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nlmLABC", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"core", ",", "modelCluster", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"aLn", "@", "i"}], ",", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.01"}], ",", "0.01"}], "}"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"bLn", "@", "i"}], ",", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"bmin", ",", "bmax"}], "}"}], "]"}]}], "}"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "nk"}], "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"rrel1", ",", "rrel2"}], "}"}], ",", 
        RowBox[{"Weights", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#1", "^", "2"}], "+", 
              RowBox[{"#2", "^", "2"}]}], ")"}], "^", "0.5"}], "&"}], 
          ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nlresi", "=", 
      RowBox[{"nlmLABC", "[", "\"\<FitResiduals\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"basispara", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"aLn", "@", "i"}], ",", 
           RowBox[{"bLn", "@", "i"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nk"}], "}"}]}], "]"}], "/.", 
       RowBox[{"nlmLABC", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"basispara", ",", "nlmLABC"}], "}"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.885781716343829*^9, 3.885781719843355*^9}, {
   3.885781774717826*^9, 3.885781823515849*^9}, {3.8857873706110697`*^9, 
   3.8857873755994*^9}, {3.885789778810441*^9, 3.885789821259838*^9}, {
   3.885789966190568*^9, 3.885789969497094*^9}, {3.885790068766841*^9, 
   3.88579007279206*^9}, {3.8857901398748913`*^9, 3.885790141450322*^9}, {
   3.8858933681315193`*^9, 3.885893386331789*^9}, 3.885893422708391*^9, {
   3.8860295506980877`*^9, 3.886029616086021*^9}, {3.88602989668684*^9, 
   3.8860299015682*^9}, {3.886031006106612*^9, 3.886031015032031*^9}, {
   3.886031049150289*^9, 3.886031052471985*^9}},
 CellLabel->
  "In[503]:=",ExpressionUUID->"672176f5-b77a-4100-870a-a75327cd82d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cutoff", "=", "4.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunctionPara", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"JacobiWavefunctions", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "cutoff"}], "&"}]}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rmax", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grdPoints", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1r2Range", "=", 
   RowBox[{"Subdivide", "[", 
    RowBox[{"Rmax", ",", 
     RowBox[{"grdPoints", "-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunction", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], " ", 
          RowBox[{"r1", "^", "2"}]}], "-", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", 
          RowBox[{"r2", "^", "2"}]}]}], "]"}]}], "&"}], "/@", 
     "JacobiWavefunctionPara"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"JacobiWavefunction", "=", 
    RowBox[{"JacobiWavefunction", "/", 
     RowBox[{"Sqrt", "[", "norma", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunctionSym", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], " ", 
            RowBox[{"r1", "^", "2"}]}], "-", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", 
            RowBox[{"r2", "^", "2"}]}]}], "]"}], "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], " ", 
            RowBox[{"r2", "^", "2"}]}], "-", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", 
            RowBox[{"r1", "^", "2"}]}]}], "]"}]}], ")"}]}], "&"}], "/@", 
     "JacobiWavefunctionPara"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunctionGrid", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"JacobiWavefunction", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r1", "\[Rule]", "R1"}], ",", 
        RowBox[{"r2", "\[Rule]", "R2"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"R1", ",", "r1r2Range"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R2", ",", "r1r2Range"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunctionSymGrid", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"JacobiWavefunctionSym", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r1", "\[Rule]", "R1"}], ",", 
        RowBox[{"r2", "\[Rule]", "R2"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"R1", ",", "r1r2Range"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R2", ",", "r1r2Range"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobilWavefunctionGridFlat", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"R1", ",", "R2", ",", 
         RowBox[{"JacobiWavefunction", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r1", "\[Rule]", "R1"}], ",", 
            RowBox[{"r2", "\[Rule]", "R2"}]}], "}"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R1", ",", "r1r2Range"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R2", ",", "r1r2Range"}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"fitfunctions", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scattlengths", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitDim", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rMax", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nGrd", "=", "80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nIter", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["a", "min"], "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", 
        RowBox[{"-", "90"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["a", "max"], "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"90", ",", "100"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["b", "min"], "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["b", "max"], "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"10", ",", "31"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tmpCore", ",", "tmpFit"}], "}"}], "=", 
     RowBox[{"FitCoreToGauss", "[", 
      RowBox[{"fitDim", ",", "JacobilWavefunctionGridFlat", ",", 
       SubscriptBox["a", "min"], ",", 
       SubscriptBox["a", "max"], ",", 
       SubscriptBox["b", "min"], ",", 
       SubscriptBox["b", "max"]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitfunctions", ",", "tmpCore"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fits", ",", "tmpFit"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"GetERE", "[", 
      RowBox[{"cutoff", ",", "rMax", ",", "nGrd", ",", "tmpCore"}], "]"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"scattlengths", ",", 
      RowBox[{"tmp", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "nn", ",", 
      "\"\<) \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = \>\"", ",", 
      RowBox[{"scattlengths", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", "tmpCore"}], "]"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"nn", ",", 
     RowBox[{"Range", "[", "nIter", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{"scattlengths", ",", 
   RowBox[{"{", "0.01", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<scattering length [fm]\>\"", ",", "\"\<nbr. of fits\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Mean", "[", "scattlengths", "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"StandardDeviation", "[", "scattlengths", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Mean", "[", "scattlengths", "]"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"StandardDeviation", "[", "scattlengths", "]"}]}]}]}], 
       "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selection", "=", 
   RowBox[{"Range", "[", "nIter", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legends", "=", 
   RowBox[{"Append", "[", 
    RowBox[{
    "selection", ",", 
     "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(variational\)]\)\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitsGrid", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "[", "#", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rrel1", "\[Rule]", "R1"}], ",", 
          RowBox[{"rrel2", "\[Rule]", "R2"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"R1", ",", "r1r2Range"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R2", ",", "r1r2Range"}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"fits", "[", 
     RowBox[{"[", "selection", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{"fitsGrid", ",", "JacobiWavefunctionGrid"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "legends"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<|\!\(\*SubscriptBox[OverscriptBox[\(\[Rho]\), \(\[RightVector]\)], \
\(1\)]\)|  [fm]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[OverscriptBox[\(\[Rho]\), \(\[RightVector]\)], \
\(2\)]\)|  [fm]\>\"", ",", 
      "\"\<\[Sum]\!\(\*SubsuperscriptBox[\(a\), \(n\), \((fit)\)]\)\
\[CenterDot]\!\(\*SuperscriptBox[\(e\), \(\(-\*SubsuperscriptBox[\(b\), \
\(n\), \((fit)\)]\) \((\*SubsuperscriptBox[\(\[Rho]\), \(1\), \(2\)] + \
\*SubsuperscriptBox[\(\[Rho]\), \(2\), \(2\)])\)\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.885429962488078*^9, 3.8854299632348213`*^9}, {
   3.885440767475045*^9, 3.885440807233531*^9}, {3.8854408631222553`*^9, 
   3.8854409763222227`*^9}, {3.8854410885943747`*^9, 
   3.8854411008144417`*^9}, {3.885441280391975*^9, 3.885441324996578*^9}, {
   3.8854413620159073`*^9, 3.885441518928265*^9}, {3.885441682357369*^9, 
   3.885441724040558*^9}, {3.8854419501760283`*^9, 3.885441954478765*^9}, {
   3.885442048229998*^9, 3.885442083277034*^9}, {3.885442191217997*^9, 
   3.885442194123066*^9}, {3.8854426169100447`*^9, 3.885442725210022*^9}, 
   3.885442834995224*^9, {3.8854429172064457`*^9, 3.885443090609778*^9}, {
   3.885893473382963*^9, 3.8858934831576843`*^9}, {3.885973482206197*^9, 
   3.8859734847750187`*^9}, {3.885973757318309*^9, 3.885973763267603*^9}, {
   3.88602963954387*^9, 3.886029799070207*^9}, {3.886029862812289*^9, 
   3.88602993511861*^9}, {3.886030257556491*^9, 3.88603038736896*^9}, {
   3.886030446562502*^9, 3.886030455351427*^9}, {3.886030751094039*^9, 
   3.886030815179007*^9}, {3.886031127645817*^9, 3.886031150708974*^9}, {
   3.886031310316846*^9, 3.886031405802371*^9}, {3.886031995322133*^9, 
   3.886031998522088*^9}, {3.886032711500923*^9, 3.8860327119834137`*^9}, {
   3.8860362035549803`*^9, 3.8860362416452427`*^9}, 3.8860448739323893`*^9, {
   3.886044915306943*^9, 3.886044937119874*^9}, 3.886044969378969*^9, {
   3.886045463132394*^9, 3.886045466108515*^9}, {3.886045625798738*^9, 
   3.886045630769565*^9}, {3.8860456619375153`*^9, 3.8860456620705347`*^9}, {
   3.886045702839323*^9, 3.886045702989612*^9}, {3.886045821947324*^9, 
   3.886045843672346*^9}, {3.8860458815195704`*^9, 3.8860459643023643`*^9}, 
   3.886046067158277*^9, {3.886046133016328*^9, 3.886046155003347*^9}, {
   3.886047937204669*^9, 3.8860479445273247`*^9}, {3.886048854769449*^9, 
   3.88604886155742*^9}, 3.886048957485279*^9, {3.886049192150814*^9, 
   3.8860491969761133`*^9}, {3.886051557146295*^9, 3.886051559379252*^9}, {
   3.886051904454282*^9, 3.886051941736477*^9}, {3.8860536745872707`*^9, 
   3.886053707248496*^9}, {3.886053740912279*^9, 3.886053741060814*^9}, 
   3.886053779073605*^9, {3.8860539335251083`*^9, 3.8860539598897943`*^9}, {
   3.886054027810939*^9, 3.88605402794646*^9}, {3.886055188124674*^9, 
   3.8860551882476187`*^9}, {3.886055221611219*^9, 3.886055221806939*^9}, {
   3.886055259908636*^9, 3.886055279112426*^9}, {3.8860553881462717`*^9, 
   3.886055388292008*^9}, {3.886055447556858*^9, 3.886055447760408*^9}, {
   3.886055583274911*^9, 3.8860555834774513`*^9}, {3.886129130220636*^9, 
   3.88612918740446*^9}, {3.886132256499866*^9, 3.886132256620236*^9}, 
   3.8861323380234222`*^9, 3.886132428273026*^9, {3.8861324912855453`*^9, 
   3.88613249726224*^9}, {3.886132962137882*^9, 3.886132971593329*^9}, {
   3.88613304748149*^9, 3.886133047699725*^9}, {3.886133131461891*^9, 
   3.88613313162632*^9}, {3.886133195635892*^9, 3.8861331957997303`*^9}, 
   3.886133270932084*^9, {3.886133333417405*^9, 3.8861333335970488`*^9}, {
   3.886224494032984*^9, 3.8862245240748663`*^9}, {3.88622456256362*^9, 
   3.886224562682701*^9}, 3.8862252991478558`*^9, {3.8862254700114183`*^9, 
   3.8862254729182796`*^9}, {3.886225670580575*^9, 3.8862256707078247`*^9}, 
   3.886225743422017*^9, {3.886225778594273*^9, 3.8862258438817883`*^9}, {
   3.886225874792306*^9, 3.886225934777768*^9}, {3.886225972541685*^9, 
   3.886226028537547*^9}, {3.886226087228603*^9, 3.886226089910507*^9}, {
   3.886226125979707*^9, 3.886226145761325*^9}, {3.886226189212873*^9, 
   3.886226190755447*^9}},
 CellLabel->
  "In[888]:=",ExpressionUUID->"cd73a3e1-b8d3-4358-be63-70dd031a36fc"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "1", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.6139841313058128`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"93.46447309145474`", ",", "0.6888808498563925`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"47.818930849803536`", ",", "0.4766747880948328`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "42.841824812970614`"}], ",", "0.7843035302102404`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "97.82655519323713`"}], ",", "0.5494599104198121`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.46427362122272076`"}], ",", "17.9653389016973`"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  1, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.6139841313058128, {{93.46447309145474, 0.6888808498563925}, {
   47.818930849803536`, 0.4766747880948328}, {-42.841824812970614`, 
   0.7843035302102404}, {-97.82655519323713, 
   0.5494599104198121}, {-0.46427362122272076`, 17.9653389016973}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.886226148793108*^9, 3.886226195455456*^9},
 CellLabel->
  "During evaluation of \
In[888]:=",ExpressionUUID->"78b3d1ef-7473-46c9-b622-2b876af242f4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "2", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.6139832375400119`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.47580055575312735`"}], ",", "18.16971046566858`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "94.127809512877`"}], ",", "0.5499059656179385`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"93.63985121054024`", ",", "0.6918128020160221`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"45.54014892842566`", ",", "0.47520450239086703`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "44.43734250717725`"}], ",", "0.7838917519725387`"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  2, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.6139832375400119, {{-0.47580055575312735`, 
   18.16971046566858}, {-94.127809512877, 0.5499059656179385}, {
   93.63985121054024, 0.6918128020160221}, {45.54014892842566, 
   0.47520450239086703`}, {-44.43734250717725, 0.7838917519725387}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.886226148793108*^9, 3.886226198412952*^9},
 CellLabel->
  "During evaluation of \
In[888]:=",ExpressionUUID->"a0a2790d-7cba-41c8-b180-76da61447e89"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "3", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.6139801516911699`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "90.6773208100898`"}], ",", "0.550018949567929`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"43.45328094144781`", ",", "0.47357726530119154`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.245862890368376`"}], ",", "12.782638118214365`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"94.29240185027086`", ",", "0.6942000674304025`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "46.44994211661869`"}], ",", "0.7820827764721056`"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  3, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.6139801516911699, {{-90.6773208100898, 0.550018949567929}, {
   43.45328094144781, 0.47357726530119154`}, {-0.245862890368376, 
   12.782638118214365`}, {94.29240185027086, 
   0.6942000674304025}, {-46.44994211661869, 0.7820827764721056}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.886226148793108*^9, 3.886226201146347*^9},
 CellLabel->
  "During evaluation of \
In[888]:=",ExpressionUUID->"32d74874-3d3d-448b-943d-828c37007629"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "4", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.614069392136188`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "90.53848112685164`"}], ",", "0.931653840330627`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"97.96844201460101`", ",", "0.7497479153001381`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"43.529292970106034`", ",", "0.48391811206584995`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"40.45635278834936`", ",", "1.0210847282073003`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "90.81709635178682`"}], ",", "0.5685162885607584`"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  4, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.614069392136188, {{-90.53848112685164, 0.931653840330627}, {
   97.96844201460101, 0.7497479153001381}, {43.529292970106034`, 
   0.48391811206584995`}, {40.45635278834936, 
   1.0210847282073003`}, {-90.81709635178682, 0.5685162885607584}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.886226148793108*^9, 3.886226204139138*^9},
 CellLabel->
  "During evaluation of \
In[888]:=",ExpressionUUID->"521710a8-d5fa-4147-a44e-2dc450c0905c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "5", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.6139822258349935`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"92.77542053721925`", ",", "0.6941768067195874`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "45.03474990017587`"}], ",", "0.7844646842081667`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "90.85975420165968`"}], ",", "0.5500054259158162`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"43.73382713967808`", ",", "0.4738929235049237`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.47709775284747724`"}], ",", "18.200035621291367`"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  5, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.6139822258349935, {{92.77542053721925, 
   0.6941768067195874}, {-45.03474990017587, 
   0.7844646842081667}, {-90.85975420165968, 0.5500054259158162}, {
   43.73382713967808, 0.4738929235049237}, {-0.47709775284747724`, 
   18.200035621291367`}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.886226148793108*^9, 3.8862262068664722`*^9},
 CellLabel->
  "During evaluation of \
In[888]:=",ExpressionUUID->"c78347a2-3c49-4b04-a570-f0cbe4eabc4e"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6789999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6789999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.62, 0}, {-0.61, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{-16646.414086853154`, 
           11512.398413616698`}, {-125.43265396275126`, 137.5}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ]}, {}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"scattering length [fm]\"", TraditionalForm], 
    FormBox["\"nbr. of fits\"", TraditionalForm]},
  AxesOrigin->{-0.6140807727927765, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  PlotRange->{{-0.6140776595200403, -0.61392199588323}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.885893417855555*^9, 3.885893489742448*^9, 3.885973773243619*^9, 
   3.886029759588313*^9, 3.886029804273608*^9, 3.886029870693363*^9, 
   3.886029942135857*^9, {3.886030374355723*^9, 3.886030394440476*^9}, 
   3.886030462586419*^9, 3.88603073926197*^9, 3.886030827859376*^9, {
   3.88603102398645*^9, 3.886031061347703*^9}, {3.886031142256096*^9, 
   3.886031157587884*^9}, {3.8860313190100603`*^9, 3.886031399078905*^9}, 
   3.8860314318359118`*^9, 3.886031708129878*^9, 3.886032023730515*^9, 
   3.886032687641053*^9, 3.886032808261466*^9, 3.886035984925419*^9, 
   3.886036274466262*^9, 3.8860442710083447`*^9, 3.8860448851758966`*^9, {
   3.886044927085291*^9, 3.886044953884457*^9}, 3.8860451363249407`*^9, 
   3.886045336083129*^9, 3.886045483519207*^9, 3.886045678972992*^9, 
   3.886045719903119*^9, 3.886045838343248*^9, {3.886045872840424*^9, 
   3.8860459533051863`*^9}, 3.8860460837011023`*^9, {3.886046150007551*^9, 
   3.886046171049452*^9}, 3.88604797137118*^9, 3.886048942200698*^9, 
   3.886048979269897*^9, 3.88604911871371*^9, 3.886049217579173*^9, 
   3.886050641778501*^9, 3.886050841036642*^9, 3.886051217934525*^9, 
   3.886051518353661*^9, 3.8860515764433107`*^9, 3.886051798135643*^9, {
   3.886051915491355*^9, 3.886051944178385*^9}, 3.886052034619315*^9, 
   3.886053610238865*^9, {3.886053761624339*^9, 3.88605378001589*^9}, 
   3.88605398366967*^9, 3.8860540485591373`*^9, 3.8860552050391417`*^9, 
   3.886055240412912*^9, 3.8860553109904118`*^9, 3.886055420175798*^9, 
   3.886055486372675*^9, 3.886055615779456*^9, 3.8861330083715143`*^9, 
   3.886133097381796*^9, 3.886133169911264*^9, 3.886133239709468*^9, 
   3.88613331276291*^9, 3.886133377998407*^9, 3.8861335335193443`*^9, 
   3.8862226887552853`*^9, 3.8862245415077753`*^9, 3.8862245787894907`*^9, 
   3.886225309119186*^9, 3.886225357004081*^9, 3.886225488982327*^9, 
   3.8862257298744164`*^9, {3.886225760319159*^9, 3.886225860346689*^9}, {
   3.886225893141335*^9, 3.8862259136470623`*^9}, 3.886225957815997*^9, {
   3.886225993727564*^9, 3.886226050023541*^9}, {3.886226110750787*^9, 
   3.886226160721549*^9}, 3.88622620690036*^9},
 CellLabel->
  "Out[907]=",ExpressionUUID->"343178bd-b4b8-455e-a33c-d5ec24025dc3"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1:eJxsnXtcTN/egBNlhETFSGWapmlKkeSeWlKhQqKLiESEKCEipIuSIkolUVJK
lCQqXUSuiYpuqJSUyKVUpMjb+bw/s631XeefPud75mCe2Xvt/cx+2lvJwcXC
UVRERESRLSIyUOTvf9r0hT/n1y98bFr4338XQcK5z4GyoNdv/5uzmLmSrOrH
te/+m0sJ5+jSV70/Rn9fLyOc22/4PVzjSO1/c7ZwzrkXGNS5qOq/ubxw3qY5
Y0ixxfP/5hzm9elVoz4kFv035zL/ntmr46wiC/6b84TzC3PKRs0eee2/OV84
b+lbqeNQEv3fXCCcX3snElsw0pfh8pcHxuEvHxHklchTm7TmHcGnfz6i57e7
HMmn//+X4ph2Ir+B4NM//9oxf2VqDcFHBBUst1p+6kElwUcEtVh2nln8qYzg
I4LMNOYV6H16TPARQTv2DMr1G0jyEUEZwcpr39imEXxEEP/sPveqnWcIPiKI
Na5BYeYwH4JP//vGtoe/fFgEB5ZwzrF/MtSi6C3Bp/9/f1c74+jEeoIPC6FH
3UO+rH1F8Ol//ZLqJWeXVBB8WMh+aMrzAfmlBB8WalnZkj3g3kOCDwsN0ljk
kpieS/BhIaMG2aVbs68QfFioeN2beY45EQQfFnowR+vRB0Mvgo8UwveLv3yk
iO2BxcwxDlLCeYGg4wj7zWuCjxTC9yO2cB77YO3Q9covCD79/551euOkEp4S
fKRQmOnx2GfW9wg+Uuh6qmmseVomwUcKjW23K6jpvUjw6f/zi2cslgo4SfCR
Qj8Vza89ad9D8JFB+Prwl48MsV+whHN8e5ASznEOMsK5q9ZCEe+eFwQfGVR9
OzHqtG0pwaf/z9dytlXd+4jgI0PsR1zh/PueUXe+PL1G8JFBayvfyOmdiyX4
yCAb5b7vzX1HCD4yaNfsjFUX2dsJPmziff3lwybWB5Zwju8XUsI5vj3ICOc4
B7Zwjq8n8sL5Of6xcOPNdwk+bOR9zsk2895Ngg8brR6136d1aBLBh41STNf+
CfM+RfBhE/uRQDgfZts858Wr9QQfeYQfL/7ykSfWSZZwjq8PUsI5vl/IMHNs
e2AL5zgHeeHc7q7m5FdxWQQfeWI94Qrn+PGIJ5yb+az8sv1aAMGn/+99uGKv
4nA3go88WnHO7Gd0gBXBh4Pw4+ZfPhzi82UJ5/g6KSWc4+uDjHCO7xds4Rzf
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
cqtewb4geP3rzxc7y6QB8PoXvj7841/YfsH4F749MP6Fc2D8a8GPNXM+UPpD
m81ZA+9Trn8Vnz0hH0HpD/H9iCucr+qTWbuecv2riif1+kYM9C9z0e92w1nw
+tfuxtlntvLh9S/8fTH+ha8PjH/h+wXjX/j2wPgXzoHxL3w9YfzLanXQ4K2U
/vDH4Hs6FyjXv+5eD8qyp/SH32P9LhUdhte/8P2I8S/D/X2NBW3w+hd+vGD8
C18nGf/C1wfGv/D9gvEvfHtg/AvnwPjXx9xs6+jz0L/w9YTLvB47HjH+lf7x
2ILQW/D613x/BcOp4+D1rztf1I7+TKT8/hd23GT8C/98Gf/C10nGv/D1gfEv
fL9g/AvfHhj/wjkw/hW35khj8Q3oXyacwpVWlvD6F76eMP4lqBn8pfUWvP7V
7ORVt/88vP6Fnz8w/oW/L8a/8OMF41/4Osn4F74+MP6F7xeMf+HbA+NfOAeu
cP72jOLYg2Xw+le53hTj1Urw+te2D8vFz+2F178WsFeNK1SD17/w8yjGv/Dz
B8a/8M+X8S/8eMH4F75OMv6Frw+Mf+H7BeNf+PbAFc5xDox/qbyyuMWWhte/
fPOrv/p+gte/Em+qd3fehde/8M+L8S/8PIrxL/z8gfEv/LjJ+Bd+vGD8C18n
Gf/C1wfGv/D9giuc49sD4184B8a/yn2eDE9ShNe/Up+kcE2N4PUv/Lya8S/8
fJLxL/x9Mf6Ff76Mf+HHTca/8OMF41/4Osn4F74+cIVzfL9g/AvfHhj/wjkw
/sVDSYOX+cDrX+ePVq/4o/SG4NOmP9tAoDPmCvSvtcbWI6IHQP+yLnOTrZ1C
+kWbfti6q2o9Jq8JPm36cpbXZKpzywk+bfo11is++LeR54dt+p1bd8dE3iwk
+LTp608/NaZL5wbBp01/xKy7gz6+Jo/vbfoerN5U04fRt3E+bfpqM+8KJE3S
buN8RJD15NVhqkPh9a+W3+KnDeygf514/yVspSj0r11tt17rD4f+dexJmeL9
1SQfEZTtf/penSLpFyIo8HXqLOmOZwQfEbRXr6Q16h55/iyC6rrOLF2xizx/
FkHVPst2LtAizw9FUOLKgCU1/BCCjwgamb769TXTSwQfFqo566tV3gP9S1Zz
2YeiCOhfoR/XeSWWQ/+KMbM8cncU9K8TCr5jS5dB/9r2cu7mIdnk9sNClhkd
u6+/Jvn0++CsvM7PcvcJPiw0Z+/3l46i2QQfFioqi+ZscUsg+LDQplPfXqx1
WkrwYSGlwD3FlXkxBB8pdPtpcKRxFPQvXZn7wfNEyP1LCq19mrHdzRn6l7GH
pIl3JLz+NbL9oHtXHfSvz3lTl4j3PSf4SCHvY1XPjjoUE3ykkKhRp47JTnL/
kkJzVuZJuCyH/lUvYlSraUHykULmhfynsaPI80Mp1Lhea0dt0CmCjwzybF4n
rvimjuAjg9g+j4IlB9URfGSQg8cst7B7rwk+Mqg0t2GD27Fqgo8MitB8P6H+
WjnBRwY5PR+99ZMn9K/th1vPmB2G/nV/3Zj9u1Ogf5kbtI1wqblO8JFB0wJr
ZBN14gg+Mkgpz3b0xAaSjwwa6C54EeQTQvBhoz+9l8dItFcTfNgotMn4h9aK
aoIPG7Ey7q4TSask+LDR0oViuS945QQfNrqlo3h8Zxv0ryKbtzbsO/D6V6Hc
J58XpwsJPmykd934m4zMLYIPGw02Uq181pdC8GEjxT5PtcsbTxN82KihcdPZ
3hlzCT5s9GnIjMEzLI8TfOSRhZLsi/C1Lwg+8uiE4hZ+0KfnBB95NKhvwif3
s2UEH3n0/TJnioNiCcFHHj2o8EyZ9+YxwUceVScN8REMv0fwkUdqV1V3TzmW
S/CRR7ZP7ec95qcTfOSRatzcGAn5CwQfeaRy3OZZ+XjoX4Y3wqZcjNtDrD/9
HOq/3bfzPUHw6fevhQM6ngj3d8a/vrUuOPHw0hOCDwcdbMor1zr9mODDQSvL
vihfXfGA4NPvUwUfpJ2n3yX4cNDxO4pOvJU5BJ9+n9rwLr38YDrBh4Nublk+
XXd1AsGHgz7e4m4JOnaC4MNBt2tkbZNnLrmN8+EgVY0d+x3DAwk+HHT+81jT
Hw5hBB8uOn26ft1EHnn/MS66dHamSVf4XYIPF7XvMbv7Q/wOwYeLVj6LXv1L
PY/gw0UloaZ31vXdJPj0+1TezQg9szSCDxf9EA004Ny5QPDhouKsmdHWdicI
PlwUZ13Zrb9aluDDRTWuAY8V5QMIPv3+Zebo+9A7lODDRa9Gj0lYwY0g+PDQ
1NZbx3RFMwk+PDRf6/jTIVNvEnx4qHLggzvru68TfHhoS/C6M3HeaQQfHuo2
K296YptE8OGhnBejtQN55wg+PPTqTuHkO0uOEHx4yP71kqKBWva3cT48NDTo
6DhR0b/bA+Nf6nM2duxSDyP48NDJafMl732KIPjwUE1btk7uj0iCDx81z9ok
5/XiIsGHj3r5YaExWQkEHz56uP2jmtTNOIIPH10dFsb6bhRN8OEjkxYX55Nt
IQQfPlrtaKh55ukOgg8fJXlbaC/z/Ls+MP41Yai87sqpxwg+fFTzeHE4cjpF
8OGjwNOa+t97Iwk+fDT1Rbut4YQogg8fJVwMCkrwPE3wEaAPuk+e1LUGEnwE
qMmv48xjiQCCjwAVNNxQ8jwI/evRUe/XitscCT4CFGQlHfljn+ttnI8Apb/2
TLZwPnwb5yNAVRqCvJenTxB8BEi3d9JhKf9wgo8AqRnl/vhy+jTBR4DEmods
O1ccRfARIKPJmi0udiQfAap98vSXQepfnr36fznN+BMpnd3+97yuV8iJnVuw
dVjzX+8YiP6+HvWFl33dSs5FkFdqJ3uz0X/n216Mr/k+PrlnAvp7Hi4pnGsN
/tn9s/gt8XoRZPOYcymrs5F4vQiKvV808Kjlf68vGCn8c07PcZ+2Nq+emIug
yODvHy3n/jf3YnyQPapE4f6d/94vGiOcBxmUdkp6VBOvF0FZs72OOLS/Jl4v
gq40DHSTePv3vFdO+OewPBpM7EvLibkIWm6p0r19xX/zAsY3xevmnh+47r/z
Aa/xwrnNw6Jv594/IV4vgjrLcgtU+kqJ14ugOTXTjxep/fd6jpLwz1FcE3qd
/+ceMRdB3PdvUqxW/Df34gpf/yFxblap4L/jSL2ycK7W/nWqtnQ68XoRJBe5
xE1EPpd4fb+fNp7gxln+970ZUhH+OY0pHn23niYQcxG0zrShNrk6/v/nsYwv
9zr8iV7RHk7MRZChgCM559UpYrtloW7f5z1FWu+I7ZOFcoMFypuiG4ntjYVW
B0SfOxX7ltjeWIg17/Rnzwpyu2Ih+T1W93Ru1xLbCQuxszO+Xbj9kthO+v9e
x3y3YfMqie2BhbRSDE6UiL8gPl8WyirUWehzqYT4fFloXqjVjwG9j4jPkYXC
V12o/rP7LvG5sJDG2eg5ExSyic+Fha4Jvmya4JtK8Geh5IHnLrC14gjO/X+v
YrtK1OuTBGcpVP6k7VNjSwPBWQrF3jk577iggeAshcRjYhaekagnOEuhEPOm
gZF9NQRnKXTLU/ZJ5JuXBGcp5Brv6Bn3qJLgLIUE7qeV17S+IDhLIY6n17Dv
PaUEZylUemxOeWjzE4KzFAqc2FTifug+wVkKbehM5ItybhOcpZDaIUOprAsZ
BGcpVOe/lqXmnURwlkL7OtXufC2LJjhLoatnDfTr7IMJzjJo8btKv9xvNQRn
GbSn4IZ5etlrgrMM6nuv5Jaq9YrgLIMERs2t30ZVE5xlkI/0RBe3lxUEZxlk
J3qqw/fwC4KzDOocdFPzFKuM4CyDuqtq56dEFBOcZVBRXtawD40PCM4yaKtL
2dcVo+4QnGWQyyLFpa3iWQRnGTTk8rKkXTWpBGcZJCdYPpL97DzBWQaVm1rf
sQoPIzjLoPAGk0fso74EZzY6ltks29hWSXBmo8hRiRbdMysJzmy0tzkk56VG
BcGZjbKcDq5yS31BcGajpHVSe4+2lhGc2ciwK+WiTE0JwZmNvu6bGv5p8hOC
MxvtuuR02WDCA4IzG81Z/DSwiH2H4MxGtjK3ZdIPZxGc2cjnW8DOzdlpBGc2
0v1xxGBedjzBud+vX74a/2FCBMGZjVaPT6wZsCiQ4MxGosu+7PwW60Fwlkeb
j4x9ZjnsOcFZHnWd9iht31tGcJZH9zRXTTOJKSU4yyOO+f3fxVHPCM7yqM35
rbGJwxOCszwa5tI2d0LWQ4KzPHJ+ND8HBRcSnOVR8WCVq9dz8gnO8khi9nH/
6zduEpzlUcYpvSnfTa4SnOURcpvituNyPMFZHkW6SDVlXoskOPdzMBkwen5B
IMFZHune1j244Ol+grM8mr5lkouDtTPBmYMUw0f2NPKLCM4cxFdsqFVVeExw
5qDGIosAveCHBGcOunS8acNr7fsEZw6advxk7he3uwRnDopqXt5ZUJdPcOag
rpTv41UPZRGcOejkQ48BmSHpBGcOuj5xaJvTkmSCMwe1xRxrsNl1nuDMQWK5
tm+i1oUTnDnI1/DX1HVVRwjOHLTveUDrVI19BOd+35fKz4zM20pw5qBbQ96X
2MeuJDhzkb6fyKDB2gUEZy4a6X+30/FhPsGZiybJ2Il6O+QSnLlosOSw5c1t
WQRnLtJKjHtmpHCD4MxFv3tUz3/924UKOXPRgiDdxpZpyQRnLvoQULH42cwL
BGcumjzYTzRBP4rgzEUte8edN3wdQnDmIsuAgEuJI/wIzlzUfzLQpHlyN8GZ
i9jBbuYLuU4EZy76ZtpWLvJnBcGZi6Yd5ST8Pj+f4MxDV8svsWpC0wjOPHQm
oXw6Z/pVgjMPGThILAizu0Jw5iHe56Pv0JYkgjMPOd3/bv1eO57gzEMx9R2L
9e/HEJx5qOH3yRWuNyIIzjyUfHh+78XPIQRnHjpVuzC5asNhgjMPfe7Nvfnl
zz6CMw/F5w89Ui6/neDMQ5vFN3ZPTnQgOPPQXiO9IudkC4Jz/79z1YUxmuXz
CM48NG6a+aKwq5MJznx0PaesjNtwhuDMR/GDD10wGxFFcOajZT2+nZOcIgjO
fKTsFne0qTyU4MxHMYGD003lQwjOfHRxA29p4sMAgjMfPa/+jh6P8SY489Ep
JTsxD1MPgjMfbY+P6TS1cCU485FBtP7tWV3rCM58tP+kxuWj360Jzv3/Tkfe
IdFjCwnOfDRy5WLzJaNnEpz5aFW7ZZO8tTrBmY86PK3UhyuMITgL0HCJo+4d
dj4EZwEa8Sjfbt8Ab4KzADXcmn5EjeVFcBYgxWkyl55W7SU4C5BLq+mqJ967
CM4ClDj21z29ea4EZwFyvy0pJrFyI8FZgKKXG9eGjLAnOAuQcdB0q80WywnO
AmT1Qe3yTecFBOf+f2duz6kFH3QJzgLE3b1H19ZkIsFZgMo9LptGGysQnAXI
7W1U/cntkgRnAcrRHjXU1bZHD+fcq++0XcEsS/wNwfm7flqVRhxvGemD7foF
askxGdPJ7yt+6YsEjny2cSP5/cMPfc8JvKM+weT3DN/0NXwfTXuZRn7P8Ftf
MkklYuTQaoJzt/6gYP0wpbPk9wMd+nvbfS5tWUp+P9Cnr/c84OOmeaTv/9S/
2iCivf0y6fWd+p9nVz6Z2Ut6+h/9mfJ2+rpOpKf36FsdV77gsjaB4Nyl77El
2dXzUTi+PXuJocgd0qVPb5LfCw1EuRrKeqseEpy9RNAjs6S5Wa/J73nEUf0X
nvphtQacs9dApDurREL30BuC8wAksq8twOcu8f2MlzgS2W/3xf4a6d2DkFTa
oVDTu4R3ew1AmxfzWPZF5Pcqg1GTY5LaKePHOGevQejumC1HozYVEpxFUYWr
mqF7dA7O2WswWnxerDXzC+ndYmi3h9TEzNQLOGcvUXTNLzeJvYX4fsNrOEKH
PC3PnnhLcB6KtA6OCOs7T3yf1v9z/bzVVxM8ye83JFGs5Kqt+8zqCM5D0WIr
97O7N9QQnIegYS0qRfJ7ie83vCTRl9GKrQoHye+7hiHzgpzUUSOfE5yHoCSp
nRkzxcjvN0agnnjBXMtfhHd7DUM27Zu3WY+4Q3CWQPwYvwkejlkE5xEoIHPu
2x3cSwTn4Whx58vRkiGxBGcJxKryCcieR3y/UTAKsQ88XXBOmVg3vEaiK5MV
03YPqcc5Iyl0N9NpGa/4DcFZGrHFqsTyTrzEOff/VCjOShm9hfi+0UsKRaxb
PPGIC/H9BpJGF81Fk2Ylkd49ChXURWTtti/BORdIoVn+69QejCa+3/CSRsU3
WgdnZhLejUYhjQdjxl4uzSE4j0TP88JmD6q+jnMukEZli2cvWh8Yh3P2GoXq
3uzKC151GueMRiKugcTmNn4QwXk0Mgi03ba+sZrgLItEQj9IlH98SXCWQXyb
EZvFvrwkOI9BLP/BR8U7ygnOsv3+lXnXc145wVkGqc4xvNI1lvh+o/+nQNwi
tzG4mOA8Gqm++NKUe/wxwVkGSd1sV7smRny/4TUG3Q2/aZQscYvgPBodH31w
rsuDDIKzLGqu878zwzGF4DwGaVVcXfP+bCTBeTQa3XkzbnrQCYKzLLLKjDex
9vIhOMshWxvl3c+jXhCcxyLdlzcHrvYpJzizkXpeRu+T9+UE53Goe4/m6qfb
SwnOY9GC5IlvYxVLCc5sdGz57vMVrc8IzuOQxUaLTgv2fYKzHMoT3/qpQrGQ
4MxGbX6cvRJLCgjO49A0eQWPaxOuEZzl0LrNFcN3il8hOI9FvX4+dwaHXSA4
j0NpIyzTLNWCCc5yiDv4vtGQB34E57FoydLcm1uV9hCcFZG6afsldeOnBGcF
9DI4qeWteQnBWR4NvnFYvX45+f3GeGTfd6fhdexDgrMCOjzs1Il1qQ8JzvKI
o3P/nWbVA4LzePT2pF3OhZQcgrMi+nruxcfzkdkEZ3l0p2GI9TWvGwTn8Wj1
8szCBvF4grMiSu1zTax6EUtwVkCKA2wdLqpHEJzHo3vyFj7+4QcIzorIPEbF
eeqQPQRnBeQ5ueNE8MHNOGd7JeSxl//wnVUhzrmAg9p2sM7yT93HOXM4KGaK
mbKhGPH9hpcS6m3TsJxzMQ/nXM9B3xaO/VB/JR/njDjo6wX9Oy2H83DOsUpo
3s/qxGVBVwnOSkj33MH3x7tTcM72HDSqtW7r7LtJOOcCJWS3oyL1uksYzrn/
p7N6S53F/RM4Zy8OmvFdpbNybADOuV4J+Ur69E6Z44xzRkqooHd/12PXjTjn
WA6yS/QZo5GyguCsjMys5mVdPXuD4MxFxWkzkydszCY4988XrKxbGZNDcFZG
5RKf588Mv0pw5iL1I0PbirrSCM5cNFWnNcQIpRGclZFOixknqPwcwVkZTe6Q
/jN/xjmCMxeFeL2yqgiNJDgro/nDk5PPK3gTnJVR+DIzqTpbL4IzFx2+dUDf
rn4XwVkZoZQr9TYvrQjOyqj04mK3HpnlBGcu4i1L+BP/yojgrIKOGu7/9UUu
nuDMQ1XL+NNuvUsiOPNQ6EL3vtHelwnOKujFkamNdw2iCc481G28vU7uaAzB
mYfEcwJNZ489R3BWQT2jSg5fST1CcFZBYXk/ztaIBRKceejZdSP1vkZfgnM/
j0+VY64UbSE4qyCNko1edbKbCc481Gg1Zfi7OWsJzipI3GBX8QI1RHDun08Z
4zF1nB7BmYfcrodfaV2gRXBWRc1zDRMGyR0nOPPR00XhB79NDSM489HQ1A2K
7hfCCc6qyCdv66A1M/wIznxUZDE/1z08gODMR3knhqfXO/oTnFVRZcO9rZ4z
3AjOquhE2YqNv2V3EJz5SCvw4idx620EZ1WUahjZUbnFguCsir4Jvm0+/3Mp
wZmPmhuyj68KnE9wVkUL+lbva+pSJjiros5nCfYL0pUJznzkUC0T7KIji3P+
332H3K6tu3cDdgX1jzlWyyhdQfUD6/J6SlcQkLKPe4nSFUx0MDQcSekKkmJt
Xb5TuoJBYSe5aZSuQGuKhtgRSldQ/6FK1I7SFdxr/Ja8hNIVhCQuFlyhdAWs
av/3bEpXYDMk+o0ppSvI1QxJHEvpCnS8RW7vp3QFGhnybSGUriBF/GzVeEpX
cGDQ6qF+lK5g8xH3VD1KV1Dz7aZZEqUrEK8MH1TbB7uCqN7rLAlKVzB1mdcn
TUpX8KjuvHX7KNgVSHRNDHMYB7sCvWD+yS2UrkByyE65Uc9gV9DTM2Og1EvY
FfSUTOpW7IBdwdZZT9mSNbAryGqJqc+hdAVto7jmGyhdAU9PUyqa0hVo/Rz6
YRelK9gb8+gWh9IVnHxqGXKG0hU4ct7ZqVG6gtUxH9BXSldwSiJ47llKV1C/
qELucQ/sCrz6tselULqC8eNm+cbKw67AKXzWil4f2BV8W1HrGk/pCszXvPxy
uBZ2BSbx85KaKF1BG6eIdZTSFdSd4yw+TukKzONG+h2gdAWxN4YknaR0BX2q
XV1ZlK5AOmIP/zClK5B5brJiaC/sCnrjDvl6UboC5eJjbsqUrsB9kqaZ/XjY
FcwSqFyypnQF0cMyb1hTuoLxrsNXuLyAXYGof2bz+/WwK/DccdH5HKUrWN74
UBBF6QrEj8VvP0/pCpL2KOf8pnQFgZOfVIRQuoLibfdMUildgR6vxT6F0hUY
iMzWi6V0BRMk1UvPU7qCpgwr018jYVdgGrt+liulK0jc/aNAl9IV5BppaKdT
uoJVq14/1I6EXcHNE0t7xh6HXUFLyshbPZSugGsf3j56FuwKoqf3jR2gCbsC
Lz23B9GUrqB3VdvBK5SuID9kQawWpSuo/O2W8ITSFdSu2V31Qx12BZ6Pn/5x
pnQFGj0L2aqUrmDOkYyr+pSuYMeRN3pJlK5APzwm6pEm7Apqc2s9Bi+FXcF1
ZBWnlQS7gqnj3FX3UbqC6CzdyyP3wa5gt2bDR3tKVxAV2XS7itIVtOvtu61B
6Qqu+HvebcqEXYGEophWYxDsCgIsFvwcROkKlMzX5k2ndAWjv5TLZlO6gv07
zDNfU7oCsVSN1t3XYVcwscxyvf892BWE+g3Jyi2HXYGNf0Kv2DrYFRxyecC9
QekKruQXf/osT+kKjv5Q7wqCXYHz1Tdq3pSuwOBnaeAxSlcw/GfWZTFKVxCg
P/5SpBfsCs7FScu6ULoCSds1QbsoXYFk+mLvH5SuoPn3yuNujrArqP9ZonD8
NewKplZpplRNgV3B75rMimWPYVcw01xN52Ya7Ao+NlyriJ8Mu4LYJ3r8pAew
K3jw+c+40rWwK1iYM2yeOaUriLl59NVLedgViB+/uDSL0hWsexr8tpvSFTzi
dVcungW7gomjH1WvnAu7gtqgPx0ramFXsK677nWONOwKqretTVx/GnYFm169
er1FE3YFaVqHWqMkbQnOXJR7Qj6q6AbsChz0vntepnQFz5Zzgmqnwa6gvth4
2EFKV/CuUHzrVkpXcK3vxOUVU2BXcEuu4lrKA9gVhNs/3WyaCbsCXoL4o8yv
sCvY0bDo1ogtsCsoCZecHjfYk+DMQ3FLs2dqKcOuQGLSlZhPabAr0Lz2RLM4
E3YFcvr5CSlNsCsIbg31m3gPdgULneK6it/CrmD8L/90yZGwK1hfqT5FejPs
CnTTLAw+VcKu4MjwkE4nRdgVKFacdPv2BHYFrjH2C9+Pg13B4ovBNR8sYFcw
fJH1kKs2sCsY+oF/ev0f2BUsUHCeWyBmQ3Dmo43mpt1yF2BXEKI6ft93LdgV
KK5v3jlnD+wKjIdKmOXMhV3BpMoWazUH2BUsvbK467wY7AruvGpOnzYMdgXh
Ur7bfN7ArsAnNuvn1yOwKwgW116VshB2Bd6nn2TJbIBdwfA/0tNi2bArMEh7
LR9gD7uCGC2RHXaHYFcQrv379UzxOQRnAfpxf0DDXRfYFbD6XNf/dINdgeWJ
Uz3HLsKuwMwhpgOdhF0B54Gax5ondQTn7/qP3r1/Lk/pCjQWqvOjKF1ByE4l
8bWUrqDyXm32QUpX4HXWd+AdSlcQG75hD4fSFTjXGPrMoXQFJe7+I/wpXUHB
/bDNCyhdQU8Ue4WA0hVUvi9PP90DuwKVYWsOilG6gtFzZqcVU7qCzoeNTqgI
dgXvzqqvuE/pCvZs0go9T+kKzJw2fU+ldAUhfL2OvZSuYHN6SsVUSlfw7Mf9
kG2UriAnh6O6j9IVHG6a67me0hWwZSVq3Sldgc6Nu8vXULqC5QrOihaUruDw
6CUm9WdgVxAvq9fjR+kKPLs8F0+4CrsCEbHdnu+cYVfwzn9mYRilK3iUb7mp
k9IVGGwfP+IKpSvQyivO2kLpCnwVRHPcKF3BxwneXTKUruC8n6+LHqUryLA5
fU+F0hVcCDhss4TSFez5elOLRekKvj5QOSNF6Qocc4029qyHXcHPkpFeZyld
gW75uoHJlK4g+cOUd1FGsCvw3PmqJYjSFYyy6JbZRekKVkXm6YygdAWlDU3J
9yldwccBzh7jKF3BjMo/idGUriBoYP6ExZSuwO1YU4o3pSvYMfmRdTqlK1h2
y9tsLaUrGJfuaq9N6QrMspTa0qpgV6BipGDSRekKvvZ+VRi3GnYFt35MWPhC
HXYF9RFROs6UrmDz9ZLZpZSuwPHq5o8/P8OuQH7I1vXKlK4gXusnCqF0BRNM
HnmMlYNdgYWzqEoxpSto9LVZc47SFXwv+z3EldIVvJ6eM1hA6Qp04jR/qFK6
Alvfh9HSlK4g92Nb+dUY2BUsyzqg9icYdgUsK7u9yr6wK5BfUXWyndIVLD+R
KbOb0hXs0ZYMbaN0BZUi2jsqKV1B1lNNxcuUriD73uGFrZSu4NoS/3YWpStY
ueJyVQSlK4jXXlWXuRh2BWZ7SwODKF2BXcdjQ3dKV/Ci4nahG6UrULy4rm+b
JuwKjnTf1Yt5DLuCycN3jp0qgF3B9tE39ZQoXYF2SrNLF6Ur+DnrelcHpSt4
UBNeGEvpCrjiwx5Np3QFKl9u3ftUCbuCWa5T9ytRuoKKbZyB0yldgcRBLfeF
lK7g/QWH/asHw65gKO996IZy2BXs3nfZwFIDdgWSV8Z+ED8Hu4IyhcZajxGw
K9BYER26PBB2Bfln0YswSldQF/mwpCkMdgWOFUFWvwbBrkB8Xv6mtATYFew/
OqzIhtIVyNiVtSBKV+AUus95CqUrODlo6pedlK5AI+PpZxtKVzA5pfvEse2w
K7hYNVdV8iHsCgrcvkvnK1C6gsLoBy4LYFcwrvBl2pS9sCt4fihkkEYu7ApY
q1ZesqB0BZzfZZuvbIBdQdrm668yzsGu4JjG5w2jKF2B3BkPpThKV5C9/3Sd
HKUraKl+KNtZAbuC3uyq7mMzYVcg+Wpb4cFTsCuYEirtbqMEuwIZ5+cVRqth
V3Al+Mca8fewK9D1ORSw9D3sCsI32B4cpgS7gg3pfr9vfoJdgWEF74j9ONgV
bOsouv2a0hVcqNvMlqR0BaO0XX7PM4RdwfOn4nK2QbAruPrY5/plOdgVxF3w
aPVMh12B58qyet8hsCs4KbG1ofM97AoqqxwWLKmAXcGRmaHXX42HXcHtoSed
nhnDrkBk6QilF9NhVxD48sqSI1NhV/Atc8qZuJWwK3it1PvtgwLsCtrG1r8p
nA67giruGCerBNgVTD1avFdFF3YFOm16hnpRsCsYuOL1j9+bYFfg1e5ivV4P
dgVr6u+3dYyDXYHTuEyzRgfYFejVzU+I3w27ghPG3nkcMQuCMx/l2oixo87C
rkC+mPd8zQgewVkV2WgvFLlUBLsCGePXFy5Ywq5AS8w++nJ6PTHv975Ov+Bv
1bAr0NqUbHt3O+wKyhvCji+dBbsC76rfahONYFdgk+1xsOEp7ApGx89em9cN
uwKntVf2V1C6ggqZJ9pRubArSKvK1VuLYFeAZvfGyBfArqDNrebnQUpX4Hxs
j5VcG+wK+s6+SUuldAVSK0Xm2ZbBrsDTaEGNiy3sCtplCpuuULoCJeMKx5Zm
2BWsHLnXIZ3SFSz8MSn/kwB2BbpR738//g27ggAz89Jv1rAryH80sNiOD7uC
0orqxHRKV2DOdX2XOhZ2Bd9/PLxpSukKAiYbeySUwK6gvuGKbOEr2BU4uXBv
2HRT7lfALly1rAF2BROHnDqxZyrsClqaWGVaMbAriB+xsCqO0hWUzmn/uL0c
dgUzjHs1N+XBrsCqukRxN6UrKDH3mjvWEHYF914qPsscDLsC127ReZ8oXUHa
zwGz7v2EXUGs5iGHCHfYFYgrBUctHAe7AvWZ09WdKPcr8NxbF39JG3YFa/an
z6h9C7uCoqzHu3++h12B/GK/SFtV2BXcz5C4M30I7ApmTB5k+uMX7AriVYs0
VlG6Aq0foyKTH8OugNXr/OPgJ9gVsEY4mO+gdAXHVGTyvzfBrsBhaKj4u4Ow
K8iaV2N7UAF2BQrRmycmxMGuYOPUc0YZPrAreF9xq3BGNewKuH+CEja7wK7A
IuYVt6cNdgUCkWVD/EthV1D3df2kNbSuoFFzQrQ07ArENd6HRryCXcEUNcvi
DH/YFcxoUS8aNQR2BZ0Nx60QpSsQrS/u3P4WdgXWdzTHVEnBrmCPj1iAuRjs
Crwvlg4+ROkKDD/eW9pRCruCiZ1uMa5nYVdQLZW9oCQSdgU6j0J2D/gGuwJx
c78n02fDrmBood3GGRNhV6BjUBqTdBV2BXY6ms7LPsGuoPKCtt5OSlfg2f71
owSlK/CI/639RA12BcYbbN3mjoFdwZ5yhUvNvrArmNejNE+b0hUYrrvusisH
dgU7Lp0cungK7ArK7/uY6KyEXYH808mXD2XBrgCVat/RGg67AoG689uzlK6A
by1ISKV0BTu94w8WULqCZ4qoZeda2BVkhLD4V2/CrsB3ooNTxFHYFbT0FgQM
zoZdgdz+bsfJGbAr8DQYfGKAKewKFDI04xNTYFeg+pZ/7VEW7AqWLp6sbF4C
u4KqrR8O1DbBruCK08GGLftgV3Bs+NK2GyqwK3h7/s3o0nGwK3DtyDyfdhR2
BZpXjgrUJsOuoL5rRc2C7bAruLb74uzm17ArCO3uP1c4CLsCbuURd1lKV5D/
pnfRIXPYFVREsdXn7oFdwbPN14xLNsOuoNUk65NcM+wK1IM69EYbwa5ARHHz
1qFvYVewJXC57NVS2BWsWOZvsF8LdgXOaLyp3z3YFczbGzSgcw3sCpT0btu0
fYFdgdeEGYXSlK4gfenMfdGUriB3bKX6yBmwK1il4aazUhd2BcF7+8JuGMOu
INXWOvXLW9gVrNliOjVOAXYFQ7Mvn3a+BLuCN9nFXkaGsCvY+evpT1FN2BVI
31iwUu0V7AomqwyPv0jpCkYHyfuoUu5XIGgZdspgNewKOnYpTi91hl1Bc83s
oxZTYVfgJZ/15uIT2BWcXn+3viIXdgXT5m9rntcFu4K3o6WmbNkFu4KIEP2r
CmNhV2Dx1tvqvhbsCqa8DGtzuQe7gtJbs5Wky2BXUJyQP+egmCHBmYe2NRx+
2/QedgV9p3THq7XArsB5n8GtgNGwKxgxO+tGugvsCnK3zXpwrgZ2BSGn9huJ
8WBXMPJaU0FaJewKuqNiD8aqwK6A7aMod2od7AqGXPY7N2sD7ApYBvqhddLr
Cc58JLFNc/d4ZdgV5KyrmNjzGHYFcZO0oz6ugV3BrtvRtxvTYFdwIO70b8UD
sCs4eyNs1Axn2BWMievR3DoCdgVP/Ti5kbKwKziZX6vd0ga7AvZsk6+nTsOu
QNKtJ9DMGnYFqY4vupM8YVcg+uOdWYA67AqSurV6HfbBruBe9J5SlAi7gv0R
3q9uzYRdQXj37PJfV2FXYHtpR+OJXNgV3Cypq/P4BbuCO3m7KqU/wq4gd6tk
/MQU0lO+6ztLvokJs4JdgcjgGRlXdWFXgDqm9HRQugIDjWsOL4JgV5ClVR8+
9SrsCjxTr+jFUbqCaJcMkWHnYFfww2XqsZEWsCsQ/Wz5JtQAdgXsn8elFZJh
VyBeusKyrBt2BXLbX39s3Ai7AoniZA+ndbArUD2RLthRAruCi+ZNgddvwa6g
Rif949VbsCuQKjjYcfMN7Ao412ptAihdQfziyU01ByldwWn7JQZ3YFfQ+77Q
WzsddgW6Vw58HFMIuwIku0miidIVmD9o1nY1gl2B/AOVJEsn2BXwtS+JGUTB
riCtOae5mdIV9JhMmduWBrsC68eBbtJusCvweiCWGnISdgUices3asbDruDI
apWFBZSugN1wxPuiKewKAs+YTTBxhF1BkJnr2RYP2BVMNAzt7qF0BVp69ZYp
lK5gUsybe5GUrkBjRbrBhx7YFSh+k1XTlIRdwbNZU9wK1sGuwLcnbF+jMuwK
ohVaX2WehF3BO1NDg8cmsCvoHJbxjsOFXcHOmY/n3WLBroBvPbLK6zHsCgKW
vzB+SOkKAsuGRvRuhl3BhoqyH7tcYVewMeZ+0yVKV2DYFmnTROkKtklIS+hQ
uoKioBmbrG/CrkBK1F6l9hnsCoqTZzxhU7qCwxcS7cYEw65gdPS5b7ccYFfg
+r1Q5p0O7Arepc7df4zWFbhurVxG6Qo2JJ/ZkEXpClhx+XeKKF3BqQS0T8sQ
dgXPVm8wZ42DXYHpkakL11G6ggs/doyaROkKJAoHH7IbBLuC2McTTL+yYFdQ
VJmdceI+7ApG+T1f5EbpCgpeRmh1x8OuYOZ83WUPTsKuIOlX7eilwbArSGbZ
br9+BnYFCWajWub6wq4g8s1DO9kPsCsojXysMcgNdgVuko5FXZSuYK1ALUXl
E+wKxJZo6w4bA7uCh1sOs/IVYFeQ2vN7TOoi2BVEzrlt50/pCn6bBH0VHwy7
gl1Jte7TwmFX8Mg+xrt1OuwK7o/ZHeb0HHYFyadfy7lPh12BzK7z+z4Ywa6g
NEph7/KlsCuIXGu0baYl7Ao099vZFsbArqBi5pKswymwK3gsdmN/SQXsCsYv
OWz44jLsCnZr8rNHRcCuwPrgij3bDsKuQFK0+cTsIbAriLH8EGdSCbuCB+6j
Smwnw66gbanWYK2rsCuYHzpp4GkF2BWgFe46X2JhVyClHp/ubQm7gqqMkoim
UNgV5A7fpndvIOwK/ErURNXiYVfAsdicn54Mu4J232IXW1/YFWw626biT+kK
bO/ODc2mdAUOK3b+ciuEXcGFJWhlojvsCjIEihH5T2BX8CxotXuwKuwKYjvj
j71dA7uCFrcB854Hw64gyNl6+8mXsCuw8dxgHRENu4JbfNUFDo6wK1ia8a2s
++/9mv7pCo5+lp69nNIVdDeKfdtP6Qq0wi1sZSldwSrBnD6nV7ArMPrzsvPG
HNgVPK1hW4VHwa5ArCt+5Ah12BUsX/qgdOEG2BVkrUpZ8awLdgU1EulzjUSt
Cc7K6LVnheKuGbAriMv98/zHcGOCswraVLgyT10BdgVbspo2fG2CXcH1iY7n
myhdQVeAT/iHBbAruBezYOOxENgVRA4ry/cbD7sC555Hsr9zYFfwpGB+2ItR
sCu4dEFnQlw77AqSRpQ/OdkKu4JH+p8GvdOBXYGshPfodBvYFdRZ2O0Tt4Bd
AVc2jW3jCLsCq3YZDRVP2BUc60w8wBbArsD7ULZ8iy7sCq5eb35fmwy7gkMa
pcjECHYFRnH2rncuwK4gxyR974ydsCs4MTBhm4op7Aompw63EVeDXYGR1pKd
AzxhV2CivEh90jHYFRhYZWdMHQe7glktp2ePvQO7ggxuS8fFWbAr6IyUn7C+
E3YFQeq+LpuDYFfAirlvOMK3kZiL9K//44NN38KuoDu162v+M9gVLLBJ0B75
ifT0Nn2dAd5lMz+Q/tim3+awz/zxLdgV7P30PTg7A3YFWfXuLuFLYVcQ3CVw
//gUdgUfD0+dsMsKdgUyO7Lnz/sGuwJtsVt/XuyEXYFt1Pa15+XI14ughTqV
1S1VsCuwSfzdfiILdgWvYqe5LEawK9g/2d3TYxHsCiZWPXAx6oBdwZqAxe4W
rbArMCxKLMibCbsCuaNZHREK5HVSEbT6Zmvw9T2wK6iVuuadsxZ2Bclmo9PX
joNdgbpR6bCLS2FXkHxzuvQoW9gVON+M8vOKhV3BKhfnvc8TYVewvF3SI8gO
dgVrpySNTzaCXQH78vz1rY3k9slCAe8fHlHaBrsC453HxT3OUJ6DYHj5rc0n
2BXYvpD7bPAFdgW9nd+0lEpgV+B6/tYkiwmwKwhjKcvs+Ex4d//81TfNP5Gn
YFfQfjLX77Qs8f1G/1ygq/LAPBJ2Bc9W5uS8mg+7goySKYE6e2BXoHF2/bZh
388TnFnI8s3AffeNYVfwStBhvuQH7ApcHU1jFRHsCg5vH6baoA67gtJFYYs8
JtYSnKWQ08lJET1fYFfAWtFSq5IBu4JOk+YRx4thV5DxpP3Z4o+wK7CI7kip
+wK7AuvpE9SKE2BX4HTgzZqKFbAr2K7oMNX9FuwK8sxy9J+ugF3BSpXZMccX
wq7go/GrIUfnEt4tIoOam83GJKvWEpxl0Corr+QnP2FXMHEBZ322IewKFujE
hSVIwK5glWeSruA27ApGndOvMXSEXYGljFHIqh+lBGcZNLOpWXvIGdgV7PHX
ed75txP+pyuYmJ/+4fpU2BU43xzzOEgddgUWS34lja+EXcGtZfHBvUdhVzCD
rdYlPgh2BVJrlTm3jxDeLcJG1hy+wOMV7AomHT5W2q1AuV+BvZbSXgnYFUw8
2eJ7Lgh2BWteVBcMeAG7ArUmkyXPHsGuQO746ozeubArcPy+c5eLGewKDKr5
3r91YVfwZfKH7i2psCtgzT95oTcHdgX3GpLL9vrCrkC8xyTk3bFwgjMb7TTy
TAuadYTgzEZvVqGYo6KEd//vuQN+A1sWtZcRnOWR+ZCQIwfXw66gLcDlwOAQ
2BUsn6+6mxsKuwI15z01Fa6wKwjbxE88+xJ2BfpjwmtXZcCuwGxDfmDJT9gV
/JYXHXW2EnYFyqHVaO882BX8vMGtktsNuwKbrwM//xgLuwK7jVHu+WeOEJzl
keici8hU1pPgLI805xbekRlOeLcIB62+LrJ/sT7sCoqKJxesnAW7AsMeuS9p
abArSFIfZnfNFnYFK3W/z2g8DbsCiRf7VoQq3SY49/97DHqODkqGXYGDdHvQ
xmjYFQSOEzSka8GuQK/c6Z61NuwKOs8+V9IoPkVw7vfl1GNf3mUT3t0/37P3
beznnR4EZw4qves/6simLQRnDvre6uw79bkNwZmLgl/+ECywgl0BZ+qBpXck
bhOcuSjyoqy3z1nYFbgO36559+/9hf7pCrpOKBRMmwa7gtcXHiV0sWFXkHZR
RtpnNOwK5EKsPib+jiM49//5U6bcz0w4TXDmoqTAiDOXEewKLm/U8ho0xJfg
zEW97+91+vYR3t0/96v1b9s6eAPBmYuCuLGK2dbWBGcu6nt4s6Qo1ZDgzEPd
P4ukRE/BrsBz4uJA40mwK5hqo3FMcj7sCpIUFBI/z4VdgWTS3Crv7gsEZx66
tVrtcvkU2BXYmlTYzR4DuwJ1sStxrctgV9C8emlky1I/gjMPxfDKZVTn7iU4
81DG7zFlDnEuBGce6tzAW2LQZE9w5qEhOfwLDkfMCc48pL1JOXfiwrkEZx6S
27NzW6/URIIzH73Lnj3omhHsCm6HF8xcs/00wZmPiq1Nf297SHh3/7zn8M4W
Rx3YFQwUi63aInqc4NzvudKqZeEJhHf3zx1rlm0bPvYQwZmPrOxlJy5O2E1w
5iOvJNmC7aMI7+6fa/8esPitnAPBmY8itPs4F5wtCc58NDa7tHLSOmOCMx9l
5ly3uHloKsGZj369sBGznc0nOPPROa2rz32GSBOcBUj0Qdj0sOXeBGcBqnof
vPONyCGCswApfFeSHqF+gOAsQMkNljn35T0IzgIUc/LQqYhfOwjOAnTO+NnN
ae1bCc4CNF1McFR9gSPBWYAcxDPLatpXEZwFSLbX7WiEhAXBWYBypXLFx680
IjgL0DfW9LcDP80gOAvQyQ9VQSqn1QjOArRsmulQ09lsgrMApX1K7kl5wSI4
C1Bcjr5qRF8n6AqyalPt+jJJH/yunxTakv8qF3YFd9MiWDsbyO8ffulHnj3Y
5GMHu4JPtm6zN0XDrqBukJnZxXrYFbzIcjtrLQq7gvQVn1bdPQy7guCLgY/m
6cKuYMx2raMJFrAr2PRhmtfAx7AruLLwYOvkKaTX/9G/eX5cTq0z7Ao+3xuA
XKbArkA6pbs1eirsCpZfep745RHsCkq90iZo+cGu4NuxjojL0bArsDmw+P0X
LdgVfNxgPVMvBnYFJQZyWzw+wq7AYN+5MU3nYFdQsMHr86hU2BVUj1mjvTUL
dgV9VyOMM1fDrsBkoebAcj/YFVipZWr6lsCuIFZ+igL/HewKEtuuDnXzhF1B
2vG4bRtehhGchyOrmIdGj7xgV3DlnFhutzfsCq6ouqk9dKc8B2FFhISYE+wK
dLv0lD19YFdgKBu7/foR2BWYdIwvZznBriDEZE6xmAjsCuqMzlUd+vaM4DwC
rRit+NRb/gHBeRjy+q03zF0NdgWH77vtzQuCXUG4Uyjn5S/Su4ejw5a7Q8db
wa5gQWfh6WfXT+CcC0ahPZs6VyaawK5Ae8P92gY27Aq0uWsidw4iv9+QRm21
yz+bhsGuwFCq2rDIDXYFtnFfvBLsYFdwRPX4dbMo2BVcisqQG7YEdgUT39rP
H6AIu4LV+w+YsKtgV7DB9V4i+gm7ggFNZuMrW2FX0KEgHyVvBruCV65JHg9f
R+Kc0Uik8UX7Za3MUYLzaFThde1Y+zvYFWzNyDc78ht2BW67woZyBpDfb4xB
e5bJbNv1BnYFvbMLax2nwK7AqsOlqbX3OcF5DOLt74vQOQW7grlm3yZMj4Bd
QYX5zqfayrAr2Hxg3a/lWrArGGAsPcLvJewKGh3WOh9fBbuCabfyl89hwa5A
rEVS8scQ2BUYOe7QLgn2JjjLoaZenoSED+wKDF3F1qhvg11Bjr5x1NGHsCuI
Hvx1susm2BWIrt595eko2BWw9K90b30FuwJja+tDR3RgV3Dpycvxm6ZRnoMw
RaGc7QK7gq91M00LNGBX8IP13PdB92WC81jEvRT1U3ct7Ap84+J2qw0PIjjL
IXO3jDR2nS/BeSwavb34Qe45d4KzIlp9b2R8BqUrCO8q2rFqDuwKXBum5zca
w67ANvTr9keZsCuwHlifuyEfdgVqOV9aE7tgVzBqmc1M/QrYFWQdTt0gmwu7
AtmXmq2J0bArGHzPtVKn7ALBWREFTFN4MCMGdgWPLC/Hx0WHE5zHo8UlA9P2
v/EkOCuiB3utZ9+Ldyc4K6CFSiY6yfZOOGd7JZSRfPGQrjvsCtSHbpsfkAa7
glXTO7dZqMKu4MwI92eHy2FXoGdclfa6DnYFz1gdqk/uwq4gWV80rM4HdgV9
DdHuHzpgV5Cv9nFoWRzsCoZqztqq2BiKc+7/Gdze+NTECHYFufo6tmdG+uOc
65XQI/c9IUf/fi/0T1fAS942JPysI845loMWRI26Ksu2JjgrozM8a5tfGbAr
GJG2XL/3OOwK7nXv3+leCbsCmZJLMqYhsCvY0dbVdLMXdgXpUWPfdM6FXcGM
NQ7d7VawK8iKiB7eXXiW4MxFusEXvr4VhV3BMatvW/V1DxGcldHZvEeTF44+
SHDmIrfYwbO/O+8kOCsj8cDuvgP+ywnOyujp2kNZX4dbEJy5yPCn9JFQ/jyC
swras+bd1bD3FwjOPNRrN9zkyAPYFajfmB8Tsgl2BRbfilqGFZwhOPMQ8mjM
lJKBXcHy6S8sbwSdJTiroJAwkw1vrgUQnFWQZWvOnfNDjxCcechTvtFxx1sf
grMKmih/rmxM5iaCswp6Mck399M4J4IzDwUd+lb83GANwVkFZbkFLRivrUtw
VkHqOukfq0xnEZx5aEPnoOWHsicQnFXRYZPjzXcHHSM48/vPZ3S7bS+GEpz5
yO9yqJOkOOwKZr9Pe5M335fgzEcrm5P1R0f4E5z5qPvZ2dpui8MEZ1W0a+7V
A7Ii2wnOqiihMbN0Q9l2gvP/nrOgdqO3awvBWRVJ+eXUux8yJzirove/Jleq
ypoTnPlots4Ar/fxhgRnVeSaqnd8Ui2H4KyK7Kr9/c8mcwjOfOTBFjUaeWAk
zvl/v4d+7V1YRCp8DoKZV4/dEspzEJKSGxuaKM9BaNNeJJFCeQ5CUNnQ+QqU
5yCUqkx40E15DkLN9OmRdynPQQh5dmaKP+V+BTtW3DBeSnkOgsj9O6GI8hyE
QUuVAn0oz0FQ32Q5X5VyvwKHy/OqBJTnIPxe3WU7iXK/glj7yqgEynMQXNNs
Q29RnoOwZc0eEUPK/Qp098ZaOlKeg7Ak9uPW1ZT7FYRP3h5wgPIchKwurcGH
Kc9BMJ1pmX3VBnYFtiPmG7ipwq4gd6/xmcuU+xXM2VokSJGDXUH8Bae8yZT7
FRjtCHu0l/IcBOPhQbYBlOcgbKlRmcftgl1B1vfNYQp1sCtwLVCrfUp5DoLO
ZomsXZTnIJyzGLzoPOV+BaxsBRlHynMQ1o/oVP+VD7sCs+73Uico9ytY3Ow8
fSnlOQjPMgcOG0u5X0H1dpubeZT7FWRZzjzsS3kOwjYzN8dFlOcgrByYnSZK
eQ6Cq6h/zlPKcxCc1/rHzp8M71cgGrn6dvob2BXEThd011Geg4CaMn/sozwH
wU0so8Sd8hyENKcYP0vKcxAerd8gE0i5X8GN7pSsl5TnIHR/MA7KpjwHYVub
ag6fcr+C276vop0oz0EoDwn3KPCCXUFnl7Z6giLsCppufVn7iXK/gs2X1Jef
ojwH4dGM6oWqFbArcJicsst5E+V+BdOVtrlQnoPgdOm4mzvlOQj2SvzXIZT7
FaA7r6slKfcrGGb6YVQO5TkIyWITbr6jPAfhfrn/syeU5yDozRxwMoRyv4I3
Mc5LzCjPQVC2mLXmOOU5CPs/z/v2jnK/goLD61iDKPcrsLx7aMjGEtgV2P5K
OmEWBbsC7v5X5oGh8H4F77tWuyu0w67ge4y8kQHlOQid1WNqp1GegzDas8G/
nPIchGuOhlmVlOcgDJvzqsSCcr+CIb0Kihco9yvomsW7dI7yHATHrTKNfyj3
Kzh2TlIq0A92BRJWv6NGUe5X0DYr6o3SLdgVrKntk/04Cd6vYJD07HfelvB+
BS8ubGnhpsH7FYzJHngqmfIcBNfDY3JnUu5XkKtQ3uZJuV/Bp5AszXeU+xVc
UbbQYVGeg1Db1fbyBOU5CLq2+1t3Up6D8ER305TZt2BXcOj2hIIrlPsVJOka
H/CkPAdh7Mz6ozZXYFcgnv3NYvcN2BXEc6xCjB7D+xWcjP9d8LUG3q/AXHXj
7CQXeL+C+uYD2/dRnoMQVX0ZJVKegzA+uzw6mvIchMfTCrrGUJ6DYCetlqJA
eQ5CWV6LnWYtvF9BUZPp5R+U+xWk6N2r4VDuV5A9XuZpEOU5CFrT8wyvucOu
4FOP7ecjG+H9CtijD5RMrYf3Kxi70+vMDF14v4LqVU8yRv4fW2ceTlXXQHGR
MUkIcU3XrMkQErFJUiQpDZo0y6tIIaWSucwypYyZUqaSOTQbkiFzETKlkkyJ
1Hc83z2Xc/b+q+ddz368rH3Oufv87tprN8F9BcKfuHjAc7ivwFp9IYMK4hyE
4qwW3upXcF9BZaKdwULEOQh/fK+eTv4B9xW8FM0dP4LoK6iWv9x5BdFXYKdk
sZ5PHc4VUO717epHnIPArHGvzGwj3FdQ4uagn/0JzhVM/lb11hWE+wpeHogW
NoqH+wqOdYzqX9SA+wqWTsbx7xWD+wo2v4wTf18J9xWIq3xjdEb0FXxkXXTq
DuIchN7lpXl2iHMQ1ojzrr2POAdBq1iY+TPiHISIMb/QPeVwriAyrvuDVQGc
K5Dz7ZPhGIFzBYLfx+xLbeG+grdfGymC3HBfgaabgDxFAe4rOF45XHW6CO4r
OMh34RfPa7ivQPpTNr/WJHwOAthn6NPUCvcVhHa/9MnrgXMF9Wbpt3h44b6C
TxydIxo2cF/Bhf9GGNRb4VzBUtVsn3JxuK8g80zjw8JauK9gnVZCx3lxuK9g
UJzBiWc/3FfgX5h6Iv4w3FdwQc/k2X4OuK9g63Oubg5+uK/g8+tCqncB3FdQ
WZN0hHsb3FewTE553WQU3FfgwNNv0H8K7iv44CSzs/4k3FeQoRv6W50D7isY
VNsWlc4N9xV0S1xTmOqH+wrG2H/cKwmG+wo+mvBNPDCF+wr4NB3eM9vDfQVm
hRUNh6hwX0G98JB/jC3cV+DcfMnTOALuK7CX5+uukoL7CnQvLzFkioD7CkyW
XrNVi4f7Cramvs30aof7CpbpdRm+rYL7Cqx0A1gUXsLnILCdFEiVQpyDYPP5
SWoS4hwE0z+SFgcRfQXiUm+kHBDnIGS4/jl0G3EOwrRo32pVRF9B+c/vOscQ
5yCc3ZWom4Y4B4HxdO8TMcQ5CAPPlG/UI/oKnhrbSXb9hvsKhsTjT1Uh+gpE
zbnzNI/CuQIuDdkh3bdwriDR0df6PeIchJ5le8PiEOcgaAnbnCtDnIPA7cR/
9Ayqr4BHq5eKOAdhYb9j2DbEOQhRR/XWxCDOQTCoUOP1QpyDEBR0ckUooq9g
2xaj16KIcxBCgKfBDKKvIC7qc7cK4hyEFOGAIXNEX8GmVk37x4hzEGI26Pl+
Pwv3FUjtCbgYgjgHQe7fzTe/EOcgcAePpGYj+grKjLe8NkOcg/CS4WP0McQ5
COPLOuo5EOcgCKasTLRC9BVUOm9/rIPoKzA2kZqxRvQVNGUOS6dPw30Fg9Ub
NpUg+goij0gvtkacg6Dy6vFwA+IchKwFKYEHg+FcAWXdy5UFm+G+AqCu+M8G
cQ5CDqU7+T/EOQgUzp223VVwX4Gp0z39GkRfAR9IfiGGOAeBd/uDPQWIcxAO
3Hmy7BSir8DEiz/qFqKvgPn9FvMoRF/B61TDphlEX4FvY3BYCp6HmZcr+Lrx
sdguRF+BQLrNsVhfOFeg9nqxWMdhuK8g9FOE4Yo1cF/B98H6nw6IvgLOcz+m
3yD6CtpOpDJ/RfQV/J2YaDJE9BUcncnUeIA4B6Gl4LDQFsQ5CJ9rih9nIfoK
3G9f9b6M6CsYz5LjoyLOQfhvaHtYKDucK5jMCsxsRvQV3Feq7ftxHM4VXPVS
FsiLh3MFb3yam2YC4VyBJdNpvb0+cF+Bb4K3vRCir2BdPXvwbcQ5CMvEmR5T
B+BcQWzdQEA34hyEzODPoQWIvoLeTRdOsSD6CrzXejs9QvQVLLxsrLkdcQ5C
ilOo/R7EOQjb/nJNnED0FVi0fkpyQZyD4OIwUvITcQ7CpJy8HqMy3Ffwz/5M
YmQ13FfQL/NgY+IauK9A5ti9Jn7EOQjxFqoOXIi+gsOXqSGciL6CLXuXbtuP
OAeh+Uqy+ULEOQghaUY2MYhzEJK6wjb5P4RzBWy3h7YUI/oKpvb9jG9A9BXw
3LhUMIw4B0FvD28rRyOcK4grVLPVWQ33FRjvSy3XT4b7CuoTqxX38sN9BWsT
OHhZw+G+AusTgUrqiHMQNvhEjEQizkEwFv6vLwlxDkJ1/O06LsQ5CLfVJSsK
H8C5Ai62VsZrnnCuIDuoKpcP0VegvOP4KgtEX8Gm45yJ1xHnILyP9OZIOg/3
FTw/xef+rxzOFUj7qd7np8J9BX/qyyajd8F9BQV5TD9PesB9BXcZziZtfgv3
FWgkJYcOIvoKyk53zAghzkGw0q4LGY+GcwWNVxf9+RoG5wp8neTeOyD6CiJ9
tRWGdOBcgd8Ov5HAZjhXcPZs1k1mTbivQNmc3e9kBJwrqDryO9pOGu4rmAhZ
yMF6FO4r8KO6dJgOwX0FLjvHxwwm4HMQPhuLX5peBfcVxCziVBv8B5+D8GvB
e6c+xDkIrcIccmyIvoKLO0f4FyP6CqSSR3dNb4L7CkrkBJor/OFcwbbdD4rN
KXBfgbW66bOCXLivoJzRfypiMdxXwHiFUmjxDe4r+GMewNfSCfcVjEqEu2cr
wH0FvKrSH61N4b6ChaenulQ3w30FtbyJ+2x3wH0Fw291dpnawn0FLWztwZuo
cF+BbrHD8zoNuK+g85ZSy8UUOFfAnnnj+k4A9xV0d2sqn4+B+wqGVfcUBJ+F
+wqe3/tw+L0+3Fcgemc3ixMV7isoYRB1KLeF+wpu/jz5WNcD7itY3CDWeWYp
3FdQvvD6Sq5HcF/BH50v5hwKcF9Bbu62c+o9cF+B5JXyN2svwn0FFu69rbGP
u0g6A5jeECIbNQrnCio+72ORXwnnCrzHr/xaoQnnCrj/5YuVNcB9BbeHvr43
7id//4h9Eqbub2V/D+cKtIZYK70qSe+b2M/h7T+oIGP0iaQzgBCBDL5DcuT3
0GGdV/FL+lWd24jzi+l1v+IuXv1F/n4NW9G/uLmzPJw8ngGc4/MYb91Kfm8d
1vFgyFwY0EZe/zOA0kuTimuNyfvTh3UY/lxd9ID5LfE6wXSlB499mvDzC+bl
CgSGeh4c4KgmjcdWKMoPxk9zkPLe2M/ZYvvWKnDVU5LOACa5N7xlP0T+nhSb
r8V/zjluyiZeb7PnRxzfn2ZVdZs0ngF0W5Uu4owhvXdg+p5KXYEfwqT3Duzn
cIrJCawJdS8l6gyg3Nho5YnDlsTrFhufmBHbXsmTWErUGYDJUHksy2DU//V5
uYKdcSE1T3PhXIHUhd/x0UNwriCHYVTxRiqcK6CMCb7RfAHnCqgv7ve+ug3n
ChY33tnoFAfnClQNRB9wvW4kXQ9s4G2ryK1zvHBfwbkr+2wDWMnzywbc2aWS
WHaS55cNtAtbll3QLyPNCxvod/B7s9zuCWle2MD4+zr5YM0U0rywgYWbD3A6
1wSQ/GcDK9YwpsaYe5J85gaq7ySvH1ck8w1ukPZbW7LRCs4VmI99OWC7Fc4V
JOmeGI5KhfsKMkVc03d5t5F85gYP08KDm/WaST5zA4+UWzIqA3CuIOK5qXBy
BJwrKBz+c/3Tk0qSz9xAOUPRiieEnMPhBjk6lsd1pEtIPnODm4m5TLfl4VzB
+gPlnZH9ySSfucHKmgVevrUhJJ+5QWrmZ08/ljMkn/mALI/zMXdDMhflAxd0
zr8AK9tJPvOB2989digHfyD5jL3/fs37MrWfxDdmf74o35mR9iaSz3xAibo4
R3dFA8lnPnD9c7t4mwGcK4gL4yziKYNzBT9LJZMTF8N9BUIDP8VDUuFcQdTd
/1jevCgg+cwHmF5krh5YQX4u8YH2ChevQb97JJ/5gFrYZ/eHUUEkn/nA2CvT
o9eTD5F8FgRhLifrEn1IfAPT/5mNl5YUNJN8FgQH2w1ub/NuIvmMjb831hvz
hsQ3MH27oqXg4NN6ks+CIPNWuZvT1VqSz4JgUPPzlSUCZL4hCF5rnBpyWPWG
5LMg8HPsq2s/9JzksyDw/jy5ljW/iOSzIGj8rbH7fMtjks+C4AZvtSf3w/sk
nwVBO3/aDo7gOySfBcGVro0qUwXuJJ8FQcy36eMHhexJPlPAGR1LF7GlJL6B
6Qfsbyn2nK0n+UwB7hsZA0Nc6kg+U8CMjnrAcx4S38B03b+pLS/r35J8pgA5
u9WGDNIVJJ8pQF/3X5S/FJlvUIBamYmYhMIzks8UUH/c3r8mqpDkMwWE3m+9
kXv+MclnCuiJucGXG59G8pkCxDzTfTgyYkk+U0DJ2Y3ybcd9ST5TgGvtioan
wZtIPlOA26D903vW7iSfxQH3jfofkZ+rSD6LA++KUI7Az5Ukn7H38bGsgnUn
Kkg+i4Pj4dSgQHkS38B0oahvb7NvviT5LA7eXBhqVkx+RvJZHAQmcVOauJ6S
fBYH325d93f5nkvyWRyoXrnh+Igtm+SzOKj/RW0/bZZC8lkcHDuV/vBeyF2S
z9jPLzP69bUFzhW4ftjoLXVAluSzOHh11cNm377rpPWGOOg8usYcMAeSfKaC
4283UAVePCf5TAU9mUB9guE5yWcqaIygyHd+KiP5TAUbmoXlCo6VkHymghL9
itvOToUkn6ng76QgRUwul+QzFbgnuQUm+WeTfKaC1yXT+e9WppF8poJi3yc2
aenxJJ+pwI7RvGBMgsQ3MP1h764jZ25dJflMBe+sH2/5cudUKdFnKmCsGebL
jvAirfeoYKjH5yJjXhDJZyrI+nB3dVJiKMlnKZDd9u2+vEMuyWcpEF0q+cXo
0BOSz1LA9uPhWLZnj0k+SwGWFX+keC2zST5LgVedBySz1qeTfJYCYYqanEVK
KSSfpYA937nDHTVxJJ+lwC4LlxOqJ8NIPkuBddtHK/3ekfL8s+csDOu4raDK
lRJ9lgIv18fePnLStZToM/b3bj4QUBzuT/JZCuRLL07qyLtF8lkKLNJQednn
Hk7yWQpUcBtFKYFIks8yYO3T3KfMS5NJPssANvexqvsRiSSfZQD3f0HNHTYJ
JJ9lwCm943dcA2NIPsuAF1r6F6JMI0g+y4BmSuRwa1cAyWcZEOoq3He5yoXk
swyQc1jH11moV0r0WQbsDThTw6xxrZToM/Zen/2U1WHCl+SzDJg5/2iLaXII
yWfsvfuKF8PqbeEkn2VA4MPYnsLnkSSfZUDYBh9u74LbJJ9lgKGqfeGjsdsk
n+UA/4++9eI/fUg+y4E9VpQAPzVPks9yIFl4aa5z1DWSz3LAqHfFPfYtdiSf
5UDtQJHx+jHlUqLPciCFmrXdn/VCKdFnORCj98Yy4QX+OTKXK8iKOsnDVOtH
8lkO3LzXyrjLK4TksxywXbAk/fSXMJLPcqCuhys5XTeS5LMcsEzf3hjVd5vk
sxz4tSjJ8XxBFMlnObB4/LCFhHcUyWc5EHoktiO7iezztM6RRO3MM+3k95QJ
Hc0y+xa7lXCugPG6iPHuerivYJg5YWA3xB9+6QSN3R1/t5PMGUZ0lqdyPnX0
JHODGZ2ROP9+yc1kbjCpY3dkYauiMPl9cFRH6HyNs9E6Mh/4q5N83dVXcJCc
f/6t47beruLNOfJ7ypjO4L71nWXfyevnfzruIwxB3e/JudwpHcV1r/+KHjxE
8nlcJ7D7caT823iiz67MwDrmdUezMPm9mwmkNlXYslXCuYLubaoLj76AcwUH
Hmu+TeWCcwXnhQ90hzzuIPm8AGyt1kldfJPksysLaGii3KVMkt+7F4KRrC3g
gAH5++4FwNg/eIOfEPm9mxWcPns5esScvI9+IcidcbLJEiW/dzOCuBDDI6YG
pPdBV+znuL+O/MFOfu9mBoJmQ+ybvnkR13WujGCV9a1wDpYwks+LgfaPuLKg
IThXoFzhVHyDlewzG8gRyxCS8INzBdq1xU5PPsK5grQfe7STveBcwd0d6zv5
T8O5go+2UtKUQ3CuYG9tU6qsQx3JZ3bgWHOsaHs++XpeAr4p7zqo3kV673bl
BFv5FR9yRZA5FQeovCwhxmND4huuS4CQa2bhHhGyz4vBxwfuFwsGSO/drhyg
Yo11HPPQFaLPZTzgwIbT3HckOok+uy4FVpIsXCwOcK7gXEBtuyjUx8gLjHOY
WJbEtxF9xv5VMGw/cEeStG/ClRtoVZuZ54zAuQI5nzZRk09wrkDm+orolbpw
ruCql/u/CEUS33DlBZTT21mFpJ4TfQY8ILPL+FSpUjHJ56UgJ6xCYeAVnCuY
smnyHJwmvXe78gDVoXO364ZJPoOl4FJbzbierSXJZ37wcfzfokXH2kg+LwP2
5izaN/RJ+yYAHzgi03wyciuZbwgA87CQLy84m0g+LwMGSi57d2qQuC7277kz
kw+evIFzBRtuZ7REXKsm+cwPKj9xrmnaUknymQ9w/D2hynAYzhXYl0xekh4t
JvnMD3LdMgvsWfNIPi8DMQv8/lZfziL5LABqtbvWG5ffJfnMD9aNDF9YO+1L
8nkZyAkK2VV92oLksxB4eazm+mh1A8nn5eDpO4pKVX0jyWdBIBsgZju6gcw3
hMHV75Rvx/fUkXxeDhYY5vb7z8C5giy2/zzX8ZL4BhAG4ysl4z4mvib5LATW
CGpyLPcgce8yQfBvwLUgJo60b8JVGFgW/pg+Xp5D8lkIsByvkHlYTt43sRzk
/3E7I7ggleSzMLjQ/EfNVySA5LMQ6PH9297yhLyPfjmouzoQEWh9geSzKODY
U+OUJ1FD8lkEUAP6SoPiakk+U0Bmjs+EjRqZb4gBFgp73d/gCpLPIoAn6aLn
bucKks8UICO7/erifeUkn8XA2eqU8dffS0k+i4KZD5c/8mx7SvKZAqzlGBwP
ry0g+SwG2CtVAhY03Sf5LArARf7brPXkfRMi4Prm1VF3/7tL8lkMdC7ccnxx
GKk33lUUPBQQ9tA2PEtcbwAR0GD2IOuFKok/W0oAbabJQ6nJr4g+l4mDepB2
r+DhG6LP4uIg6vvJtPGBcqLPrhLguUFai/XuZ0SfO8WBYMfV3YJRz4g+A3Hg
PtZ/SW+8jOhznAQQoBYfLeLJIfksATy7svXbokn7JizFgV/g3lbnrEyiz2US
oCVHijHiXCTRZ+zfuqYTOc4lIUSfXcWB3J8dQ5UmHkSfOyWAXYjvdl8rD+L6
GUiAXOqdY+9FbxB9jhMHZu9y+84eCiL5LAkU60qKeDWLSD5TgYeB/YmWAtK+
CXEqqK5m3B99icQ3XCXBjb6sRofeHJLPVDCYeDWQo5i0bwJQwWjzo6iiJU9I
PksC++hGvw0diSSfJYGn6o+nao6kfROWVJB+4qh5Tn4syWfMJxmutRv2kvfR
SwLXg64ytkuVST5TgWShi8r+wfOlRJ8lwYimUtbFvhCSz5JAXyDXBDjfIvlM
BbWl16Z3qpPWdZbS4F16WsBO03SSz1LA7by53JZj2SSfpUDVaNW2CXkS33CV
BuleQolnwxNJPkuBAWefifDNySSfpcBQw7vG1Jgkks/SYIDxxUTs9pskn6UB
j4rbCQdmH5LPUqA+fGdhRPUVks/SwHepZUaevncp0WdpwH9Yg/dGG+06nJcr
qHbQyXH5F0jyWRqYUQS+GWiR3ruxf3+2iYxNDEaQfJYCkV+KPQtPk/iGpSxo
uiRyqNc7nOSzDOAyqirJ0I4h+SwD1LbJGojExZN8lgV/vvKMPin0IvksA3bv
PBoXruJH8lkGLNK8MODQfJPksyx4PZHrHlnkVEr0WRb8lcn43GvsXEr0WQYY
ub/4K3vCrZTosywYDPzDtfRSKMlnWbCX3dVSjzGM5LMM6AvawLn3GYlvdMoC
vbUBQXsdSe/dQBYc3ltt2N1C4hvYv4NBXt9VcvD3bgaA+y1YXHaGk95LMKyD
6+v+RfIW/MT3ybLRx0961E9V0veDc9P1hqrhb5/p+5f56LpJT5NnMX2/rSBd
D8jrW/Z5GF+3UOi69Y3l78zp+xnF6bpo+NKpz/T9d1S6ruPJsJBVGX+OSdH1
zIb7bB/p+5tk6Prjoro6ahe+H0eOri/m8HUcPYjnPHF/mIBrxpigNd7DQPeH
CYC/4XU/6L0NbPTxxf5ykqfp/X7cdD3uWcjGQDmyP0zgYtkT00f4vmO6P0wg
kifFbFKD7A8TGL/tXPvzUh3JHyYgI9rVLitSQfKHCSz1fj524k0JyR8mcCep
QV0cP5eW7g8TSGS9fs94SRTJHyawpLzk4OUFbkR/sPtvb4X4/Xx6vwTuGxeI
e1XJ5Iv3S+C+YeM9KkIurgBkP7mAIuvvyd94fwXD3HvxIZ+7MWFxJB0bz7bx
9ncXvE8A9xkbzxIbu+UOB0nHxgeZ9jJF4vvicf+x8X/7Jewz6Pu7+ejj5Tb1
fR3haSHOCzb+Ul9QUevKRtJ8cYF8q2sH7PF9yvh8YeNfrjqgtpW+35ZCHy9u
+mrmLb7fFp9HbPznSjMfbf83pPnlAvcDe09+wPeN4vOLjV/Dd5DR7Wgxad65
ACsX566+4XzivGPj9Y5yGIbS9/FJ0cdLffftAfg+Pvx6wMbvnPIYW2MVQbpO
uICkfYJvb8Mt4nWCje8qVL8hz+ZKun64gKga3/3q5kvE6wR7Hkf6Twya470i
+PWA6bc3OKodwXtI8HnHdMrF3S/XlrYT5xfTC12WVUXi/Qb4PGK6O+9qW/tW
0nxheuox7ku++P5xfF4wfdim22Arvt8Z9x/T1QJDiofw/bm4z5iumJLwbpPI
E6KfmG71amJPv3Ii0TdMj73J+siIEkT0B9NtvxodqHJzIN1ffCBf0/XGUbwv
Bdexz6WHXUz2HPS+FPz+4gOCPDUir/A+FlzHxvvp1Y5x4X0s9PsLG1+QM3IP
79nAdWx88YkSe056zwY3fbxd4gmXhHKSjo2Xc7wteZjeFzH3/n6QMWzUw4uk
Y+PHFuauCqP3HgjSx+uPpyfz4fv3cR0b/+Oyavg3+v59Cn08p+2w7or8N0Qd
G29TvrkI+L8gziM2Pqpv11gZ3m+G69j48fQJMdnr+cT5xcbPTMnG/8D3BeM6
Nt7QT+vzgFoacd6x8bGdoyY6r2KJOja+ayZkn90T0n2EjU8+KbUj5Y0PUcfG
17dMgAoBN+J1go1PWf7npfZGO6KOjXcs5WLm2H+KeJ1g65Rd5tKT5/CeHPrz
VgiwOXdttaT36rDRxyum6wXXsLwnzi+mi7u4ck5M1RLnEdMnm9s3p+M9FfTn
oRBwuG/1QG/Fa+K8YPpbVunMx0Uk/zE95I3zgjx83zr9OSYEvvg0mrzTuEf0
E9PTvDZPJ38PIvqG6WESB5mdjZyJ/mD63V0G7UFLLEnPHwoYqysuk8b7f+j3
nRjY8FE9sBLv/6E/lyiApUM3ngnvF6Lfd2Jg75vKkRi8X4j+vKKA/Bdrt7jj
/TP0+04MbLy1+9eC6XKiz9j42oANDbfwHhX6fScGbq7urXG8/oroPza+8mk+
5xe8D4R+34mBM7Z1P/bxPCM99yhgg0n1zUpBko6Nt+Ar5XvklU+cL2w8h2ag
9+MnuUQdG58Tpq0ygfcz0J+TFPB49aJhK7xngH7fiYHh2ICuvQ7xxPnFxiux
ejIm6UQRdWz8wCXheP0PQcR5x8aHtW9Jaz7pRbrvxMD36eLcoX+XSc9bCjiX
GDtmZGZH1LHxend1StePHyM9hynAwE99t7XZLtJ9JwZ2f5F/kGtjSLxOsPU7
tf9T+u59L4nXA6aLHr71WObfS+K8Y3r4gXst//B+IXx+Mf3kWIoMo3gpcR4x
3Xab6I6vLPnE+cJ09xGfC9Z43wg+L5gO7FXszz9IJPqP6czFFp+ijoUTfcZ0
cx+f+ylLPIl+YnpiyaIbDZRzRN8w/UrIyge+E3uI/sz+vcVTYYZftEj3ERUI
RW63Z6AUE3XsPWbgczA1Ae+zot9HVPAlRTe/Vu4pUcfGy//8oarM+4joJzZ+
ZfTdDStECog6Nj5bbuj0Co8M0n1EBfLX9bnz7+UQdWx8h/cRNnm8X4h+H1EB
+4OdqQ54Tw6uY+OF5HYtFXwXT5wXbLzWrxt6GwsSiTo2Xru1TezLigjifGHj
I225e/OyI4k6Nn586wL+zWU3ifOIjffQ/6N6rPkGUcfGX673+aq68jJxfrHx
2EtZ76oQJ6KOjRf0tzfdQrUizjs23prl1KRSylGijo2/tEm70ibNjHQfUUHs
CanrjAFbiDo2ful+E9Pt/Bqk+4gKqE4XtSy2ribq2PgG5wdGdw1ESOscaXDM
qKs9rSWReD1g+ud057+F1UmkdYs0SGOKuSeomECcX0y/PCb/7EfdXdI6RBo0
GO15tjs8lDhfmH5ILOXjgm03ifOC6VqlWtcMcX5CXz9Ig0HukrzIp2dI6wRp
MGI03MDwbx/RT0zvOnBPYFXDRqJvmH7gp3kvZY8C6fNdGth3R3WGnOMi+oO9
1+vLiXNtaAsj+oPp00f/3d33M5zoD6ZvFP0pHfUhhOgPpmdG6+l0WPoT/cH0
8K6t5YK+HkR/MJ1x59CFkThnoj+Yrv7fGtuje2yI/mB6IXt/jWXcfqI/mK7m
K540E7+Z6A+mC6uZbgvNVCL6g+mjLrsVFosIEP3B9CJlnkV2FrS+Alfm/+vY
e33ked7aanwffRkPXRe8Wm0Yg+9HLhOi6xZ7JZ3qo2jrH0sJuu58SeZND74/
zlKarvvqX/kzJES7Pi1l6Xq/rn7SQiHavpiyuffr6m3h10ZU8evtD+1fLsBw
c+m7U3gfAgMLwPXOISkFL3z/PgMvXRdkbmZ+iu+DZhCm65MXVx2qxveTukrQ
9anhleYbkmnPVVdpuv7+hurn53p4Hk+Wrns8PbPw8Do834Lzt6VAa30Nhxbe
G9A5915TYba52DEcX8fO0O5TAcCVKh2xFO9ncKX9XbNc7crBIUu8T8CVi64P
8Yt+FcH3vwNeup5kypi6Ht+vDYTputkpszEzQdq6KE6Cruv9bknZie8fjJOm
6795arweZuDndsnS9aaul2dc1uH7hhbSfBAC3FnXbxnh/QYMPHS9rCMi3wnf
J84gS9eD6/admllG22fE8Je+PtSu9xk8jfdLMLACXO89kSofhvchMCyh61OJ
crrmf/B9l7x0/e2Tr6x5efj3HQJ0/Xl47qY0Djx/KEzX1Sgiztl4HrtMgq4f
PN+Y8diWdh2WSdP1Bd+aBB5W0vaXlcnS9Qz9yNGm//B9TzR/ZvdRCvznG3Wa
dl8AHrq+8rXA8ge1tO8jgBBdP2bduPgCvo9YXJauj8iNWMf/3kHz4R/9c1+D
clBHywrn6jTfMH1bPPPXPLz/wXUJXffJ0+0+j/cVlPHS9XoTzW3Hb+LnQAnQ
dcXGzMP90bTP3zJhup65xDzLXJ72PCwTo+svKWbu3uG0XGWnBF1343KfVtlA
e+51StN1Vj2Ht4bytH12nbJ03fDvocu947T9Xwy05xX2nHd05l6dl4Gfx8RD
1z99cnjqfwDf1yNE1yVZX21if027T4EEXS+bvjJeYUd7HwSydH3sXZKl4SP8
/zvHgTsrxHfvRHDgTvvsYy+fwBw4fyC2swjBgbcmbkztRXBgl/PJNjEIDjyQ
vrRwCsGBVYUdZS8jOPB129fUJwgOPNiV3ZioBHPgo9oTLg8QHHiLVcL4226Y
A69pGtgjfxTmwD7pl6n3ERy45fWehk4EBx7moZqeRHDgYfFKNl8EB971+Y1c
FIIDUy3Df/Kvhznw3XytB0svwxz4Ycnbb98pMAeOq9KWSX0Nc+B3u8T92tVg
Diz2x/sR11KYA+94aDIezwxz4IWhIdQsBAdWVFnJfAPBgVcf1ddfiuDAqXEW
thMIDiylvYr7LoIDK/5e9MUBwYE7YsRNAhEc2DRhqedVBAdmCUg8F4/gwKkX
JYtmEBz4rvrf5QtWwRzYVdv+9V0EB3Za1TVoieDAUZG9pc0oDuz7S2HcD+bA
Npmf5N0QHPj193/CtUdgDryliHOjKYIDd7414LyG4MA9L1jOnEFw4ONNCiq8
1jAH1soy0/vWBHPgZ219j9Q4YQ4czu1x1v0TzIFffh5J247gwJ1fmhkPIjjw
pdjyQnEEB457wp4aguDAN5WqGoMQHHj6wPC1hwgO/FP7culKBAfW+117MwDB
gWNzfdtaKTAHzv4b/GCfCsyBbywOGrMShTmwe1z+7x83YA68l/3uJyMEBy5e
FZSyHMGBg1JM5B4iODBbi3e/IIIDh1SbB91BcOAT4j0H5REc+K/s+Hg+ggPz
RlyU8UJw4LdnX27NQHBgbakBy3QEBy4JMoxTRHDgphn7pCoEB37o7fK8Nw/m
wByizIqf/WAOvPh3/gNmBAf20RG7H+kKc2CWwOQd+QgOfKzav3sSwYELhRqz
01/DHDjcstraKA/mwKKNIfYjVTAHtou13NIvDHNgfxblA+lbYA7sdrsqn+8k
zIFX5lCGgxAceK0bQ+kVBAc+FPsF/EBwYL76rfsWTcMcWI9BUzsOwYHbDzs1
/1KAObCPmeHvhQgOHJPAu8wWwYHLpSabTNbDHFgqiaU87wfMgU2S/T9+MYM5
8OJ/vGpxgjAHtr7hmKGN4MAfR3KNUxEcOJ0lulkMwYGvLjy0yBPBgcM4/HWj
ERy4c1ujUMUUzIGnE657uCI4sOTbAHtJBAdewaVQG4/gwL05u43+LIU5sEtF
9T8bBAdeObVFUBbBgSVMjzxVR3Bg/qGGZQUIDsxlcdjPAcGBuR6ZuP1CcODV
/OUt+3VhDtzu9290XzvMgc93bStc8h/MgWvCudQTWF2I1wM2fvG2PeyZe2EO
vOiLzO3j/2AOrJf1geJjCXPgWEWG8wevwxw4avoxGweCA7M0hS9s/wtzYNe/
5xLSERzYcc0qY0sxmAMbxR1fb4fgwBtu5GTqIDjwlfOmeR8QHLhvZn+g/QmY
Ax+b7PhQxAtz4IQdBRqKkjAHNhSx0S1j3kv0Z5ZvK8980GDZQLqPqIBjfHXo
UWGYA2v7y4T8h+DAqjtdv61CcODyjvg9P3lgDiwmvN4jjgJzYKvw9fum3WEO
vF5O+v4eBAe+y5n3ZA+CA6c4/SrTQnDg4k0rlR8hOPD5G5+0UxEcWCc8Nqp8
FcyBmTNWfnV6DHPg1XXmx71fwhy483eNSOAHmAOrNq9Kb1aBOXDL2SMpx2/D
HPh0W9uH/1bBHJhjzcPYb1kwB16VXbXqbR7MgU+ZGk0K3YM5cJCs2OUJRZgD
/3q1oOu5LcyB2f7aHf9tD3Pgqal1TNytMAfmYr8gxPMO5sAj+9rtEhEcWMxu
8T7b9zAHPnDgwxvlSJgDtxe3O7PugDnwLU/2/OIGmAPPfMxr3FkBc+Asxetf
o7gsSOsBaSCkU5KU3gtzYNHjfRc2XIQ5sHlw2FRAMsyBz6yvFuT6CHPgqZo1
k6KjMAc2Pdw65NUOc2BG77y+/uMwB84N3jG1PBDmwI/B7gTFVJgD7/VOmmY+
BnNgDVP5tblZMAcuDqZEVT6BObD/11ueq1/CHNhgEYdxkS7MgY2Pxo6CEJgD
90Qr7HuF4MAuF9oG/BAcmLKvOeQnggOXRoP3oQgOrN8odcNSGObAbRLTI19E
YA48vLzz0wt1mAMHXZBgOYLgwEEy2qOXEBy4tqs37RWCAzcxKJ9vQnBglo0l
p7OSYA7Mo2w7s1Ef5sCqvm8vSWvBHNj6UXqjKoIDrx3W1teOgjlwXPjJi+II
DlxUJC57GcGB4z09bLURHNiPqWSFCYIDZ2/3/smG4MBWty7bqCA4cMI9568u
j2AOfO2n7Z7j2jAH9urVdTmO4MD2Ab3pbggOfLjz1fCoMMyBy16FWhsiOPDa
J893HUZw4Is/chXZEBx4Z6Gb8REEB/6gXsQqh+DAxpdqb/ohOLBy+mRwwDmY
Azc3HzXc3ghzYO2OzUmJTjAH3iliI2qG4MDCj+wslREc+OBohb4jggOHGLg9
FWfGP1/mOLA05+FrzAgOnLhMe8oTwYEna5a6RiM4sPQmka3jCA5cNDjckBkL
c2DR5GN/z66COfDih8u/sMTAHNjjxd3XtoYwB/5rukTivTrMgSlvpeoPL6H1
g83jwC7jLiYrMmEOPDz9Q0T4EMyBb0w+146tgDmw8IvWLJVLMAfeq7yF4X4l
zIGNxzz9R1pgDqzIbHn3wSMSh8H01exhwRdVYQ5cmV/h9Lsf5sBmsW3UqWGY
A68tD3JaMAJzYFCr/ExxMcyBAxbvGH4iDXPgfTu99a4owhxYSXpxYjKCA/8N
0xKTH4A5cPSTUJ51NjAHbugKDdyxHubAiqfTLJ6fgznwQC9bnWIszIEpJp6R
FrIwB5Zj2MnuXQtzYBZTzyp1TZgDyynYdEcjOHB3/Cf+WmGYA9sAMSPPlzAH
5vejuMsi8sA2l/UKffhhDiyQMLXqzBKYA/Mnah55OglzYKsjD680IjiwW/OM
/GqIq3OBvQXO17qqYQ6cuGRLcwKCA9du+Dl4rgHmwK9yOJ6ps8MceJ3SQqNf
f2AO3PHj+JrDKA78edWKu7wwB1704uCpdathDrxWrzY2NRPmwDJ75JIyEBz4
glvitTIEB7YbzYvP8oU58KqHvnLySjAH3njJb8HYYZgDS2iX7h0egjmw3ABn
mN4hmAOPOoiq19rAHHiJZv6TR7YwBy4+u/51zEeYA1d7ihdHLoM5cEhJu/LA
MMyBs5qLtY8AmAM38lUpRxXDHHidwfSq009hDpwoW7nyAIIDs6zsvxXRBnPg
g2tX2ez8BnPgd6Jg4MIRmAN3ju/7aHgO5sCuK9a94EVw4L6Pmr5mqjAHDgq7
solZCubAgppbf4TdhjmwTcDF3ULDMAf+G/0pKwPBgYHmdCylDObAw/Yff19D
cODdLTWiTggOXGPqqrtcH+bAir94ItMqYA7MNm3z69o3mAOryJu/zfGGOfC6
AYVKHnaYAzfdU9a+gODALj9/DHIgOHBOEJtMZi7MgT1WH7WK8IU5cLZTsmbf
B5gD35pkAKbXYA78aIfG5bsIDly8vElh6TqYA7tS8j8lV8Ec+Pbx552NxTAH
XprdW5bVBHPgyai4a3HSMAfmsp+6abwH5sAZJ95PprrAHNhlk+FHWwuYA3Pv
Z9hoUQdz4Jetou/yWGEOzLbkqOl5BAce6wrcDRAc2DlxRrlKHubAA9NlPqwF
MAemNt1wXIbgwAdW2q/drwVzYLXNZ/s2jsMcWNBdVCjsGMyBGX/1GPsowBx4
/9JLRx8hOPCWX2tKvsnBHPgn34vehwgOLGHQeGKgD+bAdpOMG78hOHDW7wXr
X/6GOXCANF/JRC/MgY8uusXScw3mwIydb8fOdcMceM+zVQLN3DAHNjhpYa8r
AHPgiw0i9/s8YA4sdGXyhFIOzIFd9FiDFxjBHLjk0/S266YwB26MElTQvQhz
YP9Lf0OfGMAcOMNiT8ZQN8yBu/m5Vf5zgDlwRJBOpshymAOzP/CMWX8S5sBs
ejq3OniPk57DFJA6qTh99DLMgV/evVgLUmAO7GNsWjuyB+bAWlH9MxUzMAeO
W3X9aIQjzIHzN360uCYCc+CL7sw+pswwB944JbFRGcGBRXJWJaakwxz4nXW2
QY01zIEP/2ekmiACc2CzbrfdrxRhDsxxdpWTmCTMga9EuLUVasAc2JRq15Ox
HObAE7/e5BohOHBJOdPbgzIwB65tbEl5hODALBL+UVuEYQ6soKGuYIXIA4vc
tV6dlABz4FOqMZty3GEO7JZcy3odwYH1B1/uGK2FObD+sce2DkUwBz5/P2SR
iQrMgWW7ZbLL82EOvMNESdK0BubAX7fmfxPqgzmwgt+oNv8mmAMvKnhw2+Y+
zIE/Fbx13aQPc2CV1tBh25cwB64t1JTgrYM5cNGxxtVTFTAHTlijHDV4GObA
4ZOaDX8yYQ5scf/85+BimAN3dj1c9qIN5sA+SgbOSTUwB3a51JF4XxnmwP2N
hS/WtcAcePWYfaxdNMyBG165b127H+bAzWe+XG3vhTkwg6j1mUXdMAe+8Kf6
N+MqmAO/TSrZcI1Zn/S5Lw0cSu+Wfs6COXBuTUeH8x9EHljwxYGdXTAHtrKl
Ptk7CXPgw1cerWvvhjkw9Z9fkrUtzIFbuAsMayJhDkypVnpwPR/mwA+trnX9
dxnmwP/d3LUssxbmwLxPDPfLt8Ec+GyXV3dvP8yBrybcnhG9CnPgZ08dmngH
YQ6cbNp783EhzIHHOHN6xKkwB05jszj3+A7MgZcqJD5yM4c5sNWL/U8VRGAO
HDSWclVQDubAbtcLKANaMAcGoypTowgOLJ7dvtcHwYF9dr03eIPgwLWRFSsX
2sMc2LNGnlE+EebA4z7u4V8MYQ7surIWbN0Ec+BEE6Xej9dgDqyfYGn37B7M
gV0yHmonIDjwdP8LN+VHMAderX9rcgrBgU/Fvuq9j+DAzNuVtTgFEBw4elja
G8GBbabKl80UwRw4mCnprLQRzIG1Hl4dFHgBc2D94ci9vQgOrJSxeC+LPMyB
Gb+bf7qlB3Ng09d9ynabYA68ct8jvS9TMAeu9Ft3ek8uzIHjKlYY/WCDOXDE
htKD3ggOnLAd7E9xhDlw6pKGqpCvMAfeKrlNYU0AzIEpr6VTza1gDszNaCnd
/g7mwDNb/X6wsMIcWG93QY6qMMyBhc59GPx8CubAmX1FfX0IDuwxFXr5syTM
gb3upRwU8Ic5cFlrhOJkIsyB31jGun1Vhznwjx2KrIqZMAdOGEsM6D4Mc+B2
s4OXWcxgDpxDHRhNXg9z4KmtKrrDWTAH5r8bM1J4FObArwScQq3qYQ48YL9g
Y70/Ig8cSVlxfAzmwMM7xPyNumEOzBb7Sn+JB5lzTusIPth8/OtnMuec1mmT
GzXd/gvmwH19xgJpsji3mePAe8Rl5JzbYA5s48k0sO0nmXNO6xx6zHDFRAfm
wP6tv+QMd8McePJ3JTdjGMyBewo0F2Zvgjkw4+tQ9dBdJM6JPbcN9yYpL/1G
9ocJTGaM/yh5B3Ngn/43NyTOwhzY7oRRnCiAOfCB3a5pVb9hDrzGK6B2UgTm
wKbsQTeuHYc5cOVbpbL962EOLK56dcczjlKSP0zAZbXJTYM1MAcuDS/TOHzu
NskfJtDc73/hE8N1oj+zPQnfJvwLcmAOnN/paBu+A+bAaxe41Wl8IfvJBYaP
XjatKIQ5sMGFQBbnO4heCP0H3Xu/wRzY6xynbJcCzIFrt4Vuc17dTvR/Np9s
KH68QB/mwIZrE0KTOBB5YEtFiUscMAdeHTLgEeMHc+BhH9urrEEwB961WdaJ
egvmwPpTQkNZWTAHTlXgPJhtAXPgyORlbu7RMAe2W3xu1XN6TmaOA6vuXRnA
tRnmwKkiIinfdWEO/HaP0czZN+Gk64QLTHldGDixFubAIhMSvEsUrpKuHy6Q
1mVe9IriTLxOsPXDoJfqCofdMAf2H5dzHKyGObDFe6HvekMwB7YKWRMxNQRz
4AMuqVpypTAHPvy+pWzBe5gDy9tc/NhoB3Pg/VoT6z7fhjnweLBImZoazIG5
UnWb3SbvEX3DdCbmuOb/GAOJ/szmikOuh0X8OU/0x5UPWESdOxIv9JGoY+uW
LWubWgaaYQ7Md75g88YRmAMrMxf+e38B5sDTYyOKEjUwB7aLL1xjtgLmwGz7
Btqlc2AOPLa1b0ngW5gD88TofNQ/AXNgc75NQQd+1RLnBRsv37t1+7tymAML
BR7KmdaFOXDoaZmU6FaYA+sIhLcfyIE5MMf7y/tuSZQSdWz8Ib0p34VpMAf+
cK88aVwQ5sBZyXy87vyIPPAh+QcNKjAHttjaeFBTAObA63ll68KTvIn6bB77
486zi5dfJ14n2PgYg3e5aj/PEHVsvDqznK+C4QnSc1gItMWp2ZoAmAPvTZn5
GZwPc+BQNkm+89/rifOL6TlVP9+ZDMIcWKO3T5n9DsyBT0xccLA1hjmw8cmS
mzW/YQ58lPen36m7MAcWCto9mDKTQPQT0xWYHyZ83Qlz4N2Wy1abJDkR/Zn9
+Sx5dR9/HiA9fyjgsI+Jo9lXmAPrV6aUPdWAOfAVJUcX520wB17d/Np20yjM
gdtGVv2LDIM58M+QYs/byyqIPmPjze6OpncMwRx4j/oK+bdJMAe+6L22fox+
PuMcB15d8ujLY1WYA+u1yLjNaMEceEjpy+R/GTAHnqEw8kQ3wRxY8lYLuLQR
5sA3heW6HinCHFi7werlHmWYA4+rqLzKS7pN1GffR25G3HkAYA7cd2hH5MAO
EreczetKNfDJ6l4iXg/YeNfUZWXneM6S7jsxoDyzwKRb6CjxOsHGL5u2943g
MCPq2Phi7mIWsf2biNcJ9v5yKPer/+OLMAcW8s0fjRB5RZx3TJfTkn5tGglz
YKurnw437oM5sE2uQIWfAsyB2TaH3Jsugjnw7yfUZiEnmAOPRddLrHwbRvQZ
0x+cUnRdyO5B9BPTc2YE6o4m2BJ9w/QI5b/i92zMif7M7utkU+9m+raOdB9R
gcKmWs7kHTAHTstV5+WxgDlwO3e2W9ERmAOnGfM/OiIMc+B3+4uK2jbDHDin
RuXm2oswBz4nelTVsRDmwE+Ni3Sq98Ec2Gz7n1SxJpgDF+5M9J/2hTnwy660
ukseMAdmmdoa1BMQTpwvbPzeH0zffy2HOfDBU1GOJXdIvBcb75cRMNRT4EPU
sfEXL3XHfb/gTJxfbPx0/8sxj78ORB0b79nuPXyG9STpPqKCsZNS2/V6LYk6
Np69SObe0RumpPuICpYX1DatOWZA1LHxeUWPzXKvq5LuIyoI+dLsJ31bnqhj
43eqGS0y0hQkrXOkwQFbm0v1KTAHtsmN8nSNgznwyujjZzkn4onzi+n7pTVj
A7fAHHidoPw4y0KYA1/Y5JLlt/4GcV4wnXFDMjBa5kL0f/Y8zefePDdO/0da
J0gDP2qcaMGePUQ/MV35tGTx6i26pM99afDn/V5mC00Z0ue7NMj6ljaV/p6N
6E+cDDiikiqWtgnmwLt+cjn7HYQ5sPknpsuvDGAOPGjQxu6r60f0B9O5j0iK
l95wJ/qD6Z8OgFhfxotEfzB9le6LZ3yLrYn+YPrEVxsP1fq9RH8w/e+b3JrK
DH2iP5gudPHC2Wnu1UR/MD1GMbPenZ2X6A+mJxTpyEb8HYM48K779SlD5TAH
vnh6bH/KVpgD905LcXC4wxz4SVrydS1HmAM7H+7JDO2nrfPncWCvrYF9zxfS
+qvnceAREa1Ji2T8vWmOA0dGX+t1Pwhz4L1XTfqHFGEOPNy+67tRKMyB77L+
ULI7DXPgO0sc33k1wBzYbKRygLOMxkPmceD1/Vmfnm7Gz6Wd48CDJ/doaMfC
HNiiL02HPwJfx85x4Pf59tF7GGEOrHc5RqA3BubAW0fFGtisYA58QzbwsXEU
zIEN9uy5fmMtzIHTdBhDO9xhDhwYuvXkp2za83MeB3bQzby6jAH/3nOOA5ed
dP3OkwFz4PtROUKc22EOnPQ5r/ZkHf5z5jiwwDlF3yQzmAP/zYwwyDsEc+B9
/KLVbhS8x36OAx+6cnWrYDPMgU9fPfZnlyLMgYc7NIzKVsIcmHPV+jOin2nX
4TwOvIYSUyeQR+thnseBuTyLOh2v057/8ziw0ZZVTA2eMAc+afcyBfyGOfAk
W73H60na+cvzOHD/H6Um2WX458scB34SL1zUbgNz4DiKiohMD8yBw61uibf+
oX2Oz+PAIyKUKIoxzIHVCkt2bWCDObBHQoKT/GLa83AeBzapYcq68on2/J/H
gV86XgzyxZ978zhwrr2foZgyrS9rHge2z9AOXNMuTvt75zhwynDmInsXmAO3
2aU6v/mAn8c9x4FN7XOyBDto9+k8DiyVdpY9PJr2PjiPAx9q8faOTsP/v/Py
wK5TB7cjeiFqs3tCIzLgXgi7Mvn2akQvRJy63GQHohfCTF3irC2iF6J//JCj
yE+YAwsUMIWlIXohOvuunruM6IWwVl/IoILohRBX+cbojMgDh3a/9MnrgTnw
ByeZnfUn4TzwsPI2jnREL0Rq2ueuXkQvxFprjnwHRC8E6M37dRnRC2F1P9De
EdELMRFL2aSH6IWw8xIo1kDkgaNaHoAURC9EcVYLb/UrOA/8kXXRqTuIXoh6
s/RbPLxwHjhDN/S3OgecB/6orh75HNELEfTujoo3Ig/sV7doswiiF6JWesXr
SUQvRIwZ67Z4VD9wgQjfCUQvhD1zTo0johciyyrW0xzRC2EpIfMhCJEHBs8+
tHAh8sBjLQLtaoheCH6XLu8GRC9EsUjDsAsiD/wtKH9VDyIPLFbQcPcuohei
Qq1sXADRC1GZaGewENEL8cf36unkH3AeuHd5aZ4dohdijTjv2vuIXohPHJ0j
GjZwHvjCfyMM6q0wBx5U2xaVzg3ngbslrilM9cN5YIZXz24BRC/E+X1PDHYg
eiGOLxlT+FMCc+Dy4yf5biLywJxGX3iKEL0Q2Sf085sQvRAPJc3WsiF6IQ7y
yqeLIHohXormjh9B5IG1ioWZPyN6IZaqZvuUi8N54DH2H/dKguE88NEHG5vl
EL0QM4fGLdYg8sALd0jcdEf0QiicNt8si8gDG0/2cwcj8sAmfTbqOxC9EE8m
0/NbEb0Qk18M/AoQvRBpzCtyexC9EK8avN9VIXohODe01Zgh8sDs0yKi9xB5
4Pbx4dZgRC+ElsWVrxcQvRB1TwcOrmqH88CVvUYPfiHywNXylzuvIPLAdkoW
6/nUYQ4cMeYXuqcc5sCRcd0frApgDpx5pvFhYS2cB16nldBxXhzOA3804Zt4
YArngfk0Hd4z28N5YLssi1uFiF6IOMumqCREL8S7PCbO5Yg88Nlh2SIZRB5Y
W2NBSBAiDzy+Xup+DKIXokrrtIpmIcyB07VffhRH5IEp9/p29SN6IeR8+2Q4
RmAOPCjO4MSzH84DmxVWNByiwnng7XGDZw4h8sDhSud8riJ6If47fJFBH5EH
1roUZ34C0QvRcm5v7lNEHjjfXMPLA9ELUerRdtcK0QvREBTuXOYKc+BPsTbb
jRG9EJJm6w8HInohTpzh+/wPkQcOiOHivukJc+DrpSvKHiLywKlaBlddEL0Q
BWJ81X6IXghF9af62Y4wB2bWuFdmthHOA5e4Oehnf4I5sOD3MftSWzgP/PZr
I0WQG84D+xemnog/DOeBL+iZPNvPAeeB64WH/GNs4Tywc/MlT+MIOA9spGFe
kLkX5sD544qsXoheiLPG9ie2IXohxsaVFZJEYQ585fvGkR5EHphj90wUDyIP
vFyj03fvQ5gDf5uy+H7jFJwHnvyt6q0rCOeBNd0E5CkKcB5463Oubg5+OA9s
L8/XXSUF54E3nKmUSxeCOXDiPaunSog8sMWSzXr2sjAHLr5kcOcBIg+8n6kg
ixHRC2HH6F1UjeiF6C0cOvINkQe2vq+wKwzRC1HmdYxtISIPbP78OvupGpgD
D6+P+iRRCHPgw+1/lw2ugfPALAUjZk5PYA6cKL47aFMFnAcW5L9ao9oJ54GX
X3C9s04LzgO/PBAtbBQP54GPdYzqX9SA88DHK4erThfBeeCDfBd+8byG88Cf
XxdSvQvgPHBlTdIR7m1wHlj38hJDpgg4D2yy9JqtWjycBzZY7Gfhg+iF2HQ+
tPwSohfC5oh33GYlOA9cvq5li2wjzIEt/qQGG0fBHHghr2aPmzmcBw5JnCn7
8RHOA7ccqMpZ2gTngZdOxvHvFYPzwNKfsvm1JuFeiGVyyusmo+A88NbUt5le
7XAeOH/COlSkA+bA/32U3kgdhzkwY+Sh0kefYA58VCndweY0nAemXmkzvXkL
zgO/v/ffADULzgObyp7STLWF88DCn7h4wHM4D7z5ZZz4+0o4Dwz2Gfo0tcJ5
YAeefoP+U3AeeJlel+HbKjgPnOjoa/0e0QsB1BX/2SB6IXwTvO2FEHlg6xOB
SuqIXohfC9479SF6IVrY2oM3UeE8sG6xw/M6DTgPbPpH0uIgIg/M7cR/9Awi
D2zqdE+/BpEHjq0bCOhG9EK8jb9dx4XohZBKHt01vQnOA7Nn3ri+EyDywDxa
vVREL0RXt6by+Rg4Dzwt2rdaFZEHjjqqtyYG0QshmLIy0QqRB95/58myU4g8
sPdab6dHiDzwo6CqXD5EHtha3fRZQS6cB35278Ph9/pwHtigQo3XC9ELYeLF
H3ULkQcWvbObxYmKyAOf7n0ihuiF2LbF6LUooheiKXNYOn0azgO/TjVsmkHk
gf8b2h4Wyo7ohfjLNXECkQeuj/TmSDoP54H/mAfwtXTCeWCfnycf63rAeeAQ
4Gkwg8gD+zUGh6XUwBzYovVTkguiF2Jxg1jnmaVwHnhIPP5UFSIPnCwcMGSO
yAMrv3o83IDohRBItzkW6wtz4KteygJ58TAH/iUnr8eoDOeBt+5LLddPhvPA
U/Vlk9G74Dww4+mpLtXNcB74j84Xcw4FOA9s0Kpp/xjRC6H+erFYx2E4D/zP
/kxiZDWcBy7IY/p50gPOA+flbjun3gPngfWOXWfvbYQ58NMIDsr0GP78mePA
yp5risQYYQ5cfPLljOlymANzL1J/FLaXzDmndfp/xaVrMeB8Zo4DH6fqZ29O
IPExTDetHlVZb4evq6l03bjN+Z/GM/w9ZY4Dn/W2fUYRiCZ+jmB6qtIBkX+C
oaX//+85Dix9dav4zpAHpUR/mMDtQMk81fMwB2aP+mbC9grmwI/K1y9eFwxz
YOb3DR9NMztJ/jCB7WkNWven2kj+MIGDyfnPMyYbSP4wgaaHqTu2D5L9YQI9
LnJLpnrI/jABt/6nC7U5SDwQ03kX/LiwTD6B5A8TCKnb99tpgSfJHyagVHHO
tv95EtEfVzbgbRR13uxsD+m64gL2UanHpZNhDtymyLynqgHmwK+v+/49rUzy
ExtfNnlxjVQGzIEzQi2fXGPpIvqMjdduFu/L+faJ5D8X0L+u+uf5ZTgPXNG2
09ZtJcyBlf4AsZUuMAfOFQhety+6gTRfXKD65eSyNzYwB578eWRGPOcdaR65
wK8I0YJGhmriPGLjv6WV5bszvCLNLxcwc+uTGm1/QZxfbPy2AcYzXv0kfoWN
n0nwLflWmkecd2x80a5TxqfskkjXAxcQGhdavcEiiXg9YOOvOL5nORW1uZSg
Y+ON6jV/9wzh7xHzeiFYe9TeCMWSrh8uoHzWrUJ4eSTx+sHWD0vyn69mz4Y5
sGyM6uZwddLzB9Pl/vRkL4jrIM4vptf3pe0WbiDNI6b7CbdLa11uIs4Xpn9W
M/xzsxfmwNNbg+QUH1US/cd0pwT3hSYbYA5sHse0+EcNzIEnjFn79MbhPPAd
11XRf23sib5h+pFvK1dV7r1Fur/4wKntk22PTPDrdo4DU1Suua8/3Ur0DRu/
8oufz36JDqKOjZ9wOtuQvriN6Cc2Ps/1v+EF1A9EfZa7yjvLfLzXTPQZG2+5
2itYe0ELUZ89fyGGyyWe/rya48CXuUzyH2mQ9Nl+3c/uxfmJMAdOFWE8Ybmc
lBPGxi9yEj9X/BXmwNORXy8+HYA58Njf/9YpeL0kzuNsb0N35Ed2jTKijo3n
VH/+/uC5IuL8zvZmZOwSfgceE/XZn88w9Ti7LpM477OcuTy/188jnqhj4431
Bgp+O90hXg+z3Hsxs963ChKnmt2/xpNXziZHyt1h47v61QrOWuHnRM9x4B05
nOYhyYGkzy8hwMPYGtCR0Ei8HjA9NcDSwVS+iTjvmM6y71dKkUwDcX4xPbmm
0pqxrY44j5geHfvxBH9nNXG+ML2OYeKM+CnSvMz2Ff8ujXUcJvk/mxMuey9k
K5JL9BnTI87nFNr4pxL9xPSWhF3llUUhRN9m+4Qv9pd6XT5Jev4IgUT7Nz0u
EUFEf8ooYKyjMZQyif9dcxxYMLwwNfvHW6Jv2PihLVvS/K3qiTo2fofVSfmW
jGqin9j4ft9GlW25tUR9dj+gnJKDVXUl0Wds/G+zzXGuztVEfbYngbPRc5M9
KfeLjW/SzQZVtuVEHRt/SpLCemrlC+K8YOPNi9bv0vrwnKhj42/tbJ9mHy0m
zhc2/trS/Y+uPygk3Xdi4GSNjW/cs8fEecTGjwQNrdhXlkXUZ7n6Ur0Fslop
pOcnBRiE2VVJryTx4dn+4bcBnk8lQ4nzjo3Pf3R7YI2WO1HHxovPtPuv/U7a
Zz3rD9OYoP+fK8TPL2z8xNK/ii+qfYjXCTa+TnkwQIgrhKhj438tchCSYg0l
Xj/Y+8uX7aZblAJfE68HTD/ed9Xs1po3xHmfPfdN8FDh8OuXxPmd7eMN2xW1
c/oZcR4xvX6RbEb4p2LifM3minV6qC+oT4jzMns+y+VxXRfjB0T/MV1599bJ
cce7RJ8x3fK+TdWNL1eJfs5y5uzk0YoGF6JvmJ68cvCMYyXp+YPpdbvyo2OG
woj+uFKBIeWgUmsefr/PceBJu5nWCKk8om/Y+Nu1pQesNZ8R9dlc0HajkJiJ
PKKf2PjDaj3v/XxKiPpsHlV59MzTVhLvne0Tvvruey9DIVGfPQdNIkJdbls2
0X9s/KV1j7dJbc0h6rP7QC/FxX7NuU+6j6jg5ESD/A+1h0QdG//l5rmoVIU4
0n1EBXtKmDY1nCDps78Py9Y1ix/4EecRG+8Skb2KiR3mwNzM6/4e+r2F5j+V
Pn7GM/fO2+uniTo2/lr+eyW1w/j1P8eB14+2cpsp+BH12XP0OK/czEy9Rbwe
Zvt+X7cnG0SHEnVs/LDA/U1SyRGk+4gKLKr/GT6KIOnYeK0XpYtOtpHWh7Pc
9c8p/hWaGcTrYTbHO+5/ud0zkzjvsz297N4Plj1MI84vprMOrWtuUk8izuPs
/lkFabsLbXeJ84XpzldzJVOr/IjzMpv7nfm9ut9uG2n9IA38mG5Ytp7wIPo8
y6WthF/46IYQ/cT0PrUX1JOrIoi+YfrFFiXthp23if5g+qWE6EXvtpLOeY+T
AXpdiQ6vauKI/sxyVA2+S41V8UR/Zrnxm74YXZO7RH8wfXX3RYuTBqFEfzC9
s3V3knUezIFd+8s+aIcvLyX4g+nDFz0ze6zdSwn+YLpFQqSXn00w0R9MP87w
jO9NXjjRH0y3O1dfreB/m+gPpkdZ8v36uT6K6M9sbzBjfKmMFm38PA7c9z5L
7WQEzIHL/0Y8Cg6mravncWBur3vUEFHaemAeB37W/qrqrT3tOTw/D6zyctdv
gXP////O48AlO+WEVn+mvS/P48DLzhzVvvQPf07OceDEiQu5/SUwBzY5cTfQ
0AnmwJQ7Nw/eHoY58O0IvaAzyTQ+OY8DB8Tb6FVy0n7/eRyYbb/vmVMatOt8
Hgdm4M+J3mxLe87P48A/koouyqjQ3tfmceBUBom/RUX2tL9rjgOXmlOst4XQ
fs95HPhD5b1FL5bgfHiOA+/SW9PxJoS2Xp3HgbU7QmT5DtHWXfM4cPJxQY8G
Ydrn7zwO7FAw0BhkR/vecB4Hdgx6s/olF+17nHkceDfLKxWJLG/a7z/HgavO
FfzcOY2vh+c4sFDbkYr1N/F13RwHVglm/RI25Ur7OXMcuJy/d+cYJ76um+PA
54fLXqySwN9r5jhw1sTlqaZx2vphHgdeFVPbvLWBtq6bx4HfiV56HXSK9jk4
jwPnbdy6QUqFtk6Yx4E1Ks9eE7PD+eccBy7J+a0So0N7js3jwBHmO2+l36E9
x+ZxYL2vbQ+VM2i8Yh4HVni6LKNcm/a5P48De2zSZ1Dyon3OzuPAHqtN4tY1
4M/JOQ7saKo8o61G+9yfx4FNmodFny6i/V3zOPCjzxOn99zBufccBx6L3/r4
6iXa58I8DlwonajznYH2nJzHgY/2uFn3dOLf48xxYBDm8t7eVI/2+81xYKW7
Rizqal7///3nceAslswXLatpz/l5HDgsOeeLTRz+eTfHgc2+HrwQvI+2fpjH
gVMSzuTKptN+z3kc+OeDDCPhL7TreR4H7pls5a8zoH2Oz+PAMXeVZ7L6aP9f
18X/12e/F7vuYh4dTHv+lPHTdb2bFmePf6bdp2WidF3B6Od9BQPa9WwpSdeN
d2/Mz4zG16UTtH+ZQFbzygSpnTjfWwRwXfHaktC/8bT/r+tSuv5QSTTLCe93
dV1G1xlufeFoGMSfJ8vpulZrLtMhd9p96ipC11v9Uwe6TWnPw7I5Xjp8ni1a
Jox23ZZR6Xp1lkbailO0XEHZHC9t2SmjVtiDv4f+pP1/2ECZfFpsjjqNZ7rO
cdFy41Td/A+0vxfM8cnneVY7pd7S+CSY45Aye5dYM9P3s9Ouz9nnszerL8so
/r3YHIdUeJozXdWP63O8kfWJl0LnLvy5JEb/OYf/Puv6EEd7nojP8cZYFWNJ
fWZcp9L1t4b7O/bH0niIqyT95zRyfN+sEU5bd4nPccVbWxz/8rvhOf85frgo
46So4z38++hfNF+XApcVUr7u/vj80q4HTDfZ7RjtdJKWYyxbRtd17fOeu2yk
/b1ly+m6Ydrq7jhR2t9bJkLXvTjDgo9l0P6uzjmON7Jl+ZfOh7TnZCeVrivc
WDRcOU57b+2c43iTBuc6hHzxXN8I7fflAys9ytVas/C85QKA6wyXh33cn+M8
jZ2ucw5IV1Iu4dftHE+LOGay+oYt/n3oHAcL2OUU3/iVxo1d53iX+NpXPaua
aZ93gDa/2OdXd8jBonvp+Pduc7zrxz2dZwNetO9/AZWur137NWgToP29cZL0
n6M6YCzu1xBDGz/HtViKbhppLsf1OX5VErz4UecJfB/QJO1fIbDQXydUgs7J
OQGum5YVZfAsxfkJP12Xez/UWxyIfx8qSteHY94PxkfiOR8Juq4Vc60/cDKd
pkvSdaVR3n+b19F+TwZpun7r6a/oj8x4rmOUdr1QwKWf7vf/20Fb77nS5hHT
rU2k2Cwr8e/T2en6fe4LORrM+PNkjtus9z4m/5qf9jleNsdnuHN/ymcz0+ar
bI7DDHuKX+LYTvt8tJzjJ7xfO85oPqc9ZyypdD3ItW134y3885r292Kfy4aL
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
fODYQcQ5n7/MH+HWx///90VwzhEX92TRJsG+XY5zbpcajZGqFey35TjnYXEP
57GV5xHnBLzbOX7aagGHcJwTpFup/Lz4v/2ABOfoJJ5b2OAp+L0c5/xYy3b+
IMH+pv/aues71IAhds06Ar7iOOeNi9b2swGnEOe0Gojes1cR8A/HObkN1fu+
GHkhzsmwOff7/e31/10nxzlfV477pLLvv/5AcI6Tm4yEo/V/+9QIzrk4J/Nd
9OD/9nkRnPNjd+fcrZsF+1j/2+fI8kmR6u9zjTv+4w1mcHf+W2vC3s5hAq5Q
6M7Nk0QbImz/44cmjnO0fEvH14QKxp+Obs4ZUhiwZl65gHMEv1eEYRrawnxv
CfiK45wLH6809jj3jHc9Iox3rJnDtuWCc2DkunOriMQJsm9reNcpwgy+V3vp
muWd7vdZkGun6n48mFnIu36Wcy5aPDUNS+7uf4I8TsjG+ZVyPLwvdh6vnPUr
oW+fl933Kch/X/91/ZIj737ZXPKv5d/jgvOFBPfb5XPC901o9XvaPY8K8qAl
29Y2RdXDdmDzqZ2ujUYj63jtI8k479u47/mZB7B92J8Puf/tx+C31d3juyC/
Njl2cJ7jfdhuXedW9ci/PauolNeekoxoybL4x/bFsD3Zn7+0ZLzip8UF3eOU
IE98OihzluD8f0E7s/mViy/Wm469wmt/SSZA06bzr1YibH/25z/f+9rh2TOu
+/0U5FVPnHtOvxkEnwvbrlsv7R9zYUsTbP+u9T/xvQyG/GuA7cbmk6SNgnyu
VcN2Y/Ovwgn6Ktd47cPm4x3ffgiLKoTtwOYvP/41azueA++LzdVW/46dkpkA
74vNG1LblcbbnuL1Kxmm56QNJYVaT3j9SoZZkrJzmp36Y16/kmF2K+c/Pu33
kNevZBiHV27WLhtref1HhsnV2/haLKqS109kmKJB1uoptXd5/USGOZvReKdw
cTGvn8gw8za3Xdbcmwdz9ve8jQw4fD8mi9dPZBjX+1MmfTRJ5/UTGaa96JPm
w5G8/sDmved8jnYbeAbm7L+/7MweQyXZU7x+IsPs2bb5843fwbx+IsMkV27/
YzPSG7Yze9+KGdczbwk8cPe4JMfojIhZI+pTBduNzYf8stz/1aEE3i+bb55Z
mZ1imsYbZ+SYoFWb09JPX+L1czlmhkz+sI6wIHj9bG7lqBz+4LIPvE72ObiK
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
lLQG+7rU2zlvbgzDvu7ojvlTbXZjX7cgfMHF5RRf9/1Kw8zmZuzrJk7TWbiQ
4uvUfFcOOkjxdc1CqarHxmNfl3Eve2WuAfZ1q/t7T/zVgX2d1JBeJldLsa+r
fxavEnoV+7pdBhJLRhlhX7fp8MbgHguwrxP70FjeKxX7uoKwba8P3MC+7tSy
xhlfWrCvcxYO0txsjH3dxp49Dy4zwr7OZPNSiyWTsK/7tropdPdf7Ouc/3wM
TynFvs6ierya+CLs6yLuaKgGOGBfp73laPycMdjXDdu222RgMvZ1G3UdjDVH
Y1834274dKdR2NcB7iJ8HeAWwteBeZPwdXA+4nwdGD8JXwfGK8LXjSXfR8LX
gfeC8HWgnxC+DjxHwtcB7iJ8HZg3CV8Hxk/C1xmT7yPh62A/4Xwd4GfC1wG+
JXwdlQO7PBvJJ4SvA/M74evAPEX4OjD+E74OjHuErwPjDOHrwPtI+DrwXhC+
DnA74euofMvmgE8IXwfmKcLXgXGP8HVO5PtI+DpQvxC+DtQRhK8DvE34OsDb
hK8DvE34OsCThK+jclfXOdIkVxC+DszLhK87D+Ypxe4cjP+ErwPjJ+Hr4HjF
+Tp1UE9xvg7WEZyvg5zM+ToqT7I55ArF7hzMU4SvO0mOn4SvA3Uo4etA3Uf4
OgNQ73C+LoCsdwhfB+odwtcB/id8XS/AyZyvA5xM+Lp/JCcTvg7wJOHr3tK4
i83vk3xC+Lp0cn4nfB2YNwlfN5Wcjwhfl0fWy4Svu0DWfYSvO0TWQYSvA/xP
+DrAyYSvo/Ikm68h+YTwdfLkvEn4uoPAS3C+zp2s9wlfB+pWwteBupXwdZJk
3Ur4OlD3Eb5OmKx3CF8H6h3C1/Ui6x3C14E6gvB1w0jeJnwd4G3C15mQvE34
OsC3hK+jciCbO5LcRfg6G5JbCF8HvArh64LIep/wdaBeJnxdAVn3Eb5uE1lP
Eb4O1BGErwPcTvg6Kt+yOeAuwtcBL0H4OlCHEr4O1C+Er4P8zPm6gsJfOxwd
sK8TzSyZd4Ti635O3el/ZyP2dTX2h6wcKL5uZHvmYKdS7Ov0ext8uELxdeL7
W36fiMe+TikvPFLFHPu64wO/vf5E8XWNPT+uSV+JfR1jdOS6Zgb2deknou1o
vs78cKe11Fjs62zkXnls6I993Uf1Ie8tXbCvu368YvWJZOzr6tQi1Jjj2Nft
HDiy8SrF170/WilkOgr7OmmJudMKKL7OtOfgfT8pvi654UyhshP2dV8fn87q
LMC+7nKI82xXO+zrVnqIhB5bhH3d7vOuSzZ9wr5O0lAi7CzF1z2qGaYzSRv7
usnfBu6S6o19nXS/qQ8ci7Cvm/4+4lj9ZuzrPJLfRDv8xb7utuiR4nlp2Nf9
XR6zP4Hi6waVv0ofHol9nWn2nEnCx7Cvu2u3471RNvZ14vMsU9Zvxb5u1r/d
nyw1sa+bVbmq3WUi9nUZFpERi/yxr8tfpKzgbot9Xc1w3UW2FF+3/o2vmC7F
163ZNd/UZhH2dSkWic5lHtjXGU6++ulPFPZ1Sz8ccNmzEPu6O6FVib8ovu54
/e0fW2Sxr9PoCH3fUx77uk7tyJ9pwiG8fiLDrI0LEa5Uw76u8lkfpxRv7Oui
VEYtC6D4uosid85V7sC+rv2DRsmDpdjXnbq/qUTtDPZ1OrkzxprGYF/XcdrN
NDAL+7qD3u8WFFJ8Xemem/2VgrCvU8w3nSpM8XW+Tp0bp1B8nVLjyw/zpmNf
t/fz66wF5djXtRmWXd/zHPu67+8G/Xq6Efu6mMDweVODsa/TuzxwyXhv7Osu
rI37sWgY9nVuz2y+l6piX1d921A6ay32dXdKPOefDcK+7unJlsR6e+zrNDUv
jVtF8XVe/UW3TIjDvu582rrEiC3Y11Utcfz9UB37up5eVW/Pu2Jfd9pbaX6h
OvZ1FioWp0Qovu5diE3mixzs6zLGzzj/4xX2df9CdwyOVMO+LmVAa5rmEuzr
LOcOUO4tdpD3XBQZHeFKod5Psa8T3aAdp3EX+7pMM8ls4c3Y1125v3xW3ELs
60q3K25ccwP7utHj9u5en4d9XcGrp+7P/1F83drsm9lbsa8r8Fy7OsAE+zrV
pITnB6ZiX9dYppjvKhoA25/NvQcq5KdUY183Zypz+s1a7OvE/9Y0dezFvq63
yKovjjrY1xl6Vl63KcO+rsl9+PSM+djXaV5a3XrWFPs6wF2ErwPcQvg6MG8S
vg7OR5yvA+Mn4evAeEX4OvA+Er4OvBeErwP9hPB14DkSvg5wF+HrwLxJ+Dow
fhK+7gz5PhK+DvYTztcBfiZ8HeBbwtdROZDNAZ8Qvg7M74SvA/MU4evA+E/4
OjDuEb4OjDOErwPvI+HrwHtB+DrA7YSvo/ItmxeQfEL4OjBPEb4OjHuErztI
vo+ErwP1C+HrQB1B+DrA24SvA7xN+DrA24SvAzxJ+LpqGnexOeAKwteBeZnw
dXCeUuzOwfhP+DowfhK+Do5XnK+D9RTn62Adwfk6yMmcr6PyJJtDrlDszsE8
Rfg6MH4Svq6NrEMJXwfqPsLXwXqH83Wg3iF8Hah3CF8H+J/wdasBJ3O+LpXk
ZMLXAU4mfF0byZOEr/tJ4y42B3xC+Lpkcn4nfB2YNwlfJ07OR4SvA/Uy4ess
yLqP8HWgDiJ8nSnJ/4SvA5xM+DoqT7I54BPC1xmQ8ybh66qBl+B83Q2y3id8
HahbCV8H6lbC19WTdSvh60DdR/i6MrLeIXwdqHcIXwfqHcLXgTqC8HWAtwlf
B3ib8HWAtwlfd4HkW8LXUTmQzZ1I7iJ83TOSWwhfB7wK4etAvU/4OlAvE77u
D1n3Eb4O1FOEr3Mn6wjC1wFuJ3wdlW/ZHHAX4euAlyB8HahDCV9XRdYvhK/L
APzM+TqJz/ZX5m/Evq73mKaTP6Sxr2vz6fV9gAv2da/tTEw3RWJf195a3O7y
APs636vWSXPysa/TsDzrU3Qb+7oLapWtDvOwrzNs/VRxphr7OhXx98ljt2Nf
11GwdVJZHfZ1H/sG6T+j+Loj5h3ak3+chffVtV/10X6ruMJm2A+7fJTPmIFf
DbGv297mJ3a+BPu6twapSTuysK8beWj+0s2XsK8LmSS1JFIc+zqVDWXXbh3F
vu7BEpUtt+9jX+cj+ffbjHXY10VfOb5b9xn2dcLPPN/oHsG+brLWlwq/HdjX
6U613yI9NBO2M5sHeJ94lyCHfV0PY68eh2Sxr7PzeJ3rXM6bx7s8ZHLAm/Wq
2NcpDS0bbOqJfZ1O21CvIzKPYbuxefACjzsV0djXzXaXW5Abi32dZcODaY65
2NfFTtdNs8rEvi5NZGdLlA/2dcLnD48Y3hzB61cyDLPL9e9KK+zr0l3ea61f
gn1dpf/RZseD2NddeTjcUHYR9nUR9i4RIv7Y13XkqqbINGBf12dDmpvTduzr
8iMmB06Oxb7uYVyzWV0x9nVmdU9tm7ZhXydXf+XoiqHY1x18ar5jiuDvaxO+
LuHcysCK/RG8fiLDlMw+uj56C15fd1x9QH670kHYzl37PjRLm823Yl+neCzc
ZJwL9nUnfzavdPfFvk7HYb3IMhvs6/IHyxiMCsW+bs9gCY1PwtjXHY3qP3jD
zUO8/izPvLFwm+IsgX2dZEHW87D92NeZW9a3LqD4uvsbyg7pPMa+LjawQH/r
WuzrnB11bl7scZPX/+UZsz4a30/cx75OdaprlZI69nUTPPJ/tnWE8d4LeUZs
v+zR3HWHec+d5W271e3Vq/fy3hd55mYPF+UjTu7w+Xatrwtx7yne1x62W9c5
sQ1/pkulYl/nveTqy7U+2NctSht4ed8+7Ouuda45YiOFfV314QWH4gTcS/i6
qAnfRndMsuW914rM+idzzU5fxb5u85P0U0EbsK8bbT6wzU/oBu+9VmSStCKO
x9/Fvq7vAYv2fVnY13VsC2qv+nIa3hebW4skdzorHee9p4qMmtc805+98fo6
p0X9PJe8tOa9d+zv3aG2Wmv6ct57p8jYfznVKeoyF7ZD198Vem7nPE4e+zqP
vWviRadiX3dLwsR25nk/3jijzByWaR2646oDb3xQZvTbo9UXbtWHv5e9rudK
szdmp4bC9mfzvCceFj7RIfB62HzMshzhno/9Yfuz+a+EtZ1514/A62TzAxt+
yYmF7oHtz+abWrKCnwo5w+vvWo932EBxxoQ1sP3Z/KjP34aPzqbwvtjc78sl
N2GVSbD92XyCuUNxh+NoeF/sfQPuInwd4BbC14F5k/B1cD7ifB0YPwlfB8Yr
wtc9IN9HwteB94LwdcvJfkL4uibyORK+DnAX4evAvEn4OjB+Er4OvI+Er7sF
+gnn6wA/E74O8C3h66gc2LW/leQTwteB+Z3wdWCeInwdGP8JXwfGPcLXgXGG
8HXgfSR8nQr5XhC+DnA74euofMvmgE8IXwfmKcLXgXGP8HXt5PtI+DpQvxC+
DtQRhK9TIHmb8HWAtwlfB3ib8HWAJwlfR+UuNgdcQfg6MC8Tvg7OU4rdORj/
CV8Hxk/C18HxivN1sJ7ifB2sIzhfBzmZ83VUnmRzF8AVitzPk/MU4evsyPGT
8HXtZB1K+DpQ9xG+7jCodzhfB+odwteBeofwdYD/CV8HOZnzdYCTCV9XR3Iy
4esATxK+jspdbA74hPB1YH4nfJ0vOW8Svg7MR4Sv+0PWy4Svm0TWfYSvO03W
QYSvA/xP+LoCkpMJXzeWxpNsPoHkE8LXgXmT8HWvgJfgfB2o9wlfB+pWwteB
upXwdSJk3Ur4OlD3Eb4O1DuErztA1juEr4sn6x3C13mQdQTh6wBvE74O8Dbh
6wBvE74O8C3h66gcyOZzSe4ifB3gFsLXHSW9CuHrQL1P+Dohsl4mfB2o+whf
B+opwtflkHUE4esiSW4nfB2Vb9lcjeQuwtcBL0H4umNkHUquryPrF8LXQX7m
fJ3De7f2B5T9sEu/SFgqUNbX/dnrN2UZZT/sseZdPqsp6+s8Fk6ut6Psh61U
rDd2p6yvswt8pP2Gsh+2WepEaDRlP+yAQr0pyyjr6yJb1u9dTtkP6x58Z2sz
bX3dJv8HHaHY17mZFdjVUvbD9t1pZSRJOb8uVa21/w3Kflj3NnEHF8p+WNE9
5yvyKfthR/Zq/lZBWV+n2LppiD9lP6z+yUmF4ynr6yQ1PjWtoayv+7cxancb
ZT/ss/meRrmF2NcdKbE7M42yH9ZDbMnemZT9sO/lHhyWp+yH9Z90016Ysr6u
Xlvq9TTKflinbw46yZT9sA+8+8aZ5GNfd3rLjqQwyn5YnZ19tXpR9sPOOXlT
p5SyH/Z0SnStMWV9XUXUlzHPKOvrTPI8vjyjrK/752u5VSgL+zr1A8YDne3x
+ro0ZlzzYcp+2B8fRBfoUvbDahk3qRVS9sNuX5l27AZlP+x335zJGpT1dYsD
1y8+Rllfd1Lo/RgNyn7YJ6np2k6U/bCpftU5ydHY130ekrjzL2V9neaTiDY3
yvq6O4Mz2p9Q9sOGPr6tc3cIXl/XO3XItLN/sa97kGq49+JYvL5uXubUfyKU
9XXy12doT6Gsr9s8wsdjJ2U/rH6tZEYvyn7YHZFm1UmU/bABJeuCVSOxr5tS
XGYcch2vrwt7lf16E2V9XdPQlXuaKPthCwv8W2dTfF2ustqmm5T1dQvsxUp6
UfbDWus9jlxA2Q97amfV7HLKftgxc7/9Dqbsh52epWzXLwCvr+szOidr5168
vq5+/GTz3EF4fd2jh74vVo3C6+vqZ5bluC/D6+vCxYc0WVL2w65L7H18C2U/
bOOUQ1KbKOvrEnsvDFaIxb7OvNf0HZds8Pq6uud3tMer4PV115693HN5F/Z1
9vufXE3SwL7OtUUocgtlfV1pc/XJf5T1dTEZm6xqKfthx21T6Kc1Aa+vM+5I
+DPbGK+vs7d08R0jhNfXfbdPuXOwBq+vu/u6Jr48F6+v+x720yZ1FV5fd/97
/Bgnyn7YR7dUHh25hn3d/IGtRrey8Pq6aUlPz+z+hdfXhS37EaCxFq+veybz
JWG1MV5fJyr078TqKXh93Z4hR/fsFMbr6368NBSVrMDr69KtKjrkzPH6OmO1
sCUpu/D6uoZakycnNPD6uhtXNXco5+L1dT6bZX9bTcfr62y/3HoQrofX1wHu
Inwd4BbC14F5k/B1cD7ifB0YPwlfB8YrwteB95Hwdanke0H4OtBPCF8HniPh
6wB3Eb4OzJuErwPjJ+nryPeR8HWwn3C+DvAz4esA3xK+jsqBXb6O5BPC14H5
nfB1YJ4ifB0Y/wlfB8Y9wteBcYbwdeB9JHwdeC8IXwe4nfB1VL5lc8AnhK8D
8xTh68C4R/g68D4Svg7UL4SvA3UE4esAbxO+DvA24esAbxO+bjbJk4Svo3IX
mwOuIHwdmJcJXwfnKcXuHIz/hK8D4yfh626A8YrzdbCe4nwdrCM4Xwc5mfN1
VJ5kc8gVit25KjlPEb4OjJ+ErwN1KOHrQN1H+Lq/oN7hfB2odwhfB+odwtfd
I/mf8HWQkzlfBziZ8HUpJCcTvg7wJOHrqNzF5oBPCF83n5zfCV8H5k3C14H5
iPB1oF4mfB2o+whfB+ogwtcB/id8HeBkwtep0HiSzQGfEL4OzJuEr4Neglhf
R9b7hK8DdSvh60DdSvi6R2TdSvg6UPcRvg7UO4SvA/UO4etCyHqH8HWBZB1B
+LppJG8Tvk6C5G3C1z0ieZvwdWYk3xK+jsqBbB5Kchfh6wC3EL4OeBXC14F6
n/B1oF4mfJ0EWfcRvg7UU4SvA3UE4esAtxO+rpzGt2wOuIvwdcBLEL4O1KGE
r3tE1i+Er4P8zPm6vwdn5uSVP4f9hM1jTgVINU+vg8+Xzf0kNIbvTr8NebKL
ryy8r5kcPM3jGRHm0v0rBn69X/J+rwhTXjnqbvhW7OuW/UyePKeokXc9Iozs
lLPfLyrVwefC5hs3uOhWz6vmXacI4+MgOrRsHM8vdXm8Huv2fW65xbt+ESZw
3tPBOTLxPG4RYRp3Bj+fUrqXN1+IM7dz61ca+GFft/SA5FI5/v5fNpeXfpBc
cw77Oksvtxm7HbGvM5P+IFXijX2dp/c2t7WJPA/D/p6QSbXm5W7Y18W0P1h+
4R+P69h8+OfVU5Q+lcN2Y3N19zH2UTo8P9P17y81qe0z6DZvvhBnXpm+7i2m
zeNANl+fvvPp4B3XYTuz+WvzqOV+087z2l+SMWxbrL1h9Hne/CLOzLfeVtd4
4ARvfhFnDo6r99jX3/sWeC5d+zIcRymOe4593aSrwp1TXuL1de4jz9Wk38e+
7vxsy4Cve7GvO98nT3vQKuzrKrzP2d46jX3d4gtH310+in3dvr0ivxXf8Hwj
+/xdGy8kjwl+yutXMkyZYfzsK0ee8PqVDHNozWqZknuPeP1Khunzz/1X0Uae
1+1aFzexbMiiZuzrxl3oe/KgYjmvn8gwl2YliGlHYF9Xa+vkpaSZD3P296Tr
7RoWvOkmr5/IMKfFK6VUxmby+okMs+RF9KDHNcm8fiLD7BZfaV75JA7m7L9/
Kn9spNfYGF4/kWEmqd6TfCITwOsnMkxDs3Zh7I/VsJ+w9y0T0W5nWl0L27Pr
XLtxWSEVHtW890uO+db8M2jwTb7HlmNCvx5aY5Wfzhtn5JjhgV5GBQop8PrZ
PDx7/1fVVyG8cUaOkb/zOkiqvzvsD+xzqPp35/1V+WrYH7r2kwrN3J11uApe
P5t3qoQeOet1D/YHNl+6+emWhRvu8vq/PJO/TGPrmZZCXv+XZ6x2vtUt1eH5
2K71cts2ORr2S+X1f3lGJCiDqUq5AJ8vm78ddE9WRzea916w1xPkPVdrvw/v
uSswlzoVT1gv5n2/61pPGH/P3G2mwf+fI+HrvE5YLR6+lzcOsNfV61P9+R5l
xbB9uvybpW9PzbsFsB26vueOrqtzrrsB75fNtdK/n7mgzlvnyeahdare1ybv
vgWuk80/JL2607TCF14P2x49Flj17mjOg8+xax2d6etG/Vl58DrZXPiwSXrc
tGzee63IbH6noTK9MJ33Xisyj4q3Dr2ZeQU+RzZXcXfJPlB1jvf+KjJF495u
mhnkz3tPFZlF88OkJT15HqxrfeDSOatfJhyF98vmu9YJR+6vCoTPhc01gg5V
dw4Nhe3Qda7I0tH3N2fzuJfNdVU3v09vOQfvq4uLQs7F9HweCK+fzV37/h1m
leV1C1xn135YBfsH97LC4O9lr8tjV0ns+LFnYPuzubyL584s8dPwetj89eD5
n76eCIPt3/XdM3+f5c3sAHidbK6hXuneX90Ktj+bP/HUU69OdrgFrp/Nc1zs
tw41CbgF2p/NDyUqlda1BsP7YnMXb32nL8siYPuz+e87iZc0ywR/R4zzdc8t
2zfdu4Z9XZ5B1L+Kary+TkE038KLEfgWzteF9vj6+mRAA4+7OvQ+v/83NEiN
9x2Qzb9puisGZvJ9UYde/ESf1UbXc+H4wOZLTKIzP75L7e4fgjxg83O53Y+W
wX7V9fNFUdtUn8TcgvclwtQ0lt0cuhH7urtWH22XzGvgXacI0+IiOX/coAre
9YgwE5qXtXzblQbnETYXf7h9iphsCOxXbH/RPTDqzeFSyvl1+xR/35B8wWt/
SSYuO/S0x0vs6y4rn18Xuhmvryu/vmK6ZBP2dbvLpF/Y9sS+Tv333K2qZnd5
7S/JLMvS1w9s57e/JGP80Tt9UGgar/0lmTPpl8ckNgXx2kGS+ZviHuw8whn2
N/Y+Zg46OV/RoAneL5uvdVAPjN3aCO+LzVUGiFyJ/kH5exPepZN9p2FfJz6q
cLydwjV4PWze88mBs7Ez1vPGmcHM8fax/kYJ9fC5sLnvabWFpWWP4HV28VLi
F+XFvxpgzv78WtPOVap7HnY/b0EuNDTpgnt2LXyObN52yP5RemANvF82Xzln
YnL25Cr4HLvO47VI6ClnUQrbgc1vWtr6aC7gcSabn/W8rp2jdR22D5u73o/d
8H1vEnyObN5gL2cW3nAYthub/y39ubD18zbeuCHHPF0uHDFVuZbXb+WYQzEV
xg/FeH6Szcvb/W9OSavk9Vs55t80f6Ea5Qpe/5RjhC/cWX7k0y1eP2TbI6Rs
3SYjvp+XY5Se6J+3cXDjzacKzOwL2ioJ6hW8+VSBuezUU9FNtZzXD+UZQ+nF
KksFvpTwdZLaSpYOEXfg82VzrfpQjZI1pfB+2Xx7bfVEo7O3ef1ZnqlrvS4a
0FgCc/bnNz0ceXd8JI83urzfZpce5YL3kfB1X5WZUdaHMmC7sfnS11KL9xrz
uIvNA1fqn9Ydcxq2J5sbNI+esEjkBI+TFZhFByT+1Kl58OZrBSbZKEs8RtcP
9gf29yhZr5g6+ddt2G5svkx74qj62CLYPl37DirfawedyYPtwOY9dv4QN+2d
A++XzWdbJb358DEF3i+bfxMZtbXntIvwvtj85KmrKvLFjrCfsPm77FFDzD4G
wn7Czp+T9DwvH7NPh/2EzRcJBbXWm9zg9QdFpl1yb4rG0lyYsz+/pI/fAqu4
NNhP2PzNStWqLbNTYTuw+UvxolXZ93lejv335ye+boq8fg3m7M8za3sVNxy7
APsJmw+fM3PoX9U42G5sviXKyO5PGM/Lsf/+mrmx5pJ9YmDe5eWC3UofqeL1
de0q7/fI1a2A/arrfD/fp2qfvu+5BdqfzQc6x8d//X4MckjXeXri81eN7BEG
+xWbj2m5VBX4Kxz2K/b/i7UoXaQld5k33iozhiJqK19a8/wnmw/oKdVP9WYc
b1xVZiSWCv+5ZxnJG1eVGbeiymMTMvfzxlVlJnldY+ZlZyPIXWy+qqkqfYTn
MXi/bL5Cfpmaq0owvC82PzY9NXrO8AjIIex/zx8e0DGqNRJeJ5tXO/mWxX47
AK+Hzc1t306vn3sI/l42j7Qza3EUDb/1P5V38cs=
      "], {{{
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
D1wHbgRvhM/SfuC70jnoDJ6FO8CtkD8Ft4NbFt03tILvYz87kTeFGyN/DG4D
t1AsTf2IctPDBes3R/4S3A1uCz8Et4SbwXvhFnBT+JUUHxTPvodHZ7bnA/DF
mW3sfXgQ3El1NTxAuQx+A+6v/cOvw33hdvCH8GC4s+wTHqh8B38HX5DZ/j+G
h8Bd4MOL9nH5YCg6bsjOjyw6VsiGD6I/KbOP/AiPyWznPxccDxWD9Rt0DrvU
ZPK/yZn9qFi078s3S/C5JLNPHVV0/JFvHp16TOVr5XPdYjR/Lgw+tx25a22d
2725c6xq+1W535/y5nW5c5R6hzW5fVQ56I3cNa/O8CW4YXTOU15TXaxzeDW3
7+rcXkk5RXltP1w/ui5R3VInuj5QvdE8uqZU3dg+uiZTrdg6uv6SzTeNro9V
xzaOzp0KovWiayDVNnWjayDVTnezXoXKEcG9suqu13LHOb3HF3P3CrKBF3LX
EbLndblrPdn/BrhnsI9shCcF2/ZDuXs1+dQjufO//OKW3H2z7Hl37v5b9v9A
7hghH7k1d88he34sdz6T3T6Zu2/Qu/537ngmO/kid6yVfT4Pjwz233tyx2bZ
wFe5e2vZ5Fu5c6ps6ePcfbZs7IPcvbX84l14QXTdoJnDRcE90ePIB0TXSap1
n051rPz3FfiSYH95MtXt8tk9cKvguLEbbhkcT/bDlwb7y7Bon9YZvAZPDfbB
0dH9s/rol6LPV373cqrz5Y9vwNODffBN+LJgX7s/On8rFu2EmwXHq8dTza+4
cWt0TaAedmHKTZozdIAbB/dHHVPfpNjbBm4QXP+3TT2LYu/SlPs0r3g21fyK
h4+kPkLx5+HUXyiuPgb3DY5RI6N7YNXG06PrO73zfdG2pRg4M7q3V49/dbTv
6h0+k3oKxdK/Rb97xfAJ0XMZzWdui65L1L/fBdcJ7s3vjK5pNAfYEF3Padax
Prqe0xzjbrhucF+/LOV9zVumpjNXX9wnulZWvXpzdI7RXOKm6JpSM5/N0TWZ
5g8bo3OPZh29o+t11fDbousqzRZapeeqt+0XXX+rhr8q5XrNjsZH26VmTfem
96I5xsToGZbmWjvSe1QOej46xilHDEnnr5p8XPSsQbOF66JzsGZ0N0bPhjQL
WpxqEs2prkk1hnqc5anGUI9zbXSdqv79+uhaVrOvNdGxRrO+rtE9snL9lGT/
mudcmeofzb7WRs8ENcebEz2n0LxiYHS9on68e3TPr157dfRMUHPCFtG5X732
tOQLmmO0TO9dM4H+0TWQ+qAG0XW5+sdm0TWQev8m0bW7Zg6romdemjEuSTWk
5m8ro2cimq2tiJ5laKYxN3rmornHDdEzMs3cGkXX+up35kfPEzWf7BtdV6mf
6pHig+YJl6Y4oNnOvOgZiuYq66JnfJrF9UyxRbOILsnHNeu4JMUizZEui+4X
NIOaET0rU+3dK7oOU8/4P++0ZGU=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmXccV9Mbx2/dk+Je8XWNFhoqs6yyIiqamhL5oZLQskKDtpYUEUUpDQ1F
lJQ9kz2yFZEVEcr6Rf0+79/n/HFe3/M5zx3nnvM8n+dznm+NHld27F82SZI3
yiRJ0G/jIkluTJPkAPVvzZJkmdrJ6reVsYtsDwufJNxG+Fzhy/S7XNc31di7
sp2qseuF9xO+RXix2vHqn6nrOsp2htpw2atq7A7ZypWSZP/E7+Td8+L7GRvO
u4R7C+uyZKzwOcJThY8QXip8jfCzwmcLfyE8XbiM3jVCuG6u+Qk/KHsj4Vdl
byE8VnicWkv1m6mNVv9mtTPV76u2kr6uX6frmwqPEj5Q+G7hBWrHqt9E7+gg
22y1q2Tfh2+Q7T61I9VvJHsr2U5XGyZ7FY1Nlu2UeL1+kvGZv+EE9VsGf9sA
tRdkb6exTbL1F14t3Fz4A+G/1HqrP0HXD5dtoNorsnfU2GbZUi3Uvon3gL0o
hGsLT0o9332Ea7G3wu2F/9A9l7O2et4w4YqyV2dusrcW3ku4Bu8TbiN8X9yP
vTU2WPeWZK+p/kTmLNtDGjtRuLWe11m4dvB+8/2jZMt0/UHqj+GbZL9cbYn6
p2nsddmXqDVUv4Xu6yTblWpPyt5KYx/JNl94aPTPEcKfCr8nfIHw18IV9Pxq
ifeMvftbY33wRXxCuHzJc2FO+GIufHBin8A3dhOunHjP2LvdS957fARfuVtt
p/rDNFZb/vWq8FNxfsz/eeFl3Cv8hPBU4R3CNwnX0vXvCL8m3Fn4U9nfUWur
fi/Nr7dsb6u9KnunuN+1So63hRq7RLYqwvWE7xU+T7hSyf42LXU8VhU+Rnim
8PnC1Ur21/uEuwofXPL6zhO+SLh6yf43X/hi4Zol798C4R7Cb2kObYQv0fyu
EH5X7XXepbGPM8+JuS1S66l+Hd1/SuKYI/aOKfl+YpRYrSt8auI9Z+/ZM/z8
huC9XKv2RPT3tRp/Qa2Z+l1l7867Y7zzTObGnJn7A2rd1F+v9oH6F8r+vexn
6b77U3MQXPQB38TaCX+emb+IN/aAvVjDPepfqPFLde1RJWNikFisJ9wysU/i
m/VL3nt84Crh99XeVP8NtXXqH1Hy/OEUuKV2yXy6WLiX8P7ChyfmNOIfH+J5
3YLX5z3h9sJXCPcRfjnyE89kbRro/g7qr9HYDbI9knn92wX7x8rCe48PwF0v
FubrJsLPwM0lP/9ljV0vWxfd96j6j6i9IHyCWg/1K8b4nZPZ/xrrurYxvnvK
vpfGbsYe+R8OGip8ruxzhOeyJ4U5BC65Bc5W/zlyivoPqT2r/h1qf6k/RPfX
ULycUDK3rdXYYNlOLDk2iJEhwk2EewpvgMOJxcgn+NhKvf/JyP+sCWvTTNf3
Un+jxsbCnZFf2eP/733JfLhJY+NlO6nkWCVmbxRuXjL/fss3CLcU7oevCd8q
fJrwRXBVar5pLNxd+BPhkcLHlexr+Bxcf7pwD7hAeJRwi5L56jvhicJPqy2N
/LhC8zuoZF/Gp/9TmLPX0U/M5WVKzkXkGHIN+YVc2Ur7sFr45Ny5kDVhbZgz
c++vsSJ3ziZ319f1iwrn+6OEzxZ+QviU3HNhjVnrRsKNE8+RuS7Sdb/jixo7
ULZFur+u+s00/jh7IXyYcHPhVcKPCx8n3En4GdZP95yRmEPh0sa5tQU+i++S
M8mdR+r6hexP7vvxcXy9k75/aGKOhqs7Cw9PrAnQBvg4vk7MfKdnDSJnqn+A
7DML+zC+XEf4AeGj9fxKiXMOuQcNghY5TPYFxHfu64mBGcJtZRwk/KfwFOF2
woMT+zS+jU/hW1doLNO9XWQfqX7Q8+6VrYPwjYlzBrkDH8AX+mqslNvn8D18
ZK/cPowvXyZcnrXIvd6TNbZEtmOF68T8/yB8LHxIzP+Lhb9S+1z9SzW2LbMP
4ouXCO8S/k34F+FrhSvo3n+Fd8X8Vzl3TK6N+erHzD6Or+PTO4S/Fv4yzu93
4Y3Cn8Xn/5o5RoiVixPn6nFah/cjf/8pHPSOVO0nXfez2jfkjLh+2Bn7Sfjq
xNfuEi4b9V9V4TIiogrCYyOf8A2s06+Fvy3IXpL91sR6sUHueIGPl8neMLf/
k18fhQ+F68f8uwI+Ej5aeIbwY8LH5/bvKXBaYU7aENeX76ifW7ugcdG6eW4/
mEbcCP9Ni/y3H9+u+VWU7ZaoN8oKZ8Ljo57Yoev/ifrigNycCDeeI/xTZs56
LebrrZnfsU34usTvJmeRu1oLfyb7MLXd1a+ud8yV7cjc/o7mQ/u9nTk+L5X9
DXJd5vjvIfyacLPcWpwcTa5Gk4MHyP5h4XfwrquF3yusWVhb1hiuaZrbzpzQ
VpwpiP/Ldf2bhTU52ryP8FuFORAubEBOxpb721kDtNRZub+dNUB7NSfmEmsY
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
/lO8PeoZ6vv/A/5zzSU=
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
Xt2FnhYcCxUrKjH+DbXiHlE=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmAnYV1MXxe9bnX+le8u/rqRUCplnIkLmIT5Ths/0kYgQEZkyhJDxSxNp
HhFSiXpLk0qTJmmgSWUqUaQZ69c6z/Oe573r7Hvv/9x99l577VOv+X1Xti6T
JMnskiQpp/8D0iTpr/FGniT/16isMUeGgbI9pPkWxSQZrOtFmivK1k0jC0my
UHPvy36k8FbZpiR+TyfhncJThbsJ9xDeW/cvEv5I+BW97xtdV9VcE9k6CX8t
XEX4DOE++r9ez4+Jz98se19dT9FcJdlf0SjRPTM097bsN8reS9elsleU7Unh
acK7hY8VvkLjSN2/QXOrdf9DwgtkGyTcSvgZ3f+lrhPdc6JsN2qcoesdmtom
++HCf+r+CcLvCDcv2jdzNVcl+qy87p8bfZkKT5etv/CDwhWE5wu/LXy3cBfh
vXT/fOEhwuWFZ8neQ/gu4af0/um6/ltzx8lW0Jiq626aayn7y7lt3NNDOAhP
EO4ifLvwLUX/9gzNZbIdovG7rsdp7q3UPtkdn39P+CXhbXH/ugjvL1xL40Vs
Gkfrekfcz8HCBwv/KjxWuLvwvsIrhD8Ufk74COG/hCcL9xZ+U+tZpes6+uYL
ZaursVb2EZp7RfaDhH8R/ky4q3CN3O/kXc+n3pMk7veHwo2EywnPFh4lfKDw
j3p+tHBn4W76ve91XU/3XCLbKRpldT1LcyPwv+yrdV1XcxfJdkBcE2t5NfW3
r9b7hif2wanCQfd+JTxa+DDhP2T/XLin8OXCh8n+i/BK4cf0/kmJfYAvXhVe
KpzrnrOEuwuvEa4vfKnwUxo/695PNfcU+SL7Ol0fKPt/ZHtD+DvhGsLnEjsa
k8o5J9ro/tdkX6brfWQ/W7ZHi14bMUvsPqKxTNfva+5+3f+48Brhj4UfZr3C
q4Q/Em4r/KjwcuEPhB8Qflb4N+FS4ReEO+v9K3RdS793vmxXahyj642aW5M6
pomTj4Jj/XmNzXp+vOwvk2/CG2J+PytcX/gH4VHCb6T2wZN8V7Bv6mmsk32k
7K9pfj/hlXG9HYmRoveWmCA2DtXYFH8Pfvif8Fmy/U1OwSfCTYR3Ce8Svj83
t/SN+TNa76sqbrxJ99wrWz/hP2VrKHyt8E0aZ+p6p+Z2pPZpH/Yu2NdwylvC
jwZzzQO5c7F/zF982k/XHYJ9fXfR38Ie1IT/hDcLnyD71cL/1Wik662a26xn
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
            "]], 
           Polygon3DBox[CompressedData["
1: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
rsv5XgD2P/z4J2A=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
             RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
            "Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJwtmHncVtMaht+vWJuyP31fe2dI0lzSPJKpiWjSPFLSoJlS1CFFhTKUIkQI
lfkcxzEfDsc8ZDgHURo0SCEqCYnr/t3rj/e3rn2/zx7etdfzPPd6qw2b2HNC
mUKhsLqoUCjL2CQpFKbCV4VC4XB4GDwcHpYXCodyvLakUFiSFgr90TfCY9CL
0b+Gj2QciT6G+FuI6Q2vQx9JzGGJr3cxXJ5xA3of+Hti34MnE38m8e/DP6F1
g7swHkHscHgUvIiYvvBXxEzg3IzvtsFnw5/w/QtwjjaOmEs4Xkr8QHgz+r6s
UPgF7RP4cvR26B/C/Tj3R/TV8DT09ugfwb8Q/xv6/+AZ6B3RP4YHEb8vXqcp
3IP7HVZaKNxDzCBitqAXiguFv8Nj+e4G9J7wlyW+v+akJ2Mzzu2tOeHc5cSc
j76VmJlwJ3i/7s2nJXwS40D0BvCLxHTh3PVo/4EvQG+K/grcGX0t+svwRPTT
0d+BR8CnwG/AG4Ln+RTGoejN4VfRh6W+13/hFanf+zE83yVc8yjGb9CPZpyA
Pplzu6JvYnwN/evg+TyNsRf6Dsa30X9g7IJ+DuMornky/Dp6D2K+QdvO56Pg
Z6jN2Bb9HcZniekIfwg/Dw/g3IbEfM7xF3xOhZszvsunMXws4wfB83ACY3vO
fZ/xuRLfQ/PZnnFs6nPfRF8XPD+tGAenvs6/0c/l3DVoL8E7Gc9FPyt4LWjt
9VE8Mb/GtbE783rV+tH7foCYZzmuTkxLjn9Frwu3g/+EPwt+F00Y3wr+XRlj
NWKaEbOfmO48TyP0ItZRDfST0X9DX4jep8i5dCl8Bvwu+uG5c085OB79NPS3
4Jrop6L/XuK5a4PelPHrzO9M764hMZ2JOZfP6NQxejd69xPhy+A0d14p17ox
3oX+MHoV9AYc70U/Bj4RrsenBD6ecQf6V8HP2ZrxSPTK6NvRT4I7wWVZ/5uD
8+50xo1aB3Abxi+Df0sLxuLc60/r8ES4I1zEubfxzP2IWY++LfP71vPfiT4A
fRP6Nanf4//hotx1SHP4R3Ad6894EcePwC/Dh+auO6pR8zm3B/oX8PnoB/j+
U/h37lUg5nN4bup6tUb5SMyfwbq+V/0ZxPHs1LnwGfqvme+t6+xHvxv9yFLn
vN5vL8Y/iQmx3h4M/i0DtP4z54zyYn3mdax835g5t1UTSjlvDPHjOd6ReR0r
H9dkzhPlheqW7vuYnjVzLinv1mXOMa3/34Pnti/jD5nzWbV6Sup39IHmM3Hd
G8x3e4NrXXe9u8z1SzX5KOakDnE/wjfBbWMuqP4tI/5JxXPNhap1rPmuMd+V
H2vgBXB99Ofg6cpxuBtcLcbshR9ULqPPgy+AS+A9qfNxEPe5Gu6leUafDneH
U/hK+Dy4GJ4V80vv4Sf4frgl+jPwNLgqvAu+V2sS/gy+BT4RfgH+G1wNfhWe
DO/jNz6Rup8eh/4YfBlcGX4NvhquAV/PnLSOOa4aMBv9Zp7hTWKmwL+gzyam
aawPL6FfWeR8exm+Cq7OdeYS0yLWnKfRr0A/Hv0p+HK4SrFr0lx4oeoX+iz4
D9Vw+Da4MTFb4NuLXBcmwZ3h8uhT4a7wEfAY+Gz4cPh2+CI4h4fDHeAEHgmf
pXoFj4t9Tfk5AT4HLofeA24Cl4F7wc3kQ+BBsRapbvWHW8MBvR/cCj4UvhW+
UPVTcwgPhivAi2P/Up6vTF3HVM/Ww4vghsTcB18MHw2vg2+FG8Ab4cVwI/hm
eAhcCm+Dl6huw9vhO1RL4WXwKPgoeCe8FG4GPwSPV2+CH4DH6hng7+F71L/g
BfBQuCJ8FzwCrgR/AN+gHp34nevdzQjuA9fDi9W7eNejOc6oGweJX675h1uj
D0Uvhk/JXdcqwCMZH1OvVy9LnXcl6CuIGRZjVsEXx2vuI+ZOvWt4d1wPyqMH
iBnAWB59YOL7/kv1KuaaeuAB+D79LmIeIn5IfJ5Tcz9HKbwSHhF5M/Hz9E7h
tanXZxl4Kzxf7x2+l/he0S/tQL9Ja0z1H/3s2EfuzN3HtG43pJ6rQ9Cbo/dD
KwffD/eNLE3P+VTwOfqNK+AWuX+bfqPm+An5FvSfU/e+tNRzvAp+UfUzdc4W
0F+BJ8E/k1M3cJ02sf++gz4HvTbvdyF6h9i/ZsInxR76FjHXElOLmPdjjmsN
qIdrfpbIL6HfCNcl5hP4ZrgevBqeAR/gOu/B18F10F+HZ8I1i92rFXM919mf
ub6rJz6S2rfvhJ+ER8Pfwc+m9ns/wdN5ztqxhn+Mfg36Qfifqf32rhL39kvg
qcG1Sc8/B76Hc8+LPnlGbo+g76fCNRh/4NxJcJXoGVal9vzfwpeiHxs9gzyF
5nYa13w8dY/7Hv3F1PfdDW+KuaN10AduoTVQ7GdXPk7i3K389m3Bfrh/4nx/
kONx3KskcU0YC1dInNdbiN8a7F23Z/a38lebM3sXeeZKxNdKPA+j4TRxLmuP
ohoyNDhvVGMfgpcR0zNxHRieu9erDoyAk8Q17Ruu/22wX92U2RvJq2/I7Kvk
+ddm9pTaF3yV2TPJx2qNq9Ytl/fmmuUS12f5HvW43vJW6KMS5+mD8ODEPbQb
vCW4hneAVwfX5Hbwe8G1unHiNTA/ekXV2xFw99xzpZrfF94V3C/KxGfQ3k01
Rr316eD1rfd1m54ncb7fAbci/oLEudYGHp64Xp0Bj0lc686E3w72yUPgMonr
/6CYyyv5bih62cR+4GT4wsReqyV8fuL6diN8ZuI+3idxL7g/2Oup93UK3gOp
11wElxJfNXG+VICPS7xWKyb2HkM0d3FfLP+ZwdUTr1XlverAAmIqoldLnGvK
D3mJu4PrmfJ3UfBvklfpBoe4rrTvzuGaMXcO8t4PSbzH7J64JiwN3q/L8/QI
zgfN8+2q/5k9pbyovJhqzk0cF+La0579QGZvJ0/7R+Y5lAfWmpUfWxZcj+XZ
7g2u8ep9jwbvjdTfOwZ7KfX9Dow/Zt5ryzd+l3nvr/2L+oA81T9UYzP7SO21
5aPlNzoz7kHfHbxn3wvvCd6n74S/C97nal8uT9KOcVfmtaf/E47I7Ym1vy4f
c1z79HIxx/X/gHqg+vITeoZg39KW8Za4d5P/vDD3PMsPKFfkB1bJ8+bOU/mZ
Sol7+jCOz8tdZ+SRysb/PbRP0dqRP5zOdwvQ2yf2vY3gLon7oNbmCmKeI2Yy
+gmJfaP8kLxxJcb66Gcl7pWXxbUkn6n9q/aPxwSv94fhl+Alcc8lbyOfKE87
K3jPXUMehnFR3FvJCzXJvd9Tn+2de57lA1sl9uHXBufoSvh5uDYxZyT2k1fD
9RP7UtWMmsRUZmyAfk7ivlwn5p36iPyv/PPs4Fx/FH4FviKuc/lY/d+gel6f
8Y54HfnVK+P+QvuCabEOy6urtj1O/GvB9Uy+sXHw/lDeslmIngZ+Jvi/E3nR
qsE+Rv/hvBncw+WxrwuuPU/Cb8TapR43F64X36M8QK3ctUy9eErMfXnv5ok9
+Uzir0Kvm3i/sBTumthP3hXXgHzm4vh+5VePjfOpHndd7neg/n537pyX59T/
JXW4fg3lD5+68gCMn2qtyNOq36s3y+uqT9AfL4X3cM3G8RnktQbmzgHtlarC
jRLvZdQHahNfLXg9yveOU67nvof8uWqhrnk5x/flrqfaK+n/Knn7WozLc/dd
7a065X4m+fn+uXNc+zL5AnnmieqbufNdezT9z1dPnkc5mvt3qr+fkLsnaa90
PNwwsQerHP2VfuO1uf/flL+6Jv4u+SL5Ee0RpgT/b1QLrhLsO7SvGRnsTeTP
R8Oz4vW1d1P/qS7vzTgxd/7L8x8d36+8k/ao2qtWZJwfc0Se7fTEe8B56M/H
fYqeZXzuXqL9wrzccfJ7c3KvIXnIvwCjULNF
            "]], 
           Polygon3DBox[CompressedData["
1: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
/dey/4tqRP9jfdVf/w9rw7AQ
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 6], 
          RGBColor[0.922526, 0.385626, 0.209179], Lighting -> {{"Ambient", 
             RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
5cHnn9KczwbXNaqhstFrUmtndX5Naa39CzXdv9A=
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 6], 
          RGBColor[0.528488, 0.470624, 0.701351], Lighting -> {{"Ambient", 
             RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
            "Directional", 
             RGBColor[0.264244, 0.235312, 0.3506755], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             Hue[0.7, 1, 1], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.264244, 0.235312, 0.3506755], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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

            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmXf81tMbxp+eSs95xPn64POQLSt779kwyl4hZGWT+SOrUilNDZJUlNEe
WlQiRBoaVsiqUJpEZvld79d1/jiv77nOfZ7n+XzOue/7uu77u8d1LS+8s1go
FOZWKxRq6O+mUChcptFU46RKoVBP4zTNX9KmgbFQeC8vFA4Wfka4v/BVGi01
n6C16tp7qMY5mo/W2lDZ9hU+WXhw2j9dn68n3FO4t/ABsjcUfkX4BeGVGm00
31ZrJdmmaf8+mvfQWg/ZTtTapcIThCcJHyN8ofAFGkdrfojG2ZqPkn247Ks1
P0NjqPBg4dn6vpPS87wqPCf38w0RHiF8sj5/ufAk4SnCRwifJ3yuxuGaH6zR
RPMRsr8s+6nCVwpPEX5L+AThS4Qv1jhe82M1LtL8Ndlfk/1D/d4JwoPS5y/S
uJFn0dpm2U7R/is0n6y1abIdKXy+8Fjh0cINha8Tni78nvA+wiem73tWeH+N
izV/XGuP6vt2lv0wzQ/V2EnzrTTqaN5ee+7U3u7a002jkeanazyn+e+lQuFm
2S8VPk7jes2f1mc65l67T3hY8N7n9Lez/p6m9foal2n8T/aRWu+v9T30e0ex
V2vdZRuktc36fpzuSuHdZT9S9iM0dtN8P61dKFtr4Ue0dxetHa75s1rrzH1r
XKt5L611kL2XRk+Ns7TemPPSuJrfkv3xZFut37um6D1HaTTHl2RvJ9vR0bae
nInwscLXCfcRfkJ4Tua75Y6/Er5c9geERwk/j28Kny/8iPDDwq2FOwjPF871
7AcKXyrcQfix3OfZVPgZ4V9zn8FD+Ebw2TQTbiU8Vnig8Db6jt05Y609EO0z
+N66YF96SmNVye/Iu1Zp/67clfbcl87kdmIr+Kyi7Lvwblq7R7YGwtcIvyn8
LvEQHG/deacUP8dqDBAeIryt9tcV7ir8kPBpwlcJTxWeIVwRPki4t3Bb4a76
zRV6tpUl+9m50Xc/hBwivER/jyF2Nfas2Jd+1N4ri/apKzQe1HwMzyBbH421
sq/TeFrzflr/oeTP8Nm9K46vgZyxPjtEazWCfbaF8A4V56+nhZ9I8XeP5q9o
rV/uGLhVeEBwbNSt+P2fx+dk25Eck/Jfe+F3c79vH+F+nJ/G+5rHcqHwJTbh
JsIdtWeN8GCNoub3au162cZwJ/i68P3Ck3LfT8d0fhNyxys+hW9NFt4t+UM7
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtl3d8TlcYgK+V+D7jxsX9rFZpVVXV3pvaW2lVVa3S2nuLUCKR2HuLTRIR
EYSIGSEJElvtGVvsTZ/3994/nt/vfZ9zzr33u/ec95yvSLcBbftnNAwjDrLA
VsswrrgMY69tGPtgP3j7GMYn3Cni3aZhxMJbuIY7gFtAvBBc9MvgNowW+Agu
uh93DkaTJ2Q1jPq4YuRv4DIujrFziOdCdsa6GfsLPpp+CbjncJp8J/2mEAfA
O7iOO4hbRLwYXsN/uFjcDOKZcn2Yj7vBfTtwvWrkBvd4hkuiXyh5GHjh3uNS
cTvId8InSMfVgJWMXUfupl9mnq81LhJ3EJcN5437GReFi5fngH/JL3DfJriS
5Bnp9xJ3jHtEkG+BC+An75R+jehXgjwz/d7gTtAvinwbfIR7uIqwhH4h5Jdg
Cvl1xjbH/Uh+HsbJPXANcMXJ38NNXGlYgFtGfhH8ya/SrxmuFPlL+U64Xdw3
iDgYPsNTXCJuPfEGeQ55P7jVuL+Ie8IHuIMrB4u43gry1tAKpjOX1uI/0v8h
+V7iTcQDiAfCdoiGA5Z+gxoe5h95JOyz9F1Uwe0ij4GDls7DWrhqUBX2497h
qnt0Dspc3GbpHPkWt5Y4kbgYfAN5cNG4G8Q1IYRnXsqYdbhj5N9BcchLv3ic
wff9nTyGfvvoVwlfEfbS9hpfmbgclIU9uBe48sQxxI+Jm0BjKOXRdSPr5xBt
n3G1cduJbxPXkVzuL78X94S4qbwv7ruGMZshHOIsnUsV6LeT+AFxQ2gAP3j0
O8n3irV0rpfBrSc+TlwCZnI9X9o34lJlDMzG+eEmydyFUEvXXX7GFoQCEIY7
iytEXBi+hM24C7iviKcyLlCe0dK59AXuCLGL99eDvLs8I+4oLjuuF3lPaITb
gbtLXB/qwffyO3ApxCUlBxs3netPgwhL13sRj9arq8TVoKp8Y9waXAJxUekD
Fm417hBxYQjk946U+gDzIMrSWlaMfiuJ98vvhIKQEzeUPkNgFW0HcT642eSz
ZC1bWsu+xg0mHwQhuAM4E5dA7MXv7UreRX4jbpO8f5kLlq6x0jh/8smwCXcK
lw/nDV6wyNJ1l5W4Hn3qyrfCLcG9Yj3NJg6XdhjOb+tAexf4U+oybdvxWRg7
hziC2A0uyICbi9tCnA1GMrYjY7pBV1lLtEXjM9NvFnEYsTd4geHR9S91YDFt
MXJNXFPyJjAVF4J7JzWZeJ3cDwZxj3ZSo3Eb5dqQCT7TLxC3kvg9tekdvMW1
pG8L+e60raHtA86feBnxG/q8FnAN6dNA6iJty6UNF0y8mvgTfT7Ce1x/+vSD
5ZbWoxw88zzirRJDdsiIG4mbTHyFcZfhAWPH4Wbg7pN35ndU4DqjcAG4m7jf
cGVwvrhZuIcyDtIZOwYXjEsj70S/crIv4oJwd3C34TH9luHiZO3JHJDn4VnG
4qYT36PPXXhCv/m4KJmfMJrrdeJ643GzyR/RpwuuEq4W1ISJtC2g7Tlja5BX
l7WOW4h7gRtGPJY4mbFJ8jw4P9xc3BN5NniKG44bjztJngppuN5c6x9YQlus
zCWeeQLxPOJ0+nTjWarQPgI3EXcedw7uMfYwLhProzP+D6jL2EScietNHs/Y
ZMYm4XxwfXCHcUm4ZFwut46T8Ze4XgrO49Z6I3XnGu44Lo9b15+swyu4k7gC
bq1BUotu4G6Zul8tJG5D3Fb2NtlPZL7DQO7bmfy21Fh5l/yGXrj2ss+aOj8X
2Lr3yR4oe9NbpzZLjU6xdY947tR6qfnJtq7LzS6d8zL3l9m6fzxyaprUtiO2
7jmvnBoptfK48/4y8jtakreCs7bW2Gy4X8k7wAVba3FWXDvy9vINbK1NWXBt
yNvCOVvXeahL15WsryXOOlqFm0s8T+YeXDO1/gQR1yf+Sc4LcBL3JQTwXiaS
3ze1NqyhXy/iv+GZqTVuh637jew7j0ytmZttrbVSc2Ut7MGtx22AjbbW5324
UOIwCIcHps67dcR9iPuaWiOW4oJx02A6PDa1fkfIfCceDulwBJcHJvDMY8iv
m1pDZtCvEXFjuGFqPZuDa0bcHJ5APC4XjGfsKFNr2ArymfIupTZDmql1NMTW
miy1+a6pdXkVrjtxD7hq6noMxNUmruPUyQ2yRvkWL2Gxsy7nuLQuSX3yt3Vt
TcCdIT8L43BZfPRsJPMu2jlvvTJ1z95t614qe6qcv+UcHumc/WUPfWHqfh9j
674u+3sGHz3fyJwNd84kco6T89wK57vIfpnJR89GMj/lLLfV+SbybZY631Tq
Wg765WT+dSTfyftLpP0E7TZuEC4RlyJzBVcIN0KuiTtt6votiBuOGwbNPbrO
8+IGkg+AprhUXH7cUHluxp506oaF64frC03odwyXG9df1hr9jptaS/LhhuAG
QzOPznOZ75Od+SV7j8wPmScBzreXfUvmh8yTIGftyN4j9X6qS+ur1Fk/W2v7
NJfWUqmpE23djyJdumfJ3rXC1j1lpkvrptTPSU4t9sWdIE+BsbbuW5NwF8kv
ga9T28fgjpInwhhbz27nXXomLubMBznjnXHpmamo8+3ljHmfuBJUhgRbz1eH
iS3IDZG2nrOPEucFG7baeqZOdvYx2c+ibD3XnXDp2UrOWNG2nm92uPQcIOcB
+X9xxdT9KsDWvUr2LDknpuHKQwXZB2w9P98iLgNlZb/AZfXR8/VpqbeMi4P/
AWYxQxE=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 6], 
          RGBColor[0.772079, 0.431554, 0.102387], Lighting -> {{"Ambient", 
             RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
            "Directional", 
             RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
v6gGHBpd76hO/BtFv+fX
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmXncVdMXxm/vDTmHOu6N+4pKA6kUSZFMFYVoJJqTNEnRRKbM8zyEkMyz
zDJG5pnmSYMmzZJKxt/z/T3rj/15z7PXOefuvc9az3rWemv1H9FleFkul/um
Qi5XUX8vLOVy/ZJcbud8LndalsudkOZydwo3Er5NeIuuO2icqvG57r1UY4Cu
d5W9h+xXCQ8RrizcX7iunj9fuCg8WPhB2e8RPlj4DuFRGiM11mt+g8ZA3f+q
7O1kfz3zPdx7kuZz5bncIt0zXPY9NNdVtheEXxc+WfhN4bOFTxD+VZs6TPgG
4bHCJdmHxfp7ae4gXTfSuE7XozS3p+xDhccI9xauKNxJ+B7ha4XrCF+V+R28
q6HWs0a2OzSukr2W5i6X7WnhJ4WPEX5O+CHhCcKHCt+VeQ5bDz1f0H5ul/1K
2ffT3KWyLRa+IM7rjMx77KJRTL332zTGy15T9os1f6/wdcJ1ha8Rflj4PuGm
whOEJwhfL3yA8HXCL2ocp+veel9V/f5Tsj8h+1Gae0a2pcKj4zx6CjdLvUbW
dpnGObpuK/tmnW9z4RuFLxKupvuHZz7bY4XXl/mMPxM+RXibcD3hDsL1hecI
F4V/1vXRGmuFqwl3lP1g4XnCewqfKlxHeJbwHsJThesJLw38oMZEjV20l0oa
/8o+SfbDtZ5bNP+mcC3hxbq/snAn4WbCC4RLwt2EmwivEK4lvKfe8Tb+redf
Ep4me0vh1bKXC38g3EJ4VTz/Zea9tdfcp7J9LbxDuKPwF8JfCW8v8xlwFmN1
nj/quq/e/6FsUzQ3NX7vHeF+wn01DtF1E433dN001sd5nCl8ePx+HeF3hBsJ
/xznWdL63xPuqPe9nPldrYU3lvmd/wk/Ktwi4nl9+MMzmttJz74i+7vx/Huy
3Sp8uXAN4YuEfxDuKVwmfIzw98Ldhf/T+1viX8JvCLeXfarwrxrHc5aa213v
/0r2Lrr+s8z7Yw+/6XpD4r1xhpzlVs3Vl+1K4cHCu+kd/YQ/ET5ZeIvsdYWv
EB4knMreJ/OZc/Z/lDm+vxM+U/hf4RbCNwtfIryv7h8tPINY0vhJ9irCm2W/
Rbi+7BdmHmPZR8k2vt902U+T/SPNn6a5hnH+NYXfEP5IuGt8X95fQ2NG+N83
sp8u/LdwM+GNGq117/NwqM6ni+z7h39Xl+014Q+EO+ueD4QvEj5LeBfhbsI7
65lnE3/DB4QfkX2icLO84+JGjQN1fazW/ZdsNws3EG4t/A+xr/GY7j9Sc08Q
3xqZrmvJvrJkDofLawgvF16ocV7iezrLtkB4mPC5GvN1vULjYl3vI/sA2WfH
9+P7nCi8Svgy4erCA4m/1Gvgt5+ED3R9YfB1X+HVwlcE35E/Jgs/JNxc+CHh
P4TvjXxytfCsWD9rYm2PaTyi6yM0N1m2X4SvDr6G738qOT8VhE8XXhL5oKpw
d+FnS/42fKMpwssin+wFhwpX1fpHJM5J8DMc9JyuW+XNTXM1NzTyYXvhOZEf
dxc+VfgWuDXOAz+bKHy3cGPh24N/7xC+XeN32dYGn+8v+wWyrxO+Ifh9hPAD
Jd9/kPCtwpOEHxA+TPh+4Uv4PsRE5v1t1PVNst+YOP+uiXxSJ/Il954tXCnv
Z8jn44MPBmXOYW9E/iW3bY/8zvqvzPzN4YbdU/vCTRrjwj/I++Qk1n6U7DtK
9rFxkU/wvZVxPsQrvrm1ZD3C/shH98X68XF8/X7hWxP7OL7Onthbvby1xiZi
IO4fI7yFnBr3j4OL4nk4gHi/XmNMfO9zM+dM+PqUvHPp3bLfhY9m3m8i+wvh
Lw9n5jy470U4TNdDdO9JwV9Hyj4eftXoldmfysjJoR/uFq5Qbj1xtPC9woN0
74mJOfMI4cElz3ENv/0V8X9YnAecgv/ik/jmWNn7wPV56wo4H+5/WqOirpcF
P3AGnMWTGo/ruqXmnpJtaPDv7/r9o8L/0YxoReLn3OBvciL5IZ+aj8mJrYUH
lKzR0Gbw3wW6PiP4uV3cz/rQX62EH5X94cjnk4RH8FvBnycIPy48OfLZY5l9
CP1zaOgdznagcJL3GQ+P/POXnj9eeFjJepZ8we9dU3I8F8K/pwQ/99O69tL5
7KHxWmJ9+rRs1+r+kcEXQzL7wjXCtfP2iazcerZt3vxWXm4+7yT8inB14a+F
e0a+XRJ8jU8Tm19kPmvOnNzHGsjPHYKPztNc58inbYSvDj7OIl7QzE/E90NL
o+cnBx/CD//E+TaPeBkd+T0v3EF4ZORPYphYrqz3TUmc0x8VHiV7j9ADJwuf
H/ntH93fNrOeJx92kf014Wrlzp9dQ9/D/68Iv6xRRbYaGt/punfku0OKPivO
jFy4n+aW691rhKeX7EP4wo7EvlWlaC2NJkeb71Y0d8AhcO0WOCnvb8i3rFw0
l8FpaOus6NxAjrhTuGrRXAvnoqWLRXMjHIn2RsNw9tsSa7ddZd87b02MNk6K
5jI4De7bW785LfL5q/Bn0b5CjUGtMVCjXeIYJ66JaWLj78Sx3l/j+MQ1DnHE
NyG37pb6W52eWt+R08mr5BBye7vUuQWfZr91Uvv6b3BNYs2OdoeD4LpqqbkJ
n+Y8D0jt62VF5y5yGLVeD42jEuv3AzJzItzYS/c/U7IPcv77pfZNfBBfPDF1
LQjHcz7VU7+vZ8n1wDq9r0HEH77eN3UuJseQa7qnrrUu4zcSxzix3kejVWLN
i/atVPR+yNnUgg0zv5d9U7/uUzRXwBnUTtWL5k44FC21d9G5jJzGeqsJN8m7
pqO24x3Uwmh83p0rmmvQpGjTfwrOndTI1MrLhNeU+cw4u681ugYfNdXziwvW
+mj+M+CyzHVcvtz8vKhgrYnmP132mkXHLjEMV8IpxObZqbnmS811Cv49mHxS
tL+gydDWcCjrq5SaW+Fg1p+m5mZimNp+19SxvXPRXIdGonaGM+HqstRcWqfo
7wvnUFuSA+CG/xLnhtpF+yM5hdxSt+jcRo7je+6rNX+h6+5510NwGr2InVJz
HZwB9w5KzSX7aHzKWeVdb9QqhtZLnBvgeLTyzqm5f2nBtRM1XHfyUGp9SQ1O
nQsn8vzxqbXUI5nzTlru/I2mp3Ybk1rrw1Fw1cjU/IRmgh8apPa3acJ9hEcL
v15yDUAtMDNxbUqN1kb2s1LXbu8L90Lb0QcpmTPhznOEny95zax9ddQ/72r0
kH247C+X7DP4zkrZa2fOKeSWEalru84l1zuLo95G08A/9VNrHWpazmdx4lr5
/zW68LzEtTs+h+/BwXBxDTSWrlfC6SX/Jr2BdeG/cDrcfgLfPPOa0T4b4/yp
uenVrE1ci8OJ3DsgNVdS8xIPCxP3BngHeR6e492sYZPsv0Q8sCe4aFnivdJf
oP5forl9M9dU9CZWJK61WDP9hGVl3gs1HLXy6sS1HZqO+D8itdb7I3PtRw7D
//A5fG9I6tqX+CNf9Rd+ruQag3xSL3W80ENYqPcvTdxb4LzpRSxJ3Fvge1F7
n59aG6Bh4KeWaeQf/e2buEeH7kLDE4+l1Nr+LI02ic/k0Mw5HX5olVobownh
t2NSa2dyHLkOzYJ2GQcnJ9b8aH9ikN7Eealjk+9Bb2ZR4t4E/kEvZ37iXgTx
QG4blTqX06OhdzMnce+GHl03+Cd17+5t4TPR1sIvlRxjaGVigtjj9+GCYal7
JdvifNBAaKHt8Xvog/L4PWrn2Yl7R79n7kVQo1Cr9NbccYl9tnH4I7G0KfTV
1Lh/aGpu2Rr7R/Oj/V8QPla4p+zFcveIqPX6pO4dTY/8vCniY0HB66kX8TGv
4F5DzfDPFZlrV/ILtRM9q4bCbVL3st7WaBD+WZDtl8xaGL5Huy3P3JulJqI2
WolmyrsmpjZelbkXSH5DG9+UubdxnN7/t/AnoacaxfeD79FuieyzhH/M3Hsh
X1C/3ZC5ljpa9j+FV2fRa0hce7wFp0e8ZZnXPFvXcxPvZUbmWhj9QC28KfiP
mona6VvNdQv9eDjcE+dBjUattjTWTw1HLTcvc6+A/E5t/q7GIcFPVeGCzLUU
+YVaak3mXif5CW28Lr4nNRe116Q43y6pOX9z8BGaF+07MfbbMXXPcUKc7ymp
c/Rt8T3apu61bQj/oEdDr2a+cHnePQ56HR9n/rb1Ij44s5nCsxKf5XGZtUUF
+oYl11Dk8orCM4R/yKzV0ez05r5Hg+Tdk6M3911m7Y6G/y7yIVpjFz0/U7hj
Zp0/r+T+DT7xYOI94itoDmpDzggtAr+TW9Zr7mPd+028j5qK3t634T/UAPS6
asT+Vgl/VHIPg14G3/SSzN9oruwLEn+73yK/UzNRO3EPfW7yNM/ic/cnPnN8
8XNiosw92mmxB3pRVfLe26ex3qbBV59FvLcIvt1LeL7wT8Lvl5wj8N3lwh8K
Tw9cK/L1oUXnY2oa8v82jbsSf/PxuvegovUvfAFf1Rc+Ke//UcB3DYrWr/AR
+aJx0foWPiM/z83ce0df0YuiJ0RvqEnqHuSczP8boGdF7wqN8H7inIN2+Ldg
vYYmRhv/WbB+omdI73BHwXqNGptewF8F6yM4H+6Hg99KvAe4eU3B+ZmeP73/
1QVzGxxHLUKOo7+B5iT3bSy4d9s+9N76gnsV9DzofWwuuF7CX9BjqwrOt+Qs
ctf2gvUi/kwtiuahPqR+RgttKbjew7/Qo2ied5I4w8wx0itxTBA7PxesB6gp
qC2IGfIn/Q9iaWbkO86A2IDzODvOEC6E499MnBPgfnye+mxz6Ct8ulXkE3x9
a8H1GvFGPYbm+zCxz6AFVxR8L89QqywvWI+Qk8hN1Ez0Y+jnUkttk71C3jU2
tfaGgvUT/QB6MWsLXgtronZckLm3Rr1JL40eLLFQM3VvdmH4E/UwvbVFmf93
RD1L7++nzP046l16jYPD3/ZP3YvtEHyTpeaM2Zn/F0dPmN7wyPj9xqn/pzcz
fp8eKL3QxZE/6FnSu6Q+oFeUS81fA+N9tVP3iodGPByYundLjDZPHNPELjFK
/bou9N3/AMIzyas=
            "]], 
           Polygon3DBox[CompressedData["
1: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
DvY/EgYFkw==
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwt0UsrRHEcx+Gf29wHgwUbUWys2LNnK/aGKBkmSkay0bgzLu+BrBXvgawV
74GsFXlOqfM5z3d1zr9zBuer02tNEbGscktEsmv5iCLr7OMVrzVs33GMD3zU
hP3CKb7xXbP2F8v84a9W7Z5CxDYHuM9Ua8QB0zxkhlkd2TkeM8+CTuwiT9nO
Dp3ZnTxniV1q2N28SN7HS454X539rLGLJVXsb2eb4yc/NGO/cpLPfNK4fc9R
3vJGQ3aDvdyjx8Wu72fGDnPJd+SWsvYmM9zgutJ2lSlWuKK25D/QsWOJi3LF
glvz///5Ay2WKnY=
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwt0Vsrw2EAx/FHUZa5M+fjW/IGsDltzK4V78HMmRV33FtKwrSVnKIky60V
d9xbfP7l4tvn1//mefo/I8nc6EJTCCGt0+YQ8kzFQygyxyMucVklu8Ay93mg
e/uENVZYVd1+4zc/+KmG/cuYw9raQ0hwrCWETo6zixNMqttOsYeTnFKvPc0+
znBW/XaaA8xwToP2PIeY5TATzutgjK1suMdPlDvV+cUaX/Vul6PNEo91Zxd5
yTxXou/2Ig+Z5R5f/L9dPnOHT3zUtv3ALd7yRpv2NTdYZUXr9hXXeMFzFewz
rv6/zx8q6D/Q
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0b8rhHEAx/HvLTYWiRL1cBzHZWVnFSaJRYpbWJhIbAo7E8lvx93o9687
ZsX/QGaZvb4ZPr3eTz31fb49yeTcyGwqhJC32qoQEg+D1SHkOMY+TnPGBvQy
h7nODZvQe8yzyJIt6Feu8p0ftqm/uc1fHvDSeYe84hGveWPH+pYnvOO9neoH
nvGRT1bQzzxnmRW70C8sxm9gKV6uJoR9/jh3i1/8jN+v37jCCss2rwvxvtzl
jo3rNQ5xiYvWr6fYy1F2s8d5Xcwxyyw743SGHUyz1TI6YTub2WRtupFpNrA+
vqvr2JL6/z9/K282SQ==
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0UsrRGEAx+F3RKxkXAczZMfeZca9ZK3GN7CgKQ2imRIlUxJZK74DuV/G
ZcsWs2bW2LPzlMWv53825+28p2tmIZ2NhBAymq8O4cRDqjaEe07ymWlOq2Rn
WGaOeX3be/zlAQ9VVeE9jPKBj0rYJfawzD5Ga0LoZz0H2MBGJe0mptjMFg3a
MQ6xlW0atts5wjgTGrU7OMZOjvPTeb18Zzdf+aK4XWQdj3mkSnufP75nlzv6
spf5wTnO6s2e4hMneMdt91fkFm9Z4KZu7A1ec51rurJXeck8c7qwV3jOJS7q
zM7yNPL/f/4AHnE0ug==
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0Tsvg2EcxuFHJyafQWIWs4TE+TxoDCxNNAxOPaBlYJEQdgZiYJEQdgZi
UNVqtYmQCIn4Jq43hl+ue3v+ed+WZDqeagghzKvQGEJ3LITW5hDG2c5pdrJL
c/Yks5xhUlv2Bve5w10d2ic84wUvdW0/8JYVFrjQFMITF1nkEpf1bKdYYpoZ
le0sX7jCVVXsNVaZY16v9jpr0V2s88N7jyzzhve805V9zlMe80gH9jb3mGdO
m3aCGcY5oVm7g1Ns4xh/fb9R/nCE3/zSsP3JoegWvmvQfuMA66yp366yL7qV
JfXaRfbE/v/PH77cPx8=
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0UkrxHEcx/HfjJuIo0kJYzRTskVpMrma4iL7Ojg52J6DyVnxHMhZzrLv
xr7euXP3ksO71+fy61v/f83MYt9CJIQwp6riEArREMrKQ/hgJb+YZEo/dhcj
RSH0sFel9ixjXOKyEvYqW7jODWXsbWa5ywHuuzfIAw7xkEcato85whOeatQ+
4xjPeaFx+5ITvOK1Ju0bTrHAHPfc6+cOu7nFTXXaa2xmniuqs+dZwWnmVGJn
GZj5e6dv3yLBT8b4zrR7b+zgK9vZphe7lc9sYqOe7AY+MsWkHux63jPOWt3Z
1byN/v+fX3JONZg=
          "]]}, {
         GrayLevel[0.2], 
         Line3DBox[{2936, 1045, 2935, 5020, 3115, 2937, 5021, 4345, 4915, 
          2938, 5022, 3116, 2939, 5023, 4346, 4916, 2940, 5024, 3117, 2941, 
          5025, 4347, 4917, 2942, 5026, 3118, 2943, 5027, 4348, 4918, 2944, 
          5028, 3119, 2945, 5029, 3120, 2946}], 
         Line3DBox[{2948, 4349, 4919, 2947, 1061, 2949, 5030, 4350, 4920, 
          2950, 4351, 4921, 2951, 5031, 4352, 4922, 2952, 4353, 4923, 2953, 
          5032, 4354, 4924, 2954, 4355, 4925, 2955, 5033, 4356, 4926, 2956, 
          4357, 4927, 2957, 5034, 3121, 2958}], 
         Line3DBox[{2962, 5035, 3122, 2960, 5036, 3123, 2964, 5037, 1078, 
          2966, 5038, 3124, 2968, 5039, 4362, 4934, 2970, 5040, 3125, 2972, 
          5041, 4365, 4938, 2974, 5042, 3126, 2976, 5043, 4368, 4942, 2978, 
          5044, 3127, 2980, 5045, 3128, 2982}], 
         Line3DBox[{2981, 4944, 4370, 2979, 4943, 4369, 2977, 4941, 4940, 
          4367, 2975, 4939, 4366, 2973, 4937, 4936, 4364, 2971, 4935, 4363, 
          2969, 4933, 4932, 4361, 2967, 4931, 4360, 2965, 4930, 1077, 2963, 
          4929, 4359, 2959, 4928, 4358, 2961}], 
         Line3DBox[{2984, 4371, 4945, 2983, 5046, 3129, 2985, 5047, 4372, 
          4946, 2986, 1094, 2987, 5048, 4373, 4947, 2988, 4374, 4948, 2989, 
          5049, 4375, 4949, 2990, 4376, 4950, 2991, 5050, 4377, 4951, 2992, 
          4378, 4952, 2993, 5051, 3130, 2994}], 
         Line3DBox[{2998, 5052, 3131, 2996, 5053, 3132, 3000, 5055, 5056, 
          3133, 3002, 5057, 3134, 3004, 5058, 1111, 3006, 5059, 3135, 3008, 
          5060, 4385, 4961, 3010, 5061, 3136, 3012, 5062, 4388, 4965, 3014, 
          5063, 3137, 3016, 5064, 3138, 3018}], 
         Line3DBox[{3017, 4967, 4390, 3015, 4966, 4389, 3013, 4964, 4963, 
          4387, 3011, 4962, 4386, 3009, 4960, 4959, 4384, 3007, 4958, 4383, 
          3005, 4957, 1110, 3003, 4956, 4382, 3001, 4955, 4381, 5054, 2999, 
          4954, 4380, 2995, 4953, 4379, 2997}], 
         Line3DBox[{3020, 4391, 4968, 3019, 5065, 3139, 3021, 5066, 4392, 
          4969, 3022, 5067, 3140, 3023, 5068, 4393, 4970, 3024, 1127, 3025, 
          5069, 4394, 4971, 3026, 4395, 4972, 3027, 5070, 4396, 4973, 3028, 
          4397, 4974, 3029, 5071, 3141, 3030}], 
         Line3DBox[{3034, 5072, 3142, 3032, 5073, 3143, 3036, 5075, 5076, 
          3144, 3038, 5077, 3145, 3040, 5079, 5080, 3146, 3042, 5081, 3147, 
          3044, 5082, 1144, 3046, 5083, 3148, 3048, 5084, 4406, 4985, 3050, 
          5085, 3149, 3052, 5086, 3150, 3054}], 
         Line3DBox[{3053, 4987, 4408, 3051, 4986, 4407, 3049, 4984, 4983, 
          4405, 3047, 4982, 4404, 3045, 4981, 1143, 3043, 4980, 4403, 3041, 
          4979, 4402, 5078, 3039, 4978, 4401, 3037, 4977, 4400, 5074, 3035, 
          4976, 4399, 3031, 4975, 4398, 3033}], 
         Line3DBox[{3056, 4409, 4988, 3055, 5087, 3151, 3057, 5088, 4410, 
          4989, 3058, 5089, 3152, 3059, 5090, 4411, 4990, 3060, 5091, 3153, 
          3061, 5092, 4412, 4991, 3062, 1160, 3063, 5093, 4413, 4992, 3064, 
          4414, 4993, 3065, 5094, 3154, 3066}], 
         Line3DBox[{3070, 5095, 3155, 3068, 5096, 3156, 3072, 5098, 5099, 
          3157, 3074, 5100, 3158, 3076, 5102, 5103, 3159, 3078, 5104, 3160, 
          3080, 5106, 5107, 3161, 3082, 5108, 3162, 3084, 5109, 1177, 3086, 
          5110, 3163, 3088, 5111, 3164, 3090}], 
         Line3DBox[{3089, 5004, 4424, 3087, 5003, 4423, 3085, 5002, 1176, 
          3083, 5001, 4422, 3081, 5000, 4421, 5105, 3079, 4999, 4420, 3077, 
          4998, 4419, 5101, 3075, 4997, 4418, 3073, 4996, 4417, 5097, 3071, 
          4995, 4416, 3067, 4994, 4415, 3069}], 
         Line3DBox[{3092, 4425, 5005, 3091, 5112, 3165, 3093, 5113, 4426, 
          5006, 3094, 5114, 3166, 3095, 5115, 4427, 5007, 3096, 5116, 3167, 
          3097, 5117, 4428, 5008, 3098, 5118, 3168, 3099, 5119, 4429, 5009, 
          3100, 1193, 3101, 5120, 3169, 3102}], 
         Line3DBox[{3104, 4430, 5010, 3103, 4431, 5011, 3105, 5121, 4432, 
          5012, 3106, 4433, 5013, 3107, 5122, 4434, 5014, 3108, 4435, 5015, 
          3109, 5123, 4436, 5016, 3110, 4437, 5017, 3111, 5124, 4438, 5018, 
          3112, 4439, 5019, 3113, 1209, 3114}], 
         Line3DBox[{3171, 1390, 3170, 5230, 3350, 3172, 5231, 4440, 5125, 
          3173, 5232, 3351, 3174, 5233, 4441, 5126, 3175, 5234, 3352, 3176, 
          5235, 4442, 5127, 3177, 5236, 3353, 3178, 5237, 4443, 5128, 3179, 
          5238, 3354, 3180, 5239, 3355, 3181}], 
         Line3DBox[{3183, 4444, 5129, 3182, 1406, 3184, 5240, 4445, 5130, 
          3185, 4446, 5131, 3186, 5241, 4447, 5132, 3187, 4448, 5133, 3188, 
          5242, 4449, 5134, 3189, 4450, 5135, 3190, 5243, 4451, 5136, 3191, 
          4452, 5137, 3192, 5244, 3356, 3193}], 
         Line3DBox[{3197, 5245, 3357, 3195, 5246, 3358, 3199, 5247, 1423, 
          3201, 5248, 3359, 3203, 5249, 4457, 5144, 3205, 5250, 3360, 3207, 
          5251, 4460, 5148, 3209, 5252, 3361, 3211, 5253, 4463, 5152, 3213, 
          5254, 3362, 3215, 5255, 3363, 3217}], 
         Line3DBox[{3216, 5154, 4465, 3214, 5153, 4464, 3212, 5151, 5150, 
          4462, 3210, 5149, 4461, 3208, 5147, 5146, 4459, 3206, 5145, 4458, 
          3204, 5143, 5142, 4456, 3202, 5141, 4455, 3200, 5140, 1422, 3198, 
          5139, 4454, 3194, 5138, 4453, 3196}], 
         Line3DBox[{3219, 4466, 5155, 3218, 5256, 3364, 3220, 5257, 4467, 
          5156, 3221, 1439, 3222, 5258, 4468, 5157, 3223, 4469, 5158, 3224, 
          5259, 4470, 5159, 3225, 4471, 5160, 3226, 5260, 4472, 5161, 3227, 
          4473, 5162, 3228, 5261, 3365, 3229}], 
         Line3DBox[{3233, 5262, 3366, 3231, 5263, 3367, 3235, 5265, 5266, 
          3368, 3237, 5267, 3369, 3239, 5268, 1456, 3241, 5269, 3370, 3243, 
          5270, 4480, 5171, 3245, 5271, 3371, 3247, 5272, 4483, 5175, 3249, 
          5273, 3372, 3251, 5274, 3373, 3253}], 
         Line3DBox[{3252, 5177, 4485, 3250, 5176, 4484, 3248, 5174, 5173, 
          4482, 3246, 5172, 4481, 3244, 5170, 5169, 4479, 3242, 5168, 4478, 
          3240, 5167, 1455, 3238, 5166, 4477, 3236, 5165, 4476, 5264, 3234, 
          5164, 4475, 3230, 5163, 4474, 3232}], 
         Line3DBox[{3255, 4486, 5178, 3254, 5275, 3374, 3256, 5276, 4487, 
          5179, 3257, 5277, 3375, 3258, 5278, 4488, 5180, 3259, 1472, 3260, 
          5279, 4489, 5181, 3261, 4490, 5182, 3262, 5280, 4491, 5183, 3263, 
          4492, 5184, 3264, 5281, 3376, 3265}], 
         Line3DBox[{3269, 5282, 3377, 3267, 5283, 3378, 3271, 5285, 5286, 
          3379, 3273, 5287, 3380, 3275, 5289, 5290, 3381, 3277, 5291, 3382, 
          3279, 5292, 1489, 3281, 5293, 3383, 3283, 5294, 4501, 5195, 3285, 
          5295, 3384, 3287, 5296, 3385, 3289}], 
         Line3DBox[{3288, 5197, 4503, 3286, 5196, 4502, 3284, 5194, 5193, 
          4500, 3282, 5192, 4499, 3280, 5191, 1488, 3278, 5190, 4498, 3276, 
          5189, 4497, 5288, 3274, 5188, 4496, 3272, 5187, 4495, 5284, 3270, 
          5186, 4494, 3266, 5185, 4493, 3268}], 
         Line3DBox[{3291, 4504, 5198, 3290, 5297, 3386, 3292, 5298, 4505, 
          5199, 3293, 5299, 3387, 3294, 5300, 4506, 5200, 3295, 5301, 3388, 
          3296, 5302, 4507, 5201, 3297, 1505, 3298, 5303, 4508, 5202, 3299, 
          4509, 5203, 3300, 5304, 3389, 3301}], 
         Line3DBox[{3305, 5305, 3390, 3303, 5306, 3391, 3307, 5308, 5309, 
          3392, 3309, 5310, 3393, 3311, 5312, 5313, 3394, 3313, 5314, 3395, 
          3315, 5316, 5317, 3396, 3317, 5318, 3397, 3319, 5319, 1522, 3321, 
          5320, 3398, 3323, 5321, 3399, 3325}], 
         Line3DBox[{3324, 5214, 4519, 3322, 5213, 4518, 3320, 5212, 1521, 
          3318, 5211, 4517, 3316, 5210, 4516, 5315, 3314, 5209, 4515, 3312, 
          5208, 4514, 5311, 3310, 5207, 4513, 3308, 5206, 4512, 5307, 3306, 
          5205, 4511, 3302, 5204, 4510, 3304}], 
         Line3DBox[{3327, 4520, 5215, 3326, 5322, 3400, 3328, 5323, 4521, 
          5216, 3329, 5324, 3401, 3330, 5325, 4522, 5217, 3331, 5326, 3402, 
          3332, 5327, 4523, 5218, 3333, 5328, 3403, 3334, 5329, 4524, 5219, 
          3335, 1538, 3336, 5330, 3404, 3337}], 
         Line3DBox[{3339, 4525, 5220, 3338, 4526, 5221, 3340, 5331, 4527, 
          5222, 3341, 4528, 5223, 3342, 5332, 4529, 5224, 3343, 4530, 5225, 
          3344, 5333, 4531, 5226, 3345, 4532, 5227, 3346, 5334, 4533, 5228, 
          3347, 4534, 5229, 3348, 1554, 3349}], 
         Line3DBox[{3406, 1735, 3405, 5440, 3585, 3407, 5441, 4535, 5335, 
          3408, 5442, 3586, 3409, 5443, 4536, 5336, 3410, 5444, 3587, 3411, 
          5445, 4537, 5337, 3412, 5446, 3588, 3413, 5447, 4538, 5338, 3414, 
          5448, 3589, 3415, 5449, 3590, 3416}], 
         Line3DBox[{3418, 4539, 5339, 3417, 1751, 3419, 5450, 4540, 5340, 
          3420, 4541, 5341, 3421, 5451, 4542, 5342, 3422, 4543, 5343, 3423, 
          5452, 4544, 5344, 3424, 4545, 5345, 3425, 5453, 4546, 5346, 3426, 
          4547, 5347, 3427, 5454, 3591, 3428}], 
         Line3DBox[{3432, 5455, 3592, 3430, 5456, 3593, 3434, 5457, 1768, 
          3436, 5458, 3594, 3438, 5459, 4552, 5354, 3440, 5460, 3595, 3442, 
          5461, 4555, 5358, 3444, 5462, 3596, 3446, 5463, 4558, 5362, 3448, 
          5464, 3597, 3450, 5465, 3598, 3452}], 
         Line3DBox[{3451, 5364, 4560, 3449, 5363, 4559, 3447, 5361, 5360, 
          4557, 3445, 5359, 4556, 3443, 5357, 5356, 4554, 3441, 5355, 4553, 
          3439, 5353, 5352, 4551, 3437, 5351, 4550, 3435, 5350, 1767, 3433, 
          5349, 4549, 3429, 5348, 4548, 3431}], 
         Line3DBox[{3454, 4561, 5365, 3453, 5466, 3599, 3455, 5467, 4562, 
          5366, 3456, 1784, 3457, 5468, 4563, 5367, 3458, 4564, 5368, 3459, 
          5469, 4565, 5369, 3460, 4566, 5370, 3461, 5470, 4567, 5371, 3462, 
          4568, 5372, 3463, 5471, 3600, 3464}], 
         Line3DBox[{3468, 5472, 3601, 3466, 5473, 3602, 3470, 5475, 5476, 
          3603, 3472, 5477, 3604, 3474, 5478, 1801, 3476, 5479, 3605, 3478, 
          5480, 4575, 5381, 3480, 5481, 3606, 3482, 5482, 4578, 5385, 3484, 
          5483, 3607, 3486, 5484, 3608, 3488}], 
         Line3DBox[{3487, 5387, 4580, 3485, 5386, 4579, 3483, 5384, 5383, 
          4577, 3481, 5382, 4576, 3479, 5380, 5379, 4574, 3477, 5378, 4573, 
          3475, 5377, 1800, 3473, 5376, 4572, 3471, 5375, 4571, 5474, 3469, 
          5374, 4570, 3465, 5373, 4569, 3467}], 
         Line3DBox[{3490, 4581, 5388, 3489, 5485, 3609, 3491, 5486, 4582, 
          5389, 3492, 5487, 3610, 3493, 5488, 4583, 5390, 3494, 1817, 3495, 
          5489, 4584, 5391, 3496, 4585, 5392, 3497, 5490, 4586, 5393, 3498, 
          4587, 5394, 3499, 5491, 3611, 3500}], 
         Line3DBox[{3504, 5492, 3612, 3502, 5493, 3613, 3506, 5495, 5496, 
          3614, 3508, 5497, 3615, 3510, 5499, 5500, 3616, 3512, 5501, 3617, 
          3514, 5502, 1834, 3516, 5503, 3618, 3518, 5504, 4596, 5405, 3520, 
          5505, 3619, 3522, 5506, 3620, 3524}], 
         Line3DBox[{3523, 5407, 4598, 3521, 5406, 4597, 3519, 5404, 5403, 
          4595, 3517, 5402, 4594, 3515, 5401, 1833, 3513, 5400, 4593, 3511, 
          5399, 4592, 5498, 3509, 5398, 4591, 3507, 5397, 4590, 5494, 3505, 
          5396, 4589, 3501, 5395, 4588, 3503}], 
         Line3DBox[{3526, 4599, 5408, 3525, 5507, 3621, 3527, 5508, 4600, 
          5409, 3528, 5509, 3622, 3529, 5510, 4601, 5410, 3530, 5511, 3623, 
          3531, 5512, 4602, 5411, 3532, 1850, 3533, 5513, 4603, 5412, 3534, 
          4604, 5413, 3535, 5514, 3624, 3536}], 
         Line3DBox[{3540, 5515, 3625, 3538, 5516, 3626, 3542, 5518, 5519, 
          3627, 3544, 5520, 3628, 3546, 5522, 5523, 3629, 3548, 5524, 3630, 
          3550, 5526, 5527, 3631, 3552, 5528, 3632, 3554, 5529, 1867, 3556, 
          5530, 3633, 3558, 5531, 3634, 3560}], 
         Line3DBox[{3559, 5424, 4614, 3557, 5423, 4613, 3555, 5422, 1866, 
          3553, 5421, 4612, 3551, 5420, 4611, 5525, 3549, 5419, 4610, 3547, 
          5418, 4609, 5521, 3545, 5417, 4608, 3543, 5416, 4607, 5517, 3541, 
          5415, 4606, 3537, 5414, 4605, 3539}], 
         Line3DBox[{3562, 4615, 5425, 3561, 5532, 3635, 3563, 5533, 4616, 
          5426, 3564, 5534, 3636, 3565, 5535, 4617, 5427, 3566, 5536, 3637, 
          3567, 5537, 4618, 5428, 3568, 5538, 3638, 3569, 5539, 4619, 5429, 
          3570, 1883, 3571, 5540, 3639, 3572}], 
         Line3DBox[{3574, 4620, 5430, 3573, 4621, 5431, 3575, 5541, 4622, 
          5432, 3576, 4623, 5433, 3577, 5542, 4624, 5434, 3578, 4625, 5435, 
          3579, 5543, 4626, 5436, 3580, 4627, 5437, 3581, 5544, 4628, 5438, 
          3582, 4629, 5439, 3583, 1899, 3584}], 
         Line3DBox[{3641, 2080, 3640, 5650, 3820, 3642, 5651, 4630, 5545, 
          3643, 5652, 3821, 3644, 5653, 4631, 5546, 3645, 5654, 3822, 3646, 
          5655, 4632, 5547, 3647, 5656, 3823, 3648, 5657, 4633, 5548, 3649, 
          5658, 3824, 3650, 5659, 3825, 3651}], 
         Line3DBox[{3653, 4634, 5549, 3652, 2096, 3654, 5660, 4635, 5550, 
          3655, 4636, 5551, 3656, 5661, 4637, 5552, 3657, 4638, 5553, 3658, 
          5662, 4639, 5554, 3659, 4640, 5555, 3660, 5663, 4641, 5556, 3661, 
          4642, 5557, 3662, 5664, 3826, 3663}], 
         Line3DBox[{3667, 5665, 3827, 3665, 5666, 3828, 3669, 5667, 2113, 
          3671, 5668, 3829, 3673, 5669, 4647, 5564, 3675, 5670, 3830, 3677, 
          5671, 4650, 5568, 3679, 5672, 3831, 3681, 5673, 4653, 5572, 3683, 
          5674, 3832, 3685, 5675, 3833, 3687}], 
         Line3DBox[{3686, 5574, 4655, 3684, 5573, 4654, 3682, 5571, 5570, 
          4652, 3680, 5569, 4651, 3678, 5567, 5566, 4649, 3676, 5565, 4648, 
          3674, 5563, 5562, 4646, 3672, 5561, 4645, 3670, 5560, 2112, 3668, 
          5559, 4644, 3664, 5558, 4643, 3666}], 
         Line3DBox[{3689, 4656, 5575, 3688, 5676, 3834, 3690, 5677, 4657, 
          5576, 3691, 2129, 3692, 5678, 4658, 5577, 3693, 4659, 5578, 3694, 
          5679, 4660, 5579, 3695, 4661, 5580, 3696, 5680, 4662, 5581, 3697, 
          4663, 5582, 3698, 5681, 3835, 3699}], 
         Line3DBox[{3703, 5682, 3836, 3701, 5683, 3837, 3705, 5685, 5686, 
          3838, 3707, 5687, 3839, 3709, 5688, 2146, 3711, 5689, 3840, 3713, 
          5690, 4670, 5591, 3715, 5691, 3841, 3717, 5692, 4673, 5595, 3719, 
          5693, 3842, 3721, 5694, 3843, 3723}], 
         Line3DBox[{3722, 5597, 4675, 3720, 5596, 4674, 3718, 5594, 5593, 
          4672, 3716, 5592, 4671, 3714, 5590, 5589, 4669, 3712, 5588, 4668, 
          3710, 5587, 2145, 3708, 5586, 4667, 3706, 5585, 4666, 5684, 3704, 
          5584, 4665, 3700, 5583, 4664, 3702}], 
         Line3DBox[{3725, 4676, 5598, 3724, 5695, 3844, 3726, 5696, 4677, 
          5599, 3727, 5697, 3845, 3728, 5698, 4678, 5600, 3729, 2162, 3730, 
          5699, 4679, 5601, 3731, 4680, 5602, 3732, 5700, 4681, 5603, 3733, 
          4682, 5604, 3734, 5701, 3846, 3735}], 
         Line3DBox[{3739, 5702, 3847, 3737, 5703, 3848, 3741, 5705, 5706, 
          3849, 3743, 5707, 3850, 3745, 5709, 5710, 3851, 3747, 5711, 3852, 
          3749, 5712, 2179, 3751, 5713, 3853, 3753, 5714, 4691, 5615, 3755, 
          5715, 3854, 3757, 5716, 3855, 3759}], 
         Line3DBox[{3758, 5617, 4693, 3756, 5616, 4692, 3754, 5614, 5613, 
          4690, 3752, 5612, 4689, 3750, 5611, 2178, 3748, 5610, 4688, 3746, 
          5609, 4687, 5708, 3744, 5608, 4686, 3742, 5607, 4685, 5704, 3740, 
          5606, 4684, 3736, 5605, 4683, 3738}], 
         Line3DBox[{3761, 4694, 5618, 3760, 5717, 3856, 3762, 5718, 4695, 
          5619, 3763, 5719, 3857, 3764, 5720, 4696, 5620, 3765, 5721, 3858, 
          3766, 5722, 4697, 5621, 3767, 2195, 3768, 5723, 4698, 5622, 3769, 
          4699, 5623, 3770, 5724, 3859, 3771}], 
         Line3DBox[{3775, 5725, 3860, 3773, 5726, 3861, 3777, 5728, 5729, 
          3862, 3779, 5730, 3863, 3781, 5732, 5733, 3864, 3783, 5734, 3865, 
          3785, 5736, 5737, 3866, 3787, 5738, 3867, 3789, 5739, 2212, 3791, 
          5740, 3868, 3793, 5741, 3869, 3795}], 
         Line3DBox[{3794, 5634, 4709, 3792, 5633, 4708, 3790, 5632, 2211, 
          3788, 5631, 4707, 3786, 5630, 4706, 5735, 3784, 5629, 4705, 3782, 
          5628, 4704, 5731, 3780, 5627, 4703, 3778, 5626, 4702, 5727, 3776, 
          5625, 4701, 3772, 5624, 4700, 3774}], 
         Line3DBox[{3797, 4710, 5635, 3796, 5742, 3870, 3798, 5743, 4711, 
          5636, 3799, 5744, 3871, 3800, 5745, 4712, 5637, 3801, 5746, 3872, 
          3802, 5747, 4713, 5638, 3803, 5748, 3873, 3804, 5749, 4714, 5639, 
          3805, 2228, 3806, 5750, 3874, 3807}], 
         Line3DBox[{3809, 4715, 5640, 3808, 4716, 5641, 3810, 5751, 4717, 
          5642, 3811, 4718, 5643, 3812, 5752, 4719, 5644, 3813, 4720, 5645, 
          3814, 5753, 4721, 5646, 3815, 4722, 5647, 3816, 5754, 4723, 5648, 
          3817, 4724, 5649, 3818, 2244, 3819}], 
         Line3DBox[{3876, 2425, 3875, 5860, 4055, 3877, 5861, 4725, 5755, 
          3878, 5862, 4056, 3879, 5863, 4726, 5756, 3880, 5864, 4057, 3881, 
          5865, 4727, 5757, 3882, 5866, 4058, 3883, 5867, 4728, 5758, 3884, 
          5868, 4059, 3885, 5869, 4060, 3886}], 
         Line3DBox[{3888, 4729, 5759, 3887, 2441, 3889, 5870, 4730, 5760, 
          3890, 4731, 5761, 3891, 5871, 4732, 5762, 3892, 4733, 5763, 3893, 
          5872, 4734, 5764, 3894, 4735, 5765, 3895, 5873, 4736, 5766, 3896, 
          4737, 5767, 3897, 5874, 4061, 3898}], 
         Line3DBox[{3902, 5875, 4062, 3900, 5876, 4063, 3904, 5877, 2458, 
          3906, 5878, 4064, 3908, 5879, 4742, 5774, 3910, 5880, 4065, 3912, 
          5881, 4745, 5778, 3914, 5882, 4066, 3916, 5883, 4748, 5782, 3918, 
          5884, 4067, 3920, 5885, 4068, 3922}], 
         Line3DBox[{3921, 5784, 4750, 3919, 5783, 4749, 3917, 5781, 5780, 
          4747, 3915, 5779, 4746, 3913, 5777, 5776, 4744, 3911, 5775, 4743, 
          3909, 5773, 5772, 4741, 3907, 5771, 4740, 3905, 5770, 2457, 3903, 
          5769, 4739, 3899, 5768, 4738, 3901}], 
         Line3DBox[{3924, 4751, 5785, 3923, 5886, 4069, 3925, 5887, 4752, 
          5786, 3926, 2474, 3927, 5888, 4753, 5787, 3928, 4754, 5788, 3929, 
          5889, 4755, 5789, 3930, 4756, 5790, 3931, 5890, 4757, 5791, 3932, 
          4758, 5792, 3933, 5891, 4070, 3934}], 
         Line3DBox[{3938, 5892, 4071, 3936, 5893, 4072, 3940, 5895, 5896, 
          4073, 3942, 5897, 4074, 3944, 5898, 2491, 3946, 5899, 4075, 3948, 
          5900, 4765, 5801, 3950, 5901, 4076, 3952, 5902, 4768, 5805, 3954, 
          5903, 4077, 3956, 5904, 4078, 3958}], 
         Line3DBox[{3957, 5807, 4770, 3955, 5806, 4769, 3953, 5804, 5803, 
          4767, 3951, 5802, 4766, 3949, 5800, 5799, 4764, 3947, 5798, 4763, 
          3945, 5797, 2490, 3943, 5796, 4762, 3941, 5795, 4761, 5894, 3939, 
          5794, 4760, 3935, 5793, 4759, 3937}], 
         Line3DBox[{3960, 4771, 5808, 3959, 5905, 4079, 3961, 5906, 4772, 
          5809, 3962, 5907, 4080, 3963, 5908, 4773, 5810, 3964, 2507, 3965, 
          5909, 4774, 5811, 3966, 4775, 5812, 3967, 5910, 4776, 5813, 3968, 
          4777, 5814, 3969, 5911, 4081, 3970}], 
         Line3DBox[{3974, 5912, 4082, 3972, 5913, 4083, 3976, 5915, 5916, 
          4084, 3978, 5917, 4085, 3980, 5919, 5920, 4086, 3982, 5921, 4087, 
          3984, 5922, 2524, 3986, 5923, 4088, 3988, 5924, 4786, 5825, 3990, 
          5925, 4089, 3992, 5926, 4090, 3994}], 
         Line3DBox[{3993, 5827, 4788, 3991, 5826, 4787, 3989, 5824, 5823, 
          4785, 3987, 5822, 4784, 3985, 5821, 2523, 3983, 5820, 4783, 3981, 
          5819, 4782, 5918, 3979, 5818, 4781, 3977, 5817, 4780, 5914, 3975, 
          5816, 4779, 3971, 5815, 4778, 3973}], 
         Line3DBox[{3996, 4789, 5828, 3995, 5927, 4091, 3997, 5928, 4790, 
          5829, 3998, 5929, 4092, 3999, 5930, 4791, 5830, 4000, 5931, 4093, 
          4001, 5932, 4792, 5831, 4002, 2540, 4003, 5933, 4793, 5832, 4004, 
          4794, 5833, 4005, 5934, 4094, 4006}], 
         Line3DBox[{4010, 5935, 4095, 4008, 5936, 4096, 4012, 5938, 5939, 
          4097, 4014, 5940, 4098, 4016, 5942, 5943, 4099, 4018, 5944, 4100, 
          4020, 5946, 5947, 4101, 4022, 5948, 4102, 4024, 5949, 2557, 4026, 
          5950, 4103, 4028, 5951, 4104, 4030}], 
         Line3DBox[{4029, 5844, 4804, 4027, 5843, 4803, 4025, 5842, 2556, 
          4023, 5841, 4802, 4021, 5840, 4801, 5945, 4019, 5839, 4800, 4017, 
          5838, 4799, 5941, 4015, 5837, 4798, 4013, 5836, 4797, 5937, 4011, 
          5835, 4796, 4007, 5834, 4795, 4009}], 
         Line3DBox[{4032, 4805, 5845, 4031, 5952, 4105, 4033, 5953, 4806, 
          5846, 4034, 5954, 4106, 4035, 5955, 4807, 5847, 4036, 5956, 4107, 
          4037, 5957, 4808, 5848, 4038, 5958, 4108, 4039, 5959, 4809, 5849, 
          4040, 2573, 4041, 5960, 4109, 4042}], 
         Line3DBox[{4044, 4810, 5850, 4043, 4811, 5851, 4045, 5961, 4812, 
          5852, 4046, 4813, 5853, 4047, 5962, 4814, 5854, 4048, 4815, 5855, 
          4049, 5963, 4816, 5856, 4050, 4817, 5857, 4051, 5964, 4818, 5858, 
          4052, 4819, 5859, 4053, 2589, 4054}], 
         Line3DBox[{4111, 2770, 4110, 6070, 4290, 4112, 6071, 4820, 5965, 
          4113, 6072, 4291, 4114, 6073, 4821, 5966, 4115, 6074, 4292, 4116, 
          6075, 4822, 5967, 4117, 6076, 4293, 4118, 6077, 4823, 5968, 4119, 
          6078, 4294, 4120, 6079, 4295, 4121}], 
         Line3DBox[{4123, 4824, 5969, 4122, 2786, 4124, 6080, 4825, 5970, 
          4125, 4826, 5971, 4126, 6081, 4827, 5972, 4127, 4828, 5973, 4128, 
          6082, 4829, 5974, 4129, 4830, 5975, 4130, 6083, 4831, 5976, 4131, 
          4832, 5977, 4132, 6084, 4296, 4133}], 
         Line3DBox[{4137, 6085, 4297, 4135, 6086, 4298, 4139, 6087, 2803, 
          4141, 6088, 4299, 4143, 6089, 4837, 5984, 4145, 6090, 4300, 4147, 
          6091, 4840, 5988, 4149, 6092, 4301, 4151, 6093, 4843, 5992, 4153, 
          6094, 4302, 4155, 6095, 4303, 4157}], 
         Line3DBox[{4156, 5994, 4845, 4154, 5993, 4844, 4152, 5991, 5990, 
          4842, 4150, 5989, 4841, 4148, 5987, 5986, 4839, 4146, 5985, 4838, 
          4144, 5983, 5982, 4836, 4142, 5981, 4835, 4140, 5980, 2802, 4138, 
          5979, 4834, 4134, 5978, 4833, 4136}], 
         Line3DBox[{4159, 4846, 5995, 4158, 6096, 4304, 4160, 6097, 4847, 
          5996, 4161, 2819, 4162, 6098, 4848, 5997, 4163, 4849, 5998, 4164, 
          6099, 4850, 5999, 4165, 4851, 6000, 4166, 6100, 4852, 6001, 4167, 
          4853, 6002, 4168, 6101, 4305, 4169}], 
         Line3DBox[{4173, 6102, 4306, 4171, 6103, 4307, 4175, 6105, 6106, 
          4308, 4177, 6107, 4309, 4179, 6108, 2836, 4181, 6109, 4310, 4183, 
          6110, 4860, 6011, 4185, 6111, 4311, 4187, 6112, 4863, 6015, 4189, 
          6113, 4312, 4191, 6114, 4313, 4193}], 
         Line3DBox[{4192, 6017, 4865, 4190, 6016, 4864, 4188, 6014, 6013, 
          4862, 4186, 6012, 4861, 4184, 6010, 6009, 4859, 4182, 6008, 4858, 
          4180, 6007, 2835, 4178, 6006, 4857, 4176, 6005, 4856, 6104, 4174, 
          6004, 4855, 4170, 6003, 4854, 4172}], 
         Line3DBox[{4195, 4866, 6018, 4194, 6115, 4314, 4196, 6116, 4867, 
          6019, 4197, 6117, 4315, 4198, 6118, 4868, 6020, 4199, 2852, 4200, 
          6119, 4869, 6021, 4201, 4870, 6022, 4202, 6120, 4871, 6023, 4203, 
          4872, 6024, 4204, 6121, 4316, 4205}], 
         Line3DBox[{4209, 6122, 4317, 4207, 6123, 4318, 4211, 6125, 6126, 
          4319, 4213, 6127, 4320, 4215, 6129, 6130, 4321, 4217, 6131, 4322, 
          4219, 6132, 2869, 4221, 6133, 4323, 4223, 6134, 4881, 6035, 4225, 
          6135, 4324, 4227, 6136, 4325, 4229}], 
         Line3DBox[{4228, 6037, 4883, 4226, 6036, 4882, 4224, 6034, 6033, 
          4880, 4222, 6032, 4879, 4220, 6031, 2868, 4218, 6030, 4878, 4216, 
          6029, 4877, 6128, 4214, 6028, 4876, 4212, 6027, 4875, 6124, 4210, 
          6026, 4874, 4206, 6025, 4873, 4208}], 
         Line3DBox[{4231, 4884, 6038, 4230, 6137, 4326, 4232, 6138, 4885, 
          6039, 4233, 6139, 4327, 4234, 6140, 4886, 6040, 4235, 6141, 4328, 
          4236, 6142, 4887, 6041, 4237, 2885, 4238, 6143, 4888, 6042, 4239, 
          4889, 6043, 4240, 6144, 4329, 4241}], 
         Line3DBox[{4245, 6145, 4330, 4243, 6146, 4331, 4247, 6148, 6149, 
          4332, 4249, 6150, 4333, 4251, 6152, 6153, 4334, 4253, 6154, 4335, 
          4255, 6156, 6157, 4336, 4257, 6158, 4337, 4259, 6159, 2902, 4261, 
          6160, 4338, 4263, 6161, 4339, 4265}], 
         Line3DBox[{4264, 6054, 4899, 4262, 6053, 4898, 4260, 6052, 2901, 
          4258, 6051, 4897, 4256, 6050, 4896, 6155, 4254, 6049, 4895, 4252, 
          6048, 4894, 6151, 4250, 6047, 4893, 4248, 6046, 4892, 6147, 4246, 
          6045, 4891, 4242, 6044, 4890, 4244}], 
         Line3DBox[{4267, 4900, 6055, 4266, 6162, 4340, 4268, 6163, 4901, 
          6056, 4269, 6164, 4341, 4270, 6165, 4902, 6057, 4271, 6166, 4342, 
          4272, 6167, 4903, 6058, 4273, 6168, 4343, 4274, 6169, 4904, 6059, 
          4275, 2918, 4276, 6170, 4344, 4277}], 
         Line3DBox[{4279, 4905, 6060, 4278, 4906, 6061, 4280, 6171, 4907, 
          6062, 4281, 4908, 6063, 4282, 6172, 4909, 6064, 4283, 4910, 6065, 
          4284, 6173, 4911, 6066, 4285, 4912, 6067, 4286, 6174, 4913, 6068, 
          4287, 4914, 6069, 4288, 2934, 4289}]}, {
         GrayLevel[0.2], 
         Line3DBox[{865, 1045, 866, 4919, 1060, 895, 4928, 1075, 5035, 910, 
          4945, 1090, 925, 4953, 1105, 5052, 940, 4968, 1120, 955, 4975, 1135,
           5072, 970, 4988, 1150, 985, 4994, 1165, 5095, 1000, 5005, 1180, 
          1015, 5010, 1195, 1030}], 
         Line3DBox[{867, 1046, 5020, 868, 1061, 896, 4929, 1076, 5036, 911, 
          1091, 5046, 926, 4954, 1106, 5053, 941, 1121, 5065, 956, 4976, 1136,
           5073, 971, 1151, 5087, 986, 4995, 1166, 5096, 1001, 1181, 5112, 
          1016, 5011, 1196, 1031}], 
         Line3DBox[{869, 1047, 5021, 871, 1062, 5030, 897, 1077, 5037, 912, 
          1092, 5047, 927, 1107, 5054, 5055, 942, 1122, 5066, 957, 1137, 5074,
           5075, 972, 1152, 5088, 987, 1167, 5097, 5098, 1002, 1182, 5113, 
          1017, 1197, 5121, 1032}], 
         Line3DBox[{873, 1049, 5022, 874, 4921, 1064, 899, 4931, 1079, 5038, 
          914, 1094, 929, 4956, 1109, 5057, 944, 1124, 5067, 959, 4978, 1139, 
          5077, 974, 1154, 5089, 989, 4997, 1169, 5100, 1004, 1184, 5114, 
          1019, 5013, 1199, 1034}], 
         Line3DBox[{875, 1050, 5023, 877, 1065, 5031, 900, 4932, 1080, 5039, 
          915, 1095, 5048, 930, 1110, 5058, 945, 1125, 5068, 960, 1140, 5078, 
          5079, 975, 1155, 5090, 990, 1170, 5101, 5102, 1005, 1185, 5115, 
          1020, 1200, 5122, 1035}], 
         Line3DBox[{879, 1052, 5024, 880, 4923, 1067, 902, 4935, 1082, 5040, 
          917, 4948, 1097, 932, 4958, 1112, 5059, 947, 1127, 962, 4980, 1142, 
          5081, 977, 1157, 5091, 992, 4999, 1172, 5104, 1007, 1187, 5116, 
          1022, 5015, 1202, 1037}], 
         Line3DBox[{881, 1053, 5025, 883, 1068, 5032, 903, 4936, 1083, 5041, 
          918, 1098, 5049, 933, 4959, 1113, 5060, 948, 1128, 5069, 963, 1143, 
          5082, 978, 1158, 5092, 993, 1173, 5105, 5106, 1008, 1188, 5117, 
          1023, 1203, 5123, 1038}], 
         Line3DBox[{885, 1055, 5026, 886, 4925, 1070, 905, 4939, 1085, 5042, 
          920, 4950, 1100, 935, 4962, 1115, 5061, 950, 4972, 1130, 965, 4982, 
          1145, 5083, 980, 1160, 995, 5001, 1175, 5108, 1010, 1190, 5118, 
          1025, 5017, 1205, 1040}], 
         Line3DBox[{887, 1056, 5027, 889, 1071, 5033, 906, 4940, 1086, 5043, 
          921, 1101, 5050, 936, 4963, 1116, 5062, 951, 1131, 5070, 966, 4983, 
          1146, 5084, 981, 1161, 5093, 996, 1176, 5109, 1011, 1191, 5119, 
          1026, 1206, 5124, 1041}], 
         Line3DBox[{891, 1058, 5028, 892, 4927, 1073, 908, 4943, 1088, 5044, 
          923, 4952, 1103, 938, 4966, 1118, 5063, 953, 4974, 1133, 968, 4986, 
          1148, 5085, 983, 4993, 1163, 998, 5003, 1178, 5110, 1013, 1193, 
          1028, 5019, 1208, 1043}], 
         Line3DBox[{893, 1059, 5029, 894, 1074, 5034, 909, 4944, 1089, 5045, 
          924, 1104, 5051, 939, 4967, 1119, 5064, 954, 1134, 5071, 969, 4987, 
          1149, 5086, 984, 1164, 5094, 999, 5004, 1179, 5111, 1014, 1194, 
          5120, 1029, 1209, 1044}], 
         Line3DBox[{1033, 1198, 5012, 1018, 1183, 5006, 1003, 5099, 1168, 
          4996, 988, 1153, 4989, 973, 5076, 1138, 4977, 958, 1123, 4969, 943, 
          5056, 1108, 4955, 928, 1093, 4946, 913, 1078, 4930, 898, 1063, 4920,
           872, 1048, 4915, 870}], 
         Line3DBox[{1036, 1201, 5014, 1021, 1186, 5007, 1006, 5103, 1171, 
          4998, 991, 1156, 4990, 976, 5080, 1141, 4979, 961, 1126, 4970, 946, 
          1111, 4957, 931, 1096, 4947, 916, 1081, 4934, 4933, 901, 1066, 4922,
           878, 1051, 4916, 876}], 
         Line3DBox[{1039, 1204, 5016, 1024, 1189, 5008, 1009, 5107, 1174, 
          5000, 994, 1159, 4991, 979, 1144, 4981, 964, 1129, 4971, 949, 1114, 
          4961, 4960, 934, 1099, 4949, 919, 1084, 4938, 4937, 904, 1069, 4924,
           884, 1054, 4917, 882}], 
         Line3DBox[{1042, 1207, 5018, 1027, 1192, 5009, 1012, 1177, 5002, 997,
           1162, 4992, 982, 1147, 4985, 4984, 967, 1132, 4973, 952, 1117, 
          4965, 4964, 937, 1102, 4951, 922, 1087, 4942, 4941, 907, 1072, 4926,
           890, 1057, 4918, 888}], 
         Line3DBox[{1210, 1390, 1211, 5129, 1405, 1240, 5138, 1420, 5245, 
          1255, 5155, 1435, 1270, 5163, 1450, 5262, 1285, 5178, 1465, 1300, 
          5185, 1480, 5282, 1315, 5198, 1495, 1330, 5204, 1510, 5305, 1345, 
          5215, 1525, 1360, 5220, 1540, 1375}], 
         Line3DBox[{1212, 1391, 5230, 1213, 1406, 1241, 5139, 1421, 5246, 
          1256, 1436, 5256, 1271, 5164, 1451, 5263, 1286, 1466, 5275, 1301, 
          5186, 1481, 5283, 1316, 1496, 5297, 1331, 5205, 1511, 5306, 1346, 
          1526, 5322, 1361, 5221, 1541, 1376}], 
         Line3DBox[{1214, 1392, 5231, 1216, 1407, 5240, 1242, 1422, 5247, 
          1257, 1437, 5257, 1272, 1452, 5264, 5265, 1287, 1467, 5276, 1302, 
          1482, 5284, 5285, 1317, 1497, 5298, 1332, 1512, 5307, 5308, 1347, 
          1527, 5323, 1362, 1542, 5331, 1377}], 
         Line3DBox[{1218, 1394, 5232, 1219, 5131, 1409, 1244, 5141, 1424, 
          5248, 1259, 1439, 1274, 5166, 1454, 5267, 1289, 1469, 5277, 1304, 
          5188, 1484, 5287, 1319, 1499, 5299, 1334, 5207, 1514, 5310, 1349, 
          1529, 5324, 1364, 5223, 1544, 1379}], 
         Line3DBox[{1220, 1395, 5233, 1222, 1410, 5241, 1245, 5142, 1425, 
          5249, 1260, 1440, 5258, 1275, 1455, 5268, 1290, 1470, 5278, 1305, 
          1485, 5288, 5289, 1320, 1500, 5300, 1335, 1515, 5311, 5312, 1350, 
          1530, 5325, 1365, 1545, 5332, 1380}], 
         Line3DBox[{1224, 1397, 5234, 1225, 5133, 1412, 1247, 5145, 1427, 
          5250, 1262, 5158, 1442, 1277, 5168, 1457, 5269, 1292, 1472, 1307, 
          5190, 1487, 5291, 1322, 1502, 5301, 1337, 5209, 1517, 5314, 1352, 
          1532, 5326, 1367, 5225, 1547, 1382}], 
         Line3DBox[{1226, 1398, 5235, 1228, 1413, 5242, 1248, 5146, 1428, 
          5251, 1263, 1443, 5259, 1278, 5169, 1458, 5270, 1293, 1473, 5279, 
          1308, 1488, 5292, 1323, 1503, 5302, 1338, 1518, 5315, 5316, 1353, 
          1533, 5327, 1368, 1548, 5333, 1383}], 
         Line3DBox[{1230, 1400, 5236, 1231, 5135, 1415, 1250, 5149, 1430, 
          5252, 1265, 5160, 1445, 1280, 5172, 1460, 5271, 1295, 5182, 1475, 
          1310, 5192, 1490, 5293, 1325, 1505, 1340, 5211, 1520, 5318, 1355, 
          1535, 5328, 1370, 5227, 1550, 1385}], 
         Line3DBox[{1232, 1401, 5237, 1234, 1416, 5243, 1251, 5150, 1431, 
          5253, 1266, 1446, 5260, 1281, 5173, 1461, 5272, 1296, 1476, 5280, 
          1311, 5193, 1491, 5294, 1326, 1506, 5303, 1341, 1521, 5319, 1356, 
          1536, 5329, 1371, 1551, 5334, 1386}], 
         Line3DBox[{1236, 1403, 5238, 1237, 5137, 1418, 1253, 5153, 1433, 
          5254, 1268, 5162, 1448, 1283, 5176, 1463, 5273, 1298, 5184, 1478, 
          1313, 5196, 1493, 5295, 1328, 5203, 1508, 1343, 5213, 1523, 5320, 
          1358, 1538, 1373, 5229, 1553, 1388}], 
         Line3DBox[{1238, 1404, 5239, 1239, 1419, 5244, 1254, 5154, 1434, 
          5255, 1269, 1449, 5261, 1284, 5177, 1464, 5274, 1299, 1479, 5281, 
          1314, 5197, 1494, 5296, 1329, 1509, 5304, 1344, 5214, 1524, 5321, 
          1359, 1539, 5330, 1374, 1554, 1389}], 
         Line3DBox[{1378, 1543, 5222, 1363, 1528, 5216, 1348, 5309, 1513, 
          5206, 1333, 1498, 5199, 1318, 5286, 1483, 5187, 1303, 1468, 5179, 
          1288, 5266, 1453, 5165, 1273, 1438, 5156, 1258, 1423, 5140, 1243, 
          1408, 5130, 1217, 1393, 5125, 1215}], 
         Line3DBox[{1381, 1546, 5224, 1366, 1531, 5217, 1351, 5313, 1516, 
          5208, 1336, 1501, 5200, 1321, 5290, 1486, 5189, 1306, 1471, 5180, 
          1291, 1456, 5167, 1276, 1441, 5157, 1261, 1426, 5144, 5143, 1246, 
          1411, 5132, 1223, 1396, 5126, 1221}], 
         Line3DBox[{1384, 1549, 5226, 1369, 1534, 5218, 1354, 5317, 1519, 
          5210, 1339, 1504, 5201, 1324, 1489, 5191, 1309, 1474, 5181, 1294, 
          1459, 5171, 5170, 1279, 1444, 5159, 1264, 1429, 5148, 5147, 1249, 
          1414, 5134, 1229, 1399, 5127, 1227}], 
         Line3DBox[{1387, 1552, 5228, 1372, 1537, 5219, 1357, 1522, 5212, 
          1342, 1507, 5202, 1327, 1492, 5195, 5194, 1312, 1477, 5183, 1297, 
          1462, 5175, 5174, 1282, 1447, 5161, 1267, 1432, 5152, 5151, 1252, 
          1417, 5136, 1235, 1402, 5128, 1233}], 
         Line3DBox[{1555, 1735, 1556, 5339, 1750, 1585, 5348, 1765, 5455, 
          1600, 5365, 1780, 1615, 5373, 1795, 5472, 1630, 5388, 1810, 1645, 
          5395, 1825, 5492, 1660, 5408, 1840, 1675, 5414, 1855, 5515, 1690, 
          5425, 1870, 1705, 5430, 1885, 1720}], 
         Line3DBox[{1557, 1736, 5440, 1558, 1751, 1586, 5349, 1766, 5456, 
          1601, 1781, 5466, 1616, 5374, 1796, 5473, 1631, 1811, 5485, 1646, 
          5396, 1826, 5493, 1661, 1841, 5507, 1676, 5415, 1856, 5516, 1691, 
          1871, 5532, 1706, 5431, 1886, 1721}], 
         Line3DBox[{1559, 1737, 5441, 1561, 1752, 5450, 1587, 1767, 5457, 
          1602, 1782, 5467, 1617, 1797, 5474, 5475, 1632, 1812, 5486, 1647, 
          1827, 5494, 5495, 1662, 1842, 5508, 1677, 1857, 5517, 5518, 1692, 
          1872, 5533, 1707, 1887, 5541, 1722}], 
         Line3DBox[{1563, 1739, 5442, 1564, 5341, 1754, 1589, 5351, 1769, 
          5458, 1604, 1784, 1619, 5376, 1799, 5477, 1634, 1814, 5487, 1649, 
          5398, 1829, 5497, 1664, 1844, 5509, 1679, 5417, 1859, 5520, 1694, 
          1874, 5534, 1709, 5433, 1889, 1724}], 
         Line3DBox[{1565, 1740, 5443, 1567, 1755, 5451, 1590, 5352, 1770, 
          5459, 1605, 1785, 5468, 1620, 1800, 5478, 1635, 1815, 5488, 1650, 
          1830, 5498, 5499, 1665, 1845, 5510, 1680, 1860, 5521, 5522, 1695, 
          1875, 5535, 1710, 1890, 5542, 1725}], 
         Line3DBox[{1569, 1742, 5444, 1570, 5343, 1757, 1592, 5355, 1772, 
          5460, 1607, 5368, 1787, 1622, 5378, 1802, 5479, 1637, 1817, 1652, 
          5400, 1832, 5501, 1667, 1847, 5511, 1682, 5419, 1862, 5524, 1697, 
          1877, 5536, 1712, 5435, 1892, 1727}], 
         Line3DBox[{1571, 1743, 5445, 1573, 1758, 5452, 1593, 5356, 1773, 
          5461, 1608, 1788, 5469, 1623, 5379, 1803, 5480, 1638, 1818, 5489, 
          1653, 1833, 5502, 1668, 1848, 5512, 1683, 1863, 5525, 5526, 1698, 
          1878, 5537, 1713, 1893, 5543, 1728}], 
         Line3DBox[{1575, 1745, 5446, 1576, 5345, 1760, 1595, 5359, 1775, 
          5462, 1610, 5370, 1790, 1625, 5382, 1805, 5481, 1640, 5392, 1820, 
          1655, 5402, 1835, 5503, 1670, 1850, 1685, 5421, 1865, 5528, 1700, 
          1880, 5538, 1715, 5437, 1895, 1730}], 
         Line3DBox[{1577, 1746, 5447, 1579, 1761, 5453, 1596, 5360, 1776, 
          5463, 1611, 1791, 5470, 1626, 5383, 1806, 5482, 1641, 1821, 5490, 
          1656, 5403, 1836, 5504, 1671, 1851, 5513, 1686, 1866, 5529, 1701, 
          1881, 5539, 1716, 1896, 5544, 1731}], 
         Line3DBox[{1581, 1748, 5448, 1582, 5347, 1763, 1598, 5363, 1778, 
          5464, 1613, 5372, 1793, 1628, 5386, 1808, 5483, 1643, 5394, 1823, 
          1658, 5406, 1838, 5505, 1673, 5413, 1853, 1688, 5423, 1868, 5530, 
          1703, 1883, 1718, 5439, 1898, 1733}], 
         Line3DBox[{1583, 1749, 5449, 1584, 1764, 5454, 1599, 5364, 1779, 
          5465, 1614, 1794, 5471, 1629, 5387, 1809, 5484, 1644, 1824, 5491, 
          1659, 5407, 1839, 5506, 1674, 1854, 5514, 1689, 5424, 1869, 5531, 
          1704, 1884, 5540, 1719, 1899, 1734}], 
         Line3DBox[{1723, 1888, 5432, 1708, 1873, 5426, 1693, 5519, 1858, 
          5416, 1678, 1843, 5409, 1663, 5496, 1828, 5397, 1648, 1813, 5389, 
          1633, 5476, 1798, 5375, 1618, 1783, 5366, 1603, 1768, 5350, 1588, 
          1753, 5340, 1562, 1738, 5335, 1560}], 
         Line3DBox[{1726, 1891, 5434, 1711, 1876, 5427, 1696, 5523, 1861, 
          5418, 1681, 1846, 5410, 1666, 5500, 1831, 5399, 1651, 1816, 5390, 
          1636, 1801, 5377, 1621, 1786, 5367, 1606, 1771, 5354, 5353, 1591, 
          1756, 5342, 1568, 1741, 5336, 1566}], 
         Line3DBox[{1729, 1894, 5436, 1714, 1879, 5428, 1699, 5527, 1864, 
          5420, 1684, 1849, 5411, 1669, 1834, 5401, 1654, 1819, 5391, 1639, 
          1804, 5381, 5380, 1624, 1789, 5369, 1609, 1774, 5358, 5357, 1594, 
          1759, 5344, 1574, 1744, 5337, 1572}], 
         Line3DBox[{1732, 1897, 5438, 1717, 1882, 5429, 1702, 1867, 5422, 
          1687, 1852, 5412, 1672, 1837, 5405, 5404, 1657, 1822, 5393, 1642, 
          1807, 5385, 5384, 1627, 1792, 5371, 1612, 1777, 5362, 5361, 1597, 
          1762, 5346, 1580, 1747, 5338, 1578}], 
         Line3DBox[{1900, 2080, 1901, 5549, 2095, 1930, 5558, 2110, 5665, 
          1945, 5575, 2125, 1960, 5583, 2140, 5682, 1975, 5598, 2155, 1990, 
          5605, 2170, 5702, 2005, 5618, 2185, 2020, 5624, 2200, 5725, 2035, 
          5635, 2215, 2050, 5640, 2230, 2065}], 
         Line3DBox[{1902, 2081, 5650, 1903, 2096, 1931, 5559, 2111, 5666, 
          1946, 2126, 5676, 1961, 5584, 2141, 5683, 1976, 2156, 5695, 1991, 
          5606, 2171, 5703, 2006, 2186, 5717, 2021, 5625, 2201, 5726, 2036, 
          2216, 5742, 2051, 5641, 2231, 2066}], 
         Line3DBox[{1904, 2082, 5651, 1906, 2097, 5660, 1932, 2112, 5667, 
          1947, 2127, 5677, 1962, 2142, 5684, 5685, 1977, 2157, 5696, 1992, 
          2172, 5704, 5705, 2007, 2187, 5718, 2022, 2202, 5727, 5728, 2037, 
          2217, 5743, 2052, 2232, 5751, 2067}], 
         Line3DBox[{1908, 2084, 5652, 1909, 5551, 2099, 1934, 5561, 2114, 
          5668, 1949, 2129, 1964, 5586, 2144, 5687, 1979, 2159, 5697, 1994, 
          5608, 2174, 5707, 2009, 2189, 5719, 2024, 5627, 2204, 5730, 2039, 
          2219, 5744, 2054, 5643, 2234, 2069}], 
         Line3DBox[{1910, 2085, 5653, 1912, 2100, 5661, 1935, 5562, 2115, 
          5669, 1950, 2130, 5678, 1965, 2145, 5688, 1980, 2160, 5698, 1995, 
          2175, 5708, 5709, 2010, 2190, 5720, 2025, 2205, 5731, 5732, 2040, 
          2220, 5745, 2055, 2235, 5752, 2070}], 
         Line3DBox[{1914, 2087, 5654, 1915, 5553, 2102, 1937, 5565, 2117, 
          5670, 1952, 5578, 2132, 1967, 5588, 2147, 5689, 1982, 2162, 1997, 
          5610, 2177, 5711, 2012, 2192, 5721, 2027, 5629, 2207, 5734, 2042, 
          2222, 5746, 2057, 5645, 2237, 2072}], 
         Line3DBox[{1916, 2088, 5655, 1918, 2103, 5662, 1938, 5566, 2118, 
          5671, 1953, 2133, 5679, 1968, 5589, 2148, 5690, 1983, 2163, 5699, 
          1998, 2178, 5712, 2013, 2193, 5722, 2028, 2208, 5735, 5736, 2043, 
          2223, 5747, 2058, 2238, 5753, 2073}], 
         Line3DBox[{1920, 2090, 5656, 1921, 5555, 2105, 1940, 5569, 2120, 
          5672, 1955, 5580, 2135, 1970, 5592, 2150, 5691, 1985, 5602, 2165, 
          2000, 5612, 2180, 5713, 2015, 2195, 2030, 5631, 2210, 5738, 2045, 
          2225, 5748, 2060, 5647, 2240, 2075}], 
         Line3DBox[{1922, 2091, 5657, 1924, 2106, 5663, 1941, 5570, 2121, 
          5673, 1956, 2136, 5680, 1971, 5593, 2151, 5692, 1986, 2166, 5700, 
          2001, 5613, 2181, 5714, 2016, 2196, 5723, 2031, 2211, 5739, 2046, 
          2226, 5749, 2061, 2241, 5754, 2076}], 
         Line3DBox[{1926, 2093, 5658, 1927, 5557, 2108, 1943, 5573, 2123, 
          5674, 1958, 5582, 2138, 1973, 5596, 2153, 5693, 1988, 5604, 2168, 
          2003, 5616, 2183, 5715, 2018, 5623, 2198, 2033, 5633, 2213, 5740, 
          2048, 2228, 2063, 5649, 2243, 2078}], 
         Line3DBox[{1928, 2094, 5659, 1929, 2109, 5664, 1944, 5574, 2124, 
          5675, 1959, 2139, 5681, 1974, 5597, 2154, 5694, 1989, 2169, 5701, 
          2004, 5617, 2184, 5716, 2019, 2199, 5724, 2034, 5634, 2214, 5741, 
          2049, 2229, 5750, 2064, 2244, 2079}], 
         Line3DBox[{2068, 2233, 5642, 2053, 2218, 5636, 2038, 5729, 2203, 
          5626, 2023, 2188, 5619, 2008, 5706, 2173, 5607, 1993, 2158, 5599, 
          1978, 5686, 2143, 5585, 1963, 2128, 5576, 1948, 2113, 5560, 1933, 
          2098, 5550, 1907, 2083, 5545, 1905}], 
         Line3DBox[{2071, 2236, 5644, 2056, 2221, 5637, 2041, 5733, 2206, 
          5628, 2026, 2191, 5620, 2011, 5710, 2176, 5609, 1996, 2161, 5600, 
          1981, 2146, 5587, 1966, 2131, 5577, 1951, 2116, 5564, 5563, 1936, 
          2101, 5552, 1913, 2086, 5546, 1911}], 
         Line3DBox[{2074, 2239, 5646, 2059, 2224, 5638, 2044, 5737, 2209, 
          5630, 2029, 2194, 5621, 2014, 2179, 5611, 1999, 2164, 5601, 1984, 
          2149, 5591, 5590, 1969, 2134, 5579, 1954, 2119, 5568, 5567, 1939, 
          2104, 5554, 1919, 2089, 5547, 1917}], 
         Line3DBox[{2077, 2242, 5648, 2062, 2227, 5639, 2047, 2212, 5632, 
          2032, 2197, 5622, 2017, 2182, 5615, 5614, 2002, 2167, 5603, 1987, 
          2152, 5595, 5594, 1972, 2137, 5581, 1957, 2122, 5572, 5571, 1942, 
          2107, 5556, 1925, 2092, 5548, 1923}], 
         Line3DBox[{2245, 2425, 2246, 5759, 2440, 2275, 5768, 2455, 5875, 
          2290, 5785, 2470, 2305, 5793, 2485, 5892, 2320, 5808, 2500, 2335, 
          5815, 2515, 5912, 2350, 5828, 2530, 2365, 5834, 2545, 5935, 2380, 
          5845, 2560, 2395, 5850, 2575, 2410}], 
         Line3DBox[{2247, 2426, 5860, 2248, 2441, 2276, 5769, 2456, 5876, 
          2291, 2471, 5886, 2306, 5794, 2486, 5893, 2321, 2501, 5905, 2336, 
          5816, 2516, 5913, 2351, 2531, 5927, 2366, 5835, 2546, 5936, 2381, 
          2561, 5952, 2396, 5851, 2576, 2411}], 
         Line3DBox[{2249, 2427, 5861, 2251, 2442, 5870, 2277, 2457, 5877, 
          2292, 2472, 5887, 2307, 2487, 5894, 5895, 2322, 2502, 5906, 2337, 
          2517, 5914, 5915, 2352, 2532, 5928, 2367, 2547, 5937, 5938, 2382, 
          2562, 5953, 2397, 2577, 5961, 2412}], 
         Line3DBox[{2253, 2429, 5862, 2254, 5761, 2444, 2279, 5771, 2459, 
          5878, 2294, 2474, 2309, 5796, 2489, 5897, 2324, 2504, 5907, 2339, 
          5818, 2519, 5917, 2354, 2534, 5929, 2369, 5837, 2549, 5940, 2384, 
          2564, 5954, 2399, 5853, 2579, 2414}], 
         Line3DBox[{2255, 2430, 5863, 2257, 2445, 5871, 2280, 5772, 2460, 
          5879, 2295, 2475, 5888, 2310, 2490, 5898, 2325, 2505, 5908, 2340, 
          2520, 5918, 5919, 2355, 2535, 5930, 2370, 2550, 5941, 5942, 2385, 
          2565, 5955, 2400, 2580, 5962, 2415}], 
         Line3DBox[{2259, 2432, 5864, 2260, 5763, 2447, 2282, 5775, 2462, 
          5880, 2297, 5788, 2477, 2312, 5798, 2492, 5899, 2327, 2507, 2342, 
          5820, 2522, 5921, 2357, 2537, 5931, 2372, 5839, 2552, 5944, 2387, 
          2567, 5956, 2402, 5855, 2582, 2417}], 
         Line3DBox[{2261, 2433, 5865, 2263, 2448, 5872, 2283, 5776, 2463, 
          5881, 2298, 2478, 5889, 2313, 5799, 2493, 5900, 2328, 2508, 5909, 
          2343, 2523, 5922, 2358, 2538, 5932, 2373, 2553, 5945, 5946, 2388, 
          2568, 5957, 2403, 2583, 5963, 2418}], 
         Line3DBox[{2265, 2435, 5866, 2266, 5765, 2450, 2285, 5779, 2465, 
          5882, 2300, 5790, 2480, 2315, 5802, 2495, 5901, 2330, 5812, 2510, 
          2345, 5822, 2525, 5923, 2360, 2540, 2375, 5841, 2555, 5948, 2390, 
          2570, 5958, 2405, 5857, 2585, 2420}], 
         Line3DBox[{2267, 2436, 5867, 2269, 2451, 5873, 2286, 5780, 2466, 
          5883, 2301, 2481, 5890, 2316, 5803, 2496, 5902, 2331, 2511, 5910, 
          2346, 5823, 2526, 5924, 2361, 2541, 5933, 2376, 2556, 5949, 2391, 
          2571, 5959, 2406, 2586, 5964, 2421}], 
         Line3DBox[{2271, 2438, 5868, 2272, 5767, 2453, 2288, 5783, 2468, 
          5884, 2303, 5792, 2483, 2318, 5806, 2498, 5903, 2333, 5814, 2513, 
          2348, 5826, 2528, 5925, 2363, 5833, 2543, 2378, 5843, 2558, 5950, 
          2393, 2573, 2408, 5859, 2588, 2423}], 
         Line3DBox[{2273, 2439, 5869, 2274, 2454, 5874, 2289, 5784, 2469, 
          5885, 2304, 2484, 5891, 2319, 5807, 2499, 5904, 2334, 2514, 5911, 
          2349, 5827, 2529, 5926, 2364, 2544, 5934, 2379, 5844, 2559, 5951, 
          2394, 2574, 5960, 2409, 2589, 2424}], 
         Line3DBox[{2413, 2578, 5852, 2398, 2563, 5846, 2383, 5939, 2548, 
          5836, 2368, 2533, 5829, 2353, 5916, 2518, 5817, 2338, 2503, 5809, 
          2323, 5896, 2488, 5795, 2308, 2473, 5786, 2293, 2458, 5770, 2278, 
          2443, 5760, 2252, 2428, 5755, 2250}], 
         Line3DBox[{2416, 2581, 5854, 2401, 2566, 5847, 2386, 5943, 2551, 
          5838, 2371, 2536, 5830, 2356, 5920, 2521, 5819, 2341, 2506, 5810, 
          2326, 2491, 5797, 2311, 2476, 5787, 2296, 2461, 5774, 5773, 2281, 
          2446, 5762, 2258, 2431, 5756, 2256}], 
         Line3DBox[{2419, 2584, 5856, 2404, 2569, 5848, 2389, 5947, 2554, 
          5840, 2374, 2539, 5831, 2359, 2524, 5821, 2344, 2509, 5811, 2329, 
          2494, 5801, 5800, 2314, 2479, 5789, 2299, 2464, 5778, 5777, 2284, 
          2449, 5764, 2264, 2434, 5757, 2262}], 
         Line3DBox[{2422, 2587, 5858, 2407, 2572, 5849, 2392, 2557, 5842, 
          2377, 2542, 5832, 2362, 2527, 5825, 5824, 2347, 2512, 5813, 2332, 
          2497, 5805, 5804, 2317, 2482, 5791, 2302, 2467, 5782, 5781, 2287, 
          2452, 5766, 2270, 2437, 5758, 2268}], 
         Line3DBox[{2590, 2770, 2591, 5969, 2785, 2620, 5978, 2800, 6085, 
          2635, 5995, 2815, 2650, 6003, 2830, 6102, 2665, 6018, 2845, 2680, 
          6025, 2860, 6122, 2695, 6038, 2875, 2710, 6044, 2890, 6145, 2725, 
          6055, 2905, 2740, 6060, 2920, 2755}], 
         Line3DBox[{2592, 2771, 6070, 2593, 2786, 2621, 5979, 2801, 6086, 
          2636, 2816, 6096, 2651, 6004, 2831, 6103, 2666, 2846, 6115, 2681, 
          6026, 2861, 6123, 2696, 2876, 6137, 2711, 6045, 2891, 6146, 2726, 
          2906, 6162, 2741, 6061, 2921, 2756}], 
         Line3DBox[{2594, 2772, 6071, 2596, 2787, 6080, 2622, 2802, 6087, 
          2637, 2817, 6097, 2652, 2832, 6104, 6105, 2667, 2847, 6116, 2682, 
          2862, 6124, 6125, 2697, 2877, 6138, 2712, 2892, 6147, 6148, 2727, 
          2907, 6163, 2742, 2922, 6171, 2757}], 
         Line3DBox[{2598, 2774, 6072, 2599, 5971, 2789, 2624, 5981, 2804, 
          6088, 2639, 2819, 2654, 6006, 2834, 6107, 2669, 2849, 6117, 2684, 
          6028, 2864, 6127, 2699, 2879, 6139, 2714, 6047, 2894, 6150, 2729, 
          2909, 6164, 2744, 6063, 2924, 2759}], 
         Line3DBox[{2600, 2775, 6073, 2602, 2790, 6081, 2625, 5982, 2805, 
          6089, 2640, 2820, 6098, 2655, 2835, 6108, 2670, 2850, 6118, 2685, 
          2865, 6128, 6129, 2700, 2880, 6140, 2715, 2895, 6151, 6152, 2730, 
          2910, 6165, 2745, 2925, 6172, 2760}], 
         Line3DBox[{2604, 2777, 6074, 2605, 5973, 2792, 2627, 5985, 2807, 
          6090, 2642, 5998, 2822, 2657, 6008, 2837, 6109, 2672, 2852, 2687, 
          6030, 2867, 6131, 2702, 2882, 6141, 2717, 6049, 2897, 6154, 2732, 
          2912, 6166, 2747, 6065, 2927, 2762}], 
         Line3DBox[{2606, 2778, 6075, 2608, 2793, 6082, 2628, 5986, 2808, 
          6091, 2643, 2823, 6099, 2658, 6009, 2838, 6110, 2673, 2853, 6119, 
          2688, 2868, 6132, 2703, 2883, 6142, 2718, 2898, 6155, 6156, 2733, 
          2913, 6167, 2748, 2928, 6173, 2763}], 
         Line3DBox[{2610, 2780, 6076, 2611, 5975, 2795, 2630, 5989, 2810, 
          6092, 2645, 6000, 2825, 2660, 6012, 2840, 6111, 2675, 6022, 2855, 
          2690, 6032, 2870, 6133, 2705, 2885, 2720, 6051, 2900, 6158, 2735, 
          2915, 6168, 2750, 6067, 2930, 2765}], 
         Line3DBox[{2612, 2781, 6077, 2614, 2796, 6083, 2631, 5990, 2811, 
          6093, 2646, 2826, 6100, 2661, 6013, 2841, 6112, 2676, 2856, 6120, 
          2691, 6033, 2871, 6134, 2706, 2886, 6143, 2721, 2901, 6159, 2736, 
          2916, 6169, 2751, 2931, 6174, 2766}], 
         Line3DBox[{2616, 2783, 6078, 2617, 5977, 2798, 2633, 5993, 2813, 
          6094, 2648, 6002, 2828, 2663, 6016, 2843, 6113, 2678, 6024, 2858, 
          2693, 6036, 2873, 6135, 2708, 6043, 2888, 2723, 6053, 2903, 6160, 
          2738, 2918, 2753, 6069, 2933, 2768}], 
         Line3DBox[{2618, 2784, 6079, 2619, 2799, 6084, 2634, 5994, 2814, 
          6095, 2649, 2829, 6101, 2664, 6017, 2844, 6114, 2679, 2859, 6121, 
          2694, 6037, 2874, 6136, 2709, 2889, 6144, 2724, 6054, 2904, 6161, 
          2739, 2919, 6170, 2754, 2934, 2769}], 
         Line3DBox[{2758, 2923, 6062, 2743, 2908, 6056, 2728, 6149, 2893, 
          6046, 2713, 2878, 6039, 2698, 6126, 2863, 6027, 2683, 2848, 6019, 
          2668, 6106, 2833, 6005, 2653, 2818, 5996, 2638, 2803, 5980, 2623, 
          2788, 5970, 2597, 2773, 5965, 2595}], 
         Line3DBox[{2761, 2926, 6064, 2746, 2911, 6057, 2731, 6153, 2896, 
          6048, 2716, 2881, 6040, 2701, 6130, 2866, 6029, 2686, 2851, 6020, 
          2671, 2836, 6007, 2656, 2821, 5997, 2641, 2806, 5984, 5983, 2626, 
          2791, 5972, 2603, 2776, 5966, 2601}], 
         Line3DBox[{2764, 2929, 6066, 2749, 2914, 6058, 2734, 6157, 2899, 
          6050, 2719, 2884, 6041, 2704, 2869, 6031, 2689, 2854, 6021, 2674, 
          2839, 6011, 6010, 2659, 2824, 5999, 2644, 2809, 5988, 5987, 2629, 
          2794, 5974, 2609, 2779, 5967, 2607}], 
         Line3DBox[{2767, 2932, 6068, 2752, 2917, 6059, 2737, 2902, 6052, 
          2722, 2887, 6042, 2707, 2872, 6035, 6034, 2692, 2857, 6023, 2677, 
          2842, 6015, 6014, 2662, 2827, 6001, 2647, 2812, 5992, 5991, 2632, 
          2797, 5976, 2615, 2782, 5968, 
          2613}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
om/8uGEsdX0ivWv0eJhaPwO2yG5d71+VChpew5OLDP3Bf5BhE4j00mjW5j8+
VwN7X7U9kEgKAyWJnrEp1Itef714ftvlOhgoor2dqfaHh8tTQ3lQj1L0uWh0
8kwVLJs2lt712x3WHcriP456xTTzDu0r/TRIPbs4+3eXM4T0vp7hQ/6/+dHZ
Q0dHaOC5M2HsaJMDsAV9ZCxD8zZLGd0TMuVAMw455rndBiy8mU8qI//kuiF9
e01iLogcvG4y8lgfrnX06MohHziilji0UucWbEx+eHhcUB3qWh9JuiL+P5vc
8ccQ8ePdcTYP3otSsGZ280WKJ7z4/gQPgkPi595vpvLZ9AR8Lh44u7cL+W3B
vLmCql0a1O2lr2X9FgGqbwy2+aC94566uXz8tmpgqWPrWv4mGdQ+9z571ovu
FbL+4Vh3LWi/jXvGZBwHX/WH0wQQPlLRE7fYbKtA4kGAhfNsGEiINNQfQP0q
kzd4tx3qVUJ2iYo8+oEwfIN26DS1f/X0vCzLogGn4cuML2O+MFpqeOMymuuG
TBWG+JXD5laOiSfBHiA+skHRG+XIk4odDtJf8sBWqx+qftlBvb0etyjyz/yN
qnVZjYmg5X/ipNdeA+CN8DT4gXyjtujZ0xakk5Xn9zCJXlSHibWfhSm9EB4I
YF4QPpD7EzwIDrOzDjXhuoXwF5/NbFMsIWj/SpTLnVvCWgU19hJnbrcVwqra
0e3b0H5xnLu2uXukCuo6Z9YsP54N59YMnn6GePV9sOZPTBwNLGU3M3MHpYDq
u810ddQzhebY+pb2VsAzP+7IE1PxYCIZWKqEcNBfweKVj/rWBYmxBexqMTBu
/Nz2D5oXBzmXn7tQBqfN1J/Rb4cB08mxWiWUp0lWwiOxWTlQcbtn2eEN3iA8
q/Y6DfHnXpJcyopn8dB6sqvpipMtFH0P/Uj5p0DgooMCl8PhWuOcyQBNH/jS
Pl2kfIPogeiD6ILwgPCC8KEW35/gQXA4mSsj/KGoHJTx2dLlX/cOzS9Wl9CH
psth0XDGyM7cAtCx8nhdjPYOM17HA7v1y6Hcal/2vaosGPiiv1sX9e3JYEn3
3U3lEHpj4TG7++kgf8isTYF6nq+pnGdsVQ5GRV8M81HPWvSxWfEm6ld5gXKF
dq+LwFhPuKxwRwxw3a26AIjn0sGmtAVbMiFZO6pPNy0AwvsPD5WgPH39g/ux
GMqP6fENZWYoT25uSm2ncuTPS9OTAy1BcPVER3nYHhOgpbScpPyT+EIH9gni
D0QPRB9EF7WYB4QXhA9M+P4ED4LDam8Xo2K0d5Gz3SJLkdq/hhm/A335SiHN
vGtB/sc8+N0p2beVep89xS347KkyuJGrnpddkw2/A+ZFfqG5mf/yeW7nEuDd
ntqUKJ8O4yMVns+Rjho7OQuEsnLhgeysk+rROHh5raRFEPWrkZblVnb1yRDw
NNGWdjcQ1HYaqQ0iXTxxrFocqxQKdEOj7joHJ5icKBGh8rRotai6XKc3/I7N
2rjSwQR4N9vtp3JkKfZH4pfEJyWxL0gTn8D+QPRA9EF0QXhAeEH4kIXvT/Ag
OPjlny/7O1AIvvh071hrlk/tHY8M9UcOF8FTq3bbFrR/0K/U3qL2Dt9dqddH
PfPgxfMHGnL66fDgfmzyB2pPN/vBvbY4HS4msh4qb4mBm2fWnZBBPFm3eFGq
xng0TFn0rj7d4QeRGmHHGpGOFj6NM9E19IHwmaTem+N2MDz4V5jqFbOWW8bf
ml6D5pjz8V+yDOGGtOEdKk+bcE6Q3CB5sQX7I/FL4pPt2BeITxB/uIn1MIH1
QXThjnlAeEH48ATf/wTGg+BQmjfwS21NDpTj8+Ns3KMHaP8y3HV8VUpuOnzO
VXDl3poCr+b7c6KQn1yY3riXkRsHYny5blUxETDevnGW6tv63uEye64EgUKS
eXsR6puTrwdkqJ4ZWN2arx3qDAlbLF1Y2Syh6sgAH4XDDXH/ai49a7iwcfjv
w5pLkLZKdBfVK4pwXpL8JLm5CecEyQ2SF8QfL2O/JD6pj32hE/sE8YcNWA9E
H0QXTzEP/DAvCB+68P2NMB4EB92jM+MnlGLBEJ+7ju9euQnhwDqcIRCD9o0X
H+6qf1MLADGtuuvU3qFm5dK3yNEN2iXXRc7dd4SXKl6GVN+eYFhXG0qYQan0
x6Tmw/og1XmTneqZZta/IsMCLsNIgh1fs74GrGwONKH6lR3uDaRHkP7AgfNS
B+cnyU11nBNFODdIXhhhfyzAfkl8sgn7QhP2CeIP+lgP8VgfRBfCmAdnMS8I
H17j+6/GeBAc2k5/uOpfeR3e4nORwp35eHQv3pOJnyt6LODo8oHxilhTSFB7
dJ/aO1q8j3EqVGtCjcmOM9lVp6HHtGsd1bf5526ezrivCj7zRzNykmTBdY0Z
jeqZd8T+9ac1uE+RHuWPewPpEaQ/1OC8JPlJcjMD54QMzg2SF0HYH4lfEp+c
xL7AiX2C+IMi1sNlrA+iix7MAxXMC8KHU/j+OzEeBIfVeXPP7pZqAjc+Hwht
P0btX7u3BvXespSDBO/fr9n1ZMDd/4gs1ZOTHXn3F2w7AgvXs5nys++HhA08
//Xt40n/euRh3CtJn9yA+1MO7lOkR/Xh3nAH9wjSH0ZxXr7B+Uly8wHOCZIb
JC8isD/ON/3zS+KTmdgXQrFPEH/IxXoYw/oguriLedCOeUH4kIzvvwfjQXAw
bq/izAvdC5fxqTlV8Yma+witXnV9mQAsvGH3wbVmI+xnqvhv70g48a9Pt+B+
TXq177l/PbIa90rSJ41xf+LHfYr0qFu4N5AeQfrD8rh/eUnyk+TmU5wTLFb/
coPkhQr2Ry/sl8QnZ7AvGGOfIP4QifWwA+uD6IIJ8yAR84Lw4bv7v/u7YTwI
DlVuO8VXNLL+/zws6v7f/mV824jWeTGITs7vo9uis9B9xwOqjK+1utMvPXBu
FhS/Sjct0hOsQD9vOjR8j5knA4TSDBcuVPGCHNU9/CGoV7N8++qtH18NfwWt
D1ssC4UBS+l3W9Gesqb6T63OVB0kyV9za74VALwzj9eJvUZ7Yk3y4t8tVXDh
qKVdb8EN0BH0YMx9YECqU2kHhycNBq+c+m0nhPb3l24fWFE/X2JK/7kR5cTp
23ce0W84wD0up8i7KBdqp9JLck3K4XilnXy6jg3Y6IP/L+STRV/HspOZ84Dp
RsONVXwGkD2tFzxN7ReOU6FhQbdg4Y53Ea371eGsPY+BLfX+RZmRaXlFJCh8
+sVwmQA4t3nNhgyEgza+P8GD4CDToBzM53vm/6fvge4qircN602ULvClA09w
Y+2pV1EAxy1+vEc+M+en5ZVbWonymXffUe8kUIn312BBfWlz/rebSw7XAePe
h0z7ZfGQMWiSO4Dwaem/HcjDVA1XdCI6W1XC4WxkKzP1PL9Pdsn4p7M02H3i
pea9dwGQIRH9cA7h4PlSUvqNKuoZbcsMZrJ84UN4oaIYhZt6o/6h1HLQXt71
U7jaAzKeDceeRPhcGX9kcu98Pth9t1fYeNoefrktCu1GudB51Ettki0J3uz/
qyugZAD76lIPDCHfWKjP+VlxcySsdV+Vtxj5zaWoS6bV1H6BeUB4QfhA7k/w
IDioNmwvmxXJBxV8rk+OMt+Cfh+b7lPlf/0qYXO9WbLRyUJ4NivuyuhCPVYi
rFTEqRoqtH5wf3yXDfsTDZUG0d5x1EC3sGiIBgwDmWat7hR4I9PW6oR6Ke+v
X0/KAyogxcg1ao9DPFywKW3fgXBQFB7cXJ5YAc6FSVPH1seAA/sseyyar07M
uex1vQySnUYEFZeGA5NZ4NpZlL92p3iGby/Nhalhie2mlt4g02q97xzVE3jM
7vfNxEPB4Gqr3jBbcOneHU497zp2sT2MRTIcZDU/JrNe14fXrxa9nkT4ED0Q
fRBdlGEeEF78nw/4/lcxHgQH77d9hWForyBnnOVXoxi0j2yGYoarWQVoTkb3
zaP/7pDZSViH/n0/envnDS3Us7tvShslZUHtV1ElD9S3tYbNdo9Zl8NUplc0
s1k61BYEwxGEw0Jr+mDR2XLwSPR0uBqQDCN7eiWaUL9ax15n0yxSDPBmvU2z
TQzwv4q060d9kquG9jnZNhMGD9Ke31gYCJf+sO24hl7fMvNlsd7a0VDQNrRW
RskJREI+OgLC4WEvH4eUaRBI7NslV9FgDC8vXnlynPJ57AvEJ4g/ED0QfRBd
0DAPCC8IH87j+xM8CA6BX4zvT+8u/v957Arfgkto/2I5TQ8LSigB/9s/BwUc
8yC1ZI0I1TO/WFj77uAug+83BVV1rmZD2p3vrxIRPoWXqli6Y0ugN62h/e3F
dPDhrWbJQbxdd+ThjC7yGVX3lM1Jt+Kg+ghXS+t3BlyLWGjfypsCS3eq5Buu
CILcBmXWZ6hXiIsJv9+8LRTOV7SqcWug/ZTr9/PfCJ9r4x//5ml7w+srN9bW
vzGGn44hRtRzbOKPxC+JTxJfID5B/GEM60Ec64Po4gPmgQ/mBeFDEL7/EowH
wWHTkmd0eYdCEMDni668OmOEw1LnM4vahYugOj5Bc4VDLoSlbNr6A+0dG2e1
lsW250HK0exD7InpoPtrVbMv6p+/l8nPC/5Ih2MF5n3aW2Oho6jaczniCeeo
nmsdRwwEt95o45zyg40lPufuIx2d3npK33WVD0x+NQpJTrQDiQInDW+EA0/H
Ncs/pi6g8k7/7rleA9jr4Ov0As05jP/lBMkNkhfEH/uxXxKfTMO+sAn7BPGH
aawHog+ii2nMgyHMC8KHWnx/dowHwcHGyk4yQj0HrPCpevDkMXOkF72UmFGR
iXS4zL+HdyAtBSZbypaoID+533mBdfxbHHx58za4tCECNp0THPJHfiviurxx
SjoI1HZkcnQreMKVn87zS9F920oPbm1rcoKaTTc0RvgtoPnlpEI7mte3tqRJ
51iCkcWAQNAGbUhYEreXgeZ5OC+X4vwkubnw+b+cILlB8sIO++Nx7JfEJ69j
X5iz+ucTxB+6sB6IPoguUjEPBDAvCB908P0JHgQHdd9twb1hsXAenzHe7woW
IxxEua/Ypg+gfSP6YkXYyQC4MPKeqQDppVJj+phI23WQHW1c+E7SEUoYtWLF
6L5GMc4z059NYPvtd7fNlfXA2/9s5gTVSx8JchSG6IBEfMYNOWZ1SPszfJjq
21dxbyA9gvQHc5yXJD9JbsbhnODAuUHyQgH7Izf2S+KTxBd4sE8Qf5DBeviD
9UF0MY55UId5QfhwAN9fDONBcJBNe/RVXvA6HMXnLtEnk0nU8/lZ/vPnY8xB
hYdj53LUT5s2zz76hubpUVN7NfvPwa2+hOFzUhowZH43l+otl93ETauLTsKp
HUzm6qXSYLfo/CTVM9fg/lSC+xTpUc64NxjhHkH6wxuclyQ/SW5+wzmxGucG
yYvl2B9dsF8Sn/TEvrAK+wTxh1NYD/uxPoguxDEPajEvCB/U8f0TMB4EB52I
+rcc4+fgLD7Pn6/5SPHB+cbd1+baMhBXrlQY7CcFBS+uGlM9WVp5wDxpWgw+
WsWZrbglDN/fyryk5ntxjyS9kvTJEtyfSJ8iPSoU9wY93CNIf0jDeUnyk+Tm
BZwTEjg3SF4s/PbPHzWxXxKfrMK+0I59gviDINaDMdYH0UUM5gHhBeEDub8d
xoPgoP9kn64NbScY4HN/xcVhas7iqjXU5LQJVD227hJTXgdiZzh+U/MnH/71
6X24X5Ne/cPtX48kvZL0yS24P5E+RXqUM+4NjbhHkP7wCeelE85PkpsKOCe4
cG6QvNDF/ngX+yXxSXHsC4nYJ4g/6GM9GGF9EF10Yx7IYV4QPpD7c2E8CA7x
ixyCYu+zQBI+U3fN/rd/RQnWH2fb1EYnp7puV9buvWNg1OETIBrziP7IsFdn
kXUS3R1UjlxKYoB80zI/j/OpYC0VvvrpLn8YVF18iPq8mYxEhbgEowYMBBnq
J0PDoCRoMfvWbtQP1ZJ2PjWqA+OtcWJs9/2Bu6p621LUG589exP7+FwVLFPY
063+1x2crtOvSaOewLJHtCa3hwaJJgb85147w/SPsL7tKC/UzverLBmmgeTd
DTJqjQ7Q7+M4xUY9ty9/duWcbDlMP03d2rPDBvT0XJmUkB9uiLvM4EjOheN7
rGcDn+jDQxGuQRnkA5EbDd8H69yCnAKF273o9b9lvl+Qel7BX/9Qv/pxJKSa
9TkuuSAFzZda7Kk9ndyf4EFwCFFyEIoxp9HJqaqw07i2nQE5yhNHuvrToGxZ
mEClSAQo9O36aIj2kScnzHlmOKrBbgX3gqJnyej3vV3E3If2nRcvqy6+rwWW
VWnTNIs42MuT9mANwofJLYYj0aEKvouMd7ItCAf3su1zO1E/P+dUvmRDHA1U
PjWs0dEJBBPD9J0XEA6fctc4rc6kgX3uRp/GUV8wztkSYEjNk0/81vcvh8pK
NeWBmx5gecLVlPocBXrVqq5+y4Op3W0X9X/bwX5R30v7ka+qnqp/HdOUCF4u
HhwNew2gNHleiHpus7gxNoddLBIiBa6ZMi6ow7zvppPU8wpLzANZzAvCB3J/
ggfBQeZs7AM/v8L/n0aZh+ZOoHwXjt1eE8lcBX8m6M0TjYXQnfZuC/W5uzLR
zKNsk1WQYRpzskQ5G75vTx2re4f2KcfWqLW3aDCa2vxwTXAKxHJUtql8YoCF
WB1n/LsKuLhMOWD5eDzsyJReq45wYC0sX5zZWQEyMf0ziqdi4Fz6pgVUH2NZ
HnZKTasMChrExPvvhkHfsoG442OobxutXuyekwPSL/Y339noDR/DaixTEX92
OXhGxT6LB8Ga+sAEJ1uI6glpop5fSUU3zYnphkO0c29ocIU+/HH5fI16bqOP
9UD0QXRBeEB4QfjwF99/H8aD4KDyMW8uobT8/+duumJKG5pP5C7VFZkpB1ev
qOTwwgK4GVt/NwP1cNnl4gfP6JXDco94DfvKLGB9bfBGD/XtQp6hH6uflMOS
+j32PvfSoaYgLEQZ4fAiNLn/sFU5yHpt+UE95y6xfV9MPd929NtqkfK2CD6V
8e05uSsGXq9j5zuGelRjs5aO5dZMkKS9FObKCIDr8R9/Up8nyWt+07pbNRrW
vTRwEZV1Aj/bFy+p53i/+U0GopqDgCX3WKncLhP4sMDagnp+RXyB+ATxhyVY
D11YH0QXhAeEF4QP1/D9CR4Eh4GQR3EeK4r/f/rVyNz67/2vmWr7FxtLwUnl
Wlb9+zxIf6b+mPrekMndW2FKqmVw9frah6bV2XCt5M0uah+RY0+zk3EpAQM3
i63nFdLBusBzjvqc1ZnD8uy7c3KhMKvt3OFjcbC9x/XPVtRDyv/2ZrLeSQb5
9gsfpu8FQq/yqQ/U52r+ul4XND4RCisHEnNp9k7QpJqoQD3P3Compl7w2huE
W66VPLhqgtbdJlXqOR7xR+KXxCensC8sxD5B/GEc6+E41gfRBSvmAeEF4cM1
fH+CB8Fhw6N1e168L/z/aejDJlaM5gFjszFwpAhm2APGeK/lwg3DQ5zU+z6D
Ldfy73nnAf+OnoJQg3S4b9zn0494Yn2OuceyJB0608vvnGiLgatLx+SlEU+G
6RJMBePRYP+8/mRKhx+c+DS0m3q+fUo0tMpN3weas0efFIzZgYNQryL1XPfr
0MjkA8NrUKc64zaeZgiFTXeeU88zbXBOMOPcIHmhif2R+CXxSV3sC8QniD8s
xHog+iC6sME8MMO8IHz4he/vjfEgOAQ2c7x/wZkDEfhMaXMppaMeLrtQVmR5
fjqc2O2v5i6YAvyuocqR1Oey4ia3TObFAX33g0rL2AiYT/lCo97vEBicnuI0
CoL749YXRnU9Yf7S0/PUc/7t+94qawU5Q+XmNfwqSyzhdLmbCIVDVtrQtmhN
a2D1vnD5ReklqN6rL0o9152/8y8vSX6S3HTAOUFyg+TFCeyPxC+JTypgX2jH
PkH8QRfrQR7rg+hiM+ZBP+YF4cNFfP/jGA+CA98PrlnDk7H/P5dtDyiiPn8Y
Y7X0L8dQMMiyqf2yUwuAaR/3wP++/xUSvtHe1g38hY/OSdxzBBm6gwv1fkdp
ker8QzEz4DZ7ffSgqD5Ea8ZxU8/5FRLYvrh7XYbR0a8zO7Q1wHF5qgX1fHt5
87/e0Il7BOkPpTgvP+L8JLlZhHOC5AbJizHsjy7YL4lPlmNfID5B/IHogeiD
6KIa80AG84LwQQnfPwXjQXB4tpk307b8OnTg8zJXJxfVP/cZz6868cYClMIt
1rBEmIL0c85n1Ps+0h0dEtrFmjC71tItquQ0PObL20D17ZebbTYOlKvC4Pcz
BYZRsuClm1tJ9cwM3J9InyI9qh33BmbcI0h/EMJ5SfKT5KYUzoknODdIXgD2
Rxr2S+KTHtgXRrBPEH+4jfXAi/VBdBGMebAS84Lw4Ry+vyzGg+BwyyjRAHI1
IRSfDE1LKapvp986lJNvIAfcSpuHtmrKQHXj+H/v+1TUWg2c5z4Cp0ynrOQX
7Qe2cv3/3u+QKPzXI0mvJH0yG/cn0qdIj9qAewPpEaQ/iOG8zMX5SXJzKc6J
eZwbJC8eYn9UwX5JfDIP+8JO7BPEH4geyrE+iC7mMQ/kMC8IH3jx/ZMxHgQH
8a5LJazX98JBfI6deP3f+1+7zjTIdf/hhw6aZO3f9I2Q6H7vv/d9+k3+9Wk+
3K9Jr1bEPZIZ90rSJ/VxfyJ9ivSo4Zx/vYH0CNIftHBebsP5SXKzBefEBM4N
khdLsT8mY78kPvkV+4I89gniD/1YD51YH0QXxzEPyjAvCB+m8P2lMB4EBw3u
4MJjJaygj88Dnzz+27+8ni0Ln04sp5+cGq1gDaukNz+X5lrzkgHToS3DuVXZ
dJ2ek5FzzBn0n2wfg0KmGKA8YZD2JjAX4p2f+F+u0AR5LpGDZ5C+2kS6pNxa
6yDRCGiGmlfA7Uqah9QbBlyyPh7ZbVoPTg8zKvzbr9AHJzOF4BUDmN3ttp59
VwNa2z+I8M1do5ccYV0j3IP06/f4TObhKpCrKkg5cd6D/nD/GH8w6hvnZUNH
xHsr4LuVsf+cqCf9nKn0KRvk/2MnhtIPmJRBnO9U4qI/XnS+8vcybcgPWZm0
jzj8KQBfD5OGTyZ+dDnTnZx83xlwLHkF+6UjWbCtXoX+2zeIXnYwUWn4FwMk
t8jHs+/NgPCah45iG0PovGfyNzGhfeEuXW7e9HccfUpjvcKeP8X0Ew8czcoZ
6HXUYp8q1omgX7O9fDtbLY0+3qS1OR/9/ISaa7jmlWxwOcoqX27qCUsuJfkF
o39/dHjKe6FOLQw8/zXo4RoCQatXDU11MeBPXsmNjXl1kLnxUEX0iCsIrHLY
F45w4xk0cjqYVwNPvrHF1aq139v66ZviJMJnvf4lP37UwySXvtZ7AdZ0v/uc
a20QPtuzNwuvWUYDmbYdzcPKzvSGfVF6exE+ollaE1f9y2B7jbC6joUH/dGP
v25ZCJ9ahwcLyg4UQsyJKfnHi/zolrPrWr6j13dwv5QgX0wW2PhckAk5cpOu
P21gcQv9/vUyTb7d/unQd81VW7MolH69r2VGAd1308l1CgYaIcCxNv74mW1p
cHTT0TEu5J9JvivseSAe9A8HbGFkJEJt14PPNejnJa6cu++fXAJjpQXxB3bl
guJcHNs42r/OZvzRNuGphp2uV1n2MmXDx/Dup66oV/f+OcA83VcNcd+nxT10
k6BLuz+YC+FgvWgsQ6m9CmTFR7+6XEK9RYyTh+UDA5wd5k0NJCphBdsCteYt
PvA5aKHgL9S3va3jFr7aWwFBin9sFBm24LVksfjRYQbs9/46v0+oFBZWMzpf
rxGiB0vI2D9DfelSUvXvh5vy4efW45IsAQ70Uo6/lxejfFmusoCLNysDeulr
3R8X+NBPCXfUCaJ7/WAJXRf4ORWWCrMfy9IPobdkKOsIIRzKjxn77jgTAe+Y
ZqqKCqtBiRG5OBPtWd+GJx6m7U6F5reP2BdfqoIHGbT65H7UP8tSJ14kFMGZ
kePrJKVp0CM6+PQH2tc6lrl8bt9SAQG8Bj3OD0tg8VLX3kiEgyObSb6TKQ1q
WfttmBbmQhrv9L5NaO8Y7P/KssyQBpI3XLWOc6WDy0O1k58QT9SVYjTzrlbA
yRUspRICtyBcID1WAuE/xGz8uC6xDPbEaV5quBwBRnt61MNQD9kLHe94NhTB
ymUr9A7v9QGPVcEjgHhy73rRcxGhHDgmceKx8pQpPO+Iz5VDPCnZfSC3bXMa
bDt65NPWbiN6Oz/fqS8Ih1rmS2XMsYlQJl/JqfvYle6aPlXwBuXRvs7LAwdd
AmDImtnOphX5gWbw3xF03y2iX1TZuePh86qLr7+x1oBt6PoOB3Tfd/O3LVtW
5cD9hx8fdBlWAk/Wlw1nEJ6yrLtk7MuLgPWo+7qxteXABI4p7QgHzsj0oLIj
ZfDSh6XYfrgQwtq3DqkhHNqeB22gd5QBu2lXWJV5Dlxlp0WYoH1E/6R9Ub1Y
GWxzNve3tUqH6RlTo1bUq/fsNJLRYisGk899wYa2t2Dih6OBPOKJ5Nmnpxcf
zINjU0UrZ1PDYX3MpMID1K9W+/ziWH8nAyxEjkpcvOEJinEdvw4innQtPmgd
VZoA/tvO1D9v0gOHmXWt+1H+tguPBg+9iYUF4f7P1x65TA/m3Cs0iebhAoe8
Ljh6Ao/orpRFTtUgsk5s03p0r87re40b6iKg03+jfcuyatC9aCx8Ec2ZNbve
nfuYBgtzpZraTlZCfAVt8i7Shf76u9ybluTCk3xw5pkthxmeFzmUb0T4l9cE
/S0AL/cD46snSqDHWsAtBenlRNxhL06zIlA22aWvXpMPICcww4z8pOOm6r5b
pxGOMveAyyQLtELaBNsQTzxWWum4iuQBl/mjpgyzFDCVNGU5injSc68hjeV5
JthwZNx++iwaLrM1LNmLeCJULM2pz5QCQmLL42mMAJhYcKm2H/EkQfLz9vU9
0fBQZoB13Won4N6sGbIb5W/j+gKh9vcRMMgylHky5yL4nVmtfZf6XOuVGxWu
m12hWt1XI4atCsY6mxo4P1Hfv4i7JGaGentn3pNDfZUQ9DBXegGaJ4UGn/mb
nADb3ApEXPNocOqB2Lpl6L7ay+pTJSIyIKvX057pTTmcmfJnL0d84JVQmJae
Q/v+5ffzS3eUglzbmSOSCIfn6zlUDm7IheTdWT+5VxUA251VJYsRDrpcz/m+
/MxGefyD41VtFgiX6zfeQT08zaNv9A5vJmhl7bzvtSQVHvV+W+WH/OSe7K5q
44wUaP8ppnYgNgYWN2av8UY84fw1kTVwKxacNhQ42h8Mhp1cjHFF6nPyV3i1
V+mEQvC66ZvLwQ2SPP/MfEQ4ZCt2R41MBMKZ50o8HletwCM+7MgJ6nOJNkyJ
XJIOcM/IeJ3VGhp8CF1zmRf9/hX9lnIXTH3BTvvNg5D1NLCOusFRi3xgxbyM
DQvCf4qT+9ojjgpg+nRGqBf9vAVTt9CkWDKYeUkzp1iVwdJdGryPkX9OLSyh
X5ZG+7WZMVNVRhEMvuUBH5QvXtwhE6MTaK/4/rjqSFsuWFpYreKZRP4joOqQ
8jQNTpgGC4c0Z0CR1O/61QgH2w+btnAkJoGJ8nOnxwuTQKncpvoO6ue/s09Z
WqrFAuP3m4sr/aPglaFwRDjyjagchyW+j8JA1kp6THJpIHQkPF5tTH2uKXyD
3anDPnBhx9j4F43r8HuXb5YxwuHI1IIEpSWeMPHndL7Hgqtgs8TYJhvNq3do
fHvMZANFWvuUDhwsAym+0AR3lO9JLqs5ewU9IP2xkSID3TcjQ/pUF7pXqHfh
gb/mYeAqo7R7cnEpVBfrG/1BP3+a9UNH3WgM7LNnGP1eWQQxApmzreh1/9G+
R9Kl/hYItNT56BzNgweb3bceRT1Ev+VTRIpFAkgGbnx7+UsmXDLtOrYG9aiD
zJsvrlWIBwslCzcPllRYWboyg0H9XaN61TCWPdGgd7yn1wn5RBHjuoYuwuHz
7Zr4BP1QiHp1qKnKLwzUe8tz+RAOu5S467LcfKBo9hjPAW4f6PvItX0/9X6B
UFBuXrETjDXeXS7T5AjSK+N87qD5prYnK+032YFRx5Yu+2cWMH7mxf4eNM9O
zL7Q9OMKbPJcd6Dtaj5cNaPZdiJ/8/x59IMVvxMEbTc6mLOlADbNfC8TRnPH
1pp1V/X8YA/bBZ2gyDyo9dm9mHp9NxZYe0UvD4OWl7/WT7DlAFN00koHdN/z
rrKfYldFQl9qkX1BWwY028hz7Uf35cq1flSvFgnrvm51tb6SAoM7ZBdwIn/4
c2xtBKd7OCwuEyjPOBwH9cEGya+oz+eM9WkzxQTBvt3K4y/Lw8FYIyf2MPU5
VfMLbaGs3qBUsdQ+wdAPDmnRJrdT73OV/lHecdUJrp0TiDZ0cAXGpSj/EmpP
L1XyXvPGCPR/FHp9lbGEyMdPdg+jeVBO+71iWx249UdikSGrPnyw9lD6ieZv
jJIaJsV1wdNZJm1IPQPCzHoV7iL95vCLttwVt4bknWlCSlyZcH6hVRSgueLZ
U0wuA26g0GK91+htOmwa+H6jDc1Dmfi01/j5gM/NpivKZalwoDhBvID6O2Y7
52dbiv0hgal0ZGVsAlzd1/yqDN13/WHrebdSf2Bc7y20/BsNKSMC0reRP4Qp
vptTfeMDPO3tfeeWhYHgyceJ1PtN9VURIVIbPKD3zWziDw1f+EpzcVBBv7+f
9dtPoUoOwC39y/5R3TV4KW/LUoPmo40p8tMFRiC7YOew+3ZLyD23UZ/C4UJ2
3rLjllLgwTAe96k+D0YzR4Nm0fyF2U4LR4sN9IeDQ6PH38sB188N4dR+8flj
YMq9xedB8UqAuzt3GuzbwWM0ie6lI77o4vomA3DN/nOgLD8Vbl933rAS3cvL
sFzLwMUe2LMFJ15/SQbhiyPMxmjOfPHX26CS6+AkNse7qjEBGP7BxvNoniHP
PF3+3ANajv4NexkeC4HWBSvuIByCZD749c94gNDadyq05ghYPO6l44pwoB1V
OjbX6QYhP2rps2uCILvLR2kTtQc5Zr+JynKE6Q9xB5tuesL46tXfI9F82+iO
B2/3W4DmtpuVA5wOwCJ2uuUtmu+pGZSxEjwPO2vO/VLqNQTxnQ08FB8K7/2Q
bBg+QM/c9WNDRpAipJtla1M4aLHF0LTHNOjNPj+Pv/c7QC851ORJ7XGyeQMZ
Jx2f0BVFU0t1DGvoG3+oaKzSYcCdXc7dC0NK6Pe/r3EaZa6j39WWecnbjPaR
RBer/JVV9NQZpXPyP4PoSlrh2j4oxzXEi0fkLdPpMYekvvIEZNE7knMW5SOf
MeNofLSvNB18/QQeP630R31KdX044puGnnui/DcaqNvPzNc5hcDh5lMvNFDe
nV2Z7fYY5WCPS0mx2VwExFqfOKaJ9Hj6iO/ojoIKGM4QG4HcBAiUUhM3G0L9
hDHfKx5VC/XrunelbrkJe6VyGwzQXmNdPClqo1wD/g+X7FJjSgRh5ul11PsO
a7fn9Y99qgWT5fuvMdX5gchxre2FnUhHkvVrilH/f8DVbOTF6glvvb0Zm1Bv
2f5M3L/IrhbcfLaa7vWIhWC+55vD0M9nXp0pLEQ/Pz0j917KKAIazUrXHUb9
p7Hq5ljarUqgsZ0pqvriCsHW8sqSKN+bJ1r1b/hVAtPe11u3lN6EyiOiPC9R
H5iocWPf0keDDK7icx1SzmCx8uGPbehedx/0iP0cosFMjX1D1HZHiN7yNWwN
mjPkDFuN42mgHbeeO7MmAK783ieog+ZgrTmkkEaDnAZFbTstP7B5Qqugvk99
vV7F6oZFBcTeWlu0KsUWBNyvSBShPlmwrGonl10FHDvzNmrFkBcYeXfuvYDm
Y/R9tCVtpfA2ZX3B3LgFuJw+8IwP9UzpCpfu/ap5IJUhxpmQbgBL5TuS7yJf
nR15n+wuWwaWSsOFWR1usFjTa+goyqMNQrXXtoblQ9JLna0RbfbAHRS0vwT5
c15Q/0Xt5jTgk0o+LNSuCQ/hZFIM0qOQ5BXl4qUZMN83csf7jxnkv/l+uh/x
RHCB8SYLtTjYpJAS3FOhDJMyalH9SF83F+h+b2qJhxNNik+tWnVBTLhmOBrN
r7M+D2kbDAXRpLrD/m5pwPMinu8F+ncOTLKmcF5JhZKYkZJfPVmweomj9Hn0
+2zmvy+83rIIRL18Vi8LLAS9m5vy3BButnPbiuREaTAd8SMwt6YQPJQ8P/eh
/m/iXznVZ1EFi0WHreMn82DVVb1kd8S3N0EaeS25aF7wY+3Tm1nAYX340CL0
8x8GF9o4Lq+ED1Wp6frGaXBr17sFWQPodfSb94o7QgNPIWuh5XcTQcfSWPUd
4smc8Azb1q4KqJ42aNWQioc9pVMGjuj36d8ZxvnybQX8uqA6I/EwBrI+bA8Y
QXN+IWd5x6vl8PsE98ZVUpFg8dv6YB7qRf4vNZpv7y+BtfM/5PXjboKVSIbO
OHodD7FxWN05kQu/XmS5DH3xhjV/Ms4LoBx8s+dvZz+kQYlHkPWOjy6w7Jp4
VhV6XbQ/bklx3x0LfIO1z/QkrUHuzw2hxcjHCoP4YwtNb8Ees8DOgZxq8IhO
KT7bi/SrG7OwuT4TrA6vKuIrroLjw2FOLgiHzRps8wHSRVB60+zPoeeV0Hja
Qf0S0lFk7ldj8btlYLvJZsMl3wrY2ycc+R3NL+39lRLXXg63L6rf+xtRCkO2
eTXe6N/5rb9f/stgOTQef7G9cjQf6u+w+JsgnZ6R9OF97lYOh418L9W8zIbR
8i93DBGe4TvSVf9GlsMzl7+jOYczQfThufIB5DPt9etPelWWg68ebeX3fekw
MbmD7wHCc+9K04g453JoPVsjv/QS2iPSZfYrof55p1ZR8PK1UjD/6jt4sz8e
jD4Ov+FEfewbJze8tiiA3rqro17TkaBxU25pMdo78ltFSxsfZMJHdd9ZNur7
5cJvd1Pfrz/Fpu46zZ4ILC+f5Fp5e0CB5BfvfpQjFUxqmRcFI0H+93PP/AY7
mHO7sykF4cyWudWx4kUUTOS9VXi6vA62ac6Z7X7LgDjFKGGV1BSIa3cv/9VY
A3qqppWfEW6rBV8n0DKz4aPO3BkDWhVkCi6c3YV8T65x722Rs/nAy5s1ofOr
Asx/PfQ2Q/u+0ujTMBnE78UpOinFTmUgJL3yzDziZ/eSu40Sp4rBl9Uh/5F/
EZifst77AuGZ0xpb4FNbAu07LnNO5ObDtYzCfWMIT4bWeaYv70phl0P4Diml
XJAJPrQkA+FZkq3wUZGnDF5oSOd6vc8C0bAPkVOo59+T+vTo3t0SaNh7PNH2
VTrE6G49IDmCfN7zu+fSLNTnnHjSUkWSQET56dJnqMcK2mp+kHTMhnP8QzHv
cqPhS4pdPj/irRfNfNimMwXsaaFPo1YEA7fBteMRiLfNGzIT16dGg9rF/d56
sx7A4iUfwE59HvjuGoVTi4OhsF4s+duEHbDQOuL3oRysM3t8jN4ZBB92L5pf
alkF+qd7toYgHOQkhQfn7WMgeEuG59ijSrirb2x9AOVduGPc/etHUmF1500+
AUcayE41HHRBfk63PjYaqpkJav3mracY5TCmLNi7EOETwMZ3aYF/Dtw+JDYR
HV0G47WQ2TVI9RxLK3HIB8Fkn7VBtBL4ZhviS33vrN9O7JPgqUIYeg2D2teK
wKr/cHQm9fdPtkSrsrMVQQT/ghcBRfmQ7HnkzWXEz00T35mU/QthbyCP0/TZ
HOD3z9hyHuF5L/JGXeWfPEiKXOamvj0DrozlFnAhPPsyPqfkFmeB1PpJxQK3
RGgxbLPQRn5elPB7mUpDKnD0skzLH4oCqboP35KQfyo5JjYZdcVA5sHBOnmB
ABitjvwSjvyWdu1Y1pjtTWDnKJa/E+0G9iJ203MI54kgDjYGvxfUcte8ezBs
A24JT4YSqc8jjXv3P1bzhXOVQ55DhTTgu85hfhbdK+rLnnxzhQh4K54sF3aK
Bt07y0opHzZnN7u2Oe4WRPSGfTjcVAELWH9epP6OpemelugG8zToE1aVZF9e
AW3D31VN0XzjBjPlpy6Z0GF+4XEyXzmkh6bN0tDcq/zE5IvRbEgxjxmWXVIG
HsG54kaIhyc0d/uxbMsFsadi8sdZi2G2rO2ZOcrBFLFX22cbc+B9D22bz/Z8
OB0vuOQv2q+/sWyNHpbOhpwVtPGmhixo9NNwE0Z75bzEU23xwxmw+0Xr9b6v
qbCq+53BK4TnQ6bMZRxPkkCN8yvX1No4aI8cVy9BeOaHbRo/vSIGTm3ocLlx
JxRkmPf5aiI89+950/WqMhhGLO3OqLt5gfH6qYRvCM8Wp/VuXOGeoBLInTW8
zhHu2qdeop7zv709bs153wHqTvPEr4gygS8xnPOd1Oeg5BO/O7t4wZfLP75I
1NKgMLRHlfr+o8f2eVa/khBouz0sMnOWBrMOC8LuUO/z5s91OXXEQNLZGb6Z
+xXA/veg9WaEj4GxdhpnSCK8fmK+XrSpHLLYd6YdQ3ybmCuW/9mUCo9sykPP
O5dBzLBazmqUO5a+AfF6SulwQkv3HMftYrAOq+S/gXDjL/hgtEQ3Hf605But
ysyH3JFPVgsQD4eTHqU1SKSB58CVxzzrsmGLZWvyMOqNWlwyYpfLkmBR/Cee
DbZpUHntsXjoLwYEdjt3y55Ae5cQV3bjWBxotWiUZCG93zyx7aBrYgScexG8
nv1WOKTKLzStRni+z9G1004KgFs3Oa82cvrCYuU/9jPU3yWOdF9XzXUDkm+I
RThoOcMBnZbAFKpvTz0WTzxkBxr7szz1TS2g8upBVWoPDWeyXhKzxRiCJE0F
LGt0gPPV68kp6vtNz1y/BT93hR+KQ54OtuUQ73DW/hHS3bM7Bhy7pPzAn+21
eQ93ObzhqVwsiXBYaq3zWUs0HCpWvz4ydrQM7i6hf3BFOaIUo5GY0xkFtnZq
HfrtxeDdxzYYivJ6aVmm5gnOWHBp0ivqjioAQbZ7ZmwoX+Z578i6cMTB6TXF
9hJfc0CFWyigGvWZ3EGJYBOuWHi3OZ7nNdpn/dKeuocj3DLeB9e4VUZBG5PC
+81+yXBHOatwDfVc9HOZmlZUOES9Fc9eg/Rt7L2qaSXCjS9XwCaoOBA++H+3
Uz8XCgMeD5c5INwy5ASlOKq8YGWhOddKRR/wN86ulKbef1yeeXQfrwvcaWUT
ya10Bu/q41bU93R0jr3uS421gtsSd68m+ZmDSVhx0Gc0Z3AuuM3jrg/iRU/G
35vrwmvxpy0/KH+obliQX3EWAiUutw0FqcHKjcFrqf1uQ+MdRfZiG6hdZMX+
yCcP/bsWkQFIXyUXvGoXvb4GnuqtjeZr8uDdvkDOR2h+acJHTsTJG4yE9Xnr
bHLAeuzY+ANq32cWGj4r6w/3bx+7v21JFmScGvU+gHLZVETW050/EEzbNy8P
U0yHnpgQTer9AoPyl9zChoFQ171Fn5adBC+4g0Z2oryeernuXYueP2yo7Nn7
OT4WrP4UxDgj3ETqLsYP8/jAhZxb3BWrIyDsWIG5E/X3HnnvOPSCB2h3JsQJ
iAXAol/TLrvRvT7GPBGLlHCGJwf2hYXs9QCXZpV31PvXa2WbtXr4rkJObUx6
zm97+Hm4fftL6nOMR9uSJo9cAaljf27uKDYBc+Fjj8fQXP7VEZZ40IIC9khm
/jwtqKu3DqDev3un97PVTOAUpJi8sszuUQEF03ohau/7OK7x6vE7adiunM1i
XC0JK+MuOFB7YnlYuO7gXV0oTHNdunN5Iti7mzTzoXvJ3+KvD+00BWGOSX39
ogRY5s3xay+aFy2u/tPfYAuJaoPczH7x0JAZcY3KhWf0JvYWDkdglt+WLWYd
A2nvDnFwIxxao5h6vl5wAvMNqdtXroiECx0v2OKp718cVXsCzE7g/GG//cEV
IcDPY/CeFf0+DzZqvGeJs4f1+2Bs3zE/2F1Y/84UzT3eH2s8e+gq8G+6/+Ok
hgfcEJd4X4DmgbncryV+m8GOG5IDK/UcQU/U//RrNGebDiyd9TeAuvAhobkl
lvD8fHffCJqfsavKCpnUgoHvC8K1dPVh4nLmR2qPfiojrpe1UB0uBbFUnps/
AwOtH7dRPPx+QJH7aLQsLPX8nXBqowJkCUxuo3A72/Mw7eW7g+C4/7QjXe8w
iP3aX0/Nn4oHeUhW7wQOh93M16J2QFfe0RFq/u32z6juH8rw8IgLZ5d+JDzd
Es5TjHBItRvd0t+rCd6PH8VG+EaA9sLGm81orreHXvJkmQFsnht4NCscDr+W
rD/xHc13SG2ts3l2Bf6UrD5/VfEmnCxumhBG/36X00u3AkUTSFwdes74nj80
tni/pXCLMdF4F/HdGCoVn7zUmPcCvU8GbdTn1asfPy+mnTYCoS2ptY96rkPI
y3cdj9H85uS+dNYaPZDYJRGZwuQACzY3ePZTz+tkqpi5fC7Cdn0H2xM+FmA7
sOwc9X76jw8WudfqT8O3eYPEjRr60NciLDGD5q/+x9N5h2P9f388ZSciCaWS
VVQysjmkEjKzCSGb7L333nvvPe/byizZysjKyEhJpfiEIo3f693V9/fXua5z
3dfN/Xyf1xmv9+P9epPr5+b9koNjceEzFQSaMMSTKITpOeJyOMNzQRLOTHNn
+hyVg4RTmlSYPgt518lVhPkgzCJXZJ9XFAxMK/7qKXa/yJ1BgR0yDE8wer+6
AmuJSh//3l9u7j6tMnwKPnyWK64fOgMZi1F/uV/d/vVeorSurv9ZUb7vgdIB
m+i6VRP+mm7oGvK7OVPXEdLlcvPlHsaJlZ33qfF0zAf5kZNrKs7h0L6cp52J
8oDmgr8uexAOpmjUyX9BOrCs4pew51xydh5a1mu1wHPHCKvEc4mwRLhB+QjN
g9mPrikPrbfA08ATZKqDYUBIVOIcgvrz9z52oX18TbCkeacvzjkG+vPiJISX
N8F6V1fkmGsDtL4bOfvWJgguSVr4GKB+u2nYjLxwDA9RkpYGxiZeQKj/cFUY
1etspZyCL2V4mLjJd4u2PQjCRj4tGiH/nz8Hd7MTcDDd951snM0LAnjZtgRR
P9O7XvKr8HgdVL5xkww5aw9MwxHCA2hOL5hQ+FAWUg4c99/Lu3Y5QlcEQ0Uz
qiOMWqOrOZH5cKNUqkUQxd3KwvEsTlQv7k9QB/qwpILpSZOePkEVoMpUNnyP
1vuu+H6rW44Z1Ex554+2p3VRUS1IJCK/oL/HVOCbjK7/WdcnOx+0sf6nYDhF
2K4Abr4lnVnJSITSxg4ibpSHj4zcZQ1eroc3z7vDIn+XgHIF3YVm1G83dr9/
oUTYBFMhc0Jc+HzI466LbVvAztMWoWUWaoH0iD+MBSppYN5vmbqJdDb+ckGU
J7UB+uoOUagKZAPHhj4zE+rn57Z5Fq5dbACHOIbVUtckmNx0795A1335hfKf
MAc8cLS3s9amRUHFx7YfIUjPzz6+xI82cTB+UtNFSiQJbIm9T+0i/2DAYfMv
g/UQINjw64JjJNzQ4PjhjPqfuIMhAqZvtdBwUUmZgtcfQFt8og3pvMu6am7w
qBT4rOwnRnYD4FPUDM1xVI/K+G6U+zDkA8gcxQ2SO8IQCYOlJtKZ5zCrx6xw
GpT0JDk7khrDjYM63Vqkp2+V8jtipjTY75rxzcqrhyucfoky6PoOf7F75J6R
CwXiD5fslSugQl//xE3UX/V8jbPyOlwFz/7ZBo4gEQeMb/xkeXeuoe7/bb1Z
VxAZmt/tujL+fK3Fg/8yCQvn3UrQKpN+egzprKW3b9dt2Aicd159SREpBgeZ
Ck4V5CcR6rkaJYaD1RdC176PFcHwcTL8Q6Tny1+tHndqcaAgVfsl0T8Prqbl
FK6gePb+7MaokIyDcqudU0fH0kFZ+A5XP9aXPlQfuZJZD8JW784EH82GyLDH
+Luoz2QWaymK060Dn98kNTsiyahfv9Hlg/oopgj/VG3VarAhkqU8vR8NL/ei
OKrR7+WvcOrJ+FMIBG/v3UqjC4dYsnaOCyiuZMJTt3bqsuFnoj9v9BsvWDT1
PqGD6vjgyerDQuLJoKZS29XnbgeVPrkr2P0+Li9GCTsyVLdKtn6LJrdAVKfN
mBmKq7efei6V3M2HktkThKLETcBAfjbuC9JBpbSO9mZTJYjcG5d5PtEAIT6S
j4fR5+eiBMYKtivgvzwf9vJ2HFzYi57H7r8vKjcJXlGsg9f/7Mt9kwMc8pPb
LKU7VNWDMZs8/SnHCihLLLH2XkH1yyDn1BJBHURzMB0fuV4OClkCPkfQ/DiY
oMwiPlMH5g8OmeTzF0P5zo+160hPxXO3GfXk62Hid2gZSWk+MHzh1cCeH+T4
/FA653QtfMfzxDmqo7l79DP/JdSvPiDujjkaWwVbGza3XpNngJILT2Uq6j8z
/lu5fU+3HC54N3bIMyRCudyQSjDqz11yfTvrfXLhyNFEdoHhCAiRMrxpjT1f
meQ9HjSZCr042WZcgh9QaxjoYXzX+LEYyzWqeKh/WhqRNuYIxhflVHuQzmtk
meKpNtFQNdgjMVnfBNLvp3PfIR1OHa5VVWPIAIq9RyVea03wrUZczQvpzKUq
Gcd+sxiocJoLE+WN0O4UqBc8vwkDjD++pM8Vweyvtu3aYBy4HkwNN6G8MVfO
NrX+phzMU38rJX6sg+3lWJM05E88TnKx5X0VJPyzN3sFJWdRfJpwr088P1UF
Rv8sAYtjF8bBnuoj+u9HeTVA0Gpi/OUy0LMisKdD8Wk7IyGwTFcLYhITEqJr
RcBpR8h2FK1HwxfxRj9Dy0Evzv9w75d8kL6pV9uH9FTqTqH9fKcU3kYcGAwY
Z8J+cjJxKtLTNZ2UZ1KvCGR7ufeD5JKAhcGiYR3lh2i8uKc36i9vnyTOFFAO
AyZT+SgbpKfN1ViwDYmHWYLeh5f6fGGFZ7M9GulJlctRfOhrGLAb0VATajsC
Q5I7CXafhUVNmMNJJgRyWwjSn11ogKsFkpIXUPzQ7vdQ/6edCGLDEa6Tng1w
mtL12k20ft3IGaiy53KgYM9ySNsLD6cnus/4I/+KcHqJ1bl8qDRgpqURwUFg
XAwuG32PzIIGXwxrMQwsck65rddBy6zWmTNIt/l4+slYXBkMZZG87+qsgYgy
60nsHCHIpKteaS8FrWua6YrPqsBRKMleHOnWY/ByEfejDJ79s208V+55oPiU
aSJiTpeogJEXN1143hfDE3oVXAvKA+fVu9LbfhbA1oG9SjhzHqzk+ubLY/vS
JEN020b5QOVe+UrnbDpkOtSeHEVz0LDuccm8qWzQUiuEnrAE2Ls2QYRxMq8o
O8RzuaIBl62PcyQMhNbz+KkxpOfm1ciVzwahUD67W/jjmgf0bJ0KuYv1pc0b
x0mc/aD/1xPFS4R2UK1WIlWF/Pu6ZrQJ2wFwVcmQvgePh3hunjcYdy0jdEqp
cjIW3PlYrJ8r4qE2/9hwFXYO6l3lB4nCqJ9wMdh81o2DK2IZEx7Yvn1L8N2T
zllQcptuvxzN3WLiWzgyFG9bI4QlxuGoP5FQ471fXgeqPRfsxpA/6hNtmyhX
MZwp+u7LlVYLNHMctfrIb3GNQ2CGD+lDKxfzgKwCPpg3cAiiODz27ltti0wh
XFf581Pjawk0+PJMbKP82VlzEv+IrOj/7aMygjZ7jMtqrWJ9RZYO6/9sbtjz
Pgak29lg61kdpVSIjuOhSCBLAt8XRpuKKK8OO+usVKcmAvv5Ty+Oi0UD1cZR
owoUt+zU3JQvnvrBjxEKa6Mmd1jeovWIQ7rZxKzpsf3whJ7g00TuTQ7w7pEn
z2OMy40KiHpt6wgZtzq0916YAv6O3a1l5L9pIlpsF+cNAqSxppq3cTAfLPvl
DYqfPyYieumZ4aB2ufe6sBkOsoMVnl5C/tWePjzj3WQ4J4Fj2IxD/RGNa3UJ
yocNNGVJVvzJ4Kpd8nWTshYYS8PtOFC9Tn2sWSowkwHym9t7rrvVcM9Bk4AN
+Vd96bR/eeSBolvih+blKjjhtMnbiOb33jBCf23+NFjala67T1cEhrtOP0zR
+k0+Yk7iwpMBn0Qc+75eKQACw4Qf7CgO485sCD4ezIAENkuzrnu5UJOqdU8P
1amnMvTGnC+joFprgz4rLw7qvb+NnkZxyNblw1afHAkX/9mPdM3+gdi+0Hxh
hmJbCLwLtYh8PxUIkS+t7c8gfbgOcxx1+GUHzsbr6ZeIbMGlMXgZ69vNN6oc
e3psYMv+SrwntxmIixI9/YD8gSzlK4UPTOC+zq+XquR6wFBy3g6bx8lmeTPn
hxzApOVRX8znShihelXbjOLhwz6fxJ0gf5CYaT1ualEDNxI1HmLnzdbqmlc3
KMRC/bf4XzMLtRC5b1J1Cek2ueIsu2AVAWru64uNESXA8fZivwHSh2uth04n
Mh4i2DiuZbcjP/VDgma0fmf5FEO2epJhy/RLbvThEuDL49pJQP6I7JLnBbci
4Y2X6J2At+mgsnPgVIri7Zmm3IyufwzYtlgHiMilgYu6C88g8mvXaxBceRwD
kwezdjlZSVA2XkhtheIwE/JU+uu8gItet2l4OADs77cJO6Hf62NHtijg4gXS
cqcfNd7wg6miX9KRyG9yPW+S4JgrmP2zPQ/nkzowPrx8aUFGRB+y/lndg4SF
PeQ/6rJHavFVF7jH5i8pL2jBRf5Pf+fxTbtTrvGLqtC8K2IlNaQAc4onO7E5
qFEtG7KpjMGi7YjCwWYezAT/8vVB60tj/8qZMitHaNExjiIXLQLCK99LA1Cc
5IbERjKVBkDzy0dDb5eL4ZiSrzHGNT16rNymdMQTLDZUdmLjMsBpwTPxOPq9
jp3MhJW/A+DsvD4F4+Us2BEs3YxE+oRK0Ce7DITC4LQGTa5CJpgSKm+FIf/h
649iP866g4MAzlq8ORJsVKKv0GFz5TlJfWk6H/Ds7ZW5ThsJVxsrTx3H7uO3
6/sObXkDzentwd6qEGjJABsZ5Jejto/fSDWHVyFfyZsoHEBEZ4f7DXb/unys
csvCAgRo/9P+oGEHKRnTQti+UOaG7HsReRPovNjSRLhkCvRk0ibYc7Lkw8ec
9ANkQF6WOJFeTA6i9J4NYvsYiakKUx1EMhD7z1K/PviG+WWyqN1H8RJA+zac
pE1dFH5UG6Vg8yB9ObG9mpwKdFQaFxo4JoFxw/1YPbSOLhV8rCk4ZAzLCiPz
TIGpELtI5TKOdOsScKB4Q+MAt9u3aAxPpcHiA/HTpci/KphoGqBrBcscn0XU
IQ7kzqsobWDrdC1p6KutA+hsJFg8CIkFOw1jub/PzzLdp1cbcwaaxzS3f7FH
QZ0u2Rlsndb9iWx8G2EBFTm9sdkmfhD040Iutm9Ws0hbkqRhBWtnjRhz+L2g
ndU6vRt73uekpayorAWYa/T2sbs5w6aCA98s8ksasyxH3NaEt0IVd89GmKC5
+elfPmSvRYU9wlgdLlnck4v2NYCXuoYaWBwSXkuQ4qlVgrZzliZ5hGpgdVfB
CYvDXzZT+J7666DyxPjPl1BxWNWnrcJ0u04tMDRxgRcCGxKZgp/zg8uk2Rjm
ryZ4XQAy7ID7Z2ctvLcw/9viPIWd//q6JlNdBD8NN3fFaqZ+B03Ubzz3b7Q7
XduFl3mskhP1uOtIqvSn1f5NENa+45oS39il45e+s7IX0TWYF76InSffTcqc
Sf4lv2sZHyiUTl7cVUEYuEqB+qXOm87z/TX5cECQoHAFFwq1GzIOGFdAstrP
KPYRDwfUvF/9XKOhglRjA+MKkjpUjwglFUB+zZrmsYN4mGFbldVE64hwXZbY
uAIH+ISsbqeSDKg1G1zA7iOMHWppok9sgfqa+/OjLFFAJWl42QTN9RRvfnjJ
3W0GC8uuaeHDmfDWgzQK4wquF7zRTnnbAvox6aQ5LSFA9jhbsgr1/6Qz8tm3
GJtgzqb8PvNRf5jwxVGfR/18E9thAQ/HFpAlVDw04psCZYa8wxhX8Gwzi1oO
fZ7qmUjKlkk8nN3W5cX2B3BWCevV6Q2QTMP06tm6J9wPiObEuIIbd50KXEIa
4LtXcwV/bRSI8XRxY1zBysJOSuUiHrKan1KVSLmB1G3mPOxcxw9LatUR63hw
HHe/euOiC9jubzHRIL8AjQP9eBoeRF15PbVbwmBguZzxPvLrmH479DoPDw9d
f9Gd0g0BpwZOkYfIT168+yfXGgdrRZznL+Y4QNDOwVYlqrMa87p58o44eGP5
VO7q+wCQZsLVaCH/q1X1WJMXtZA1b6/Ot2UNC9kGtsyoD/lNw3z9uEIZLFO+
MwzLMwZfdnfPTpTnyVRGb9yWrgOCs0nJv196Q99gm54YqiMrHH4qlDHl8LOE
2T7uhRNo2KacqN1F/bm2uk7cYB4o6yVLb4xowWZ/HkkKyp/cF74bjJMUgMc7
N3/BH5YgVEk5jnEF5uPWrl6ob2m8uvqOBncXGLgIuzCugIDwVT1+OA2Mj5OX
3n1uANsirczJyH8zP2pxfzkG9j/U6PP55sGf7LfZY+h79j7O1Peb5AK5lpjP
qaUiWNd9fk0DO189/twvGdsqKLWj3RWIqIRuxo5kT+ycKI8iJSt+PBzT3Zr8
0FwJMpk1ihhXcDJl4lqbdSPcLm2oMfxaBvqnZC75onirD/a451faCC9uXmO0
iiqCng8G0oTo8xqqyf2C5A3wfIrFm98sD9zxTE0YV3B/Qcy8WRgPDMR7dLId
mbBzamobm2tU+Hd/58ziIN9bSZNYKg0aPt0554ydbylZ0K3wCge92bm13d3J
kDHEpfAJ+XXPNS5H2aP5kfmW1RnJBDAMlj6CcQVzme2/zvPWAG+zWTMuJQoG
SV/8wLiC+Rau7io011TQpenvvg+EdP3v7Cyovu8t1DaeAXRdzF4wfFtxh0OK
Ykeb0HVJ284ZKOFMAR2l8dn74o+A2W1FDeMKXgpfyVi0SIdYsZ//PS9pguzp
lhWMK5ALEBIZaS0EAzG/y+TVjaCkdhmHcQXqXDt7dlJVoPBDYZ53tAGC57ic
MK7AXs2On7ajDgpzGTuF0DyowHpKcBf5vye2GWqP1UPEr8RH8fG14E59rToI
fQ/7N/PSorV6YL/3alnxcznQZErbW6B16tldVDfpXQ+GNwvF+l8WQ6PIy2KM
K+if/emllFgPndJ9X0iEC4G0I7VrBeUZ3wjhnEON9XDQvrPhwJMPlFcfPOtC
er6bOdq57FYPypusRm73c+DZIw1XWdSf18t3SFz1qAXbDIpk3aU0aON+TH0S
9ZNuPm6EZNYVUCo70fFuJwHuHvUYwLiCG/NyL148KYQMIl2pvs5wOE9TPY1x
BY0NI/U9xzKBjeHmudYAPyhXuDqEcQWSo63pq2wJMP2m1U2i1xEC14auYVwB
X8fxKwbjiUB2Ob0nnvwxJOwlsl+e2YTY20Sj3Tk5cJ9l8djT/maYJ1rwxM53
Ikg4Uy1fWAybC2rGtPhGoCNuYLyM8t6o3QFzu1o5zLSIRlPu4eAze3ae1dIm
tHqVvvvZVAmcuYkdvq51kF3wYBPjCnrwVwjVlarh2deqpJnQKqDQ1CbCuALi
N0mEXI9rgPOak75nWTlsrUkyf0Z61lTKtLXO10KFRIvjvFwpvO6xf5aH9Az+
SNCXxVgH7bLrTJvLRRB7Mj7vK+rnZ7iVn3Z01MDMnac6VpP5qJ5zCmFcQadZ
51enwgrA6Z1p+30tC5auapZiXMHcTdKXus5obpKSzTwoSQLZxPWHGA9jL1xL
/3Y6B4T0pGiAIhI0jC62YlxBtQjbkQc5SVBRlDo4+tMPgnnnKjCuIOF18roY
USSEh3RJb/7nCJbwJB3jCtYk+12FXkWA0PVSi0y0vluzvVVjkA4/KYpdm52S
gZDSTD3xWQO0TlBb8K9uwgRxUf1N4VygJGHx2nDGQzaRTT/GFYySPwut0CqE
yzu0omqb9WC74dCNcQWsb7zWHoaWgFXS1NWxpDroema0/Ar5z6/u16wDui6n
Z+M0GmrAvnVR4Ba2rj+q63xQqoQBmjvTbJ5VIPLkoQjGaUyYPQwPo6iCU7Pj
JL+qyuF7v9wxjCsQfz25pBxaCT1uD/F76iUg4XOFCeMKpmzfqVw8KIMHbXNZ
H9gLIC7N7x4d0rNljevqclUR/GGukijwyoRnQ2ns91E+dx95rN/zLBc4wulI
tAUS4ajcr0fZKH9+nbSYdn+VDJLxGnzyzGEQeqHyTDzGccl6qEU4RIGhWOAJ
3SRvcCm0+YlxBSRzzTa5FwJAgeKTt82GHWzxn1nGuIJiwjwJc5VgMGkzFFWp
wsPuqocB9l7LGMPXN7/cjoeBlLPu35Xw8OF9Q74X8tc1fh54l5oOCWneTxsG
0Nzd734cez9Lx3C9oLx1Hhw65h2ZQo4DhiMrU9h7IZuP4Pu0PApBU6r37hnm
euhgUk3BIf8Kp0iA8pdiGE8Y0CwmqQPrtvfnTFAc5ifInBdlK4Vvp7d2ko5W
Q47TkgHGFfh+zc8e6S+BPYv5XF2Oclj2k7mDcQUNljbb+lLFYNkpOyfVWwRJ
ea28176iOMQN2bsIFsCLY8Z6Eeu5UPrc/OIU0vPUTjFTc08WNJk13luiS4WG
qyHjGFdA36G7Y0WRDAQGhPe522LAziesC+MKwqfrPus1RMLUdcMSEu8AyBhm
KMK4guYrZY0Jcf5wY+5GXgiDC6gml2piXAE1LTmTbrcz0DJpr6cmm8P1iK1v
GFdQ9EbUnMAjANSbySxeteAhJthuEHt+PFun8e6d2mjIpP8UFqGBh5kDXZY2
5F/4wTf8dSIZ1lPTLts/xUG6yRacRfoEWA11OkVnAlX4r9qAgXpYIRFfEEPx
pl1BwEg1mAtGj+puObnVga0c00OMK1BXu2AlLJcP73lIbJZbq+Eoy+GHGFeQ
LUCxmK2fD4eqcmYCCspB8cg7BgIUh4oi+HZusTwgLWHSNzxVDDfP/jLZQH3j
4+SXNhS1WbBq/5Jf2z4PaLOaP2JcwbEvMsfP30kFQeMyl6zPqTD0zeR0McYR
if9Me54RD4vrfDRmaXHgLV2fgnEFJxj7XH5nhoEcjxejM20w+Hxe9cK4grv3
nSem6HzBiTJBQ0vXDe68bAvAuALpGJ6tMGFH4OojL75kbQ1r+DMyGFdg+cUx
yPiiGdRZ5Jwp60Bz5POFzxhXUEISGkc76gnHg8c5VRzq4WrXw16MK2AS6Kns
hxDIW7nzsYmuHvzd5HQwroBGal+CnD8OGmtX8HjROija+mnkherIPN8tj3Ov
EmHAKISwdbQaaFUz02JRvWYaZZMJO5ECmr0jEuSJFVBxWkHkGKovHoV8nQHH
U+Gk7K0k5fUSqIzquI/dDzrdPVOlTZsCZDy5G/+9KIAOUh6+eKSbltoOTSg+
EUrP2w1XBmVDzAVfDoyT5ySlz8lKiIPogS3rE2h9H8I/oMDmUIFDuCsjVeFA
r0q6bqEeAy/jN85jXIFmo5nMicYAmKiQVyaSCYI2n92/XIHPC9xh67PusGk6
JTHZ6AaH7fpNsfkohWP9XGqGLTyqF73FFmEFesqvArH58dLl6V2GACMw0FMR
CXIwAF2tVwPYPsapuZmTzq3qMMd7V6YxThkaTNxOYvNOEcG9+5er7ODg3SOi
zMAy+Gmm5hqO1tezd8MERRMesHzxQZkcTRmkzqx9xbiCYVap8/wugXAkTCcp
71EJiN0a6OzG3usncfWA+UYoaOLXi88TF0Ejpet1flSX3x4347t+Phy0aV+7
V9zOB81CgbcYV6DxPD5myygcTnXdPSxVlAVrs9JKnKheCxZVNEwYhgKH58+c
96kp4GX28gXGFfhSP443YAyCQjKmE1do4qEoeD0A4wqi4pwSX4AfEEtQpe/z
h4GLtJkXxhUYjnKqWIm7Qd/UosyJq35QdTVgAuMK5h+O6qpfsAeqiakB/Z9O
EGjNfh7jCiI6RVVTxU3BfY4ug63eHA4C8jsxruDF1SDb1ds6QH6Tld2zVgf2
TM2Dsfnx6OPMqbCrSvCZ2LbixLoCaE6rXsHm7nRL/bI/b6WA7LWKakm/BFQt
tzlh82C+gNR4WLsBMH4bjlwgzYSXAYeomdHvUtGfOOY+YwFKkmVWpyszQGmI
Xvwq8nPmRgqf73UAPVHBrY2gNNg8/7Ie4wpUvLbnqaldQLxOnPehbTKk/7wg
gHEFZTyCzCbarrBbxfw9miIBBp7Fnce4ggpZfDYNoStcjVOnmqOIhpkbLGsY
V2B0KJBRL9UJ4glWae3EQ+AQEfPf++My3/wpLwvZw23fr8F/VP3gaFDjK4wr
cPq2d3P4pyV8u3erj9HYBSS1y+QxruBO/kwnY6QxGKSajoVS2AB/wPQrjCsg
Jf08sLKnA+PVNB4pxkZwK3xpCZvHBb9cCg4mUQEJCrL0eGJ16F/4xILF4WzL
uPl2tjRY17IaSXPchp06hr9cAetrxuB7HwSA2ElR8YS9EJg1zT3+O49/Ns2z
eX4JzorZvHtQdhE+tjD85QrCf4y4nvp+F5j5fL4ZGSUAVVUQF8YV2Evemdx6
rQWxJIK2fMHxYBtbmo5xBVJG1WPzZMZgW2lq1cMdB578CsoYV5D7iFfx5bAp
UBi8JLORiYIXP7v+cgUj565kB9wxB7Yaxv+mOkPBIKlzHNPtj87rTwe7ZhBl
YC/KcygQYONEL8YVdBHY9XeqPwQbJ6rDV5a8oKl4aBDjCpg8KKMSHj8A/7oa
gQdEzuAScdYd259Ml+ViGgjXBSVT7S3CCGv4MI5XwrgC6aT7/VJP7kFLBFOo
uaYRbO7cEMK4gk23E0VMpPKwkLy0GUquCQomNgKYnlF+g/r330mC3M9nn+UY
5MBaWosS04cfX1775TYfrAiesTe9LQoLPjJ/uYIHDR5C3obs4KrTOhb09QpQ
Pr70lyugirmuKLF2CuIXD7VIfDoDU4F+f7kCts6Po09YnnT9z15s7qdv8EL9
vNhSr55WY5f4wo/9sSchXTOkIZHfMd47ybDumGM+nBbOxNU6hAPN2WvNGFcw
PXpD83cgDuJ7nKg6IR3cdI7JUqD6GEbmGVmg1QIL5xY+pZxLBMKZ16IYV5AO
tlb26y0QPfckdm0gDPrdf8eFov5cRUWlVI+vCQYpHx897BwDr60obUWW0Rya
/GCPyLUBfPorBqltg6C15nosxhVcH9kWujKOh5cJJN2qD70g5OGTMCGMfyaP
HQ4vR/1TrqVOTXsQtNRz6zxA/o/9ex9HE3CgZcKWOMrmBSPmGh4YV/BU4VLU
veN10N02p0dw1h4iXAIWMK7A3iuhLSa4HMb3+fXcOx1Bcvx9dAuqIwa7FMld
EfmAT7x1RZbUGP44nT3FheqFb2VFR+KFVGBhmZVRElQBV56JCIwrsF9UN+SI
QvXxPA07e3t6VxDJ7JYh8jO4W/7xeJfZ9T8b8KX10CeUb/sbvvHVOxRASOiH
Md/URGhdYTp7FXueq1c+c2a5Hn6z7z8j+43ydkhbH3Z/UPfy8AwDYRNcv0GW
RorPh50rNELt2HO+Fe78u4ItYDIxtSWtkgZbtHNXt5DO8+5l4fspDSBe4rJC
JpANncY9TzGuQPzz6f8ELjZAd1bgwIprEnzgGyvHuIKmn8lTnxzwMCp/18cl
PQqqxRN+ByM9syxI/6xt4qBG49pqq0gSvG60fb+N9VFa/nS0Q/VQeDP3KC3G
FfTtlGBcgY+vIEntbi1UtQfpZPH4Q0Uu9a12pLNA8477PdtSmP1RRfRmJwDe
W5EtY1zBa9cpq2b6fNi6TM78hcwRWnXLpjGugNZ25/SkUBpUyYtRviMxBmMi
v2iMK3go23uo9kwaRCs7nnfMq4cMcv8/GFdATHt+gjMtF1ZwH4xOqlaAaMyw
vDTqr9imvEOLj1T9vyXcHbxmh/7/hzt/ZhYb6v7fnm+rsce4Ap0IAvWRWjw8
XCFu/CBfCZ6l9Pcokc7P3n4q9TNsBCkWjaPSIsXwU/nsCVXkHzCMYk0QwwEP
SWg/+XgR5ORlp2FcQcfbp+b2tTigeZDi/Nw/D9ZYXNkxriCUQamzPRkHnHNR
Ks1j6XCNXYOwD/0/o9+0Wpwy6+Ex3VTN+tFsuMEXdwjjCqgu2jAk6NbBTyJT
p0mRZCDeyH+KcQWKLn/me1WqoZ+JPFFzLxo6jmS3YlxBlGRcWvHvQviQYeWg
ezIcVt5ljGFcgWKu3Mea2mw4WSb4xmDFC34umxhjXIEk5YGUu1gyjDy4zKbh
bgeK4dyHL6O8yv5yLfo2WTIcEeLnZk5uAYspBk5zFFeKqjYMkXfzoY3ab5yE
uAnkjt6/vIl06PG20+dEc3Sc2frJ3okGeGLi8AbjCloDTelvbFeA0Qj/ulU7
DnaJ9TuKFlEf63WMgEaxDij/WV/ifks88pM+ts8QqqqH2NyfbE8dKkDtdQy/
z8omxK1dFGE5XAcrQqpFUgJoHpGizziM5scXjpd/+c7UQdBynOIf/mKwWDI5
jXEFMxVxIcPyaP7kU7zgXpoPpFtTbKYoX6Wyi1oXn66F92ZpJ23U80Fc140H
4wq0VnWrO2Kq4BmJy4EHeQYMv1ogTEP9Z+9qV0qyTjnknWhjrqFPBDrz2T8Y
V1C5qcrO5Z0LOnr2ahuDEUDcN9yIcQXti5cD8iZS4fBkHu+FBD/g/BP39711
jXTEJ8Kp4iHzxfF1hTFHsM10MsC4AqMk2w1Km2ho9zF2tqlvAod01+drSIew
yz8u/qbPAPBk9ry71gRUtfpbGFfwK63w9qB0MSQQt8dGljeCQfUjg5D5TfCO
dDxTNFcEKdymRhhXoPTC92/eqM/kd/nyphwYLNTyEz7WwTDO7gHGFXhdl+4a
fV/1/7bOweUktv92WuLTb1v6KqD/Z/e2p/PlsfOQJe51ulZUQ5Lz41PfL5fB
vh1t3UkUn3r5cb12p2rBU411I3mtCO4bjuiRo/XIaiXmExyKdPs1mW75JR/S
adml+pGev/r8SgzvlMK1V/5JJ4wzgYinOBHjCp5oTWoS6xUBz+nFJJxsEhzy
XNP6gPLDL++K/2JRfxlwS9xXUikMPE5/fopxBXzmjpo/UX9wN7jf0avXF4bY
BEcxruB6/ku3k1/DoIYsW+mKtiPMk9AQY1xB44uB39MyIUDw0nV35UIDyPTe
3mRG8ZPDfM+eTCcR6q5lmnR4NsDOLQpzjCtY7U+WtZ/Lgbvh/tpcXngw2ZtJ
w7gC6yfvfo+dywem475frUVw8LHCvSoLfU/Vyi3dNdZikI+/Gdy0XgdUCawG
p5FuB6qerJfwZZCu5PCfW1cNdJRbVpYhf2zN4SNnOkph9bc7d/qzKjjc9/0w
xhUI18hzvfpRBkL/LNGdEXqMK4ALvPUpEhUQb0E6wPm+GL7RvW/5yxVYBn2j
+FkAG89mibfP58G3Vlr1u6j/FxDsktA0yof4EwEBzkzpIH7dLRXjClos05el
J7Ph/dGh6c+hCfDk0XkXjCsQ+tO9foIrGpzFHt+5QBgI7F3lyxhX4HKa4+ia
QSg8NNmVp+TxALlrfH+5ApaO9soeZz94nZf/4TOhHbDIE4pgXAH8yBy4gPL7
nfFfuToNeDh2bddcC+PQeD8G+0zFQsv2b6LrSng0/1Y+qUT+2keHxu6KpMOM
huYPkWc4gLrPKe7I/5iujjbEOQvaMv7I7aG5uxbH84kU4wckVILKw/OBINHM
sri8Dp68/ogbRf4PUTFzJVzFUNcs/XMirRYErt5+eh/5eaRKbkfzFcDtb0L5
h8kqYMhKOBfjCtbrp7rtZApheoFAhfhrCTC4RAntoPxZKDjJuklaBMX/bHaY
mJ4Dmjef3CenfkqaDm3/bIk7GT8j0s2WfqnfURH1A08u2T4nTQLFehshJZRX
5y19it6lJALLMO2HzyLRYDmtHI9xBVt9pwylu/1AQlDJ5kKzO/goPnfEuIJv
l21c1A48oSns8pRaswMUMqpzYVzBYQWzRXJ7R2B7GykYOmYKZ/XvSWBcge9H
iWjZOG/ofk121Ok2DiJ3JasxruD15dz5nsxwiA7WpQ81w8ElMbejGFdg9KIr
KeRuMpq3z6ndj0f5gW49o3gdO4cW10fHnwwxBecE8ylrQfcl9zDGFZRkqNv8
ms4A/r4vZZq71fCJsIYL4wrelX+6MeGRB7FWy/2+y1VwbtLSE+MKjlYROtnw
pcER8jmK/JNFKD4qss3Q+v1z2eJpzLUMYPi016B+pQDUgiQDOVAcKldTnYga
yABSes8GA9VcUHgevY5xBQT/TY7Ij0fB8ln9HIa8OFiRd/iMcQXkuFvJv5Mi
geif/aq3m4RxBZdvbyyStoWAeP3Z6pqpQNgOfuyC3a+0ehXTJvPHDkzZRORt
SG3h6FjsLNa3W4XhmXgHbIDm+aY2P68ZfE+fb8O4gkWt8dLDpiZgp7S4Asf1
ABSPWmPzePsbHhzZkAOsdtI1521UQp3btH8Lioc69VNpTwP9wVvY3WjevAYW
xg4+Y1zBhrqnNI1CLHwbIxjRX6iFTGUpbk6k21Upm7gnlhHwu7hBZj68BEJe
fH1kiPTB75R4tkbEQ9bck2+v20rAmVcpF+MKmC1f3qbsSQYb74DvtQQloH5B
GZ+I/IdXz32IuhkJl/f5qZxX04F47mYrxhW0C3IrX/GLgegYOSdp2TSQeWXs
gHEFu2Fl22vNMfDfgFJ+Z2YSnGa9IYtxBfR5lnuS9V4Q70j8muZ5AGzIW17H
uAJH7sUnTS5eEMuiwPrjhh8s7pBIYlyBAH7+ODelKwj/sz7iJ2IwruC6hLqo
npQ+CP+ztakisxhX8M3ORml0TxdM9Aj5iN9oQeANixBsHg+RLHvz6J0qHE1K
JP40qQCLew7t2BykbUK6iKM0Bj5p3FuWzTyYO5LxFeMK6BoYDFotHeGHx3Y9
k0gRHFyjlgzEuAJ6zvPcJQFAyPXbbHqpGC5bCbBdRXEV6znsJHvYE74MmNe6
x2YA4+mmMWw/5+KTx66rvwKAiKChZ4UzCx7cGBONQvocf5mkrdcfCkFF3/YV
72YCgyLrrXDkv+424j426w5c/A/vHmqOhKd913gwrmBP6NnPbyd9QKznqfL0
iUgwWxljwriCNcuE2r4tbxC2nuNtrAoB0R9ktjJ/n1NQ7i3MMAdlwkbFYkoH
OJD2u4RxBWH7lZBmbQFDW+8eJmvZQaC6Mh+2LyRYwdsSo2gCGYzljt1vTGFs
3d0A4wr428fmBaNkICVyk+mUjBw4XuwawPYxitguFK9SykDpP0vAcOkvV5CV
qh70qFcC3ilONPA/FIU+4o/J2Dx4s4XlDqucCuSVnb3Y7JAEzjLKFRhXkGd4
IfDCIWPIMZVJ4gxIBSVeykKMK2D7xdPMQ+MAfsrezup0aSBU8lMR4wqKjzyR
9dO1AtHsFunTEAfjjTUaGFfgN336x4StA5CmTEh+CY6FzZanKhhXMKw5f0t0
zBkssvt4O9ijoO/4xDlsnVbsZCalRlmAncThsaSHfhCytpCM7Zu1GwfOuGlZ
AW8tN4ePgBdYFPHEY1zBzxEu61Z5C6C2sCaQ9HCGzTMzXBhX8KMx7qrAXU14
e4L66ZVYE6h2d7+N7WPEKAhRH7dQh/unXOLehhqArqTpPSwO+T6r7Qq1KoGv
mPq3+qNqcEYi0AGLw+pfnASdXdeB8Q1HjWWmOORZllRiuhXXWZg2XuUFii2S
Db85fjjufPEvV3CbkZrSU4cdbvyz2ylGf7mCC/Wplf6qj7vKmk7ojX6p7iLg
xGV2DqK+utDo1PRCQVfvbhWJ5M2qLos/8fhNVMeTp0ymZO4Xd+X0JL4fZQvv
OvzCQgBQPA+sT7y+HhbVNTTbPq/6NrErwftEYxnSP2SWrND7dT6EpX4ZF18P
hd6rvHuOaE6fOXDj0f+Jh/gGnsc7cdGQVB1Nx4r6k86NY2+EeAogm7tWQ6Q8
Ac49lZd2xc4Bfk5F9V8lDppTL3v8XsiAz78nB7H7C7Bdb+yX3gLSKx5++xxR
EE90k1MZzfUkYQ4DHurNIN4yFppGlAl6s9pfSFH/WbOnfqh7sQW212YpJ2pD
oOdV30In6v/dWB+YFdA1gc/l4z9ISP0huXBRihP18xnG/z3vs20B2oLAMgqP
FBD42Sueiz7vJ5n45xD6fLXGlKe+UTxUfOu3ubW8Cf5GRU8X0xtAdE3dkvGj
JwwKVpaKo37VxbTUfii4AYxc4Myr2ijQ9hxYmUB92h0WX7WRFTyQSdjultx2
Ax8n2ycY53mn9l1J3kc8lG/NjTtyusBydv0b7JxVuvHuw7GZeDD6qnXPvz0M
vv4h59RAfgXTVBXZQjyc5049oXQ/BLzZ9DgNsPssOkIFeGsczDPrR65mO0DW
wa0ejCswOyKnOuCIA/mSIhGe9wGguCYco4n8Ud1T4VFDtTA0/fLRyIY1vJuB
26yoDxGecRrtlkX99IS8eH62MdAVjv55gvL8D4u+UcYbdWDuwPeMecwbOrNV
ByVQHcm/rqRZFFEO2wFPhhqGnMC8oGqqfhf1A8OCcv39eeAcXhKk/1wLjFZ/
fMe4ApvCA/oOogJI+a3fofPdEkZN/P8sozh5OM2k8wD1LfMMWXtHcXfhzVTy
V4wrCEh53n9+KA10cXLqHMMGIJd7wg7jCsZMK+gY/osFlcochVLpPEhjb7NY
RN8TTft7PactF6YUlgh+RhXBaff8XWf0/+zX+g2yyVdBXkEBTa1pJTy5/dP8
MdKtrfzFZio/HiaPU7/3xlfC3SHPthU01wjijF58tWmE6otub7a2y8BsXKDc
A8VbXu/C3ZsFjUCrVhXVGloEeYsDAdi5dgEVRgnlJA1w/eliW/XDPAjTuf+p
8g2qmyq8luoieNBmzHrU0pkJ6YN/2F+hOOm6ynfFfAEHd1Yjv9TeTIPgAqoZ
G/T/fO35JUM3hwN7twBnF1RvzxxieL6G9Z+31C0xrsCi4az+GiRACdUhCowr
uP5dOtWFuwZ+ZCh5rCdGgXJAV+k2uo6RaldfRt0qBbOukWLVd4EQNNcVyobV
93iengfieXAv6myC/pI7GEol7WBcgaPOiEHtpRTgaoojcxJ7BFtbuX4YV/CO
W+xbm2M6JGhLSlU8bgLzO1LcZ1+j/J9FVfP8SSHYyn1gpWpvBPmDmWMKSAfi
8yHbfjJVcG/P8fL1qQb4VWCoewetI1mS8+9K2+qgb8+3PTUIB8bs9yv3kf/0
ZdWhX8/rIWmsruBDZC34DC4MxKPvact7fdl9tR52rxFGkn0oB3sGOlIntE5n
6jdfffSuhyf1ul40E8Xgu9UqhXEFZRUR/teS60ErJTn5rGghnBJj1l5AeSZj
cnZWu7keZGcWffP48qFTZ8AAu+4HhyNUC9zrwf922oaTfg4QqkgnyqD+XJWV
N37ZrRaW7GTN+RfTYOHP2SQ61E8ShClaMllUwPQVJdWurwnQR3k1qA71XU5U
ZNPCnYVwcjfPP7QtHJyLT6Vh76Nszf7sb3k0E85Q17k88PeD8f10tWVUx8Xa
P50cZUuA2MvkXJq9jhCb7MKHcQV2xGXinsOJcGlfZkOD6DGoBlwIFJ9BeaZc
w2UuJQdKNDUjcrubIaK2Bf8d6XaS9FcWeU4xsHivnvOsbgS9OPpPEijvqY4T
PE9VKgfLDSLKkW0UR9Mek+5Lm3COgT//WkMltIHiBSvnOtjnfFxOjOZu3zcc
p6iVq+FOxxc557AqKNJ3Gh5Fen59xJlG1lED62HuqUmV5SBF+2l9DekpKz8T
U7RUC8XeV+/UKZTCF82IwQzsvbfmcVxdp+uggDo9QuFNEXwg3rXbRP18xsST
te32GgjeYuZfnciHLlzibUDz49BiyGfW/AqQG8fuh2RBGsnbcyOoX20lP91e
7FAMooMn8oyLkuCF704BK4pb9Rejv60mcsDHbzRCmywSypuNmhNQ3NbwBTQ+
yE4CyQy37WM//eCcoeUcxhWYq7EuvSGOhJ46rVmJbTR3a1z3w7iCc+5y+IdT
EVBncfbokHkjHP3k3JqG1mnaUHQPh2MyUGq5Ftx50gD2JlES4kgfnuxLDYJC
ubAzekHpthMefNJCqHxQPje7db6sVLsQZHuj6jM262GS1C7iENKnZT3V/SPq
p9Nm+7gfptTBF9IPIxPIrxHfzZMhXQ7pRAfZCy01IHrfa1Mc6Rbqu0XIca8S
DB5aU8T7VEECS7BpFpbPefNbiSirQJQlUNGpphwqvUXisPmxZjLbsDmkEvr6
Usvc1EvgrMS5A4wr2LAqubK0Vwb3ux4X3WArgAvxBscYkJ6Vny2tbCqK4NlD
xVxL90xYJf9ubYDyuaR4CfXXrlwYXVh5RcOfCA4kcq05KH+GvNzz/z2dDBQ7
WTw958KgJX72EcYVFBuCNKNjFBTYnVbeS/IG7eSLXzGuIEpbLyuaLQAiD7Mp
c2zagXB+dxfGFXDRfbUIVQ+GC8V3l9Rq8cChG/wMex7Ei7j483fZeHgWYvxi
RRUP3s96L2I81Z89Po9LWelQ1nEloGsYB4vus+SqyG9PEvRp2DYPvrm+LLI7
hgMd/kP02Pt22XwqPpV6FYJPq/8THZZ66OzU18WeC1CJMpL4b7MYWow/Rf0m
rQNT9Wx5QxSHQQqCf2zZSqGE5HwPBUU1hA8LvrDE+DqP8/SVfSVQs3SSSIK9
HMJBeB97L9JkzPYNUSiGM+Zf6bmfFcGMCe0e79dNIP1xk5P9egHUZSjMhb7N
hROPfrrPID13fYYnHjzNAs3BRlp+2lTQFK6lqEN6Ztgd4RwjTwYOZRuj1y0x
sHv+E7s20rPbck/mZUMkOO31XTf0DoDds9F/zytYqPosPZPgD7/bdyxUzriA
oSChGMYV0DcQylAMOoNS9efaP1nmYFlDuoRxBTGnFcWjPZH+65a3j7fhwXCn
QALT2SQyX9+5PhoeO1ZW5WjhgcY4aq8R4xLXOftEp5LhR7/Eyl43DurKfW0Z
kT4/JBxKaWIygc2toOvGYD0wX/l9TBTFGzeEPPQbyAV16vpr1m518LVMNR3j
Cpg/7d4Wls2H8Ycb8oaPq8G1UkfdH+nWdhrnt6WXD61XcfQceeUwyjv0/giK
w4hzmwY3RPKgrjVWdZ22GHY88w5t7mxCj+Zoi0FlFiTGrLgKP8qD6ByxKey5
+0+svVMpt1LhYoJv6c+PqSDlzkZVgtb7Rt63rMfp8eA/vSSqlRoHuj6FSxhX
sHJLK98rKww0KutPzdEGw8+iCgeMK8heE1jJPO0LuzovfY4buMFJjlkTjCuQ
4mz5yAqO0Oq16yLtZA0s89Z/z80LZh8P4+U3g/eel+59e64PX3/krWBcgcg7
UZ/o557Q1vwxVgTVYZ8bbNx9aN09n/a7NS4eAlntBhSFJ+vhZ87jTkmkA4uG
p3gsbxyQ917yeyRSB1R8wuy+qI4U0zE+PzydCOpD12PGn1eDupB8YQKq1zpL
nfvvjqfAY+uORz9jK0CtZ1XoOKov9vX510OOpUJkTjKZ5rsSkDzQJGtF/Uxq
h8UhH+oUaG7jXHUbLoA7gY/ZEpFukuf/uyhfnwjHXKe1eP2z4dla113sXN/r
igTc0vFx0CtrznUdre+S3K4IbA4NtLv55VZVOEz9p61SpRYD3r2/eDGuYNfn
16BAUwCslB0zvHAnCNr8j+RiXAFX0Br7IRZ3OMM6QCfZ6gZXb7bLYfPRocOj
wR7FtvCSSv3RXKIVCBoet8fmxxeL3+laI41AoV/RIjbAAFqz7nVh+xjq4idK
LIbV4fb6Yr9utjJ8bPh6HJt3EoMtTz0rt4OMl2fs2PzK4NE7fZYo7FwCO0ub
1VEPoFR3GlqnLIMiY6PIPuQXNEiMjnIMhLdXZRZ9rUuArN+evBfVC/67FNFM
EArJJtm/rI8UAZ1CLpkAqsv24fNZN5jC4QNXgEngzXzguvWO9zFapwJ9fnK2
huGAZ2ZhFMzPgoDLokxcqF6b337EoGgQCgslcRVSKSngoXKa0x3pdpvicxA5
YxAciSDW7aCOBykD9uS/5xUkNWeWSvpBZw+XLINAGDwZWDbDuAK1t6cHjkm5
waktngWLa37waSy+EeMKMjOGHkyy2wOeUVKumcAZIs56kWJcwY6P+Kvft03B
wSTpg0+bOUiu0NdhXIEG/jk+TVMHlJ9UNWs90YG4344+2PzIMO32UfGOEqx7
hRK4HVKEE6T3OP+eV2BTaCK2LwVheoOLix8kINU5wBGbBy3Iiqe7Wg1gbmIl
tZQ4E/bEhsIwruA7ZSkrwbQFHPcLefalLAMKeO7gMK6AdpG7l6PHAe5oldNL
BabBJS1qYqwuyAiNulofd4Gh/adutjbJ0EQq9gDjCvZDTE87aLsCa8fGU1WM
K4h7ehHjClhGJ4ToiFzBpqy2YfxYNKx7c05hXAHRFbmJ0HQnaHvYjKpMCNAP
UrVi98eJjIqeyYvag1eANf+guh8c8Aq1YVyBG0luuh2hFThyPXqubuECEyXd
fBhXcPLIK3u+RGPQ8TUxtaO3AanP1IMYV3CxkohliUQXnJfNdepsjGDcaW36
73kFi/v792lVgLU06KsZnTpQP804h8Wh5IVvebh6aZB8ZkETLn4bvB8ZsmC6
qWUJ4A2IBKHqOX6/P0YIqoS4/3IFn4Ul1ch3L0GinsXHzpGLUCIy//f9YhPP
js8v798F55E4myqjBFCNHzmPcQXOaXoCn5a0gIUp0ak6OB7GXOPCMK5AsaYn
zuaoMezpdViFXouDdx/wAhhXYPCANePhiCmwyL4zbpeNgukkiVGMK3juewsv
e9ccIm4OGC89DQUqstEKTLeOZjKhowdmILXDQjB3JBBuMQfkYFxBpbjBwZbu
Q3ApXq5jfO8F9tIk5RhXsLfAwWT65AF0z2lV8B5zBoVXfYbY/uTXyBuvJlN1
ocNCj8E7zRpeG3cDxhWEhV8IsXhxDzxeOuTkGRuBj44gN8YV5BXfXo85Kw8W
8+NRlUyawMs5xIPpyTv4gkfquyTQyn48yX1dDuZPqVFg+mjtunFNGvJBcpfa
srGVKGx6RvzVU7CAZXAzkB2En83yX7lwFXzPvv2A+ecJw8XgJD1sD7eWsrIy
wf5zy79cwUWresJr+fVd/7MDwz/jKdG85jhzWMKVtbhL/GSC9SWPoC6NnDWF
DJQnE6S83okX5IP21XruK+Xh0KRAdMYX5QH+F1lRf9JwwCRlGkWklA4xlo0m
r7D3NV88Oldl0ALyN1ZTKJgTQTan210bff9Sj96q25sWaFwMuLrcFQaXcjmq
M7Bz2Irdll9cbQINAh4OU7sYcP9U+1BmGeUZW9W3H10aIKzynXzhoyAI3s7r
wbgCxuYPYaaTeNh4vUPZZOkFF17IOVxDf1fSh4+erAoPzJMRvVWdQWBwhIoJ
O8eJnLpm61QiDn6RkD/bZPUC2b2nUwKon5nsu3LlDWUdOI+e8t0+bQ9tDlv9
w2hOl++lp2cIKIdjw5LbNW2OUPVxRrMN1ZHXlnu2bWH5UF6k1OdDbAyt86J8
l1G9UD/yYjWAORUSJ6+pyQuqwLkq9naMK+Bi32EInLSFDY43UcNFDl1bAoHW
8xjnM5pRHiHr1vU/+4q4X7oJi//V0beHKAugXU157tWtJNgJnLO6i/LwzT9C
AzKv6iH9kCixLmMpdAye8GlE/fZZL71HKxRNwM5xqPAFPh9GJzL9C9E8SC80
OhbF1wLVBr8CYuTTYEd6suo30jnyxNv6tKQGSPNZHerly4aQzweWrKifF6S7
LFzG0QBS76NfnXdPgukg46XPqG8PaQs9EeyMB1Ev2p3e7Ci4/vaKpS/Ss/uz
IGvZfzhYqR+U5xNLgqcM4L+J/I0OYrcshuqBLtgwQt4hErS6JredUP/z4Pw4
v+12LWzX7qatcPuDy5XzyZ1IZ3xGq6aYVSlcDsv5rP41APjIv4ti5wN7fTkh
N0+XD7cGfHNESR3hUwPXrBY2d89I0z8QTIPTVuE7cSTGwGn3cQLjCsR5FLYp
rqSB4++QJ3WN9ZDIOP36JHb+5FxYRihpHoziGZkNT1RAWQ1blhbqr3otWv4o
LFVCzz9LYZc6W4u9f0qVyfp5dR3c+mdXBYVPcqD5/WTUxtuVejycV539HaVQ
CRmGdYMkSOd6nltUObqNUPU9/OWr68Vwfar2rBHyJ4gPEcmJ4YDlTtYXhfEi
KGpopzZFep7fLj68UYuDuIQLJwcD8oByzTZoCcXz+97PPkpoHUkNMt3hnUwH
StEnyhjPn/HoFjtk1YOTf1RbN0U2nJq9cBw7J/CQ0GVrS906qL/5/AajSDJc
vPuWB+NU1enXqKWVqqH9unOw1W40FIdp8deh37tMvnKf8WchHIosZxChCQfe
arJYVhRX8U8Ns19XZUOEsmfPiSUv8L5MdEIX1fHOUL60WtFk8EtR7T7tbgdm
AmdZMa7gxnd/mVskycBFMPjqY0oLpBH77xth74/Tbhw7UMiHqm/+H62ON0EC
R3vBOMZdaNjLybVXgnXcAkn7bAMI7b3basI+Tzyly/FfBRzteasv1YaD1rzx
G+WLm0C27V9tcrcOyP/ZFpIMmVbkZ/YwcxUurweDcY27z2wrYOSe+8WwlU34
gOOb1j5SB+/dJVbuC5VDX56l72+kZ3fjfxrPXqG5/eyp1UaBYuDt/niXB+l5
vqDk0heFevBd4q1zLM8HjYLvVti8039u2pHzdC1UfXLb/6mWD3MDXGsYVzC/
5HLEJroKugLOt26TZoBlbIp/Ouo/b1Ruxa1qlsO0dbpxCl0iRIqIOYah/lyY
mbAJ754L9PdjL53pj4CbySuNNihuY60yqXbGU+FtiycZf7wfsP4iX8W4AtK6
iYUsqngQiDWmxo85ggl+WhfjCuimLC2LzaLho4juXFZVExRzxY7vIB1eCnwg
C6fNACeahwt5b5rAndHONAzpTBo2pv5VohhKF5a+ixc1wneqQcK0+U0I0ItT
8pgrAhcSLfKfQTjQ23cLaEF5Q5FK0KZppRzcAkhEvT/UQbCcVGUm8nvSE5po
rVf9vx1qesGE7b9Rf1WW/8NYBcf/2bOJjUwy2P6qCa6uu6oaejNNS7uvlsGZ
m2d5aVB8knmOL7gz1EIG8TWx3vdFMOZglUGC1uPe79fCRcHlMMJdTkn8OR9s
hd6GDyI9u24Zd7jfLoWeCN+IFsNMoNMJd03/+x6T48tx2kUQRBLx6I5MEojK
d8h/Qvlh3XyT71dyCpg/0XDDK4TBkZDl07ZIT/+XwdQBqD+4IEzziajXFw71
Da9gXEH6CaaPi9thkB0qS9Cl4wgiDw8+YffBN3ofhCfKhUC+KG3sMksDeDB2
K5xb2wTXEnxPpE4iDC9flJPxaAD8lNTJO2j90hgcMg+dzYF00QXaAg88bOtp
JAQjf/ezhdd5zPnQ/sLJghKte+5uuv1U9D3w4OKDVPZiSMqNLttCOj/JPlJy
CtvHzvP+YddUBmRLOSMpz2qA+hfHJez5iHNeNxMrOkqB7MPTdf2eKuj+0rgm
inRj3seN6h6UwYV/tv1Pv5w7xr3Mxp4nk6iAt3n3QorWikFHQDf8McoDga7S
ggf7BZDH8Wvs6rk8KFUbc1RE/X9FHvdYnGH+//F01VFVdU8bREVSUpFWBAkR
EFB6EBQMkJKURqS7pLu7U7qbSzdKIwaoCKKUhCLSKCrit8+7/H5/zVqzWJd7
njt79sw+s58HGETkHqzQp8Mq0xb5GNrfSU6bHf/w6jHE793wXghOAHrZi9F8
KG47VxmiJXiiYZI7lU79aCAcbXX5gM0VLJTSvFw1DIXh48NRbpc9oIOq0gXD
83W2aWvWIz+4l8io/4TQHn3/TUZsrmD5bzWt6vcA0MsnLyVtrgd5N/wKbJ5/
7musru1ULBx5VaeeqFIP0F/cX4T8ZW5SdDJS6eB/XqeKdQDVF/tyfxyQf9du
2ve9axYob+I30KJ9prH767njKN7u95y92BuRB5/rGn6vltfClz5K+1Hkbyz3
PE3FWwSbHjEMIpk1kFt8ylEH+Wm3q58+uJwPNDLxkV6E5bAmdC5EFMXhJ55d
Eh25AlBMczUe2iwGxwOq/j2UPy8+3CU5SlgIl/7Z4jn8PmfUb+afPGUpcDwd
Sv/ZHf8MIQaEW3JbK4WWQirce9izRkCYBBzblxewuQKSzEr1gORE+PNj6cme
SDRcG/NaxOYKJPbOlxn2+YHWJesmlzZ3oKYw1sTmClwmI+Uf//WEJ3w1FPfa
HKF1UY0WmysQa89jFHVzgpxOr722dw+hypqTG5sr6D326/JkjDe4dd4UNZTD
AWnun1lsruBieHnYTGY4kB3TGwg3x4HoS6tGDox/Mv01b6FiMtxMPXajPwEH
D4KV2fNRPpTYNQmsuJwMtUx8X9jJasCl/N4j7H79dIKPy8LbDHjzReUwZLcK
krLmuDmQ36TlTvi8ey7sH+jMEc5WQg8puULzOqbD20rygj8NYkleVHlQFwLX
cQdXC7R+RRkZdWd5MyCtKuCvG08+TGTHsXChOPQcF625058Bf7KJ2SLv5oAk
95cQfbRPrZwky+d9FQULF5u9bXLioCtrlZoRxWFxzp32C0mRUPXPErEwVmJz
BbqGGr8T20OAa6eujn8iEEQyAqyw95X0y5ybtkcdYK2GhjOe0hZOLB0bwOr2
01X4EUFjNmD+GzoiRc3g27H3VdhcAS0FD3Gi/QOYihrnTmDWhXECLmOsH8f9
qJsKHHQEPJyvr+GXCqitXNVvR/EghSsYmvP3BxXwyHJ6WA3Ktak3AdPxNGAZ
FrodC9J3NrVnpmqAipNi+iLCbf8IU1uVWQS8diZSVw0tBi+dE8bGCB9bb9/0
8bB4oOCnIbdrLYYBP97HrWj90tBkr2s+SYbT39afrh0WgVCHPEUK8idaFgib
yURCcPRmvNx8OmTLhd8sRfFGTnwyvcg7BrZ8nm6yyKeB5vInvBHkJ35OppjR
GAOf/bfszmUkQdvsbjU2V9BeJsz3td4LukVX1bqeB8C2PicjNlfQKW9hoOXu
BVVi4hMO1/2gRqadG5srED94ddySyg2u/bM9g9Uu2FyBSbGH5BcVfTD9Z/Ec
TcewuQKn8BGPYUJd2F/sbNTb0AKLt+F+WD/u02/59NquKniRtBzuf1WE2wVf
WrA+CHfjyBgBmQkkGjs9vfYtF941vdn2xeZLieq+x5k7wdshPpW0q4Xw7tDj
YxCKk8LfxBWNBQGg//d5x+SHIrgSQnaTH8VVIfXC7SQ8TwigsQrQjc4A2c1n
cpToeaecosduHwTA49sVYZc4s+BrLMsnbK4gmrxvgas/FIpb0vWSbmXCW8s7
u9hcQdnLJ3av36P1aXKDqaM5Ekye9LBhcwX8olTVqad8YK6LYOc8TSSUNt/5
j6/gTU5Po++2N1wYYOleqQqBjYMjOthcgVDCNZLT+ebAX3cp/AiNIxzxKTmN
zRXo7lf1/XWyAK2GGqXbevbQRveCDTsX8n/Eg39G8wG8TDuxbLT2EGjOcKth
cwXztbR9Fbny0JJnLb6udxs4NPIGsHOMJMkYgTPn5CHln33jaLOL+Yl+ZZPw
fZYCNp8CrpFAcWhh+p2E9YPdn10HFm+rgAup4Ki5YxJwmrc3YXMFKzwUjvt/
jcHmZcilVb9UcG/Dn8HmCg4vMotrUzoCpzpf1TBNGoQ4mGRicwWaD3n3hPSs
YK5QzrAI4iDmSa0sNlfgRZFQk2rnCDpceXpNIbFwkaRSFpsr8PCtN9ccc4Gf
7COvP1+IAqN5FVJsnRYwOh/wJljAbkIAM4GFH+ybyrhg52Z1RB+Zw/St4FJ6
eFWNhBfEKnC5YnMFv66XE5xUswAVrh5qTz8X0CS8S4vNFaS8nvjroq0JDNH5
facyH4DqzYcS2DnGch2T7xMXdXj8g+opYaYB3B2LVsDi0MaiJVliXAmW7ANc
TjLcA6qRLFssDj9cORgufS8M/pTi1+Z7JCGUarwcw02j0j/S9cZl2Iq5I8m9
JwRaW9UvMb/8pkB6rjcHyPyzP9QF/psrCH7fFWHyOqBbQeHJkKuKV3dVytYN
F+Tvz0sf6mqQ7A5sj//xwFSrOzqvygX7v+fCXOpnQ/2BIIPhTV2lPOw7xGRj
OFy4m9dCrBAJOJ8kFiUPP/DX7B3HR/7DgscTH54VwFgrdx4fUSB05AteDEbr
wo1ELn/0Sj0Ml9prsDBGgmkre+BFlOcfcaSMZhbmw5xZ4t10gyRIeyGxvIXW
izP3le220jrYY15X3NLKAPeQByl92L252YRJNYoWoM22qO4sjYT+lwbyv95v
gGnax/aYiiZg6Oc8JhGTAVov6rpIUd+U7Mj0u8K2FTT1hD5r+IeCve6ZmvUJ
VNe5e3gpJjWBHD/+gbaHPwQv4AQHZlEcki6x6Y21QLapfwklVSpoBWTRq71D
n1/W0aaU1QQ+6vc4KJ/Eg4/hlbpuVA8HcjpfpilpAAsBMYKONU+QMZJ2YkD1
aqVbzVOaygb4Mbovcbs9Ch5fiVa1R3Waj7/qQUEo6meP99zAVbmBa/Cc0h9U
V1SKsuS259SDbBK3dspbFyDiVXLA+OKk34F1wr160H0u01wmHQZjZ4QNiTAd
N/MpmRalehD+2S+EIwmBEQnl7kvIX/fQL7bJGAd+sTqq3I8dYbWR79VTtM+W
5FgK0+ji4HwHQ1bNTAAUTg5FxSC/50DgsOTJWjhvJXUop2EDCXs0X19ifbG6
9lPfulI4y7aJ/+OnCWQp3L7tgPJ8x5GQC2HGteB+VchBg8MHKuhB7DfaZ99w
Nh9Kfi+DvD/sG0/OuwA5wYSwzt4GyD0vkJL/kwsHl9gVuem0of5UTLkHyp/l
1j+6RG7kw/3xohYqRStguXW8ruPXBiylM0SfNUsFedukoewCBdiexLebRuua
5en7uc7tNOj6IRK6PG8AXq1DwdHIv+izRkDqEwd5D2rKrG3z4LwxOSU/+pzP
qrejZe7kgPqJvIaSC4XgtLzGN47xPa4IP1nnK4fm2DPLvWpl4BY8fFfiK8rD
GzV3VyNxcJV7WLmyvxzEt8iLJFA8TAQ9vSpg2Ag+zDGNd1dLwUCpjrdkCq07
TpICdfYmKPSI2FQiK4KZb6vUGlgcnlHUqjVugP35o7OS+bmQuM00WIT6RMsH
gZuiIvWAX5NBr1aaCVyqQLeA4qTTq79UJgoHBa2vWbZep8LxgNrjgH5Hhh9D
31TScWAVUZvfEZQMwVIDheHIH6NZ+VPQsg4qrhGu9EACHNLqMrag78+vzBMg
7V0NNNSB6+Sfo0BeeoqoCJs/X7J486akBDxvuXpWXQ2CPQIjzvfodyQVmnuT
5JALfb/ZU9UueoBHmOzdTPS73KvqfXgVUmD7JJFckYId/NTWa8BHefIvfcvE
5J006L11qBJ0sxEcbC5pq6HnIowm4C5lL4Dbx8TMX+Q2gBkv6UQWwu1RllKf
y9sKmGrU+bKr1wCpmld15xFuM4Ffurrna8Hx6J7w6QwcLAhdYnND/bj563CO
eU7Ut5AQUyxT1UL77vVgTtQ/HiM4MRR2EwdUjeQ2zK7lUFXn8Ix+DvWDxMxd
sdF18JnLxsfsYxEYJ2U/F1vC+LJeJkuY1oHGpiOBOEEB5A+r/MX0QUJEueSO
WtXBcC11/uZqLkxz+2iHITzV7rp0fNeqA/quAIsVgWyYM//ikI7yzMzBZxOO
1BoQm+6Vk/+dBr9yA47soL4mT+pxqvzTcghmOaz9LZQI0/KD9rqo7iKr12Qp
IC+ExsHR7XSWCLi1bu5OgvLed8WvRqeUM2GuXe/XTokfDJx09XmF9nHLP/04
atYESAnSu/Cz1QleL3uwYHqpyhR07zL1k2BDp2akwrEVFjsu1j17i9YXY8jV
MMsc8FVRtqXkb4E5n/MZHigvGX2gfXD0cjGc41F553KlCap7PEsNEM7Xv0ns
bG2UgSietcpbm3qIlnj3axzlwyW9IwYCzJVwoOSaVNBZC4Wj2+7UCxuQ1bp4
aly7Cup/pc5dT66Er2eo77cjPKudRDI/qFdDespjQzmtMijnLrgRhc1d02py
upvUwFfCG5+HdopRv8VEronwXPrzPF1jrgYGs+UqdKsKocNfzcEC4w885rkV
P1wNF89SekfP5MFRhvsXeFH/qO+Tolq/WA43D9/1HnPLgmDCby7BqF4VN7r0
V2SwCDzyNdZO7SXB5awq1RkUtwlDJMfSJHJgcpyk/r1BJNwMFM10xuaUXqmJ
bjUlwVJPhtdLcn9430pHT4zwzKw7aeE/EAFrrc46+E+dIIDATVcI7VPu9qK4
Nr1IcDWLmYzYagS3laFEJhTPrLqST0/2JoN9gbCcnkgj7E63Ju4gf1hey4Gk
fw6ozfwNnu+qh4/s5biGT2hfw99beKFcALS/BGPm/9RBmuDPziVsruwZxU7n
nWIIu/7r2oBzLRAKNJ/HeAn2OF+Xk02UAoFN7JMvwtVg53v4hwLhBhaLfY+W
ymE98PZ7BdJK6BSkmdRHfvG6GzfTxytAtjam9YpLGay+ynLqRngqcuNxk8VU
wFBYNd413WK4/Cl/RQHhWX44ZhItUQYn7p5k1dHIhxMqQePYvQnd4sbwrb1C
gMjoFpsPmZCXVTNOh/Dcx7M7vkufC9u7Pc4v3BOhfdamzhXlT6tpsq8Of5Ph
ldC+qd/NMOidW08KQ/k2lIrZp00zCmKqo+sb3bwBb+TjAh7CU6Uzw3q51x90
uvQIk5LtgdKH/3MO8r/n4XhS/jEIXl6LUTM3qQcf9sZqjE84uNrU1mAzDoSC
ZfUIiephVgv35DLy13/9w8/KkA7S2p0TXG44uDh4CALIH3rjzVMh5lyoHP0g
d7GpDjLSdCcVkL+ZZ6/pFm8BXL0hsVg/WQsWIVTunsi/UDPB8L6uCGqqPsUO
V9bAmqrEW2y+ZbH8nYgpTQlYQqu+4EYl8IGVVjzaB/POJGyYf0LryIz166h0
GdzJ8nF5g9b7xM2jhpm+RXBPayneFb8Iqh01+DB984iukA4l73zwUkrmK+LP
hSnBhLoYhKfTN/6fbhcew84L3WvPTVNh5/AMcwTCs79JXS9SJBky5YUMjX/F
wCZjQrEidv93ZvOMVGYk0AQS3OaxCoDPm6qFWL16pRNXEyzvD5S5lNEj3S4A
dvvDqQjPIO1aZqIDZ/hkza2d124GfyyUq7Dz/OyYjuumkgFw3KjZyc+iHiQs
tzNPoeeNPrfWfE4nGhaeTl9oIamHqefGtM7Iz3Od/ahwbjIMfH1y4V4oDmSr
dGeqkd+oyv1LvXUmCDw/SyJSUgdB6otT0Sjeajh7ogSf50DRFDG+pEMtxIbW
SrGifYfovU/SgEkeyLvM07DOVMGqolW2MsJt1rpGEGLzIIdrfv71Uhnsv7gg
XIvikNUmpf69C9oXH9w+R2hUBJlE0TuPd9H3sbL4Ns70GAIa8QvD6nKBO7Us
+x6qAykHuiqoElJBaLSR+rpYGtB+jWILR+v9RMddqcGmeLjQOfDmZkMcrJAF
ncHO4X1+6+KNBoaBslvrbjxeMBDyaLn9xnhgvuAxlnr7QLQt2VGTRTdYySC9
mo/V8x7GlwSTHUFu2i1szccK+idaMmaw+ymXSMQkFk0Br3Cd3JJeDy7/JBLa
Q/4f1XlfT9N5gd8UTePFmDowqi6oCcbOaceWHFgfhUDCg9Ywyct18JbGuQ8P
4aBXyrAzph8HHAel7Hf0a6FToOwOP6qX5qYCCupPJQGpQebDUrZqUDAOJMHu
lbyOiPRoNU6B3WYHWoL1cmic/iBXv70BHMzaHHhWqdC9/bShUKYEciRGKkxR
PfOBMrnb3DIF1gJja2fpCtD+euuVOsLt8M3HGpa9RHByJBXp//oYnNkTTmyj
OLQ40xbZ1RwH52sLt/hIU+AYW538EYTbSBTNYnJ9OJxfvyJCZxQDTtY+dM4Y
z8PSe/KPkQEw4MLcvMcUBOuUga+vY/0FUYyXSewj8GLY69fmeQRncD+GGzHc
WiwcRg1twEHI43ugoyUkzo8nryB/pN8ZxefeRtC4dzH/b7cezFae68X6IDLh
zSvhpPdAzduI7lrOXSi4nhWI9R3zOzmFF77bg158VuzAt1JofODfeQWtL07S
2VNEcp5AsRnLwe5RCk5VPXFO2L2GV57NlQOBsI8/FqT7shjeufp89vyB8j+5
uWRAVih8r/odcVGrEIbP0skdIHzCzqTS9bqGw5aJ0+UToXmgqS6fgvGqCcQ4
Up8rD4fTpY5KagdZMCrgtUaF9mv9Uav7ZGGhkO4y1n28LwWY3rfx2SHcKNJI
mAgQLjyZNXwmZ+KB2veLgyvCbb315LQ7ix88OwMjGyfCYGNQLPkSei4CJ0ab
1iE3YLuhb/6tzxfScr7FPkb+p88uTlhn2YO2b9cdUV1nYGC0mXyD/Deam6tH
hE3hRcOL0qMxZmBgJ6iIvc/1JTa+j4vVgvNN34917GjBM7FzVzBd+8p1A8ax
KgVonHM4PB92B9L355yxvnt4RC51lUwapOW4uVdLxSHYujsW6wefv/8qMbZk
ABRMBBtC1zMhUfWUHQ02ZxJyU1HqlwX8kqAff76UAVQF1e+weQPtxvv+QdOO
UEzpQUNcmwYS2gSC2L6QQnHybQWDK4yNyMl9DEyGfbtcHyqEw6+coN16RTdg
XMievUiaAFpMWsrYXAHeweCNW9OuwO1r8zl6IQomZYe7ydH3+aKDG5pQdAbe
T7/o9XaDIZfEq80GO3/oFb+rMGEP5eS36Fd2fUGYg90Z05HUjCa3XzpjCawn
r8Q3l7qAucCfE9icVYeymzdjiTGoMka+tGq3AjPSv5H/8TzUNq2eNNOGHCqZ
dWs1I/Df3xvGzoVScTL+7AFK8MZgtfOkkxpME4dEY3EoW6c0xTtwDQYaVHni
qK5DB/sdBQy3h6S6K7+thSDl80vCB8+FIYL/6hDm97xzs5jGlgPGrtfG3XBj
hxD7zf/67sjGn7tHEhQA18a7o6WYALcMLgrXIhwipxi4nidpAYVcGfEry3hI
pP5w7QXyC0x76BW/MgYrfDJ7e7I46Pl80LeP/JdTgqdvOT2EnFH/9d1vkeA7
XX9GGJvn+fzq+4XnZnD+6MzlHrVQuPS0kd4O+a98skmM0TQDRfLSOw2hAfCD
rKMwDzsf2zf3o896AC+8pSQ+fvYEI9rMqiHkj319fCVmzxDM3166G8vsDGVz
00LYuZC3x+dwXkIdmDlOM6G3awkFlzXwtrHzCmNyF14zVaiymr3VS2UEqhIa
LNg5Bq3RkUPtiZtwjc9KL4ZDHVzKbIoxPH/9iZ5h8JACTS0FCwk/eTCumBXH
8Gmpn/UoPSYAjppublMkIpBr3DOM+bnvvSoRdmCD5LghxsI/XOCwGr6B+Q/L
P1F5ydDAzVXCIgc/OkgTJjvA/IWWcVb3liy6/99ytomSYHqa+s++uJtQ+sFi
7QK76W9H4M6g2ChFfoNvOy0NMQXgKvmV6WdLENyTSSPMQHW78feto4eDddB4
fO6VXlUqPDYpOH0M1QktWk/W9LqaoWXrXsrS9wRIfhvMKo/6lMRvtywUXVrh
XFHDb4aMcMiJe/a4e2IDrlZ0dTp3NwE9tcGSJUMs2h+EpItmUD+1V+caEN8A
ek+Elbm0guCHFdstRlQ3pqhJvil1q4fJL95T2b2e4KSzKXga7cvF+XHSLOr1
4J45dCDjFAST21xlWL1EaUxq/dAfBznXNI6sCnkBaZNpmwH6ng7bdl9SRWvB
Jqa4f/G+A8xJPVt0Rn39UN6rAQvUF+AqqR/MUztDT4aYvzHaR8RKBz7/6s+D
IPN3eEliJtDnPHudGO2zx7g/dFOKpkLVGWant5dUYD4Sz/0TWu9H26fkdZLC
gCWrdKOVPRnE6XTLy5C/vyZ+0rIxEfr+2cUnioffUf6MHB1nr8jJB3erepJj
+CkQKxKeXYPycNkTwg8FEXWguSvq8363GJiGX856LaK62n2w/JxbI2jMdUiP
J+UBY5NCsSLCLYLa4hpHTAtcahcg/fApDX50LE8+Q30Qk/TRb5vLDXAt8a3P
9aTH8Dr50+JVVLeX0/62iL3RAIN+47XFRkmw+ebi6yL0+QXdhTNHBOuh65QB
rSRDFCRdvD5xAeEpPVXw6wCHg4rnRq6DBEnwwFT+RhTyF5SbCWW11AH1aMbO
Y/9IYBfx6chE9U/Tzo3cVrpa+HSO3lL8gT+E0f0NwXSNrViTGgRHS6D7hqEA
sUwgqHuvFAyhfUqtJWJXWSkPnuDxiDqKOkFUpfJxMYRzzvFaFwPdNGAqcqJ7
TmQCL74QPsfu6ThFGD9+4pYC6pHZP36Q1UH09AOG1+j/Ll7NlZCzz4X7E+fC
aBnLoeRFWC8jqkt7aW9Utn8sg6f/rJe8XB0F+vuVlf3jfdm1/7Nxf758NUX9
oGC1GW9sRj2QTbJztdypgFGh9UWZD2g/Uqa71/66EUbfcZIK1heBUa84+dD7
Dci16wgnVMYBjzAuUH6yELRftF0XQnhaZZ0/+FiBgwj9+JgVq1yY/Zj2ehfF
s7YSOzO7Eg5w3x6ZvjRPB25uARYfhOepLAYXCq86IKrOjCRbzgLGfeV8rO+e
j3y3LaVTC6kpWiolt5Phpwf/BMZXUPfTwX4ttQriPR/xKinGAH1ZM6E5et60
p68d2O4UAv/ZazLJjuGwnx5/dB3F1Yyx8vIOXjbMuFTHnDjrDe206qFyKA5v
sZjqKykkw/O1w9Zpd3t4/l3fgAvlVRWaG/E0qD6fOv8uVvZhC9zXvxKP8WC0
MPvQizPkwWBDbGKJTiPonCjW+YDNCVjrvnNEeH1Lo1S7atoAh3J5V+QQPmbs
ZYOLyK+rWs5WuIUDuK3hNI1wFtf5xfjNs/Z/Noppq+478lPLLLXMHcfBEcbx
LPWtcnjsX8J5a24D+EJMebL6a+Dby29EaoelEMaCu2GzjPKt0sfPmi218M1G
xm35eBHMHnvEk4z6Sn3nQEJGojp4XBqiYGyWB8ZpU1N0CM+LAZGXCVhr4Jw+
biRPD9U5EvwerKhe3YHZuKmqSuhPiTf0upwBPOJqP5xQ/bm+uZ+fVFYGCuV0
oiUaiRDiIZsjiepzCcNUBtOFHOAjPbHwjj4SlCvFDJVQ3AaT0tId4KdBwtXK
Sv9yP1iTfXnKA8UtbX7V23PH40Hx0VRDeYcTHHGxedWPcE7JsZWQZoiB6esX
HpVJNkOwh7vuzY/YXDF1UlRaBrx+mdUhJtYMgom7oXYor3abDMiQDhaBQAjH
kht7E+T6vnkzObUBptbd10XXCuHyRmD1dB4OpHsqMi1QPx7Jcul3Enk59KqR
PxlF68Wl1nCAC/k1aMRPn9ur/J89s3/saw+KTx4Dw6XwwQq49M9OpmwrTiE8
qRKjsgRNq+DIJTP5x3sloDYlGuaL8GT6/DVS7lk1GNw8mXq7tRCsZ2O7HFC+
hcBbgxwdZfDmof3MF9p8cMsf6A5BeIro5v8+5l0C395+eONRlAlCioRPjBGe
3Q9Eab4UFUJd7ooQfkISTEV/N6tG9eq30IJbGk9SoP40jf4NtzBosn3l+ADh
GWdx8WhcXDw8jfir1v7MF9amhGWjEJ43r54oZ8OFwb3frvQUbE5QQfApTxnt
awE+vlscRCHgyKXrzsPQAPssr5lEUPz8Jvii1KSbCNruqk/bGhog567qcC3C
x7jg94U1+hyImX4yI9RTD8fnPENGkH+8kePHz9VceGa2vfyFDAfvnB4wMSN8
Ep68fJXysxDwy7LVHo/WAjWZuoYTdr4xleh7RKMUfoVq011RrIZz80pxemi9
X9Z/5He9qAQev380OFFQCbQL1TcwnkDmy98Hkz6VAss/a809ZJeN4nNTV1XD
/Ho51FvIj7mtF0Ft7dpaNcoDMRMpZldEC8Ce/dgIr3oukBNaS5OhvCo0M73z
LjkPrO7jsWeZpYOAa/RgIcoDTUN3TfZEsyGGX+eWbV8C4B2V6ydDcevMpuUV
wxANLiomPad/BIDPpwqpcaxuzz8rJSkRCjsfM06fxfeAlRPMT+8iPJuj5HU0
Gf0Aj/Bxq7KOHZylo++pweZIxZ4E1JYGgCcx79dI/XrwDFnR5UXPe/aNVlHL
/VgQztDhZ6KoB/J2H9I7yP96wIPOZCANKraVWQJdcOBxPDDvBva+u59PslQ2
CxR5j/I55deBgaR6AHZuFnrg8+E96q9VxKSk/vrWQo7Fiy0xhFsZrSBL6fdC
ULZlFPshjfLEq26Zd+jvEwgYvqir5cPLYr/8NYFyOBWy/YcAxaHCsUtqF0wK
oMVb6/0BRQkY/DbieI7y51PTqW1W6UJ48s/q7Ov2XdzZgKXKsbgi1XT4+s/G
bQUw/UH90YvFiev6kanAKNsdySaRBF2/hg7EUV4N5l6ru9mZCPF2RcGV9tHg
9akgJQ/jGc6Kmjzl4wdSoxc4nRTc4Sl/82EiVgcqbN2zd/eEHXwyhjN6jnCD
r7KrHfmPXBhfPNvpCEdNFR/h4T2EG8zl3lj9me2T3uqF8wbcaIf0kDQOfm7f
4NpAOAh5NYNtNOrjCFpDSJA/ukreOQj5t4Jd2nuYkwHnXkAVfR8HAi1qT7gQ
PviOR4sI7yfDQpyonqFgDaSROHr9Qf14/TfRSe3NDMgqCh3vPFINQSYi0tRo
H+/nHJ15mZALI1pRddQEVdD0IqM1HNPD5RNI1PdLgyXhGIbMe4WQgDfMIYDW
b1VRL1+1TwZkWJ35FW+SD2I5+Gb7yF9AsNJ+lTsTLL1uLVT25wCppPQMD6oz
FY+vH29ejYI652Ghipo4MJrucKNDcSjam0RHWhYJEv/so5Wflv7If4fzFrN5
QQhcjLvQQtUTCNzD2VqYrvrNqev5epb2wNktZFqJZwNdGu8IMNy+zT/I9uyx
hiOZI+ryJg/hBaedNFYPr374oZUmbwJPv7Vf9YjSAQ1TDXusHx+xbju/eMoJ
JkQf6ePdrYQgAxMmYxQP3Mx/NQXb/cGg75j3eHk1KN94uPMbxRXz4lbmUE4s
pOqvMppS1EKXZ07EHMKHssHuelt/BMq3VG+y3xTDsFlSMccP7F4nF/67p/FA
Uy3JfpagBK6QSc97ofUbfd/pzzRtCnzvK3hwWb0YHHKSuzF9k0yO291pvpEw
P1r2KJA1AzrVVTjTULw1LtnpOA3FAK9oUyx3aBpws7YqtSL/gGjHsuGPGHg2
Y9bbPJQE2oLf+DAerfvpdNnEOl5wfksQjyY5AEKy79m6oedlV/urdJkN+QMT
n0jR+MExD5356L8Yf8L7yc5IV2D4Z/dGClx6kN/Q9othSYQuaP2z41vd+dgc
NdvR22TL1jpw9cTu6Ft/TVi8y8iE9eN+wdrUnfYqcBdHtm4ddwfuUn6ixPpx
uW06Z35JE7AsxGVRceSBum58vBHKS31++lTXy53gz3a8Ak1IIVAxhUuoojjp
ec7AfLAZAAsv5d/yiRcDJcGc0RrCM9WQ0f3tJU/4s27awj+C4s6Z74AAPa/a
KQbqCzyBIEok1p3ingXJd3tY3BE+9X7xnmnHwqCBSPCZfGYm5HmrWbkgf97c
yEpTvTtAyEvvybRIUNj4q0CHzfMn2ym/+e0NcQWnK7mPRsI4LKpRIr9S3q6g
MVqP1SWm76z9QiDyxcjt28hPmGhMfX/ADFoPxb6yuTiATk0j8yLy53dkCZ5N
Nwc2Jf/umwV2IPBydmUZ+UtUhY9dNjSBZws41pG3psB0XqQG6ysDDltcH2be
ANovwycOGG6CHfP+Tww3i0eZFqdFboDxP8uyNsuM9X1uaqLE9rniMNlzSnY3
WwSahCz+ez/e/67SnZhbBdRuvZ18a58EZwtDfmNzBVR/eaW+HRiDU1Q+iWNO
KmSJ50qPItxWhsenKdkd4Tf1Q4Z4yTSIhrL2HOw+XciI/x1GK/hEzVv8hz0O
Yk2E2zbQ56j1KdO9VEb9ZNVlp3bDWLgk3DWLzf9rEC0+rClyAb7a3C22H5Hg
fxv4WND3GRuluF++YA5S4s7Ep3d9QY3kfAA2d90ec9w9It8SAn+4+Z/y8IRn
NLZt/dj6VVsl/OlkDo7Hi5ueP3GGgy77Nuy8V/U0z1nRNXWgevDoCr+yCZTl
Gt/BzjFaLE9oX2K8BxVxfddH4/XAZ0cUH4tDU/ErsdQ6iuD5Xpj1Q4gqCCwZ
jP13zqaQwPrGQBDmzD68obsrBrQfbndiuFU/aaUf4+cHQrlXKifCLoOPwIX3
mP/W0aVjFo5scPufFY24tIv501ynGD7gDXZ/JOvb23nX3K2S/SDKWgPhY/cn
98HFmu4oYQdJyset3YzeXlrZgxvwyWAlTTGvsXuEYcfU9EdEt+6vat1D1K/N
D8xeSPmT1z2Xn8/GQl/U/bGFYvUnyj8/ZdwuOtXkgc27V4+b6kLBWp/4DHZe
xyYDRU2r9YDW2BmBR9Hw1OJ8rQqqcyZ+0TwLTsqHv9GrAu2/41F/DEcxHYQx
5eni7nIc/Mp1+U1SkgGfJmwWzVHdMj575DZbYgtQ26a505+PAp3ix4SYDgJJ
9AkxY4Vm2O0Ml5Q5kgkn419cx3QQajqLy/AWW+CVM3f/UnMIMLm/YaxG/ULG
TPaz+jNNwFq6XplJ7A+zlhHlZ9FzXcBdO0Ln1AJMP9THBXxTwHBNjyYe/X3A
Db7rrejvvy4s3PR/EA9Cd9hfY3yGxIQP+DvSG+B4wzbPh8+eQJuidgzTQeg9
/PTONKQBOEey9m/XRMFMQLM2poPgKfQCpz1bDzV1svSNMo/gjhTr13PouRa6
qB+Kf6kH3HoMMSWXK1BLRRpTID/ZcaoG7fR6IJg6JijTGgZFj9q6sXsKicpR
HYl59VD1dif+/f0Q2CSctzNBfpe+1+f7rHHAHKbrCtmOsPRW6THGV/D9Q/i3
CCccTDf7EqquBIC18x96TAfhadVqWc5oDdj6yYpIbVhDUuJtwXNov/giGNb7
9E4phDouairnmMC0U717N8rzh50zr/Bka6Fx4yfFlXFveJjJ9A3TQUhrp5Qc
jSqDifEDX8tRZ3h2+hRd7R7yOyY6VA3lQo/Jrxvhz7VAJ/LAB+MrCGswyH9/
PB98txodBvYt4b2TgR7GV2AWdUDodzcVgj33Ku7UKUCEIPE3jK8gJv8oR+RI
GtD+IulkemYAiYUe9zG+AtfgXemu+RiocDWOSfZFdWa0iQGmg5CraDpSapoD
CWPXkj1nC+GqJXuLOvo+fw01uz7YVkK8Usa5oYgKKKuZSsT0rYJrPWmyhOrB
343JibWlAm7zpJR9RP314XLjVLJ1I7jf3Oa8sF0KeJPP2zAdBCGBdaK/xY3Q
nCok9T6yEAh+yuMdR3+/0nf3/AeiBjj5Kbpv52Eu4IIHO4sWUL59XLH8UbQe
NB20Pqd2ZsJXmsVgjIetvyJAWfw9DnaEdhNWrqXBQeLRQKw+36gZ9FuYxIGa
dL6CUW8ybATXjn9B/jNdTYtFDnVwa5XBnVM6AdS2pkdKvm7AFSXKsYcC1ZBV
f/z6fHIU7MUENG2h33Ht0uUaZ/kSYC5up5pfDoRv1gS02L3vnY+TirJSuXCG
5m16/pw7tA7seGN8BVRRf9p6uVJgrW2JWlnCDlRDJLwxvgKSZw4nbSzTIVk3
2OF6SROssQU63EP9YL3NSXyC9gLQdrhy1KCqEUSlMsofIRymh8x4PK9VAr9Z
xZDqywbIbag4jekgtO9+/DnVUQsyZFwVx4JxMOlxl/M78pNsW6V8f1kHhuX8
LStxNdDTJ3s5BH3Oz1K/l1LLdcDk6SLRtlYGrpmzLyzROnXJKDz13rsOhE4K
+k2NF0F/uWc0xldQ97WjqyWxDrgt7xIGoP6jQ4g8Zg7lmc1BJdbHjXWwlBET
RH45D17fp6Dpwu6D039TvOJeB2cT+HA/9bJhdIj38U1Uf6olBEduuNcAk9Z9
GebZNCBvcr+P6SAoOFM00VmVw5YYfxHvbgL8rvcsr0Z5z8s74CGuuwA0JN84
qneGw16wQto1lMcif+7Mu5BmQpZpSuKuvx8IFmqcxvgKjhkwHFqxJ8B+JQnf
RJ8T/HB9KoPxFSiPGO2+fJUI+AkfKNmJW2FdfjSB990GGPCdDlx8nA3lS5++
qA82A+H8za2VSewcwOdERX4RZA1p80fjGuHJI559XpT3ooqUiMnvlcHxKfGg
+B84oCPJumczuwHpz2JIUpsqwGqJdlnMrRYiK+gn8FD/SMncZOKkVAUHz8Lv
boZWAtOk6utXCM/84XOLh63V0BPJF85dVgZrnXeHvi5j92gU/Ls/1IAQV+/Z
zDsloO91SjAH4bmePCp/hKEWlBaHduzmC4G+RMt3C/VNWTWPWJs7q+GYeG+O
AaaDkHjmBqaDQMOdNd+fXw5cO1F3pPmzgKVc3WQU9TtyffssGs5FsMgo9/B3
URLYFm5LYfodsec05bjfZsPpYc5T/cSRUAJ5IhhfgdrSAl/W4ySomU79LnTg
B4aa9S8xvgKqW6MhMsci4QGzjvfxbSdgsBX7TwfBzIR4MOJdBKTQPJ3DR+u7
8I3Mfixap8Pkw6bazslQ0z+rS9XbAOQ0z4eEET5f+XdUDkRy4JpbpFG+Sz0Y
2+HHeKB8PvyMuuKlVgHcm1xd0N6og0UvoRxMB4FjM9boc2gx8Pw48oExuRYM
ecYW3yF/j9gz3j7pMtgbKE7VbqyGqfNvY2URbvwswbsTyhVw2EDxhcGrEiQj
FRMxXQnn9i++Z8gqwSdAVzS0qgy69KuYDVB8PvntcUE1tAJsXqj3YToI23SE
jBhfgere3SS/X6UQUoz/wYYjH6bD8JlOIzwzlg1HflYUAr83XZiDZyZ82mX+
g+kg9CnScBI/zYE+a9+6u8KJkDo0fAzjK3B7Gabg+S4ZkquFnkuyhoFb5Ng9
7F7qDAVj3yXHKNBc4nEiSPKGGp6hI38RzkTEPfhubAHwaeURo+Q3ewhfeDKB
8RWITf+8K6EaDPfzm2s/VNZD13b2IcY/IC1yxClZPh7clqUf+CnXw6mOMMD0
aBTv/wieS0sH1XMR4veGcdBln/QQ4xXkYPy8sWmdC82hJSdkSHDwYjr/ANP9
MfMoMiT0LIB8Lo2zLWfr4FQYycdaTC8pQuvv8noRhCjjs9KfqIWvOQPPjbH3
7IcZWy7sJRAC0VfWSKrgbciLJYyv4O+5Q8mkwWLwpU84xnmhDIzqEzMwHYSp
3fWbLdJFMHu9ICmvrxDkiF8RCWxvwGXl8uWkK/lwQ89q58hKDmyMZxJPIDzT
YpwvX+7Ngr0hW8Ey2lSoydg1rMHeV05Z+dmRJMNZi7r5J60xoFjw9xDTQVBj
JHy1Vh8JrKHM3b1eAXBxJLsS4yvIwksf5o33B659I3U5eleoGZdVxvgK+v/K
mX/vc4HufDcq3zRzyD6W/Q17j/a0lrQozyMAlndILiW21gNR4OCeEsKhI+41
68XaaMiJ6pAW1ayHS5NethhPS5Khx4WAN8mgRHN69u8THKT2zb5jxN5fzNvG
zEdnAq0AM+HMUB1UtZ77ifEVdC6pZp8fzgG7/Ae6iY9qwVUshQXjK0gSXPQ7
fjsPZsLJXXLbqkB263wHdr+ssqCTkFU/D4abFPin8srAU//RMqaD8H3/boi/
eC6oyPz5G3KqCAqoNxW+7W6AXWGLYHhVFlg06Sx42ueCuoNhfez+BoyuVflP
y6VCr7a5kdJaKnC86krCdBBsLDJSKDLi4dXy1AtcahwseK4PYnwFrG6jiqWZ
YbA/H8PGRRMMa1ucQRhfgehDmmYhOl84yWgtaq37CNj2WDz+00HIW3DrEHeC
4ROMEep21iD/EQ8wvoL31IrsXbxmcHhotpXapw+0/SqfMb4CUhx7kO8LTyje
kLh51rEO7l84w9+H1t0DegOuuyiqyAxsfwafqgOSad0hTAdhaFR3q0QwDnzc
wt5bitfCT/NUAm+0j0grJ2n6vEsEd7Vp2/UXVbAXVWgXh/br0pVtgmKqFDho
KvtKlVAO1s20fORofykw7lozPZkKgX9UOqVWUF/pbaSO8VeXFqk8Y6dOAdP9
k23ro/mwFjSIl4BwO5X8MdYJlwgf+KSLiQMfg5gKDw7TQVAocBt4Hh8Ho5a2
Cr8nML6KAw2Mr8DwF5UDaWU42KSrqnjciwFCmQkRjK+gFu8zF3tjAJzp0OQg
kQ+CUgLq/3QQtutqlT+xuMOhuOesWPMjSNmf1MPmjZ1XbzfQ5NhCc0dUP3uM
Fbil03thc+lZjepq4SHGEDdMkLXgbgC8OLc+7H7EVbWbU7+eqkNxhoMwWaoy
NNkIUmP9TrmXURt3hT1QP3UikwsohRqTzz4RaH0VLlsKUI97wIky3uw/FKXg
Pbex3Yf8JtdyNWlcAuH+x5MqBrbFkPqWt6IX7ReFPT4dA9KhkD8rIrd/tBCy
mycOMR2Ev43fa/qZw8Hy4ufXZTfyoHz1k18LWqeuRNNv4o3CIYtCTaQkPwuo
Bkw6MB0EpwPZmkGDUBh1vCjyNiUF5o8FEGN8BRU12uavzgSB7tR58QLKeJCJ
Xs3A+Aq2TrkuDYMfhL2MmZ0TCoNCh1pvjK8AX+lCuLPUI9g1KSNrueQHc7e4
nmF8BfuVilSE5x2gMQAvT+fQGQYmlU9jfAU+RKUPqq49BMOjKR05jeYw46ve
gr0fr3tGlLJ2Vwc84o78TmrWgXAxygDsfe6wneTPVnEloFrK+BOyqwhO5SM8
WD/Oc+Kc8ZHNa6BIxfNI5L0UmDVS/qeDUMfuNUfbbgCHOblnnAkz4cAkQA+b
H5DVbKhTmbAA5xOvx1rKMmBM7FsoxlcQU9C3fK/PET68tJrtCUwDKWLeb5gO
wnHmzG5lCle4yXRMKtwmGah/kuphfAXLFjPLc1puwOWltEJMmgDZTpFC2FwB
3fP5sF0CN2A6KuMZRRoNNU/mVjG+gp1G9R8vUp0Bnyv75qhkCGRv//iPz39x
++g5HlEHcKPx6X2n5gdjPBUvMb4CIz15lra/ltAybdfsbOoKV5gyZDC+AvrB
wrH0GBNUT8bczae0AVpJynGMr8DlxMvrn/7qAMtr3bfy5sYQ2oCbxs7TCPH3
dHbIVID35kq4B7k6sM30nsXikOAr2ymXUlmQL48toBeUA1UJvvP/8f6pHDec
3b8CxXucmwH+InBpyvO/+/UWLDoxB5+4QJQ+Mzi1ixNuR+/9x1fApiFZ7PlD
AXw1Otl3jBIgYDBGHOMrSGLQEmSZ0YLBTwtEM0HxQEepVITxFXANsDoTEptA
N2N9UCpfHDQdzKlj5xUR2S15mqMPQZsjyz1SPgrGUnAbGF+BREpMXvQtcyB4
WPXZrjsU8OteDmO49eYLO5f+MIPzZ67MX8MPhOP3GloxvgIuIpp5Oi1TENR+
T/V33gvY84m7ML6CsQC7UpsOI8B1MsuHnnCB009k7LB7T76egSrn4u7D+fte
9fZx1sB3IfMmNt9SqFqqnD2gBuIT+RPX9Iwh48maIHbO1qA+NhJFfQeWNQJX
rtBoAjDTCGF4bhTEiuyuS8MZ8/B8Ic7bEKB5nQzDp/nJYZ23uiCclGyovnRf
HPUNH//DswuvnILahQPF+5+f3OSX4IYR/n86CC7EX41Sj9BBq9TK2VAyJpBx
dPqPr4D+SpGx2KWe7v+3UbeiyE94obxn017IYd7YvdmmnpLUFdI9d7Po7nNU
73m00BI2OeXB8gUublHHcHjXLWKE6SBwUX0nNAvCwbpNMvVp6XSQcLC6js1D
xlKQlQ5qtYDjW5rCbJZEKBIWH7ZF/WCTgB/b+5UWoPpFGXx+KAwoSBqcwlF9
LjtG86jnchPQRngMSTjHwLHHaxcl5lC+DfVN+O3aAP2i36SUbIPgjKVdCcZX
wHGBc+vjWD0Mm1X9CHzoBR9HTZ5fwe7LN2zh5MpR3bnCGWDaGQSn5o77Y/yE
yXjPWYkSceD9fFlxkN0LChhv7GF8BTHdGQdbJ2thU3pmz5jJATiMmPKHUZ/u
SFj0XT6oDEa0utc0Op2gzyQ3uRXtI9d4A3kHwvPA/mpDpSyhCdgoBeZiOgjM
PBlNWWdTIaGMhn/qigqkUEU2Y3wFbJ87lioTzcCoUM1Ebzq921VPKVcH07HN
8LXQP5rV/f+Wgxrf7yPKtwHSjp/2HPOhwa7O7kJaIuibvvjAi/z2akxNf+bq
QFjI5QT/YTHka9aqY3zmy+/9FZiONoFA9MDfVRzqFxz2pDAdhGLv5MCsqy2w
UnHcukw5DUrOsehsIZyniMizilMawE0lwaZI+DEU9PyuZka/b/vfU2pXORsg
XD5qmetREhw3k3uM6SCkjNJIWjvVg2fb9T7HjCgwnFRpDsJ4C6naHNw2cXA2
UOrabfEkOHatx30b+VdyzGWkR1D/eOxd8KFjJFRzFd7AdBDubkVsX9irAWXL
RKXTAv7godDyCtNB+Ok1W8ZiUwLD7u50b3YC4J5B8TNKjK/gY+qdydN5aJ9Z
/ntwwgn0ZbmVMb6CCwNDlJ1X0yCDYa5TDeFvtVD8FJuT5Gc4HfOLMQ34HOR/
TOXWwa/vhOSYDsLkpCZFWVoOWIdb+eqplgP9Vc4tGVRfXSEd5OY5Wvk/m2Fx
Ws4O04u/de9oY0Pt/6xkFMtZYtS/34w39qmpqYdfxguVJXcq4J704jtMB2H4
05X3ZIaNwFif4tstWgSqd6az1TB9wxt0PUkSqF4EpzrWsULgJdIOwnQQKuZD
8nNrcLDbPidEGZAL9wfFkuaw+zWibeR3UnCwvdZ8NnYsHRbOUkb3oe+jQPeZ
biizDgoqOFTvkz4GWT7nS3dQnbl7P8o18X4tsC1XsVeJJcMBn0E/NlcAxz+1
06hUQYsYt5/9j2hIpG2zrEbPu+Lv4hr7pwBedtFRfacOhzBz4jg2FFfpTe9X
rlc/BkFTsTzaOS/YDyHuwHQQ+HuJQ+rEk0HKsyH/0yN7GP8A//EVPGIVHsEn
SoZa70efyZJb4NrBT3tMB0H5E+mGp0IeRKlkDtMfb4L8Wg48TAchpOVplCDq
o0UiHIMWXjdA0A23aEwHIVVPX+PJNvo9KJtf0Hfg4G3yzmdsjqj2dnXtJ8Xa
/1ntwnucDcjfzzbXM1NRB1eTTCLAsRzmKBXMfOfRPnjjer7rkVpYeblQ//JK
GfCn6QdgfeUdycv3x9/VQhNn3aCjcBH4Z+FYhRCe1OfXxDQU6mDCQrztaGke
tEa9qcB03yw316TKGWpAopOUwEQ9D6RuS17G+Apo/+h8MIqpBAL+K7qExBlg
DsG2mA7CtnnDSJN2GTT33TH/fjoR9WHkoyGoPg+KCX3p5pkDJ20WrX2GIoBe
hE4I4yswkVYhKRlPhbfOgpdC4v2g3oaiG+Mr2C21/s57Mh4i/J81Er1ygqg2
GWuMr2Dee17qtnU0vGO/zD1e2wQXTU4nfEY4VMQLK7jRZUDROcKFvaUm4Mre
POqDcO6Z2R25KlsEb4Opz5CXNULmWj9t2PQGPHPVp6h8XwgOcjxKJcE4aOQ/
+QbLG82/ohU/L5RBQbh+QOhqLZB7E/lgOghvn/H1fl2p/J8toatdwPgKfApl
YwTPVP7PXlvJkb+N8NQ0OHqWqqIKVGP2mJx5S2GK9/UTGhSfFV9pCFnoauDb
G0P9IyuFcDHtiDURWo91tEMm+yFlwHf1R/jfb3lA3nF8HZvn/2ARkdgpXwKl
WUZ3ZIwzwYPlztU0hKfUxg+xM/cLAcjbDJ/cTIJbG5ynVlF+iL52pj0G1ZcD
66HyV++GwcLp9d+YDoJsS2dlUHA8NNxTjBjp84VsWd0FjK8AP99ERnY7DOSt
wn5ZaTtBwh0gwHQQbk97uGvdDAFb8s7vRGwNkEOUFYTpIOR/DnjCoZMIaY/I
bqd4NsD+yMkhTAdhpOyLx9X32SDBskOx6lkPqYW6cgHIH5pXHaPImgfhJLse
H8RwkB1RaZmJPmfD5oe+GnsRwHrT2pEvtTCXv+xMj+n2drZHr9aXgrPT9SST
nmporggTLEF+P08PQsPOEhDRtqvc7K0E36ZgfwmEmzl1jOTx36Vg/c+uaTW8
wvgKpr87b8RJlcMGT7Y560oRdFL29GE6CG6vKy5f/50P+3L0ZnKsuUDAas2m
iOr/IXHXO0VGedAcn3PNnjEdzpkF87xCfZBEoatN+/hjuF9JQfonJAFua/jv
YjoIDCZJjlHc0fDlUSDuDUEgOGnIfsX4Cspm+Qu+ojrfZY0mUEjAA5KqnIMx
voKjF6NtS1z9IDnzLdm7Y/aQ8mGZH+MrGA52yBzbDQCVpqdCNI31EOOym4rx
CUfePns5aCIWJpY7nrcq1cNSxCfbcuQ3iXI5elU8HVpTVfHf9OLgdF4u3iPk
F5zfYCJxzYL+AjETjeE6UPvV/ZsQxVvAraf1h2hfdgn7lnBYVguB/p+GXyA/
P6vYLMfFInh6OWY+O70GbIrsCnSRX+VO5piwYD50976/knCiHD4+xV0UQXH4
fMKnklG+AHAiD7+XbBWDogVFDaaDID/86aHmiUK4+88aBYXQO6F+U/3sqkk4
YTpo/rNOdgTVmA4C/eq5Xw6KqeDdECC6SZgETRUfwzG+gvDOtWySlETA9V7a
rRONhjmK9j6Mr+BhgFPp26d+4FmTdJe8xR16aUmtMb6CiVlamdYDT6gvFaTT
aHGEiKMM5zG+gp+eVPNBTk4wmJD7xfb1Q7j/RvwKxlfQyn+OjCbOGwQu5CYm
yOEgIZnOHOMrUG9ssd3LDIelTf/ri2Y4qG6gv8yJ/BUC045HFZOBkLnTcy4e
B3mBmfcKP2N95SuPOkHk188OliGvgRXd0yKcaL+uAOuvLRMZwDTensS/VwUf
mDv0MR0EY6qlIzkeuWA0o9QjMlcJuayPJzAdhNAqVSnDy2mQ/qNRY5imEAI6
z2mZo/WLt6Z6NIQP5TFieJR3MR8Urm6ycKI4/G4tQSc8mAHrsvrNL5Rz4Jhn
XIIe2qdCWGU5DF9FQY8I4ZXYnDhI064jxfgKnl/iKbyWFAmv/lllW5UyjK/g
2bX5I8/aQsD7u8o577eBwH7kgSd2DzroT/GGLr4DcNqRBZwltYXfvqVjWN1+
VXIo7+SoDbz6E/rjurAZ0IcQNWF8BazHbr37YPkAeFmb374+pQtDbf5mWD8u
LyZ58/SwI4xId74J/1oBy2kDbq0oHiyq0yrZAv1h2jJnVci8Gi5bz8RLovgR
CbDKUlSIha3vDILD0zVgjYt5hekg9D2nL/S2iICOJ0r1c2HFKK5uCRghfFRj
eb8fiYiHlfu6MXjtxaCxuq3egtbviX7N+0S9yeDAbnKhBq8YTjGExiUhf/W7
YV5d2UhIGc/UU1hIh57m0OMYX8Gl6a3UGZ8YOPM0j1TgZhr4pFi2YToIV4fd
4gKbYuCZGynHSEYSKE/sBmN8BSt+mjsf67ygN9lF0H40APIWhvkwvgKem5pC
Wm5e0HL3bpKKrB9EOx8Rx/gKJh7YBiacdIPpf/YXH1UIxlew+lAvhPeWPsz9
s7nHwt5i73NNDqlOzP69D9l80juqn7VgSLswEOvHU1++jl1fUwUY+346Zk4R
7T9lbVgfdEui/UQ9mQn0OJucF1rPhcJCVkeMr+BqAU1drYUT3P797DaFaCHM
qRyuYToIZUdpXVmLAsBQw505b6YIqL5VHeFDcbUjosd+Cd8THlPjt9+MyYCC
pi5qjK8gMSs2jvBPAJC7tNeHcGVBZKBBHMZXAKeEv7EPhMJFPmWf6duZcPXa
q3yMr+Bn1khj35Q7mN4am3veFAmbsZRCGF/BocqeTj2tD7xINh/ypI6ETvJ0
NoyvYLPDsOL9pjekNDwVw3QQot902WB8BTXXet0bH5tDrmzR7lsKR+i5cvkc
Nt+iUrp0P93OAj6k5YV46NiDdhEZL3YuJOZ9qv2m6gNofLrmv7P8EH4kMOpg
fAUvyyglllLkIT0uLf6I2m2wTS4cxM4xFjNw22N08jD9z75dld3D/MKVpTkm
k1Kw8mYu/r2LONjtmf2ng1DFiT/595YKlJkRviF1TAK+rch+bK6A/25PXt5f
1K/qn1fj9E8FjZvPxjG+glAQtHCjdAS1vLK8q7RpoPDRJgTjK/ghQp6ect8K
XPnyRVel4mBe6q3ufzoI3luyPbaOMLhl/CI0OBYsiKW0ML6Cb7KmHpdfuQBh
e4hDDEcUNF/1PoetU6cNQpqEGAsgqqB+2PrQD9rkvkRg52Z9E19yynSsIP4r
b3KViBcon34civEVgLcdJN+1gBIzr9QSLxeYFGZlw/gKXpLxmLmrasILW+rU
waQH0P6y/Rp2jtH5IpuB3U4dToVTCtDEGwAbCbMyFocSi/tqcgNK4M7aum5J
fQ/OUsbYY3EYwVl/pumFMLRo+OTeqpWEFhX+/3QQKKXeiVqJX4a//hffOH0R
AqaAxf/4CvhmKqcXbTmA9589ckzuv3sT5IuvX6lulnXLTTI+75Iq606xmlny
Q/3RsPUv9h67xO6Fn6XqeimF3b9C/CeWUB6gIWZZTD8I6C4qLHt3Zj+5O1Yp
7kIvwjm50McqYNgZSOAqXSZbfPeAnKdIN8Kzh+t1tecdVAdTxNR93NYGAZsv
ngeob3X37af5rNAEruMdjX+mTKB6qKXtLeqvP5+YfC/IWAIvdgcNBXkCwC/q
wy819H+NQ8cS6ncb4KoDlczkowhwPUJCOI7qw0mWbKZ1yjY4aUUttVkvBBP4
G4L/x9F1x1PZhmEhOztFkRFNIxEJNyGRLTuE7JW99957773nscOpCA2JMrKl
hKykUinf837/3r/zO+e813M/97je574e6/Ft4C3MJfDf6gB7qhWR203hoGFN
lR6H6vzW7h+J3090geJc9gR5mw2efqRKRxF9fs6sMUJJqwMytPeGGeg98XPp
Cq7909twi7kp44JVJzRqulFHOXiC3sP1F1aTqC7lrWqQJOuAd8ZTmfDxLnRW
aDCNovqWci1eKjGqDXjY1UVcJ/zwHdT3rH8toPicmb4lEdAGUscG6ulvG+OH
g4OyFNHzHjiu50cOtsBT5Z3UD4GB+MefaNtwqH6rn5H+VnceBwEUV1mVmYPw
4UWljj0oD3KpaT1v/9wCd74GV96XcsLP1DSKJ6HPc/bdOvpIAwdzDdrcGiIe
+I7MtfAA7Jxk6vdfLj5NYMcVfdxRKBjPpvKQNw7VafdODL24hvpS5UaSj5Wn
/PA9I32K+pgOue6OkaxBA8w285yKnQjB94iUvhZHdUg8PXfOS90a0DNTF6IS
DMeXmDOdeYvyyxHf7YkrmQ3AKav579ZYEF78yZnnDOjz3jNxCzZJNWBmO2au
WR2GN1JUVqhEn7cbEtWWe1oOontbz4T+ROKJRG9uK6L1dZ+KNWulrQBCHg+S
sE9ReInA19SkyF609vVHeFoJVM/e9t25G4OPIf9gdgvF1fpG4tHDwhLwXaqU
d/0bi4+1qzg4h+z4Nx4r6lJpkF7QJ+N4Ig8Wti9Ub/7eBgph1+JHNCXQcjm3
IlOzCMKN184UIj/8LS519rxHA4S9IpV9S1oBTDTCYsIIt+mfZB5Tli3wtfvW
rYTYMjAkG9wsR/2OfXB7ZcTDNsiPSPAXJSkGTwHzAyO07gO+LvEXe9ogKW5Y
RekwGwYlRIafoj5I5SypHDNRGzyIXetftU+BucuC5/nQulO+kDW2IGkFnvSM
ky6OMfDHcNsiHfnzPSbHiqb3OHgwwGIbwxUMeMtacyJM93s/ja3WsRniOStu
6mW7wZAwsUkeqpd28scSTnU2gtUwLtnjqDE84lSYx+5r5njA0uZSXQdiGcYn
/+jp4tO9Y73EdtE6ylhoPg2ogqRNbaI0SVf8HgnfFqZ7ef8KJ9l1+jLwIDmx
qrkXiKflX9QZRHlqQ8PxXPurInDg9dmTfhCBFw5ptAtBeAbxKJc7T2WD6XEP
185nrZB6oUrcH/n5tnCTOodnKWi9un6fMqUFNJn1aLYQbmz6YvIdx+tgJXU1
XoUIB4c+F1ROI3zW7nJes+BrAqceempbvUaoearZ1I/s9OWCQg+bm8F78Tnf
MaMa+P19ns8EfU9wtwfPWyscUOfdnE+TKYfEmXXpcoSn49RgD4s5DpZGxN5F
XCmGT7QlnrIIT/cPdqsr683g+pfvwLc8D85Ub9ieR33Q3NQr7zTmZggRsBUl
qs+A/WviAcqoDje6zargP9EIXbUWq390k6HR4ZfnV7QvpuNfxJbr1MN4tAxO
PD4aysctAteQnx972b7wt6AaSLx/Bl15Egi1kh1QivrE5fbtALK4cihbK81x
MbaHdV9u3UMsfurnOSmZF0OARYvggT3g7er/tLUiPN/8OzNQ9iIfZMpMGtoE
HuLbm77IYed+eTMklvhMU+FKSuZPn9vtkCX++5gtpru4Mar3PrsAdJITwzOO
tUEJq7hU0Rzq46So737yLoevowL7JwRaIHJ2Uz0R4fZEduFPIHkNuFy+eF7l
SxPU+F9bcka47fxK7fTTrgeas06pnM4NMH3ckwu7h3Qrqcfhl1Ij4K6LZUXe
qIEBMoemJxieJVmOK22NQPPHdL3dpQKMmFctPqN+3Oc0YdKL0EZ4tzkbfXaz
BNxYbC1a0T7yfi5U0vK8AQy03h0Pii2EyUEfvVWUX4x4fB3ueNZBFKNYwJOC
bKg4ksxYhurPv5VLCpua1fCLw8KG2zcVSqkuqYWhuLHr0VVVPFkO9DuibV9V
4yCQwXGKAOH5hZYrupehBG6wFCnZ+QTD1D9ixd8oDui94O3Z7cqHcyVnmQ3q
nYFtczbvOsIzE0evu+yTBdlOca+XC5Wgx3+r2g3lr1TOQX7fd3FwoRsu/b7U
BnJVZN66CJ8HiYQDo70Z8O+ehGKPaStwP7necW4J1QlF7s+y5YqAraxfdIOn
BQwtZD6tIPtRurxQBf8yIC+jsFpKbIZNsw16AYQbyxuCpdynleB4isNAYLkR
Bghof8eiuH1uz3Xm1sUaWHIUXl9RqIdscVK2k8g/vfkSdLK5a2G4hX5TqLka
mFOi8lwQnrrrvcE78zWwRjwdO0RTAXzmy9/CEZ5uJPw2t3qqQVvc8mq+QwnU
J1WTr6E4EMt4+/HLtEpoLzyMedBeAL9PysbnoThQeK+E8VpXGRzXvKdvfSQL
puopVi6juv1EZ+ZScU4x+I1SBS60JYNz6QqpKMLz3r8YY57cfLB69lNA7HcU
XCdjI6tHdW+KErlFjGIm/KRZ98xOCIT07BZZjPc4bMroTNtMAd3dDT+no86g
lmQWaYTqAROu0cifxyPA9N3zsUcbLbBfl3KMDuFwJDWSPSo2GdLfWvnw2rRA
qfr+rwRkF+gWVVe6lQMJT/WC9WJw8NlN9zwv8jedcXL5Hqki+PbN+E6zYjOM
jVLXmyPc5t8fDhPSlYJBURyR0PtGeH35g/EWip+kgvK9qxzlwN4QeJoprB7E
lK0o+rB5k41U5XefymGd0ru0mLgGGF+dmLyP9rup0wX50qhyGGPLNYl5UAG3
hO0ZApB/cpCSuVI7lgGXXuL0Zm8JyHrbH+1AeAYlL+9QepUA3fE3H20vFsJ+
7lNdrM5paCGi6PtdCK6sDy4tt2eB7qJ24iqKqzdkevcNCnNh5mfhQEhGCojs
9OsoITwPikK6H7JkgH2i0/q0cCzwBtmf48LuL3anSeT5mQSUJkOml3VDgD/V
pdwY4Sm5Xx12+yAWelwtuZjmPMFTYk2FFJszjWG7dZYiGLSPOGZWnMCBQDrj
zznkP1Pk3879IImDLCEFw+a2ZlDNeUZ9E+GQZF2cVmWSBtF0Y5OpP5tAi+DU
VUKUXxgX+Scjz+SAJN4p0XmyEaLLT7kZI3+raiGmK4sogKr5THwHUQOkyoxX
0m6ifvZw+JinThGUfZDt4SOrhfgBT7MjCDfzleSImTdFIEioonC6rRI+Hn/h
44v60Iw31jnvDIvA266O1U2pDLj7fD4L7GH913drM41CWJBLpR38WASp5xV0
3yH/XGqOj+UUy4OpE8xWN4Ty4I3XpNBd5J820SOJF+myIPcsVfSYeAasuH28
64jwtB6ObBxuSYX0w2+j9waS4Hv9rcsnEJ4FyosnGm8nwtEX/KVFq1FQ9vjC
LxWEZ4ZO3VR8bCSwDpW/IJMIhuK1zgtYP7VLxKZ0KBoCKvVGpy8+9wTR3m1R
P2RP/jDTpHbNB9LaBJyuGTYC/8rHRlr0vGFPq+TeLYZBov1zex+mRrgpcWVN
G9lnc8QJfZkTwfPlw/fpE/Vg8dlm4TTKIziWlti3xqmgqxE/FzpcC5NkcTyW
CJ/7OP4Z/YwMmLYTojlqVg0NpVLd28jfai23EvrfZEFN6OV14qYK+LtO9yAf
4TZ3ZvqP1J1sOP+x58h+eylET1gLYvqBZGMtQrZ6WWAxc+zjTGsRmBPd20jD
dL8LtrIkUB/1vvxXZbRfHhhFXjZwQvnoM1VLv0pDKrj63+EKnM0A2o8/o1hQ
/Cwe/61PZpwEl/F/7Z/OJEPRRfEATJd1/+JvH4u1GIDByo786liYTyB84ojw
FGMe8vtxKgwCdvlqJIZDYVmBy/os9r4101tm+KI/KLi7100q+8EklDonYecQ
ej/QrUm5w/TnPAfPC67gH85bOojs172nPsX6uYDtRGgY40YViF/qrbJA+2s8
VZGWSDIAQMD5uExcFRz7SdkWh+zi3zwuHt0Ih9ynF/oFbSrhVbruq4sIh3i1
UELNxVgQKufUMqwvh5uUamnYucpy5u1D6eJEiPUK/9xZVArrIw0tMggfVudL
2fknk4GFvs4MDIrBo5CTxBX5m8Qv46QO2WSwDT6V8vRxASib6KQ9Qbjlsfpz
OFomwY1Gk/TUkWwYyLxKSohwW+jynns/lACzkUm3TA7ToOZZivUZhNu9Qca7
GyYxkG1HCY3BSUDiWbZAh3ATqm487NAJByv5D3hRoRhwvnv0IvZ+eeeqmtnb
a0GQsvP5+lmxUChRdShUxc6Zf/t4PcrAE570v/MoifaF/Ou7BNj8NXMpA3GD
mCPEOlfGfn3oAtws/v/3oTMzJ9ZPPjODmUdsUolPrGFuliFiG9mvpPsFZenZ
QMfG6QviU8Uovp/jtULPxUxWmXHnpyvo720tMeUXA52LfpYXsgvQ8AseT/OH
N1G0RM7tRej/NxTMIXtTY7DMInsInOG+Lb6vUwiGenZ4D7Qf+6i6TLw+h0FC
Q6DVlGse0K3LcZ1F+HDP3q08Wh8BbsTqtvMfsiCFMCNxHNk9CZZ1BRoi4JiQ
mReQp8MPtauM8dj5jUrWYxs3wyFTIfRUklQymCRQrF/D5verrtHAtxCIp3Fa
Oi8SB4p2eUyDyF6nunWitDkQOvbtyZ5FhQMZhe6dG9j7/fsFkcN03vA1+MiH
uKlAeCBAlRKPnd8Ig/Q7dc7QodvXINvoAc3HrrJjftiu2pSR+csCyLdCXaRq
HcDHXu4Yxstdqvv0zdhUC8iEJq2ndUyh5vrYHsYv+ZHH7j53EgLG4Jit8ERN
uNrCYonxHhJVbUYegiYwca7Op2OsAC56ttiSoOdla8i1Ot1hC7+etZfeP1IA
Lc80HAWxezD7/O+1HbiC3LM7Ol1tebAoZmTohOzR6b/ZZIq8wVrKYDokIQeG
KMe2Z5BdiOum6dakP4hkUH7Q3c6EwvvM9doIN7Y2jp/77wJBPeS0Ee1+GqyI
XnSfQPaSTdKx/a+BQJpcDzMNyZCal7Gvj+mB28pEP1gJgNHN5YX2d/GwbN7f
g83xfa1UE+QN8AUpZT3hcu9IEL54aC+CnusM//sdzhgPOHhgeK8xLxju0S22
hf/vn0M1qhNOYPRg4cYuipflbptjGC/Hv5wm9JXCCgjLM4ru2jqDXoRd3xKy
k+9p/zMV0wMBh+2LDIIW8M/o+xtMH6YDFypw59Y1cFqOObxzRAfK8E9GMD5E
+zHdr6P1N/FFkQucXrJi4BJR6ofxG0dCfbhMDwrxU3ptOEHGSnyQdc+cLYqf
ftkP1/NQH3uhnO1isXwK3vxfKSW2797lWrxxZ60Ceo6LJ2d3TeHro8oXrChu
TKSdySS63gpFYdzqUcvhkGr6oFEB1XWnluzceXo6oW+68YtxoDNEN9/ttZxA
dQ7RckYzXRdkKjG1hf40w49IDL82G9+GMh3D6tTLHZBzrbn21zVpfESfdswD
1D++NmJ9oZLZBmeyC14wqbrhLxnpkH5B/dQeaeK9xyMt4C7otKx6OgB/pJPz
MzZff9fhXSWFKg5+xaicPq/nhffpZN4PQvn9S1Bn59G4JmBp7X7E3x+Iz3Qh
uO6C6pnMbS4udesGCOm9WnWzJwRf3XTwmx/lHRUbuSvBcTWw1+YpKfE2DJ/k
+3W9CtXblWzEp/L+lMMt351DB8poPClZqyYjipOTdeHrqyYlsDBz/sa/0Rj8
L/urLMbYe9sHO+qMxsGwOdTJkz4gAGrzDnE12LmUOupHiZKRoG1q2D93xQqv
0Kq/YobNy4yfIBp4Ww65mxPU7KlhsBjkymKB3Uc8U9vyQxoHMqWJWpbvC2F7
2OSR9kfsHhwZn9S2dgiUYq+qQPl8Vb1/5yTCbaR5n0SKtxPKFW+f+hYfCNkz
zMnEU9vQj7/29HNkG/iVbAjJTMQDbPe7yyI89Wqja/x3W+F1KNvkJocrbPkF
uPagut2ZoFi4urcFOE2nh68qmuJv36haJEd1Zuqr7X8byc3A+GLx3JiYPXBb
2nkboLqIgfnMYwbmJlBs3nE6p2GB7yAhjahD9U/S0rsLlAwNQGgKm93E/vgT
XXXRdQjnkYYT+6N5VdA+S3GTVcIdz6X4Ij0f5amh7L8yXNNlIFVFR65xOQwf
9E/640mUd0K5X+Y5cJbAx5MyRG7psfhehctB3gjnl7IiQX+Js8HvSISYgEgT
jNxP3B1G/6fu86WZItVi+HjIRijAVAGKroI/MD8fHlBflNivB9IH8smDJRVQ
8f2NDqZ/qDP+S6TZoQnMq4wfl8zWwt8dnrpNhI/fDo0e42YLpKZmVj5eKoOo
qaCbDKivXB13IqlybAMju9f/9k/mgX0gofR5ZJetf+t2ibIF5o8fdVWLLoSn
Lip8iah/nJ2XqT/D0QIvO+TyiKTSwIy7d3oOreNSZqXMvXgcVO9sSPgshcOb
cIJOTO+udZ7/8zxNE8je/SH70z0R9qbPaHRic/Tu1HeK2xuAnHmjcuKPPxjW
kdKSITz5vVo1bbZqIYPSZqBbVRbkNcQmVtHzmvDOj0j1lkOHdMkGzTUrMAtV
HF5EfvXh60FaVkAJWDAU0cmO2OOz7jC/IsDuN9kwWFBjLwI/N1VmrthgfH6B
hxl23jKe6Fmq3680KDrBOTK/2QZEB7EifOh5n6XfOUZKXAxB33x/0RK0gpYK
67QSwu3bHVsSqdxaGA/t76xhw0G/h/3z26hPf3/qsvJUTS04sZKuKxSjfdm3
cKUSff5MT92Wg3ITjFGvv/UJrYNO23V3TNexa1KteZAJBw/4HhqabJUDW9AV
/W+oD+3d63w7rdoEr38eacRHlAPh3Itzd5B/mlAfjdp/1QRLN844fpMuAvHS
tcAghKeomRhtemsTCOuPDphcQf2uO9/TZVTnX+1OMNUkrQd7npx9V6ssmGNJ
lDDGdKqVWtk3eGrhqYSnUMBeIlRK24T5YH3iQfVYQl8VSEncjVoLCoHg9zxf
Afntv2SiN0waJYAywahsdRDsfB+SnEX+KbWVR6FTWQi29wKjtqYeANs5JqIS
TGe+1Zv8h0oeLHjujMWefIBXfTwcno/y1E1FkfVGwkRo4D+Y/5PeBq61tevk
CId96dQRt44cqFcdoyAiboPDe6lnS+a3QfPJvrMwezmkCtaYmki2AK/keGQN
ss/bEMWlPy8HM2L/FcaMZmCujUq5gfyQPlSpQ2+3BnxupH8UNW2EXsKoHz+R
/W45blhqtwEmPp9T2S+tAfWp4420yD/XHItm5i/VQfumYz0nRzUc+9rFSYD2
S4ei9UarXz3YZU9SE9mUwTv1l3HYeZ5xoVXtJ4v1EKVssv2WCOEfqSobj/x2
2J70xzvRKrjQ/iud4lc+lOJfnlPGdMbaegnYpitgIazqwea7dEieO3aJ7ju2
7z7R/1stg2Tx0roLlxNAhqC7OwbjP7+p8zNcKIBbnfLFz12j4NBG+P97HkXS
pBhmmHJAoYJgjyrGB87IeOTuYvfa0w9uEm5nAFEC4W2G2PvwyeTJWC/K797k
I+aUKpHQFBm9TmDUCjbNj09PIBwszD6JudKkwfCkhLoVdytQnZM/LfsB0+my
zhD9Vwh7Cy5E7mdbIOUmgTemY9lpYFX5mrsYYsy1DYJcmuFock58JNaP+ww9
UUkph4Uaiwze7UYIj1FOoUf9+DvtUg2HwGrwiZcoI9Kqh/yLn+xzkf3iSYlL
keMV0EppXqP/uxrM3jcxdqG+8kLduRXBK1XwuXtEQEa0AgLHWENLUFx9/lvn
Y+3zKvibiY+09CuB8IAtw0rkt1ufRq+lnC0F2WPlP++zF4J2xMDpDITnwu8a
tbirJSB+6qSAk0sWlCycs2xBeJY9YMKV1heBNqP5x5eHyVD3/ugzHHbOLdaS
9lp1BtwS4CjJOh0LblnzshQIN4V+eT3H3lRQ0c0m6/ALhoSTL7kPkD2ftcOW
xzwZriptNgnnu8Kk6xxxCqofQsUJnUy/B4N+3TxEt+LA59dHBy20H1Ut/mkP
mSXC4o+WmbJRHHgf73G7h3Coc3h2PXQwG75eV0tadsUB7UuDr/4IT5ypYT1d
Yi5sln2nOyfRBKsal5eFkb/NKCp8sfpXBAEDW4P0So3wtOz2gSqyB8ccF3/l
WwY7KifubojXA8MsXZInsvcX6nnotBRDq1ZszFX+Kjj69e9MDna/SZaqQ+lu
Cez98dRNsS8H+Suhl9ZQv+n7LmOLLbIUpJ/3a/q5l8CFzzOcvqge8BF/3zIZ
lg+9zhvEWw150BD0XmId5alHw/yTWfJ50B4w8Co6IROu8mn8UERxtd7n87D9
bjak2Fy9+0Y9BY5rSmi2YPcm7HUnTA4nQoHvWn7SxWgw4huzFMP0ymhMmwfS
4+D+iUnBh9Qh0HZEUw3rd1TZ35AdCEbDvCN1RaStF/C1HztyGXv/eNZ2b3PK
Fxo/XR9+cLMJtN7dkz+P/OTOyptTQRejYKe29LzQkyYQsNGJwObsukvauy5t
psIMi381/2gT5BL4Z2P6GOofX8o5VKWBurtjHtXxepg7EkGI6TmE1I4n8Dfm
wGqAS18jUx00bKSV9yN/WwnfHGV4XAhp6gUP42JqoEXqWBl2z1FKbC7R/k4O
BB3/e9czpgw092ZXsTnK4rY7IvrH8yFsO4PloLIEWBKPe9uievJtZnMkK20B
nMoQWnttVQRcvSW5fsg/UyZvdR97nwZST7TqH9ZngjlHscgThNvI4HWXIbRP
uSp3cPNsaXB3NJYrHOsXSvnUOJRSANdunn3hfBLQ2TtzmyP/zNTeDV4+DIP2
0ufB3XJh4FD+afY4wg3XLHStRjUEDB3PzPUEBUJP/0GpEbKfKpDV91sOBFqh
3s03+x5wscRkAJtb8fp61nXnsyvcTHF8G8hSC/cL8klikD+cDi2S++MbDHdm
T0jPPamD0RvltqPIfz68xynsmyfAAEkDq6t7PZxupF0OQ3hqpB8zv8CVAEvF
/Gr371SCyl4h21uEz71TgXcFJdD+mhzOqyKqBI1XZxdMMF3rS7g3JsOZEEo0
P+7BUgFWO7G/sLyzeJDbg2tJgRtlXZ4LHwtBZzLF9yjyN6nn5Pcy3dKAofq8
DXVYASxWXQtQR3aC7+0tx0TSITpMYP+ldi7MMR//u4XsjCeErlPdjYPZvOTs
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
j33PFVZM4zwIBWo1vcT5SO7vpObCS/nYr+fI6xETV20Iv3t4XN9LuH2n6+RC
IHLtYusyWcK5z8y0KL59XD1pQLjk863QWMIpk6uqKT4ReNbrTvpJ0vcT1VcG
zxa5SU+VxWod24Z5xyXhkTWLOXdNpeEkyT3po77cETiHG6/mJGTgXGrGuVHz
6JobUyaN3iJUafljHD0mx43xHvEX8yt8nwPQH+Lj16tMo0/Q2Q/HEY9oPvfz
PuHsYQ1VTsLdJx/3/SK8vW3iijTh7CeBiv+mkbtLeh9QvB0Wteon4WyxNAVn
wt0FFqpKhLevps6NPUaOfGcQ40W4UtCuhuJJ4RNjzwlvuewylSH8defKKMVd
x1RfcxKeuOkplEv44nOfBcUVhgetQ0kfF1Zx2HBiP8t9bP5Cepk95MK1VOyn
yd5Z1Sjsqwy2qjrSU4qmmetFMffLdCqXceD6HJc9wknyn3f+2eVRzM3wh3Ue
lpijP6yqqfy8fRNORmFOHdr4TvEo5tblL4VUXn1rXk5LRY969muNEvGqxpLD
lE8teZlVt6M/rPTKpHzCIK2e8oiho/ueEz5Os9ExI7zcDacoTo5q2uhEOLIg
/MYQ4cpgL3plwpP3Qj5dTEGeaHH64vMT+aLTcNdywhVC45caJLCf2H0iHydh
X9H96hMlPVXvrL0tDnPz6gpGp0eYo3a284dJfmaUX2on/mn4V3KR+GjHrv88
9Kpya3YA+l40x9pfxP84TO0o7zPSu1lJPEc4VuI+8R5Hzv2U7+gfbbcmnqP2
/R8L8Z4TygGU70gy2+8lntMNjpT3ZFYvGyS+c//SuDfh/oqCkJvEA34FAMX/
EhH3pwgfR6gJCLAhL8e/j99AOLkpVPAF4WOpspvCZ5CX19ucozg5dUcnjfBx
zMqvuwgv79l+guLkW/UXrbyRr1at0j+dj1wpr1dzlPCk1c/mNW+QtwIrM/ZE
4n8XiNznR7hLOf3Uvxjkkm0dKo5pyCn/ykdrCJ8Ix7T3i2Cvb0pLbMnDnl9n
u5nq9zv+gn6kL1s5H2WT/rziyEj1ppxMpSfpoU1lnD6kl8Jq/+ujkmc/i5vQ
k5/aih25iN58NMw4hfjyGwv3IeJ7/EqsXsT/tGgeosT75nLi27TQfwKDP/Du
Rx+aXsY0RTxI/kXmswnk/j3Hn/08iB5gM565ivD/xXvfigaRj++3XuiIQV72
t56XJZzMR2sIP4Ec6cSDsYxcqZh87yPhSc6Au4fWIJc0v1wvX4ucYq0RR/GJ
qbisCelL7bM2NNKfJz3+602uTLZA4+2m0JW8ho3cn3i9vIK6L3FhRca6lej5
3Z+KR4j3917ytSa+T+uVWN6Fvroj9e6mNPRXsywBEeKt5eZcb4mvCtziSSf+
+omjnPLWLefSjO3RV8VeMu0j/tp7+QDlrQrpQmua0PfCPrpZdqD/BcqoPSfe
9zacN1sQPWf3TnnLAPQeK3W/O8R3DuhprWNFz2nOvbM4jN7TzvhvgPiOL5PD
5Rr0HN0smCHew+p5m/Kd4L7VhlXoD6nq0vQZ6BNiqpmURxxSOLiVHzk7bLkC
23bk7gz+PkPC2x8VXLJGkbPdNdKKALm7XEmA4u2/LIxahLN5zbYw5iB37wlZ
T/H2wvIjhy8j1zJ2NWypRc5tFf1B8W2RWOt5wn+/PK53ER4c4fmPA9f4jFUR
3vrjNbiK8Jdk+X/clXbVM4rwCoNkojfhl7L/c0u5iUSgXuc9sHzHdV7QFjmw
eTCT3FcJ0/o2/w09/7dNiMNP9P737N96iO+XHuxV2oee/N6irNgZvVl+3alb
xJe12LI4f6DvWQanbo5E/zP4ZBNAvC9/fN2BQPQoUbPxoGr0KuvaIMqnMndW
9y+hPwzZX+WPRJ/40bKF8ojE02vjpJHXZ/mePoxDfv8p+ZDidsvFF+xMyLW5
DFkJhHM/Jv3Ht9ctphQIbylpLhch/OX5f+5ybX9YTu5HwEE6/d5/4bDN4xh1
X6K7Q/74c/TP77K7+ZvRR90UmykP7btTI0e8JTft7WfiMWpN7JS/5F48YE+4
eaPU43nC0TL/52e3FdG7hxJpYHD1N78pcseOo8cvkO9r6FV2CfbAnlt5+4JS
hY4/DCluiLuFffc9h96VPE/Xd98r9i3mZU+eiflF8rz2YctMsaOZsGyFWHgg
qykkXRiqo8P9/4l/d2VO0cOq7p0/QrbI5lbZvXiuMjiB82XRx9mNHOP9rvp+
34EkeH5iEz3hmdsMy+6twL7PeN7JloL9f373ZB3p/cQqgewU7NdHV99PnMG+
Ff/k53QWe3bN/ROhLdgrf22uqHZjz2QaOVuRfrkUbMO2Wa0Qqkx9lS/uCgRT
78vwBM/zTZMIqzPmDs3/WEML5pD4TydJkj9NtTPskUUZ4DQ3Hp+dag9Ll6KV
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
LjCgTfLW51x7i3pMEKzwcHkjqlIIonkMEwHkuc5/TKrfX8QD/y35TbHzBfAx
ceBeK/m89FzWA9n0JGhO+h5UNZkPDDEObA/J9xc83Za6A32gMdtX5Q36QTq3
bhPxAr8mPo9Iq1RoV7nFc0olA1xEDi34IVfXdDLdrptPAM2ukp5+w0fQ9+yv
yBBerzh2NtHyyYdQVzue370hAuLO8F+RxOv1junMzp6fobBT2JprKioAPq07
Mkv4YWvvvZvVHr4gZXR81bXrrlD0dKCV8MMH7y7lLc6ucPGaQZ2DnR0cd7qb
SvjhUMm77WouLqDVe3Hak9USmJfzspGe5W+R6qnWsQCbJx9KGQL0wWJk7hLp
uynWs13JX5zgi1Oe1j4/GljoNhhKkM/zJO7MC2+KgNNdmrZy6K/6mvxdteit
I6fKtXqNY0Bpucy2ysZU6LlUF5iMHnSwtz8qPyQYtM/tmbUXDYUho0eXNch7
/Goqq5TTraCv6PvbL7VmsCH1+mgTeV7A+dDtqDxjEMybWG5YpQ9ukqm2pPfL
gi5EM3raAN+LmJjnh/NBhXXPfgdcz7JL0mMfWdyhR/bAB7aMPPh09eClP3j8
98Uy980JwbDXXMDbTSsLBsONnm1Ejz7FmqKx1i4UFGpYJsNvZMDAFZZrYnie
eZe2xo7YhAKdb535TeR5k9FeTnry3unBNgMWm2BwnDuzTnDkIch8tDb+h9cl
lt7xArlf5+YyxR2FXG+Q1k/dr9O/cuXl1jIXEIqbvXvL2Q2SS5f7ER5mnN5Q
Je1xB+hFvkTtO3sbyk4ytBNOi6YxC7eUa4H+uW4T2eFrsHh55DrhGbOVQnvz
PVVhj1Koskq4Imy/si6a8Eb32QhLOQ0diEhMefggLhHY/c2mOPB8PBvbtpw/
7QQltw6Yab2MhS6/ZCnyXHZlomPeEnpmm2Y0/Ub0zmvMk0LENxe/C3TrWpiA
rVGDyB8eK3iaZtJDvOOb+CW6bRnKoMkX7/q86AJwHVtfQD2Xekda7M1BDfje
w/2FnSEKNFonysl9HgN/cefUPTrQelvjacTqKDBgunLgCR5P/mCtpRFiBtX9
28cYpEKhrP0PC7kvUeI15P6vxxxOR8msd7oTBBpiL0fI/QGPv3Qzu6NMgekQ
/1g5nQfQ2N88Iv6bZ2OlHrjaGCyyn+6V+uwIS25Ta4hvTh7ZyTZSrQWy+yed
Tm28Ax6HmOiIH/190tQZPqkOfwTvq5/5owWSv3kliXdUhFmIhdadBqnbaTGH
miShMfGVOuHDa22lHIapQjD0ZGTn3xph4OJZqCXH7X5LvZaWia0yLtlrLLw7
sKp/2SzzAvlcpd/382HIK1LZVzxoyC+DvYmMvcgtEVdN9Ulf6kpmvyL9Oasb
84r0pv2JRalD2EMCnJFGTthLf3pGskkf7biseI7k5jUPu7UkR/dlDlD5qVXx
/jPJKQ3vi2wkt87Hv6Py6q+krD2Zw2eJ75en4Fxyv/Oh5vHpnIhPLc7DXa5u
+404Hyn0h/aQuRAYlBUIxv2RULlKWhH3i9CeoEmyT24KXXLmwOunf9ZK4S1e
zz1tHdR1FJx2/ZyBvKWsccquCvmL/6ScC+GuCpHb7P+wL6feeHKyYn9u3tnL
R3ozWlz7A8nNzzLmK0iOinIwUfn5dru3KSfOob/bWevPOJe6qX4qZB5X7M3n
icT90abgPUX2S8XgWWqf0Jlr9IYhN2+ZT1BKQo7eXi/TQfi58utwZAhyrYlQ
9u8jyLmu66ZcCN+ekgswEEP+W+hjNatAHmxUrl4i31MsceinGOESQ1cnQ0Hk
FIVWeWnCJ/VRzmak14Xr6N7cw57nHXhJ9TujwNfjpJ/mKkUL5rCvmAYZeElP
pWw6uIrk/v24tYdID4j/WmZK8r/rTEANyTu+/sHgCMy/FwaWnST3qg8X03ww
X+zUcj22Yd40v4goITlz4tuo2y2cQ4MtZq+VcC5XTbw/S+bRRPXVECPOQ73k
0WNXcD5OM3ZSc8HP2nOA8PrlFc+03yK/W85WJ5Hz/2f16usocu1S2ZvbhHM7
XvZTfPsxs76KcImRKGfuGHLKzeF7FJ+0nB0PI/1k8bIsiPTVe0dzqqfYAop2
x2HeGY0Uf92I+ffNq1KN5F5YX2I6mcOxQZMj8ziX489LqHksd/8WcgO9ZcuH
rZ+2o8foHeik/GVtVv2RLvQHZveGkyfRJz7emmQmHsF84dJxwtl/9N5WE+6u
UDhG8ban3PZUirNjtu8n3O38T5ji7U17eXUJZ+/6lSxFuHv0+ZWThLfPTL7b
QThymqFHknCll+GK24QnCxoqR9yQtwacbfYR/nqQGUxxl2Qcay7hiXzTKCnC
F20ZXRRX7Dkk94n0sXR5452d2M91PlcaSS+H9zzTqcZ+SuPt/tiPfcUfZ+ZP
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
rKN5nTEk/YwmMj3BOmU327EP69Y7gf/06vUp1Zu4Dv1no2pwXS5YKZLqsS+6
4s9zVA+3nN8e/IzqQ7tYmRfXRXvkM6ZUND/8D9j/FUbz5d76NX08T3j71ORv
o/HzaaMSzUDj+b28mTSOA094WH+0Z0Of4BSRBvFXWUB/MOYuzfHIJuyXM1aW
/w4g/0xiVSH55mS7uznWTcPl62cfIB2lLrxL0s9Cd/vzk6gOnWmty86iumyq
ee+H6zHrnn8anh8eQzk7H6D5YqNvQJonNG03B0cRN/cNFHqqII5mOex9AfOz
4usVqS3eDMg88YHvj1I5XMk7k4H5lss9sjkd8Z//g7kIbcSD62+y+zEHXmJk
/S6LuMSbibLqCOIUl425KcwnacGti9jX97j7sWGf73TsJPl7HyjkY3/qoU5x
w36ldv83yaeEZjslse4X+TQNYB94v5RL0v+0yGqlJKR3yUFGdepI/7hszpN0
L9bT7rAD0hdiO/s3Y6Q3zconJrDOfB4x4C9CdRigXzxggOqS2WJ6Bdejzu5A
nx5UD+9S+WuXUH1IRHCT6mJH1ex0EOL1ylxn4T2I3/9KFrzE3M7cKqqAuTaR
/sE65lwncX8S32YHRx8QRlxi3cC2+BdxSjPbColPFtUf7sb+ZLWri+RXUhvV
JJ/KB4O8u0jvko59Hicg/SstUX6JdS81qY9pC9Uh68m/b3Fd5miykerxAXVL
EAXKLW5kM+9xjrn69ZAOzi8MlPR0wyg/XBgs6MF5YrCSnpQjdM9fuYs52+5C
3E5/xN0jD4xJvE0muO8I5mw/nd7TmLvrGp6QeFu+kb0ec3Zp6FgA5u4vx3WU
MG8XkoXexRw57uYiirnyF/SRePIsIVUE81aQgZAX5q8MnwESdwW3SAzqI54Q
HirLxHyxykogcQVl/eok9uN7zjx/sT/LHe/1wL58qXOlSAj5E2uhCW8R8itC
e6QI9ikmZm3pCKT7HTRVeaeQD4RfkriM9b/bYOBtCtLNNfbeInOkozLk4v/p
Z+s9x3akUx7fOZxMkG5RTgNJr7y+SIrQohwVq5zdinPVmMQYKU+1Zcyy4Pzg
dp/NEOcJ55FmUo7Yr/juJuZjp5XQcMzLZ2/lkzh57ufyTcyRjkzPL2OuPDyw
QuLJsFxVbj58Hva5ubMD4guNo9crMVfYX6y5XY79ifyF3BbyK8Kh/Vv4PGxg
Gl/yFaSbcQ9bk4ORjj75TSDppxiNRSbOnxF/ikh59Jb2fzn0ScvyzDmU90IV
xp1x/lvI0yDlvlPh3AucKOfwnTpuiHPPiGU8Ke+Uh3lI4Jyzrt7DjHNPx796
Ut75yK7qg3NOH7MdKfeIbP4l5Z29UgxpmPtHjwe34BxArypN4v9QwxtdmI9d
jQ3ILBAvf1P6KIk5WXOYRRXz8TKRJhjzsvBdQRInO763+SeM+HhjsJLEy7xf
2Uic/CP8jJkF4qtMhhfF1xBXDiw8Lcc8WVm1ksGOeMv+49IzWvRzccbeHZi7
Fmi5VOgQl/xR96ORQJwS/1JDFPMJ/aHcyweQr9++oVLXhny+rjWa5O87Pzpq
NyC/tC/bzdKJ/LOG9ifJN1uokmexDzW98erAvqQb9p8fSdKUSXSgnEyY/0tR
jvfXjTX047z8ICo6Gue9OIZ6gWaU/9RXFkdw7gvdJT+ajvIP7YFh4SCUh/ZR
8+XgHHRmvbvXD3G/RcPPyDmUA6KH43Ux/we7X7GYRXxs4aV+XRHx8nTPlQeY
kwsXX5cdRxzJIdlboY+4MtTFrAPzpJJHr6Eq4pJb7x/nMCBO4VypI/FJgu6C
E/bL4OLQ29g/x/3+8011N1W5cNZH0EIhwImfTxw3WCU9lwhgvnmBB+X8E33/
Ht1AuT8m6tNFnPfjZntSlFFe5XzPcuQayq8Dh7qCcW7llxxhlEZ51alCcx7n
17dRSxdxbpV4MG2yhvJq6LbQS5xfJblkSLk1gUHQlAnlPVHlnCt/UP7LVH6z
gHPfmWN7lE1Qzlmaco57jnKPQ+fLKZx3yqqoN8xQzmGY+CTSiXJP2Wt1Ut6x
Sxy+kYNyDmc9px7OPQZC7qS8c+u72Kojyg+KAVP9zihP2C51+eAcYdZqGFyL
ONt8KFbtDuJuCY7DJN5u7FUUyUCc/TNMYqMecXdAqRiJt6V4TD9izmYTbPDH
3J19W5rE24xN/XclEdduXz2iyIE4l4ehnsS3awtCaZj/nChFRzEPMtv8x4Hd
Fv4NmLfmnzL2Yf46ePA/7jKee22KeWUyftIC88vGxn/ckhWx8qm13xpqKcrF
XB3T4WhlRTJ+ruK8ciXiDsr5Mgl2XTdR7u/xtSvEef/SquvjCZSTxUdvGzxC
uXmptPINzsvrL+Vix1De48pTOiOB8p/HhFsvzn06qk3OsShHzR5WMIlDueqA
7w1Snsos+5vrifKDSuCg4QuUJ3yfxJNyRHnIUSEWxOtV7CHe5Ijfp3ZIkbj9
Yh25tSLiWiZ6lg3MuayZ//EtV/DJO5i3Vq4TNDB/Jf+fu9YkrA/1RVpB8QvL
Lfx84sphR9Jzifs8Up44fx6UoxYeQ3lU5Zc8KYdSEnYN4tySdoezFOcYAbb/
8sut1wnCmJvpUttkMEd/mvqPn6NvEHV2aVQBjx7jxNHbvtCoqD11CPlmU6LW
tRGxWgj6fQlCDugQqbuYRq+MzIPs5TNNgxcqoH1+BzFJ1pVYQ8cVF4b07eeZ
tELbx4VAmbDb33fOl5huvPW7Er8Hg1cgtC7Bkph91WOIMSqCSKkfKRSH2t8Y
PMafwl4JdHbE9EXHWFjcwXc6AH8Hk+7yC6HJGtTvGkp3bkVCP12mcyfiK+ZZ
votuujVgIhW2Jqr8GKy6vlJkjs3DSVlTq6p91XAwP6J85uJ9KFpcbL2P/Jcx
9FRKNFkFEHfaCqztuEmk1114Yor0k0bmusnRC2XArxFflXzsEdFm6ey0POIW
owmZ1qTOAhg/MFxvbeNJdD17K9AV6eSkvmumoU4OZOi5Uu5g9Ccas9ofwt/V
3Qn9V7NKouG6FfFgq34axD3WV/iHuNcptP1R83wGmFcVKN29mAHqfoGC/MhP
FSU0ql15K8GB36k9kzcH9vydOTn2CfH85RqpM1LVcM35YKdmZAbIvLlKk4/6
uY6Z9e39mGpIM8tb4KZNgs3zw5sriB9efTncYzxaBXy3n/C0u0SBsntRriU+
/7icdXL9ZCUwBxx1nqdIA9ow5Xc2iCtoTEu8mn9UwkL/uZiQq6FQMmM224bG
t6WQ7kTMywo4dFk492StN1g6dtaJ4fe1htSvP9Uph4OBc7fSW5xAWVyJ9jXy
oz9mwT/5FVC/8Z/rf/EqFDJ93wwRkO+s+vXf908rhXfchePCRWbQ3d6h8gzl
AtOV5SAb12cguOBXSWN7hditbKR7F+nzOYPtey808uEVs+ZHt/02xGn9TJdv
qH/EzCaXb6vmQl1cmutokA5ssOpf90L9/Inqes/qjyxY2uPBso/cgxiWdzrp
B9LD70lk62cL0sFU9Wz22Yd+xNLRR9npSA8nwrgbll/EQlar2bPTXtWw5LRr
lgH1syA0u9PtKYHemIx8HbYyoFxt/hiPrms5y4zRXiiHnY3Tpy39s8B2Lizx
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
DjCzRffrNfr7/wPeWkGV
       "]], {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRange -> {Full, Full, Full}, 
     DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
       "\"|\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Rho]\\), \
\\(\[RightVector]\\)], \\(1\\)]\\)|  [fm]\"", TraditionalForm], 
       FormBox[
       "\"|\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Rho]\\), \
\\(\[RightVector]\\)], \\(2\\)]\\)|  [fm]\"", TraditionalForm], 
       FormBox[
       "\"\[Sum]\\!\\(\\*SubsuperscriptBox[\\(a\\), \\(n\\), \\((fit)\\)]\\)\
\[CenterDot]\\!\\(\\*SuperscriptBox[\\(e\\), \\(\\(-\\*SubsuperscriptBox[\\(b\
\\), \\(n\\), \\((fit)\\)]\\) \\((\\*SubsuperscriptBox[\\(\[Rho]\\), \\(1\\), \
\\(2\\)] + \\*SubsuperscriptBox[\\(\[Rho]\\), \\(2\\), \\(2\\)])\\)\\)]\\)\"",
         TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, DisplayFunction :> 
     Identity, FaceGridsStyle -> Automatic, ImageSize -> Large, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "RotationControl" -> "Globe"}, 
     PlotRange -> {{1., 12.}, {1., 12.}, {-0.06362999434552265, 
      0.6556187579744193}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "1", "2", "3", "4", "5", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(variational\\)]\\)\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30756835`", ",", "0.18676585`", ",", 
                    "0.147065275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2742634666666667, 0.25883306666666667`, 
                    0.32036026666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.41139519999999996`", ",", "0.3882496`", ",", 
                    "0.4805404`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.7, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[
                    0.6999999999999998, 1., 0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.7`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.7, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.7, 1, 1], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23627719999999997`, 0.19087386666666667`, 
                    0.14698493333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.35441579999999995`", ",", "0.2863108`", ",", 
                    "0.2204774`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.885893417855555*^9, 3.885893489742448*^9, 3.885973773243619*^9, 
   3.886029759588313*^9, 3.886029804273608*^9, 3.886029870693363*^9, 
   3.886029942135857*^9, {3.886030374355723*^9, 3.886030394440476*^9}, 
   3.886030462586419*^9, 3.88603073926197*^9, 3.886030827859376*^9, {
   3.88603102398645*^9, 3.886031061347703*^9}, {3.886031142256096*^9, 
   3.886031157587884*^9}, {3.8860313190100603`*^9, 3.886031399078905*^9}, 
   3.8860314318359118`*^9, 3.886031708129878*^9, 3.886032023730515*^9, 
   3.886032687641053*^9, 3.886032808261466*^9, 3.886035984925419*^9, 
   3.886036274466262*^9, 3.8860442710083447`*^9, 3.8860448851758966`*^9, {
   3.886044927085291*^9, 3.886044953884457*^9}, 3.8860451363249407`*^9, 
   3.886045336083129*^9, 3.886045483519207*^9, 3.886045678972992*^9, 
   3.886045719903119*^9, 3.886045838343248*^9, {3.886045872840424*^9, 
   3.8860459533051863`*^9}, 3.8860460837011023`*^9, {3.886046150007551*^9, 
   3.886046171049452*^9}, 3.88604797137118*^9, 3.886048942200698*^9, 
   3.886048979269897*^9, 3.88604911871371*^9, 3.886049217579173*^9, 
   3.886050641778501*^9, 3.886050841036642*^9, 3.886051217934525*^9, 
   3.886051518353661*^9, 3.8860515764433107`*^9, 3.886051798135643*^9, {
   3.886051915491355*^9, 3.886051944178385*^9}, 3.886052034619315*^9, 
   3.886053610238865*^9, {3.886053761624339*^9, 3.88605378001589*^9}, 
   3.88605398366967*^9, 3.8860540485591373`*^9, 3.8860552050391417`*^9, 
   3.886055240412912*^9, 3.8860553109904118`*^9, 3.886055420175798*^9, 
   3.886055486372675*^9, 3.886055615779456*^9, 3.8861330083715143`*^9, 
   3.886133097381796*^9, 3.886133169911264*^9, 3.886133239709468*^9, 
   3.88613331276291*^9, 3.886133377998407*^9, 3.8861335335193443`*^9, 
   3.8862226887552853`*^9, 3.8862245415077753`*^9, 3.8862245787894907`*^9, 
   3.886225309119186*^9, 3.886225357004081*^9, 3.886225488982327*^9, 
   3.8862257298744164`*^9, {3.886225760319159*^9, 3.886225860346689*^9}, {
   3.886225893141335*^9, 3.8862259136470623`*^9}, 3.886225957815997*^9, {
   3.886225993727564*^9, 3.886226050023541*^9}, {3.886226110750787*^9, 
   3.886226160721549*^9}, 3.886226207377825*^9},
 CellLabel->
  "Out[911]=",ExpressionUUID->"de5b6af2-0aca-475f-855a-e8437441ec0a"]
}, Open  ]],

Cell[TextData[{
 "symmetry of the wave function:\nfirst, and foremost, I must not succumb to \
the fallacy of confusing rotational symmetry of a S-wave state, i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", "total"], "=", 
    SuperscriptBox[
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"[", 
                RowBox[{
                 SubscriptBox["l", "1"], "\[CircleTimes]", 
                 SubscriptBox["l", "2"]}], "]"}], 
               SubscriptBox["l", "12"]], "\[CircleTimes]", 
              SubscriptBox["l", "3"]}], "]"}], 
            SubscriptBox["l", 
             RowBox[{
              RowBox[{"(", "12", ")"}], "3"}]]], "\[CircleTimes]", 
           SubscriptBox["l", "4"]}], "]"}], 
         SubscriptBox["l", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", "12", ")"}], "3"}], ")"}], "4"}]]], 
        "\[CircleTimes]"}], "..."}], "]"}], 
     SubscriptBox["L", "total"]]}], TraditionalForm]],ExpressionUUID->
  "1942c55f-6e0e-43b5-bb55-5a78b2b21915"],
 " , with permutation symmetry.\nIn principle, the variational wave function \
is not guaranteed to be symmetric wrt. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Rho]", "1"], "\[LeftRightArrow]", 
    SubscriptBox["\[Rho]", "2"]}], TraditionalForm]],ExpressionUUID->
  "0500b7d2-a570-4ba7-b30f-11e57ff01fe6"],
 " interchange. The variational code obtains its optimal solution by \
anti-symmetrizing the total wave function,\nwhich means that as long as the \
number of particles is less than the number of fermionic species, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "<", 
    SubscriptBox["N", "F"]}], TraditionalForm]],ExpressionUUID->
  "7899faa5-e52a-4bce-abfb-25058cb2693a"],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "F"], "=", "4"}], TraditionalForm]],ExpressionUUID->
  "2e8d4745-44e5-406f-8ed7-4607a9c0bc2b"],
 " for the two nuclear degrees of freedom, a totally anti-symmetric internal \
spin-isospin\nwave function allows for a totally symmetric -- now wrt. any ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[GothicCapitalP]", 
     RowBox[{"(", "ermutation", ")"}]}], "\[Element]", 
    RowBox[{
     SubscriptBox["\[GothicCapitalS]", "A"], "(", 
     RowBox[{"ymmetric", " ", "group"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"be08db87-edd5-41d6-a72d-73cf4ed9d3af"],
 " -- spatial wave function.\nThe expansion coefficients in combination with \
a certain pair (for A=3) of width parameters (",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Gamma]", "i", 
    RowBox[{"(", 
     RowBox[{"1", ",", "2"}], ")"}]], TraditionalForm]],ExpressionUUID->
  "90bbac39-b0c0-45e7-b09d-054ea8ebd447"],
 ") does not reflect this symmetry explicitly if we choose different \
numerical values for ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Gamma]", "i", 
    RowBox[{"(", "1", ")"}]], TraditionalForm]],ExpressionUUID->
  "dcb5ecd1-a2fd-48a3-84be-91ba9b78e915"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Gamma]", "i", 
    RowBox[{"(", "2", ")"}]], TraditionalForm]],ExpressionUUID->
  "7674b7d8-3263-454f-acb8-b51924c135c9"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Psi]", "=", 
    RowBox[{
     SuperscriptBox["\[GothicCapitalA]", "-"], "[", " ", 
     RowBox[{"\[CapitalXi]", "\[CircleTimes]", 
      RowBox[{"\[Sum]", 
       RowBox[{
        RowBox[{
         SubscriptBox["c", "i"], "\[CenterDot]", 
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"-", 
            SubsuperscriptBox["\[Gamma]", "i", 
             RowBox[{"(", "1", ")"}]]}], 
           SubsuperscriptBox["\[Rho]", "1", "2"]}]]}], 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", 
           SubsuperscriptBox["\[Gamma]", "i", 
            RowBox[{"(", "2", ")"}]]}], 
          SubsuperscriptBox["\[Rho]", "2", "2"]}]]}]}]}], " ", "]"}]}], 
   TraditionalForm]],ExpressionUUID->"f9e5e5fe-30fa-4106-900c-d8b06826b0c1"],
 "\nHence, we must adapt our cluster basis to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[GothicCapitalA]", "+"], "[", 
    RowBox[{"\[Sum]", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "i"], "\[CenterDot]", 
       SuperscriptBox["e", 
        RowBox[{
         RowBox[{"-", 
          SubsuperscriptBox["\[Gamma]", "i", 
           RowBox[{"(", "1", ")"}]]}], 
         SubsuperscriptBox["\[Rho]", "1", "2"]}]]}], 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", 
         SubsuperscriptBox["\[Gamma]", "i", 
          RowBox[{"(", "2", ")"}]]}], 
        SubsuperscriptBox["\[Rho]", "2", "2"]}]]}]}], " ", "]"}], 
   TraditionalForm]],ExpressionUUID->"e4140b28-fc8a-471d-827f-75d6eb9c8777"],
 ", i.e., the symmetrized spatial wave function.\nECCE:\ni)  if a large set \
of widths was chosen, the symmetrization might already be realized (see \
examples below);\nii) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["r", "_"], "1", "2"], "+", 
     SubsuperscriptBox[
      OverscriptBox["r", "_"], "2", "2"], "+", 
     SubsuperscriptBox[
      OverscriptBox["r", "_"], "3", "2"]}], "=", 
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["\[Rho]", "\[RightVector]"], "1", "2"], "+", 
     SubsuperscriptBox[
      OverscriptBox["\[Rho]", "\[RightVector]"], "2", "2"]}]}], 
   TraditionalForm]],ExpressionUUID->"3c6f6cd6-e305-48a4-ab5a-0d3175cebcc6"],
 " (see ",
 StyleBox["coordinate_trafos.nb",
  FontFamily->"Universalis ADF Std",
  FontWeight->"Bold"],
 ");"
}], "Text",
 CellChangeTimes->{
  3.8860328580470047`*^9, {3.8860328898220673`*^9, 3.886032904386814*^9}, {
   3.88603300180194*^9, 3.886033111090735*^9}, {3.886033256254785*^9, 
   3.8860333934339437`*^9}, {3.886033435226972*^9, 3.8860335373070383`*^9}, {
   3.886033606393848*^9, 3.886033665968042*^9}, {3.8860337162655*^9, 
   3.8860337756958513`*^9}, {3.886033965373715*^9, 3.886033966558546*^9}, {
   3.886034160506706*^9, 3.8860344123316917`*^9}, {3.8860346422982817`*^9, 
   3.886034683153977*^9}, {3.8860347679067507`*^9, 3.8860348206198483`*^9}, {
   3.88603489931005*^9, 3.886035161189878*^9}, {3.88603519958349*^9, 
   3.886035495717197*^9}, {3.886035548110045*^9, 3.88603556516949*^9}, {
   3.88603570135117*^9, 3.886035806595764*^9}, {3.8860358521389713`*^9, 
   3.886035883230975*^9}},ExpressionUUID->"124754ec-269c-4607-b995-\
ae11898c43e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JacobiWavefunctionSymGrid", "//", "MatrixForm"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacobiWavefunctionGrid", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.886026405255823*^9, 3.8860264521937647`*^9}, 
   3.886044154048481*^9},
 CellLabel->
  "In[791]:=",ExpressionUUID->"16a80f13-56d3-4766-9a5b-0d49e75c13d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.4912620144916233`", "2.794851948391167`", "1.5077758410224966`", 
      "0.6864659913422009`", "0.3573651157265153`", "0.1979522681663287`", 
      "0.08677226641798318`", "0.011091726091419571`", 
      RowBox[{"-", "0.030334994342097684`"}], 
      RowBox[{"-", "0.04359095781307198`"}], 
      RowBox[{"-", "0.03787671160915703`"}], 
      RowBox[{"-", "0.022595802900317322`"}], 
      RowBox[{"-", "0.005339951605463598`"}], "0.008976090503000706`", 
      "0.01804390653129259`", "0.021549860017917147`", 
      "0.020398678899078076`", "0.016024733869362418`", 
      "0.009904442985789212`", "0.003279979076169838`", 
      RowBox[{"-", "0.002949758485431573`"}], 
      RowBox[{"-", "0.008230018223642822`"}], 
      RowBox[{"-", "0.012294833915025971`"}], 
      RowBox[{"-", "0.015092038250346822`"}], 
      RowBox[{"-", "0.01671023418411791`"}]},
     {"2.867246106617216`", "2.2619278596397816`", "1.1779434430857225`", 
      "0.5200091337417292`", "0.27179004506571974`", "0.1567805604585234`", 
      "0.07670716532831275`", "0.021248601079808225`", 
      RowBox[{"-", "0.010406587163134832`"}], 
      RowBox[{"-", "0.022350807307166307`"}], 
      RowBox[{"-", "0.020866428423718098`"}], 
      RowBox[{"-", "0.012412514894196794`"}], 
      RowBox[{"-", "0.0022267733376519854`"}], "0.006279749624012797`", 
      "0.01148153157867003`", "0.013122827173829423`", 
      "0.011786600493498717`", "0.008422477146020927`", 
      "0.0040122086294775705`", 
      RowBox[{"-", "0.0006200375499236188`"}], 
      RowBox[{"-", "0.0048826480003006595`"}], 
      RowBox[{"-", "0.008417313021299777`"}], 
      RowBox[{"-", "0.011061170696929993`"}], 
      RowBox[{"-", "0.01279546995291586`"}], 
      RowBox[{"-", "0.013695567666513623`"}]},
     {"1.4638071166840871`", "1.1511294964275023`", "0.6087309928985357`", 
      "0.2933558655117061`", "0.17539274911047237`", "0.11716666590687214`", 
      "0.07398206313508135`", "0.041829549713556916`", 
      "0.020722507125445305`", "0.00908042382990248`", "0.00424191260190492`",
       "0.003378828340078467`", "0.004140387614712074`", 
      "0.0049443843739214715`", "0.004977778776844836`", 
      "0.0040264508944318`", "0.0022493988306443694`", 
      RowBox[{"-", "0.000024579005278934177`"}], 
      RowBox[{"-", "0.002442079313193171`"}], 
      RowBox[{"-", "0.004708126818874564`"}], 
      RowBox[{"-", "0.006619675967229242`"}], 
      RowBox[{"-", "0.008066958145110069`"}], 
      RowBox[{"-", "0.009018019403305697`"}], 
      RowBox[{"-", "0.00949729249720647`"}], 
      RowBox[{"-", "0.00956461242990311`"}]},
     {"0.5482090598643864`", "0.4484704691173992`", "0.2747302700862419`", 
      "0.16847549059864528`", "0.11949201201634657`", "0.08762938975757777`", 
      "0.06132837768709145`", "0.04042761494389814`", "0.02528535871009686`", 
      "0.015296651493096732`", "0.009246955263206484`", 
      "0.005776533564056277`", "0.00371240590746152`", 
      "0.002227127647006332`", "0.0008529076223451979`", 
      RowBox[{"-", "0.0005910739450949976`"}], 
      RowBox[{"-", "0.00210171756555609`"}], 
      RowBox[{"-", "0.0035868356934078004`"}], 
      RowBox[{"-", "0.004933769128500799`"}], 
      RowBox[{"-", "0.006049224372746738`"}], 
      RowBox[{"-", "0.006875959527301772`"}], 
      RowBox[{"-", "0.007394347861473732`"}], 
      RowBox[{"-", "0.0076159636484839695`"}], 
      RowBox[{"-", "0.007574252590226784`"}], 
      RowBox[{"-", "0.007315289382677548`"}]},
     {"0.24072478528426297`", "0.21146962514882237`", "0.15818928224309817`", 
      "0.11963970428627965`", "0.09409193536744957`", "0.07253916132900803`", 
      "0.05337263520074277`", "0.037431133610668466`", 
      "0.025154280505446304`", "0.016307626712443787`", 
      "0.010238357348257978`", "0.006159578469259441`", 
      "0.003358091486025087`", "0.0013004614476705035`", 
      RowBox[{"-", "0.00034755688553819307`"}], 
      RowBox[{"-", "0.0017550219787063695`"}], 
      RowBox[{"-", "0.0029802313283049863`"}], 
      RowBox[{"-", "0.0040226728103971085`"}], 
      RowBox[{"-", "0.004861513423605159`"}], 
      RowBox[{"-", "0.005478625598819308`"}], 
      RowBox[{"-", "0.005868966218393661`"}], 
      RowBox[{"-", "0.00604259387703008`"}], 
      RowBox[{"-", "0.006022186059736253`"}], 
      RowBox[{"-", "0.005838803590686003`"}], 
      RowBox[{"-", "0.005527540702627663`"}]},
     {"0.13091456249702182`", "0.12344589100293693`", "0.10773508660928817`", 
      "0.09135789945017489`", "0.0750691134018271`", "0.05890921106131539`", 
      "0.04396456817255753`", "0.031218916469145375`", "0.02109641571895359`",
       "0.013516428480909237`", "0.008082412259861414`", 
      "0.004276994311294797`", "0.0016078541869715475`", 
      RowBox[{"-", "0.00031350379675936017`"}], 
      RowBox[{"-", "0.0017513084959127352`"}], 
      RowBox[{"-", "0.0028620336096742923`"}], 
      RowBox[{"-", "0.003726188190162331`"}], 
      RowBox[{"-", "0.004380122454943237`"}], 
      RowBox[{"-", "0.004840307258790267`"}], 
      RowBox[{"-", "0.0051184204112351105`"}], 
      RowBox[{"-", "0.005228750265940514`"}], 
      RowBox[{"-", "0.005190438315460839`"}], 
      RowBox[{"-", "0.005026869957324979`"}], 
      RowBox[{"-", "0.004763864065083672`"}], 
      RowBox[{"-", "0.004427651765511838`"}]},
     {"0.07917315445232152`", "0.07818209959222965`", "0.07414362635712195`", 
      "0.0659026734370755`", "0.054667515186590854`", "0.042629315169436834`",
       "0.031333294798317896`", "0.021630247963037568`", 
      "0.013868484691389009`", "0.00801779465449893`", 
      "0.0038097426326207653`", "0.0008779033373248834`", 
      RowBox[{"-", "0.0011359306694112702`"}], 
      RowBox[{"-", "0.0025227197618312405`"}], 
      RowBox[{"-", "0.003488633896257902`"}], 
      RowBox[{"-", "0.0041641942905775164`"}], 
      RowBox[{"-", "0.004624910671276902`"}], 
      RowBox[{"-", "0.00491262300656656`"}], 
      RowBox[{"-", "0.005052126315492715`"}], 
      RowBox[{"-", "0.005061761958221152`"}], 
      RowBox[{"-", "0.004958891257433794`"}], 
      RowBox[{"-", "0.004761894743213019`"}], 
      RowBox[{"-", "0.004490218600408183`"}], 
      RowBox[{"-", "0.004163558918455707`"}], 
      RowBox[{"-", "0.003800840161254566`"}]},
     {"0.05195132285660501`", "0.05224306203288573`", "0.05100576582905773`", 
      "0.04586316409014321`", "0.03782596527186064`", "0.02899639933484997`", 
      "0.02068464422891291`", "0.013546191797355278`", 
      "0.007845916241909032`", "0.0035688248746536637`", 
      "0.0005231347233187876`", 
      RowBox[{"-", "0.0015577028972375178`"}], 
      RowBox[{"-", "0.0029372928823676787`"}], 
      RowBox[{"-", "0.0038325682680451626`"}], 
      RowBox[{"-", "0.004400099360145742`"}], 
      RowBox[{"-", "0.0047418547364031045`"}], 
      RowBox[{"-", "0.004919491015971898`"}], 
      RowBox[{"-", "0.004969380595167165`"}], 
      RowBox[{"-", "0.004914434427810948`"}], 
      RowBox[{"-", "0.0047717247169968054`"}], 
      RowBox[{"-", "0.004556519494899709`"}], 
      RowBox[{"-", "0.004283870031607552`"}], 
      RowBox[{"-", "0.003968813108188879`"}], 
      RowBox[{"-", "0.0036259499929858583`"}], 
      RowBox[{"-", "0.0032688608820295455`"}]},
     {"0.03576728168028744`", "0.03601222027161899`", "0.03518852213709502`", 
      "0.03150719219352429`", "0.025683708332761474`", 
      "0.019270485266968382`", "0.013235341154679935`", 
      "0.00806010844048993`", "0.003940692976551663`", 
      "0.0008689375656200016`", 
      RowBox[{"-", "0.0012928429121344678`"}], 
      RowBox[{"-", "0.0027380203962672264`"}], 
      RowBox[{"-", "0.0036592007136096783`"}], 
      RowBox[{"-", "0.004216217361924572`"}], 
      RowBox[{"-", "0.004525803700433731`"}], 
      RowBox[{"-", "0.004665361184251463`"}], 
      RowBox[{"-", "0.004682972918749556`"}], 
      RowBox[{"-", "0.004608049863944563`"}], 
      RowBox[{"-", "0.004459756886447118`"}], 
      RowBox[{"-", "0.004252482839381847`"}], 
      RowBox[{"-", "0.0039987746326379065`"}], 
      RowBox[{"-", "0.003710537841587922`"}], 
      RowBox[{"-", "0.0033992532537478544`"}], 
      RowBox[{"-", "0.0030757470334988445`"}], 
      RowBox[{"-", "0.002749838164297263`"}]},
     {"0.024562215020703087`", "0.024580569276288235`", 
      "0.023745844854411138`", "0.021003608312857212`", 
      "0.016823548475368807`", "0.012245769669798498`", 
      "0.007943557548463745`", "0.004260864580967592`", 
      "0.0013399546685211356`", 
      RowBox[{"-", "0.0008227328188129972`"}], 
      RowBox[{"-", "0.002323982567328223`"}], 
      RowBox[{"-", "0.0033013851277571876`"}], 
      RowBox[{"-", "0.003893089431607171`"}], 
      RowBox[{"-", "0.004214796429598318`"}], 
      RowBox[{"-", "0.004352096087306046`"}], 
      RowBox[{"-", "0.004362825637493817`"}], 
      RowBox[{"-", "0.004283917819322701`"}], 
      RowBox[{"-", "0.004138774428259584`"}], 
      RowBox[{"-", "0.0039431406501353305`"}], 
      RowBox[{"-", "0.003708945963680046`"}], 
      RowBox[{"-", "0.0034463922796241805`"}], 
      RowBox[{"-", "0.003164841378123454`"}], 
      RowBox[{"-", "0.0028730189730306116`"}], 
      RowBox[{"-", "0.0025789066355353316`"}], 
      RowBox[{"-", "0.0022895449116745476`"}]},
     {"0.016023070068503554`", "0.015876066126399233`", 
      "0.015040119799041053`", "0.013014207746530754`", 
      "0.010088572331532375`", "0.0069139016329294286`", 
      "0.003937617985369438`", "0.0013979159471143527`", 
      RowBox[{"-", "0.0006042809344393322`"}], 
      RowBox[{"-", "0.002069451138637703`"}], 
      RowBox[{"-", "0.003063551382533091`"}], 
      RowBox[{"-", "0.003681882553478197`"}], 
      RowBox[{"-", "0.00402117805995961`"}], 
      RowBox[{"-", "0.004163468397204291`"}], 
      RowBox[{"-", "0.004170478579692763`"}], 
      RowBox[{"-", "0.004084948040902699`"}], 
      RowBox[{"-", "0.003935100479655654`"}], 
      RowBox[{"-", "0.0037395496661036674`"}], 
      RowBox[{"-", "0.003511246248395211`"}], 
      RowBox[{"-", "0.0032600858373137147`"}], 
      RowBox[{"-", "0.0029943549604603027`"}], 
      RowBox[{"-", "0.0027213783499259406`"}], 
      RowBox[{"-", "0.002447709962570161`"}], 
      RowBox[{"-", "0.0021791134683636026`"}], 
      RowBox[{"-", "0.0019204798805355868`"}]},
     {"0.009414044225654953`", "0.00918271961807336`", 
      "0.008407691452014645`", "0.006946567531912575`", 
      "0.0049667882997339215`", "0.002845448186349695`", 
      "0.0008659504256454911`", 
      RowBox[{"-", "0.0008121511869807704`"}], 
      RowBox[{"-", "0.002119194493006397`"}], 
      RowBox[{"-", "0.0030539009633117004`"}], 
      RowBox[{"-", "0.00365976373266543`"}], 
      RowBox[{"-", "0.004000979691249684`"}], 
      RowBox[{"-", "0.004143695073268607`"}], 
      RowBox[{"-", "0.004144987464602647`"}], 
      RowBox[{"-", "0.004048819592548971`"}], 
      RowBox[{"-", "0.003886617886562376`"}], 
      RowBox[{"-", "0.003680003331557133`"}], 
      RowBox[{"-", "0.0034438860143644863`"}], 
      RowBox[{"-", "0.0031889949976672224`"}], 
      RowBox[{"-", "0.002923579277780922`"}], 
      RowBox[{"-", "0.0026543806776194445`"}], 
      RowBox[{"-", "0.002387103738338393`"}], 
      RowBox[{"-", "0.0021265964660022816`"}], 
      RowBox[{"-", "0.0018768954006144706`"}], 
      RowBox[{"-", "0.0016412270138070277`"}]},
     {"0.004465868148582003`", "0.004209855265532546`", 
      "0.003536391588091949`", "0.0025103487728982904`", 
      "0.0012199653353450227`", 
      RowBox[{"-", "0.00013844603958655105`"}], 
      RowBox[{"-", "0.0013949269287044034`"}], 
      RowBox[{"-", "0.0024461598513103736`"}], 
      RowBox[{"-", "0.003245343376598478`"}], 
      RowBox[{"-", "0.0037904327864280393`"}], 
      RowBox[{"-", "0.004109253213856064`"}], 
      RowBox[{"-", "0.004244030500627826`"}], 
      RowBox[{"-", "0.004239179622334322`"}], 
      RowBox[{"-", "0.004133960478473463`"}], 
      RowBox[{"-", "0.003959571217216706`"}], 
      RowBox[{"-", "0.003739227279891124`"}], 
      RowBox[{"-", "0.003489676828465879`"}], 
      RowBox[{"-", "0.0032230219903032916`"}], 
      RowBox[{"-", "0.0029482501572440454`"}], 
      RowBox[{"-", "0.0026722944436526216`"}], 
      RowBox[{"-", "0.0024006716360426184`"}], 
      RowBox[{"-", "0.002137825497952434`"}], 
      RowBox[{"-", "0.001887298831656655`"}], 
      RowBox[{"-", "0.0016518227904904015`"}], 
      RowBox[{"-", "0.001433376213664142`"}]},
     {"0.0009614579022310931`", "0.0007164447616596112`", 
      "0.00015818475117542174`", 
      RowBox[{"-", "0.0005454042896635651`"}], 
      RowBox[{"-", "0.0013539593866367687`"}], 
      RowBox[{"-", "0.002183203404692835`"}], 
      RowBox[{"-", "0.002937756374684021`"}], 
      RowBox[{"-", "0.0035528179688991434`"}], 
      RowBox[{"-", "0.0039976566908419406`"}], 
      RowBox[{"-", "0.00427009008729104`"}], 
      RowBox[{"-", "0.004387505551887153`"}], 
      RowBox[{"-", "0.004377256354674404`"}], 
      RowBox[{"-", "0.004268929687082502`"}], 
      RowBox[{"-", "0.004089535172235878`"}], 
      RowBox[{"-", "0.0038614060536057626`"}], 
      RowBox[{"-", "0.0036019665358946423`"}], 
      RowBox[{"-", "0.003324442091188716`"}], 
      RowBox[{"-", "0.003038829439046289`"}], 
      RowBox[{"-", "0.0027527573527153875`"}], 
      RowBox[{"-", "0.0024721153319206155`"}], 
      RowBox[{"-", "0.0022014641810662715`"}], 
      RowBox[{"-", "0.0019442915733658154`"}], 
      RowBox[{"-", "0.0017031755379436082`"}], 
      RowBox[{"-", "0.0014799008995902757`"}], 
      RowBox[{"-", "0.0012755551775008`"}]},
     {
      RowBox[{"-", "0.0013529648046558256`"}], 
      RowBox[{"-", "0.0015696895629490133`"}], 
      RowBox[{"-", "0.002017895452785551`"}], 
      RowBox[{"-", "0.0024918359719706025`"}], 
      RowBox[{"-", "0.0029779988125170015`"}], 
      RowBox[{"-", "0.003456544560837301`"}], 
      RowBox[{"-", "0.0038785520609950137`"}], 
      RowBox[{"-", "0.004204478469843958`"}], 
      RowBox[{"-", "0.004414452703949611`"}], 
      RowBox[{"-", "0.004506491748252254`"}], 
      RowBox[{"-", "0.004491337308567252`"}], 
      RowBox[{"-", "0.004386678285248301`"}], 
      RowBox[{"-", "0.004212357704498422`"}], 
      RowBox[{"-", "0.003987240151051432`"}], 
      RowBox[{"-", "0.0037276705149352912`"}], 
      RowBox[{"-", "0.0034470669761172386`"}], 
      RowBox[{"-", "0.003156129859258718`"}], 
      RowBox[{"-", "0.0028632731880079277`"}], 
      RowBox[{"-", "0.002575058135979253`"}], 
      RowBox[{"-", "0.0022965443125380247`"}], 
      RowBox[{"-", "0.0020315521286227304`"}], 
      RowBox[{"-", "0.001782858639631397`"}], 
      RowBox[{"-", "0.0015523516551796356`"}], 
      RowBox[{"-", "0.0013411597032499337`"}], 
      RowBox[{"-", "0.0011497677659728588`"}]},
     {
      RowBox[{"-", "0.0027495931499667064`"}], 
      RowBox[{"-", "0.0029325818256852147`"}], 
      RowBox[{"-", "0.003285455047329856`"}], 
      RowBox[{"-", "0.0036015369919060575`"}], 
      RowBox[{"-", "0.0038809986320694724`"}], 
      RowBox[{"-", "0.00413756161004204`"}], 
      RowBox[{"-", "0.00434958573022318`"}], 
      RowBox[{"-", "0.004493410025082156`"}], 
      RowBox[{"-", "0.004556246223013104`"}], 
      RowBox[{"-", "0.0045364519090510475`"}], 
      RowBox[{"-", "0.004440716432467922`"}], 
      RowBox[{"-", "0.004280673393034377`"}], 
      RowBox[{"-", "0.004069959248224879`"}], 
      RowBox[{"-", "0.003822155718060715`"}], 
      RowBox[{"-", "0.0035496271708873317`"}], 
      RowBox[{"-", "0.003263033643068075`"}], 
      RowBox[{"-", "0.0029712501794781844`"}], 
      RowBox[{"-", "0.0026814787688356706`"}], 
      RowBox[{"-", "0.002399424512107844`"}], 
      RowBox[{"-", "0.0021294773669834253`"}], 
      RowBox[{"-", "0.0018748813401236828`"}], 
      RowBox[{"-", "0.0016378897396617262`"}], 
      RowBox[{"-", "0.0014199087976338681`"}], 
      RowBox[{"-", "0.0012216310666674614`"}], 
      RowBox[{"-", "0.0010431587304654756`"}]},
     {
      RowBox[{"-", "0.003484051076715178`"}], 
      RowBox[{"-", "0.003634280774135809`"}], 
      RowBox[{"-", "0.003909247499612418`"}], 
      RowBox[{"-", "0.004119734475189439`"}], 
      RowBox[{"-", "0.004271915186580724`"}], 
      RowBox[{"-", "0.0043943085440088`"}], 
      RowBox[{"-", "0.004480205740104462`"}], 
      RowBox[{"-", "0.004515551395497579`"}], 
      RowBox[{"-", "0.004492045825193967`"}], 
      RowBox[{"-", "0.004408415039380935`"}], 
      RowBox[{"-", "0.004268973168813523`"}], 
      RowBox[{"-", "0.004081666986044212`"}], 
      RowBox[{"-", "0.0038562597194554903`"}], 
      RowBox[{"-", "0.0036029435702570646`"}], 
      RowBox[{"-", "0.0033314341426222403`"}], 
      RowBox[{"-", "0.0030504643261109825`"}], 
      RowBox[{"-", "0.002767553683900416`"}], 
      RowBox[{"-", "0.0024889453223924086`"}], 
      RowBox[{"-", "0.0022196372166128735`"}], 
      RowBox[{"-", "0.001963465666276`"}], 
      RowBox[{"-", "0.0017232175700098557`"}], 
      RowBox[{"-", "0.0015007575294397235`"}], 
      RowBox[{"-", "0.001297159996326399`"}], 
      RowBox[{"-", "0.0011128391535261246`"}], 
      RowBox[{"-", "0.0009476714179594181`"}]},
     {
      RowBox[{"-", "0.003771315235661282`"}], 
      RowBox[{"-", "0.0038924914344758465`"}], 
      RowBox[{"-", "0.004105683865190624`"}], 
      RowBox[{"-", "0.004246577375295315`"}], 
      RowBox[{"-", "0.004323197468689525`"}], 
      RowBox[{"-", "0.004368220360788791`"}], 
      RowBox[{"-", "0.004382355808818478`"}], 
      RowBox[{"-", "0.004357166013959701`"}], 
      RowBox[{"-", "0.004287146654088243`"}], 
      RowBox[{"-", "0.004171365265448523`"}], 
      RowBox[{"-", "0.0040127887156214785`"}], 
      RowBox[{"-", "0.003817153588064969`"}], 
      RowBox[{"-", "0.0035918142806400373`"}], 
      RowBox[{"-", "0.0033447675413632687`"}], 
      RowBox[{"-", "0.003083924868140821`"}], 
      RowBox[{"-", "0.0028166237355944624`"}], 
      RowBox[{"-", "0.002549333673880569`"}], 
      RowBox[{"-", "0.00228750830164883`"}], 
      RowBox[{"-", "0.002035542132559935`"}], 
      RowBox[{"-", "0.001796800347219621`"}], 
      RowBox[{"-", "0.0015736968519423538`"}], 
      RowBox[{"-", "0.0013678010174281107`"}], 
      RowBox[{"-", "0.0011799577100620206`"}], 
      RowBox[{"-", "0.0010104092708879905`"}], 
      RowBox[{"-", "0.0008589119180537129`"}]},
     {
      RowBox[{"-", "0.0037765037473572903`"}], 
      RowBox[{"-", "0.0038729396671806585`"}], 
      RowBox[{"-", "0.004037521319859538`"}], 
      RowBox[{"-", "0.004132452780161285`"}], 
      RowBox[{"-", "0.0041655634572305865`"}], 
      RowBox[{"-", "0.0041681268032965684`"}], 
      RowBox[{"-", "0.00414396142983059`"}], 
      RowBox[{"-", "0.004087835445650506`"}], 
      RowBox[{"-", "0.003995984546778657`"}], 
      RowBox[{"-", "0.00386777154006204`"}], 
      RowBox[{"-", "0.0037054141731474905`"}], 
      RowBox[{"-", "0.0035133166514163894`"}], 
      RowBox[{"-", "0.0032973035063875466`"}], 
      RowBox[{"-", "0.0030638989838182376`"}], 
      RowBox[{"-", "0.0028197277111093547`"}], 
      RowBox[{"-", "0.002571063212462844`"}], 
      RowBox[{"-", "0.0023235211592949733`"}], 
      RowBox[{"-", "0.0020818796649810494`"}], 
      RowBox[{"-", "0.0018500031476461158`"}], 
      RowBox[{"-", "0.0016308448945822399`"}], 
      RowBox[{"-", "0.0014265044748084114`"}], 
      RowBox[{"-", "0.0012383188708338978`"}], 
      RowBox[{"-", "0.0010669701659616144`"}], 
      RowBox[{"-", "0.0009125971632777773`"}], 
      RowBox[{"-", "0.0007749026750945233`"}]},
     {
      RowBox[{"-", "0.0036169568832669042`"}], 
      RowBox[{"-", "0.003692596500944787`"}], 
      RowBox[{"-", "0.003818566154874185`"}], 
      RowBox[{"-", "0.0038824668356075153`"}], 
      RowBox[{"-", "0.00389104477397749`"}], 
      RowBox[{"-", "0.0038715861628000527`"}], 
      RowBox[{"-", "0.0038287029181029533`"}], 
      RowBox[{"-", "0.003758976592500759`"}], 
      RowBox[{"-", "0.0036597502768050505`"}], 
      RowBox[{"-", "0.0035306343208967674`"}], 
      RowBox[{"-", "0.003373428163901732`"}], 
      RowBox[{"-", "0.0031917038187336453`"}], 
      RowBox[{"-", "0.002990264608534604`"}], 
      RowBox[{"-", "0.0027745873637474027`"}], 
      RowBox[{"-", "0.0025503206625543053`"}], 
      RowBox[{"-", "0.0023228799928211906`"}], 
      RowBox[{"-", "0.0020971554225629793`"}], 
      RowBox[{"-", "0.001877329403758496`"}], 
      RowBox[{"-", "0.0016667908262645145`"}], 
      RowBox[{"-", "0.0014681252658555863`"}], 
      RowBox[{"-", "0.0012831595392303733`"}], 
      RowBox[{"-", "0.0011130401491589125`"}], 
      RowBox[{"-", "0.0009583287783041858`"}], 
      RowBox[{"-", "0.0008191024437278198`"}], 
      RowBox[{"-", "0.0006950502352826604`"}]},
     {
      RowBox[{"-", "0.0033705043000346164`"}], 
      RowBox[{"-", "0.0034286311221611624`"}], 
      RowBox[{"-", "0.0035233469450697396`"}], 
      RowBox[{"-", "0.0035654429452720935`"}], 
      RowBox[{"-", "0.0035602890926526207`"}], 
      RowBox[{"-", "0.0035302369808627746`"}], 
      RowBox[{"-", "0.0034795477542007985`"}], 
      RowBox[{"-", "0.003405845054150094`"}], 
      RowBox[{"-", "0.0033072102319743027`"}], 
      RowBox[{"-", "0.003183458918687869`"}], 
      RowBox[{"-", "0.0030361463009746853`"}], 
      RowBox[{"-", "0.002868287902238465`"}], 
      RowBox[{"-", "0.0026839537622168766`"}], 
      RowBox[{"-", "0.002487820991480043`"}], 
      RowBox[{"-", "0.0022847504603921978`"}], 
      RowBox[{"-", "0.0020794315554245497`"}], 
      RowBox[{"-", "0.0018761174274382578`"}], 
      RowBox[{"-", "0.001678455094030554`"}], 
      RowBox[{"-", "0.001489401659728263`"}], 
      RowBox[{"-", "0.00131121015409156`"}], 
      RowBox[{"-", "0.0011454655681597881`"}], 
      RowBox[{"-", "0.0009931524842716106`"}], 
      RowBox[{"-", "0.0008547388270655253`"}], 
      RowBox[{"-", "0.0007302643406090215`"}], 
      RowBox[{"-", "0.000619426359923062`"}]},
     {
      RowBox[{"-", "0.0030856323217623486`"}], 
      RowBox[{"-", "0.0031289087124818054`"}], 
      RowBox[{"-", "0.00319781320447735`"}], 
      RowBox[{"-", "0.0032238186920368283`"}], 
      RowBox[{"-", "0.0032109057701671696`"}], 
      RowBox[{"-", "0.003176390075395665`"}], 
      RowBox[{"-", "0.0031236886096313314`"}], 
      RowBox[{"-", "0.003051053606928827`"}], 
      RowBox[{"-", "0.0029570906406945594`"}], 
      RowBox[{"-", "0.002841785083262983`"}], 
      RowBox[{"-", "0.0027065350911332367`"}], 
      RowBox[{"-", "0.002553949282529317`"}], 
      RowBox[{"-", "0.002387528004204896`"}], 
      RowBox[{"-", "0.0022112965442362097`"}], 
      RowBox[{"-", "0.002029447796594916`"}], 
      RowBox[{"-", "0.0018460358807160203`"}], 
      RowBox[{"-", "0.001664744038228528`"}], 
      RowBox[{"-", "0.0014887335317594395`"}], 
      RowBox[{"-", "0.0013205676174282341`"}], 
      RowBox[{"-", "0.001162196896015382`"}], 
      RowBox[{"-", "0.0010149892229883084`"}], 
      RowBox[{"-", "0.0008797878303985438`"}], 
      RowBox[{"-", "0.000756983998694566`"}], 
      RowBox[{"-", "0.0006465941961760255`"}], 
      RowBox[{"-", "0.0005483350935723252`"}]},
     {
      RowBox[{"-", "0.00279084168369458`"}], 
      RowBox[{"-", "0.0028214570356621454`"}], 
      RowBox[{"-", "0.002868726218691072`"}], 
      RowBox[{"-", "0.0028823106418456703`"}], 
      RowBox[{"-", "0.002864907931400936`"}], 
      RowBox[{"-", "0.0028291041369793058`"}], 
      RowBox[{"-", "0.002777320374291304`"}], 
      RowBox[{"-", "0.0027082194291804564`"}], 
      RowBox[{"-", "0.0026208036614447637`"}], 
      RowBox[{"-", "0.0025151983595214237`"}], 
      RowBox[{"-", "0.002392686411964932`"}], 
      RowBox[{"-", "0.0022555520224773716`"}], 
      RowBox[{"-", "0.0021068230776189493`"}], 
      RowBox[{"-", "0.0019499677198521288`"}], 
      RowBox[{"-", "0.00178859414929033`"}], 
      RowBox[{"-", "0.0016261903843866634`"}], 
      RowBox[{"-", "0.001465925486320476`"}], 
      RowBox[{"-", "0.0013105192503963612`"}], 
      RowBox[{"-", "0.0011621760524958443`"}], 
      RowBox[{"-", "0.0010225714836394533`"}], 
      RowBox[{"-", "0.0008928774836537501`"}], 
      RowBox[{"-", "0.00077381197478335`"}], 
      RowBox[{"-", "0.000665701253898536`"}], 
      RowBox[{"-", "0.0005685464548741196`"}], 
      RowBox[{"-", "0.00048208837616048577`"}]},
     {
      RowBox[{"-", "0.002501977747755425`"}], 
      RowBox[{"-", "0.0025217947578648164`"}], 
      RowBox[{"-", "0.002550812256929048`"}], 
      RowBox[{"-", "0.0025545054733448714`"}], 
      RowBox[{"-", "0.0025344391726838645`"}], 
      RowBox[{"-", "0.002498954413108776`"}], 
      RowBox[{"-", "0.0024494932319749276`"}], 
      RowBox[{"-", "0.0023850124331952797`"}], 
      RowBox[{"-", "0.002304829944393198`"}], 
      RowBox[{"-", "0.00220918540153797`"}], 
      RowBox[{"-", "0.0020992657449559297`"}], 
      RowBox[{"-", "0.0019770793853134024`"}], 
      RowBox[{"-", "0.0018452452745524222`"}], 
      RowBox[{"-", "0.0017067419867251592`"}], 
      RowBox[{"-", "0.00156465773418604`"}], 
      RowBox[{"-", "0.0014219725516021362`"}], 
      RowBox[{"-", "0.0012813912846879208`"}], 
      RowBox[{"-", "0.0011452337641090638`"}], 
      RowBox[{"-", "0.0010153788716153094`"}], 
      RowBox[{"-", "0.0008932531258603469`"}], 
      RowBox[{"-", "0.0007798518584115516`"}], 
      RowBox[{"-", "0.0006757812357017842`"}], 
      RowBox[{"-", "0.0005813112466656234`"}], 
      RowBox[{"-", "0.0004964323196884684`"}], 
      RowBox[{"-", "0.0004209107245221544`"}]},
     {
      RowBox[{"-", "0.002227350874619545`"}], 
      RowBox[{"-", "0.0022380108714572674`"}], 
      RowBox[{"-", "0.002251667601630432`"}], 
      RowBox[{"-", "0.0022473770133499466`"}], 
      RowBox[{"-", "0.0022257315254634097`"}], 
      RowBox[{"-", "0.002191374995246138`"}], 
      RowBox[{"-", "0.0021448637502689337`"}], 
      RowBox[{"-", "0.0020853824619093482`"}], 
      RowBox[{"-", "0.00201250735501242`"}], 
      RowBox[{"-", "0.0019265699305685644`"}], 
      RowBox[{"-", "0.0018286701342766754`"}], 
      RowBox[{"-", "0.0017205729076379247`"}], 
      RowBox[{"-", "0.0016045353088059888`"}], 
      RowBox[{"-", "0.0014831004824826545`"}], 
      RowBox[{"-", "0.0013588919785318156`"}], 
      RowBox[{"-", "0.0012344342143992962`"}], 
      RowBox[{"-", "0.0011120146119576318`"}], 
      RowBox[{"-", "0.0009935928444478506`"}], 
      RowBox[{"-", "0.0008807546150612441`"}], 
      RowBox[{"-", "0.0007747023284863852`"}], 
      RowBox[{"-", "0.0006762728673070284`"}], 
      RowBox[{"-", "0.0005859728045035486`"}], 
      RowBox[{"-", "0.0005040228925312436`"}], 
      RowBox[{"-", "0.00043040574425667644`"}], 
      RowBox[{"-", "0.0003649126591412266`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.886026333145585*^9, {3.886026408665122*^9, 3.886026452920969*^9}, 
   3.8860264894347258`*^9, 3.886030693894084*^9, 3.886032544083206*^9, 
   3.8860358884133577`*^9, {3.8860441461373177`*^9, 3.886044154799177*^9}, 
   3.886045742049182*^9, 3.886049129610065*^9, 3.886050666671445*^9, 
   3.886051533490567*^9, 3.886052062685923*^9, 3.886054006854252*^9, 
   3.886054071651514*^9},
 CellLabel->
  "Out[792]//MatrixForm=",ExpressionUUID->"7059fd37-b57e-4536-badf-\
50c980b51f84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ii", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacobiWavefunctionFit", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r1", "^", "2"}], "+", " ", 
          RowBox[{"r2", "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "+", "r2"}], ")"}], "^", "2"}]}], ")"}]}], "]"}]}], 
     "&"}], "/@", 
    RowBox[{"fitfunctions", "[", 
     RowBox[{"[", "ii", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "/", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"NormTF", "[", 
    RowBox[{"fitfunctions", "[", 
     RowBox[{"[", "ii", "]"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"norma", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{"(*", 
    RowBox[{
     SuperscriptBox["r1", "2"], " ", 
     SuperscriptBox["r2", "2"]}], "*)"}], " ", 
   RowBox[{
    RowBox[{"JacobiWavefunctionFit", "*", "JacobiWavefunctionFit"}], ",", 
    RowBox[{"{", 
     RowBox[{"r1", ",", 
      RowBox[{"-", "120"}], ",", "120"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r2", ",", 
      RowBox[{"-", "120"}], ",", "120"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.886133636923657*^9, 3.886133646656168*^9}, {
  3.8861337346468678`*^9, 3.886133947947589*^9}, {3.8861339784881783`*^9, 
  3.8861339845190763`*^9}, {3.886134059068728*^9, 3.886134113015136*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"db8682ab-cdf2-4188-aa81-9ee925b01dec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1.2359684806485773`"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "21.326455149064394`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r1", "2"], "+", 
       SuperscriptBox["r2", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r1", "+", "r2"}], ")"}], "2"]}], ")"}]}]]}], "+", 
  RowBox[{"90.78729446653709`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.10047504213358072`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r1", "2"], "+", 
       SuperscriptBox["r2", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r1", "+", "r2"}], ")"}], "2"]}], ")"}]}]]}], "-", 
  RowBox[{"90.1168593826325`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.1000000658123286`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r1", "2"], "+", 
       SuperscriptBox["r2", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r1", "+", "r2"}], ")"}], "2"]}], ")"}]}]]}]}]], "Output",
 CellChangeTimes->{{3.886133839347389*^9, 3.8861338648460093`*^9}, 
   3.8861339486819344`*^9, 3.886133985302401*^9, {3.88613405960252*^9, 
   3.8861341139537354`*^9}},
 CellLabel->
  "Out[376]=",ExpressionUUID->"b7fa7648-fa97-4a43-9f7d-eb940d1aa10e"],

Cell[BoxData["245.23241580604085`"], "Output",
 CellChangeTimes->{{3.886133839347389*^9, 3.8861338648460093`*^9}, 
   3.8861339486819344`*^9, 3.886133985302401*^9, {3.88613405960252*^9, 
   3.886134113954544*^9}},
 CellLabel->
  "Out[377]=",ExpressionUUID->"c8cc94e6-ff98-4d9e-adcf-37ff87b620e0"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 378, 21, 
   18256381695354149176, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8861339853224983`*^9, {3.886134059611308*^9, 3.886134113963092*^9}},
 CellLabel->
  "During evaluation of \
In[375]:=",ExpressionUUID->"7ac94a4b-33f6-42cb-a040-1d9cf4e18a9c"],

Cell[BoxData["2.222990044086801`"], "Output",
 CellChangeTimes->{{3.886133839347389*^9, 3.8861338648460093`*^9}, 
   3.8861339486819344`*^9, 3.886133985302401*^9, {3.88613405960252*^9, 
   3.886134113993548*^9}},
 CellLabel->
  "Out[378]=",ExpressionUUID->"e1508404-d4ed-4cd0-a24d-13ac50ed2068"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"JacobiWavefunction", "*", "JacobiWavefunction"}], ",", 
   RowBox[{"{", 
    RowBox[{"r1", ",", "0", ",", "200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r2", ",", "0", ",", "200"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.886051834284493*^9, 3.886051887594215*^9}, {
   3.886053649765654*^9, 3.886053652186049*^9}, {3.886053719240501*^9, 
   3.886053720315159*^9}, {3.886053893654677*^9, 3.88605391002241*^9}, 
   3.88605401345356*^9},
 CellLabel->
  "In[343]:=",ExpressionUUID->"b829d9b2-2b60-4a92-9775-9edb2e8fb246"],

Cell[BoxData["1.0000000120398391`"], "Output",
 CellChangeTimes->{
  3.886051827414895*^9, {3.886051865766268*^9, 3.886051888154395*^9}, 
   3.886052065729431*^9, 3.886053653123193*^9, 3.886053722499563*^9, 
   3.8860539108816023`*^9, 3.886054014649313*^9, 3.886054074304994*^9, 
   3.886055434014316*^9, 3.8861336678414288`*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"fe8b0535-aa0c-4c03-a9dd-880fbec895cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"{", "JacobiWavefunctionGrid", "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Psi]\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(\[GothicCapitalA]\), \(+\)]\)\[Psi]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.886026130343711*^9, 3.886026187726478*^9}, {
   3.886026293019896*^9, 3.8860263047989693`*^9}, {3.8860441734305563`*^9, 
   3.886044219323235*^9}, {3.886049094326651*^9, 3.8860490947380238`*^9}, 
   3.886051256842482*^9},
 CellLabel->
  "In[922]:=",ExpressionUUID->"e4eccd3d-1a24-4317-8677-1d8ad964b0e4"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1:eJxlnXlYzF/7x9skhJYxpozM1GjaZtqmmUnktmXfkiVbImRLyr6kSNZIdqUi
Qtmp0L4XlYQksm9pkZKy/+a5fs3H9byf7z+uXt9Rb3evzuece8458ecud52v
pqKiMqiDioq6ivK/xoHKPwdzVmd9deqV2f4/SMl7JbxSPz3IsJ1rMbzzpqoZ
u3f0bOc6DNdfMEfTP1q/nbMYXuO3t3b6pm7tnMNw1xUda9RMNNs5l+ENzZZe
pfI/Gf//Me/f131XXzAnprmdGzO8aNNSx87FH9u5gOF5Yz1ePo970c5NGW4y
xWVC6YZH7dyM4RNlc1Om2Je1cwuGz43O5F1wu9vOrRgue9W0qKVTUTsXM9zg
75AhUrXCdm7D8N1hqw8ZbCpo57YMv3F18bTCvkpux/Cq2Fr/P1X57dye4fVa
+dMG71dyCcPH+J4ZIBmm5A7/vm5cKY/1La+dSxnOb8jWeRqr5DKGr50Y+jd+
nJLLGT7PKrDDhW+57dyR4b1/Z4VrRiq50isV4r9Z8jWvSOmP0isVejrIK+18
uUE712K4afiLbaHG6JUKXRw35+dOF/RKheIeLlnlW9O1nXMY7uc48pXfhQ7t
nMtwwQ21kPqA3+CVCokMJtapdEevVGjJqPPxtW8+gFcqZP51vLVO3+fglQoN
PxH79bfFQ/BKhWxO+C0T/i0Br1Sox4fXfR93KwKvVCi57XgxVeaDVyqU3U36
rrQ6D7xSoYI1Xbt8mZsHXqnQhMklolusPPBKhQ6vMu6TW54LXqlQ2a8X3Jb9
ueCVCh39OFel6/hc8EqFYk0mjpvUKRe8UqEDj/9+Tc/MAa9UyOr7++lLV+WA
VyrUe0hK00ZhDnilQhlT+vbXe5wNXmmR3a0fO3p3Vvqj9EqLJNfWTi7ncTKV
Hyv/7NRpa9zqIz3auQ7Da7WEgo/Nuu2cxfDcyu++c/O6tHMOwx94Vh2a21Gj
nXMZXlOTOrtQ7yd4pUXs4CS7Za5fwCst6rF1Tsk173fglRbZV7UavwusAq+0
qHDkHm7S1PvglRb1IstzySOLwCstmnDqoN+Y6lzwSov6f5gzXbU+G7zSoi4d
Zct7GGSDV1pUVODhXJyYBV5pkZmTYV3l2izwSouu3nSiN8OywCstWit6MG+n
fhZ4pUUX1Q5vkr3IBK+0KEB2XO5zLhO80qLlLeIA2+WZ4JUWvVUNfHPcPhO8
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
zMb8xnTbPK9TnDvmN6ZLB9xCvtlgfgGVRwXdMfWthvwCennRZ+WyZ3chv4C0
m5876qqnQ34Bjf9zprmjCtZfQGPuOvTa/hDzC8huiPbFbu6YX0Bu1k2/X4zC
/AKa8itq3ldDzG9KZw6k2O4e9hDym9Le5xrsS6PzIL8pVT72+rNhOeY3Jb3l
+9/NTMf8ptTn3Ox388Tojyn166410vsA5jelYrbthHvrML8pmW9a31VImN+M
XpZpzb+7vgTym5HvxqbhWcz+TD7DL7Qte5QzMBPym9HKex/so5n9MCKGz3jy
5GZeKOY3I88Qlx2TH2J+M+ryYqHDuiuY34zGOX9Yz/XB/Bak/nbtyRGO+ZDf
glyDNqjPYtYXfIZv7Mjv9nMo+m9BtzIupmtY4fhjQXKtPuO1UzC/Bf3e8c7+
QA3mt6CJS4qDD2VgfgvK7WUYenQt5reiEw9VxrhNyYL8VuTyLWu6+/kMyG9F
wUlFT0b9xPxWVPGgeo/PEsxvRRsf86PFsZjfipJ8trtGZGF+K8o7mtFn9WHM
b0VZrUfnlI7H/GL6PtxV1ZfZR8Rm+F3xlmGuFemQX0w+9asDdL2zIb+Y6hJ/
Vs/xwPxiKvT4Vn3EFfOLadSHqIZbCzG/mORTX41YOhDziylVkm2r/RvnPzaU
63pX5LrwNuS3odjW4yMudcP629CUgbFFlhcxvw19nTaYU2qK+W2oOnHEpLI3
OP7Y0ISEg2ljlfsMmfw2FO+Qrqt3Pwvy21DJ9eKSHocwvy01pA3s1kszBfLb
kvT6N7dqAfpvS+fvLFEf8hHz21KIpYe7ygv8+bWlqxXXDbm+mN+WdmhnhO8P
wPy2NP9385A/czC/LVU8W+9Uaon57UhQ8/q1K7N/ns3wj6UakxxMsiC/HQ1e
GpV4yjQH8tvRYvbOpeOPY347Wuj2ucWrI+ZXfN3F067q9sD8drQgTk9+4xfO
3+yoWGNvxcQInL/Zk3zMM34f5v1BNsP33Hte1zgOx097sm2bECFfgPnt6dMO
nYJPszG/Pc2+bvX48SWcf9rTNZuScvdUnH/ak9tJcef55zC/PXV6+uHKn1/p
kF9Ci7WLcju/y4b8EmrTH7Do1oocyC8hTa/14XqRmF9Cp00F9voWmF9CIcvX
1q6bh/klNHiY5jH3FZhfQv0/xxSae2J+CXXuol7dfw3md6CEnF4VpZdyIb8D
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
      "], {{{
         RGBColor[0.880722, 0.611041, 0.142051], 
         EdgeForm[None], 
         Specularity[
          GrayLevel[1], 3], 
         StyleBox[
          GraphicsGroup3DBox[{
            Polygon3DBox[CompressedData["
1:eJxNmwf8l2MXxp/fc9//Em2FaCijXdJSKRpWNlkRStlk71GRRPam18pI2aJo
aAnZZK8iO157j/f6dp3/x9vnczrnuZ/79zz3c89zrnP9W44YvcexZaF/VUWR
pDaQVCSU7aKCraUv0MX+0v0lAyQHhB4o2TVZT1CdA6UHSbaRHBR6W8keqrOz
9EWqM1J6sGRHyW7J9y9U+aHSOxWut7vKd5CeqPLDaQfvkZwg2Veyn+RYyRDJ
XmjV31N6kurvKXs32RfLHh3390Yn60tUfpL00MLfdLxkn3ju3snPvlR1joh3
8qyToy7ffRTt45skwyXbSbaPNm1VuL94Vr+43j/5WVfpmQfIPlr21aXbsqWk
r6SjZG1JI0kHScO47ixpLFmH5ybfP0e/3Up2A9lnyR6a3HdXyh4RbaHvzpYc
Uri/900ej8tVZ1hyv1wj+7TCY8a9fZK/7zLGMbmvr5V9UPL3Xyf74OTfXC/7
DOmDow/ODM37T5UMi+ful1x2hepvFt+xbuE+oP8Ys7U12X6T/l3yhOpfqevv
Vf826QmSCyWPq/xS6e9Ufo/0ZZLLJbdKLoh6N0vOl4yXPKz6p0t/qfpXS58h
OVNyTeizJHdLLqn4uY8kl32l+ndJT4p7M5Pf/1+VL5P9seza0q9K3pe9pvSP
0u9I3pW8puvl0mslt+8UyamSlySPSh6TTJFMlFwkuSP0xZIXaIdkhmRWctm3
em8D6V/UN78yBrLPlpxDPdU5V3qV6jwr/YDkQclilT8k/afKn6cv4rlL4z73
5qjO9dI/qs5c2TfJ/kn2k8n9/ovs+cnt+1X2vOT+/Vn2Itn3y/6j9DNoC+14
WnJfxfcWqs506d9V51HZ42R/Lfux5PH5RvZ/pM+LMbtRMkYytuK2oPnNU8n9
8ZfqL0ges99kL5aeVvE7ZieP6w8qXyJ9b7TjFZW/LV1Lun/yvBujOgOS97gT
Zdfhd7J/ZA9S+U/S81VexVyQvUpSt+L7P0W9dyTvSjLzq3A9xud9yQcxTugP
JaXqfC79haQ+/Rd1x+hd70nP0rsmyP5e9pOy12TMZX8nOV3lS6QfYq3JXir7
Ydas7EWyH5R9Lt8oe2bp9tEunrsGfSz9X8kFyXqe6oxP/qa5smsyJoXrrVXx
O2nHqaozX/oB1Rmb/B2Py/5T+iPJx5IjmT/St6v8bulL2DMlj0hukNzI79lj
2EP4BuZu4d/MiPs3hYyVjJPcIblIcrHkLsmkeO4RetfV0reV3iOWS1ZI7pNc
Vfje4apzhfStqnN+cn/PkV3Rd31WeAzGJbf9CZWfJ/tT2bNl/y29UvKJ5J/Q
3Dss+ZtuYc9hX2T/lEwLzfvulVwZ7WjHGBfel0/Rb+dK31/6ec9JnpfsnLzf
j1f5xtJr0veSjSS14nqg6jSXPrn0WdhV0k2yQ/IeOrb0mdRD0rPwGdU9rgcn
1x2nOn2Tn32a7B2T654nu5/surLPkL2l7DVor+zW0nUK32srqRffs7lkPUmT
wu3KxWpXoWhW2F/guneyv3CC/mspXbPwczeU1IjrPsm/O0l1NpWuHe9jTJ4t
PL85q/sUPhc5H7aQ9JKcrd++Jv1o6fn7auFr1t4rcc38fVPyVowf/f2C5Bz9
9g3px0rPb+6zZlgTrxe+xxpYFtdnqf7L0jNUfyfZvWWfL/vM5Oc9Unp+vVS4
3jbJY3m6ygclf/+ppc822s7vt03u3zNVvn3yeX+u7O2S583ZpdfGOZRLhief
qTeofGLynrKg9Dx+sfrdfJfm9xrS30m/KXmLszM0e9/OGpzEfi69S/ae9av0
YAaNPV96x+x18rP05pLH6D/p/pKnZH8r3VMyW/YX0t0ks2R/Jt1d8rjsz6W3
z15LP0pvIZkj+0vp7SR/yf5BelvJH7K/l95AcgxjJt0k2696Q3o9yZGMhXSL
bP/sHemWkhNlvyvdXHIc4yjdRfKo7E+kd5PU4IyQbprtI74lPVDyNHNEurHk
MOaPdG/JPOaR9NaSxcwL6QP1jEGSbfAx8IHpU/X/ftJbVXx9u8q34+zHV8EH
ps/xk6X7SwbgY+BzSn/IfJDuJektOSDu85t9Jf3iuf307oXMR+lb2CsYV/12
L+k+ki0r9rfxr/DT+qjek7JXSfeVLJD9dba/NDXOyimyB+OfyL4DP1z2e6Xb
xfN4x13J7ftA5XfiP8t+X/bNye19o/S5fZTkaMk62X75MumOkgdlfyR9EGOs
+6UW+n6y68n+R3qf7LP2b+mDmSuyk+ocILuh7IrsodlnJJvEONmTZTeRfV62
r7C+7NE8S3Yd2XvLro1vID2e/pK9gcr3lF0L/0R6uGQH2VnlhzDXZVfJHil7
J9k1ZDdgDrGPSB/KOlF5TZUfJntX1pfsI2Tvji8h+0jZe8heU/bRsofIXkv2
MdnjVFv2kOyz/E/pVtnxxnvSF2T7rE1VZ1K2r7mh7E2y/eYPeE/22fy7dCPJ
KPY36Y0lp8h+X7q15HTZH0q3yfbFl0t3kjzMnirdOfs8XindTnKW7BXUzfaJ
G+m9F8q+XXYz2WfJvlZ2Y9lnZ/ua68g+LnuO1pU9Mdt/bS77Ytl3ym4he0y2
D7ee7BOz10B92SfIHiq7nuzTZV8le23Zp8m+QnZD2SfLHia7gexzZd8ge90q
+4VHxpy7jxhK+hPNw/uT5+Cnsp9L9juT9EfSz1TsC38cGp/3+WSdpT+Rfq5i
v/jT0Pjd+Oz4jjzrK8krkle5l3y/KuKS0yqOK17kjGD+4GsTH8n+ovR6aiXZ
SHIN5zjPIAbB5+R9snsw/vR57ActmAOxL6BbSq5N1i+q/nWcL7Jf4ozgHJH9
cun9YhPJprGGeSf1esazeffnPKPi+GNVfNNrXCfrmvEdxCUzKz4znpTMl/xX
8nrFZ8zryf1VhzMH/4r5IP2N9LKo91byb+pLv5n8vnrJZ9G8eO4X0Rbe+Wzy
eyrJsdMCycJo3+OSJyqOsRZV7O9/KHkqxonvmBX1liS3/W/1ydPJv/tH9jP4
YBU7KXzDnIqvaevsuF6a/Owy9nj6kv5lb24jaSvpKmkiWV9yr+odKr2ydNwz
UjJKMk3lB0t/pPLpsg9hDpaONYdLRlQcX6K5x/7aI8aKvWSLmAvEoidVPJ+Y
ZwdV/NzLkn30p/FFk8+PFaXjLt5Pmx5Q+Wjpz0rHrMdWfE1sfExcE9OeGO8g
vjq84nX1oH57AvOldOx1WNwjBj2+4nvEqcfF9dTks3C56l+eHCM9I/uK5Hj1
WeJ96XUk61Z8/nDdpeL9uHNc36j6nRhP1b8p+f5rpffd7tFHA2Mc2lV8djEe
3SrevzeP68nJZcv02xuS675S+vxuL+lQ8VndseL3dYvx3CDaRBvXi3uNJI0l
VybrpXrORcnxz8LSscuYwnHLxckxwyKVX5ocdy2RfVXy854jzk0e59dlX5Ic
Wz4le1JyfLiY32af1y21741I9gFv5LfS5+F/4kvrugZxGz526DVKYyrEBWBF
H/J8la0rvTz5/nrSG0nXIr6UtJPUB1eQrGBeSTdhj4n7XOfw9fHxm3Nd+rkp
ypoWjh1aha8LgDgEP0UyOvTepf3+lhEH/IqPwbyQ/i35fhfp46X3kexbOlag
bovCMQXvIU5nGROzr184juA+8RExE7ET7fhI5fVUtr50G+m6pa+/Zl5Jb8KY
EO+xPzDmsv+q+Ppj3Wuo6w2Yj9KNJI3ZY/kd8YrkK91rL72R9JfxjlbshdF3
LaXfT3524+Tf1JbUkXzAWDNW0u8xl5hnnAl8W+l7zejf6Ov2MT4NQ35V/d8q
Lvul4ut39PufpRsmt/WPSjxX9u8VX7+b/Lu1pddXeRHv61t6TtDuoyS7S/Yo
jTuCP7YvHHffL31P6TieeJ5r4njieXy+g3VvW8l2koNYb3H9g347iO9gL5Te
QTJYMkKyfVz/mPy7Dsm+Ln4dfvJPyXU7Jp+n+Kn4VfjU+BVDY19gD2WfYH3h
m+Gv4qsPjX2pe9zfJfZX9tndY5/dM645Q9nH8G/6xHvw5/B70fjD/eI+7QOT
7Rh9dLju7cJeJfkZv1q6U3J83SZiPWLwTSI2JN4l7uWa2JoYm3rE2O3iGly3
fcSD4L2dIk4EF9g45nrjWOvcI35uHc8dpnoDS/f70TGerLfvkse7LT5UtHc3
yaGSnUq3e5Rkx7g+QDIgnjWUdkj6S75hj2UtSH+fXNZO+ltiBNltOP/Z62S3
lv4l+T2dk8/TA2L8VsUa25jxZQ3FXAT3IN4HowCjA9MAxwDXAO8A5yC+Bh8g
Hiem7l84N0EMDt4OrkLMTexdjR+gwevBQNDkBcBUwFbIN5CbIB4EPwc/IddA
ngK8hTwFOQj2erCqG2M/Zl+ezLslt0pukRySXDalNP4Pfl6dW0ATrxL7ky8g
30HsP6hw3oTcBPfB5LvHt+4S+/7N8T7aCs4/Ku4Rf9Fu+mN1DqQwXoEmDwKG
snfcIw9BfoJ20WfkMsh/VOdpwOoHFMb/uTcoyogzyQFRl5xIv3gG30TfjCyc
YwDXoozcCt83vHBugP4mrieeJy+DJg/C9x0R30D7yEcQq5P34XnkC4ZEGRgB
OY0R8VxyPZSRQ2Fsj453kEvineQ4OkrWjn18TIwbuCT4CjgLexi5GMZvcml8
C5yLOBCsGA3ORq5kIv1fOo/D2N9UOj8CPnlz6bwJcRn5EXIxq99XOm8CZgh+
2DP2d85S+pd8CjFhD103jXufJ5/rG0pvxllR+ozqEpqzi3WGH0C9lbHvN5X+
JM62ZtJdpZuU3u97SVrEbz6N86Z5rGPuc/1ZcrtaJPse9BO47tBo44kxF8j7
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
jQ+BrwR/G78F/wVsgbMcjOJ/aPNYyA==
             "]], 
            Polygon3DBox[CompressedData["
1:eJw1mnfgl9MXx+99nvsxs7JFNKiEFJGIrIxIJZXsvcsK2bLHTzbZ0aCUSBHZ
W1ZCRmTvvbff+9X7+ON8P+c89z7P9z53nPM+7/O02HdI38FVSul0/Sn6fVi/
P+q3SU7p3Dqlh2R/J3th2efIbilpq2tLSD6Q3q2RUhfpG0ke0AMe1O/X6r+A
+p+t9k3UvoGubSiZrvZNG+7bVTJD9iP6/UX9l1D/89R/Y7V3rnzPfWrfUtfO
5H71+Uf6DOlfSK/V/yzZm6v/prq2meRR9d9d166Xfrb6rCS7tdp/V9/fJJfL
fkBtn6otyT5TfbeTnK9r2+nSkmpvqf6/qO1nyaWy91D7DWo/T+2ryL5f9h+y
J6j9eNkvSV9d+qaSq9X2ouyW0jeWXCV7HUkvXTuI95T+vH5XVltnyRWyZ8pe
UXonxif7OdnLSe8guUz2a7K7SO8juUH2VNmvJs/xKbJvl3yua0PVfqzG84b0
zaUPktystjmVxzZAcpPsVyv/716S62V3lAzQtSMlv0u/X78f6dl/S4bLfkH2
qtljuFL265XfrZ/kRtmbab421rVNJA/p/3dvWO8meVj2FuozXPr6et4f0ls1
vBa/8n5qn66299T2u+QMtXdV+3r0l0xT+zT9zkneg6eq/V7ZbyXv0dNkr63+
C+raApJR6n9BzOGyev7Wsh+t/Oymss9X232y30nec6fLPlZyj669LHu9Yn1W
8h47WW1nM3/SB0h2lL2B5EBd2zHWs7NkP+nbS36WfrJ+m6pve8lmso+RTNG1
F2Svq+c3NN4DNJb9JfvJLrL3k76vZJ/ic7iC+naUbK57j5bcrWvPyV5L7XUj
+kr2lv0Re0v66ZI71HchtR8i/WDJQWo/i/XSvf0kO8RZ6iK9j6Sn7A8qP+tE
yfjYS8dJHyG5S/bXss9kr0imyl6wEc+WHKjnn8N+07MGSXqpfQG1H5jjHdX+
sdoPzX7GRLVXat9b+l4I66X2Xrr3IElftZ8nexvpe0t6y95HMkrXrpDdTv0/
k36M7r1IMlltl1TuO0wyUPaprL30dSTdZZ8reyvpe0h2kn2p7P1YW8musi+s
PBeHSnaWPaJy3+NYc9mfyD4C3yeZFL5i++Rn9JG9sN7nsOx3PETju7jyXBwj
6a/2iyrP/RGsgewPK6/9KZIJsveS3KRrF6u9le7/X+W9dqRkF7XtLblZ1y6V
vQbtcSab6/6dis9W5+Q53F5tJ8huIn11STfZnSSDWCPJD9I3kgyR3j/O+3H6
XVh9W0o24TxwlqSvKtlY9on4eultJZuyH2XrJ60s6Srly8rvcpVkiuwuksN1
bWfJb9LbaX4yAUZynca7Pu/EGkt+kr6eZA/WiLgjfUPJIdJ7S36Vvqburyo/
43rd3152YQySG2WvJbtR+dpNsj/Fl3HWJXfq/t0k1+nacA1hebW3Vf9/1faP
ZCTxQO1/qn2S7JNk3yZ9fPJ8H6y28bLvkn4Ne0T2npIbde1C2aup/xeVz87l
krvjrL+YHGNOkv1V5bM5UnKP7Jdlt8320dcwP7V9ZWvJ59IX0fgOz7Gn9Pw1
ZP8l/U/mWHabhsf+N/fTXttXNpN8In11fDo+RPKx9NbEIM4Efp32hp/1B/5c
939TeW/fJJlGbK8dm1tIPpPepnbsbk7clL6M7r+Ce2O+Juj6PXrX6ySHxV69
TPqEmL8FJbPV937J0/gH5kD6vZKn8FfEFOkPSp7hPEnelP6I5Fnpi0re417J
TOlNOEPSn5M8z3xJ3pH+BNekLyX5IfsZs6SPjTM8f07xt7XvvYt7GEtx7N8W
DEI8L9bxQYtLb157btmD70pfufZcsiZzOYvqs3Wyj1lU+vuSq6RfKVlT+iq1
14I99470F3WtR/I9TaTPk1yePGdtpL9X7Ou41lb6krrn2+w5erk2HvtWba9H
PASv/SD9zYiH4Kmfpc+N+Eb8+036vIivT8pu6FlfJeMz8NAnyfGJ/Ur8/zA5
3pzI3GoMl0gfIWldvD5v6f4fY37BY58nx0/i5S0RU/Dxe6r/uNpncojswbKX
4Exk74mXpL9bfNb4H6tLX4z1UtsLiPTFiUnZe+bF2viSsc8O/MP+maO272J+
Vqu9dxcCV0hftfbexUfMk/48mFL3biFZWHozXWtaGSO+Lf3Hynv75PBnnO9h
2e8zPvwdbfuF/+Z8n5Yd84i/xMvh2TGYePczfi/7GvHzB85H9jPxF5y/s7P3
J/HlJ9nXZD8Tf1HV3tvgzcfw5ZJr+Z8a/9Ia/+/Sx6ntYsl0tf0me7T0CyX3
yf5V9ijp53HmwtfdyVmTPF4by94h/cl4/ujamGJ+DNfzf8HPZo8R//B9+Cww
9yNqf4Kzkb0HwOPfVx7L0MAP31Uey9ERrx/XPRskx6y/eLdibM+1vzmbYEiw
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
mZ6MuTYoxr/kzGMinsO3sXZwTFcX8x/E4uOT+YlhtTEhZ2zLYv6CthOS+Vnw
5GCwWnK9CP6Ttfgsm78Evx6rtqHJfC/8D76dMwLfQ70ATg383LEYr+LLBwc+
Bd8dBvZLrm+R/xH7Dw68yHrD2XUJfwOeJTYfFniQegKcJvnIOsX49QDpBybz
CeBtsAVjBF/DvzJ2OJgbYr3hHDuHf2N/LFObD2O+tpY+rDJGIH8Fn4M1jkrG
88T/9rX5XvI76jes9TeSW4rj55q1+erbY/2Wq82/8f/XabgvnNitxXwoe/Pj
bD6X/bd0bT4H//FobY6EPXFxMf9L30/iPLHflq/ND91cnH8w1qOT+d03anNw
8Euji/ln9tKX2Xwz/DM6nBb3gxdWrJ0Pj437V6jNRzHeDg0/C58wpjhfhWPB
B5wte8lG1PIkx8j+RZKzOZYdivPhLdV/i8AXnOeJ2RzOsPAvk7M5npOL+Vq4
i4lx3jmP5GKTw//gT6dkx9TTwt+SO08Lf0x9artsTLxv+Kvp0u+L8S7acC1w
F8kR4b/IlaeHP6MetEM25oZPov5FrOMa9SHmntrdqpX5uY917aVkDp39T70J
rLBTdj2L+hY6OQN8CnO7MP6jMt9HPGHscCrDw/+T+06JeMHaNGF/VuYr8K3U
JlaszM+yl+HWl6vM77L3qDWsXJn/ZW/BnS9dmS/8mTnLruGCp8Ajq2TXeMFT
PxVzLctLti3mo5asjA+pn8Mn87/Am/Dz1Md6ZOck8KcfFHOxz5IzSP9Q8nxy
js75pf5Ebbhvdr3go2Iulz4diusJtJGjwX+DD95Prrniv6gngu1YY+qPTRpe
S3LEweFPH8vOETk/nF2w3Z6V6zX4c7j6hyPecj7Z69RkOc/gcWqucwN/gDep
gTeL/Qy+p6Y9O/wx8ZKzs0jl88F5QWeNR4d/oSbbLfIb8Dc1wx6RTxGbwSb7
VK4v4a+pMc8LPAj+pebOmmwX8YcaadfA80s04uxJjpa9eCO4KsmRshdrhC4Z
Iruj7MUq76lxMX/zue44D5yP+brk8DjPvDt7pmdxfkSNcsvA8xk+JBsjguc/
KebWOROdivMVauBvBt4C7/Ju7wZeJT7DFY+XnFCMj+B2ZmTjG/AO+gMRL4ml
YMf9K9evyU+o6XaP/I14ydq8Iuks/dNifVbgZfAfY3kj8CL48u3kGj35FHia
sb0T+Rh4lL3wduBP8Cb3zol8h/yHmv/rkV+QH7yW/M0D+R/5B22vRb7wY/HZ
4psJ8Ar5LFzmMpIexdiGbw04c/C/nB9i35Q4H/BxcClwJvB5nB/aqGlRr4f/
GpXMEcHvcR4nJ9cEqceDdcG2+ybXk6n37py8n6i3w7eNTua04AOZP3KN6TGf
8GNw/iPD//5bnKsvKRlUCKLW4TDgO+ETqUXCOf3Ht1F7G57MH7JfpiVzRHzP
QH18r+TzQT0d/hAuCQ7toPC3YI1psb/+Ls41FpMMKK6H7568P/+rn/Ou1Myo
f/9RnJvBefUNf/dPMkfN+fqzOJdcRNIv1gtsSR/8IXwvWICYBr+LPyU3zXE+
qM9Sk7kq4hnfu8ApwW8OjfNC7ru0ZI9iboTYvWty/R1uBGyzY/L3BXAV5B69
k+v95MpgKdaM+jy5NliOOeN7gr+Kxw6nBH9HfZ9ncz743gEuBazXP7leD3cD
tmPO+H4A/hks010yvri+T1/8F9+T/FM813B4A2O+WmV/Q0T+Tf67WvY3OOTP
jAcusVXMJ/MP900f8mPqX8RC+A3qt/DzxDrqNdSXqYcRa8GH1HOpbxLbwHPU
j1n/NbK/aeof+w8url3sR+plxD74G/h/6pvETviVjwO7gU12q/y9Afk23D4x
sVf404HZHCL8P/UCuFVqnvDb7H/+FzVy+CrmB65wjdiPfK/B2lEz4vsV8B0c
JjGIfAIuBm5tmeTvP6j/wlH2C/+Lv4bL+UlyW3Eu2NyvOf97B3K5ZoYE879v
oH4DR0mM5fsO6hdwoIMiPpC7tFDfhZK/nwD7tpa+aPL3F3zfwt6Dg+X7DPhC
9u6ekuOKuTG4nKWSvxcivvCt1sCIN9Rn+BaMGA0/ST0VDndAxB/w4m7ZHCvf
f8E1wRUun/z9EFwTXNziyd9vEN8YO/eAL6mVgOXgWKnH/x+LJvLt
             "]]}], 
          Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0TkyBGEAhuHfvo51rJmEAIldRMAkRCL72Pe9FEoxxQmQcAUm4QpIOAMJ
ZyAh8XQJnnrn6+qpv2e6YW57ZCsjhHBOJtHnen6zQmjXYRaJZ4eQ0hseaLVf
9TO6l4Qd9+VWEiTtpB5xFdVO6zPv0TX7W0sc2kTa7tcxxmlz/oROMkW7Pa1J
ZuiwZ3WOeTrtBV1kiS57WVdYpdte03U26LE3dYtteu0d3WWUR8/Tp43EuLW/
PO8bT1zYd3rJIQf2tA7SwpRdqT/+mw8G7Be955pm+1QXGKLCbtM6ajlzZo1W
U0XKjmtldC8ndrmWUcqxXaIxijmyi7SQAg7sfM0jl307Rx0b/PSwl/n//v8A
pnUwpg==
          "]]}, {
         GrayLevel[0.2], 
         Line3DBox[{1019, 1218, 1018, 834, 1020, 1219, 1021, 1220, 1022, 835, 
          1023, 1221, 1024, 1222, 1025, 836, 1026, 1223, 1027, 1224, 1028, 
          837, 1029, 1225, 1030, 1226, 1031, 838, 1032, 1227, 1033, 1228, 
          1034, 839, 1035, 1229, 1036, 1230, 1037, 840, 1038, 1231, 1039, 
          1232, 1040, 841, 1041, 1233, 1042}], 
         Line3DBox[{76, 77, 650, 78, 79, 80, 651, 81, 82, 83, 652, 84, 85, 86,
           653, 87, 88, 89, 654, 90, 91, 92, 655, 93, 94, 95, 656, 96, 97, 98,
           657, 99, 100}], 
         Line3DBox[{1044, 1234, 1043, 858, 1045, 1235, 1046, 1236, 1047, 859, 
          1048, 1237, 1049, 1238, 1050, 860, 1051, 1239, 1052, 1240, 1053, 
          861, 1054, 1241, 1055, 1242, 1056, 862, 1057, 1243, 1058, 1244, 
          1059, 863, 1060, 1245, 1061, 1246, 1062, 864, 1063, 1247, 1064, 
          1248, 1065, 865, 1066, 1249, 1067}], 
         Line3DBox[{151, 152, 674, 153, 154, 155, 675, 156, 157, 158, 676, 
          159, 160, 161, 677, 162, 163, 164, 678, 165, 166, 167, 679, 168, 
          169, 170, 680, 171, 172, 173, 681, 174, 175}], 
         Line3DBox[{1069, 1250, 1068, 882, 1070, 1251, 1071, 1252, 1072, 883, 
          1073, 1253, 1074, 1254, 1075, 884, 1076, 1255, 1077, 1256, 1078, 
          885, 1079, 1257, 1080, 1258, 1081, 886, 1082, 1259, 1083, 1260, 
          1084, 887, 1085, 1261, 1086, 1262, 1087, 888, 1088, 1263, 1089, 
          1264, 1090, 889, 1091, 1265, 1092}], 
         Line3DBox[{226, 227, 698, 228, 229, 230, 699, 231, 232, 233, 700, 
          234, 235, 236, 701, 237, 238, 239, 702, 240, 241, 242, 703, 243, 
          244, 245, 704, 246, 247, 248, 705, 249, 250}], 
         Line3DBox[{1094, 1266, 1093, 906, 1095, 1267, 1096, 1268, 1097, 907, 
          1098, 1269, 1099, 1270, 1100, 908, 1101, 1271, 1102, 1272, 1103, 
          909, 1104, 1273, 1105, 1274, 1106, 910, 1107, 1275, 1108, 1276, 
          1109, 911, 1110, 1277, 1111, 1278, 1112, 912, 1113, 1279, 1114, 
          1280, 1115, 913, 1116, 1281, 1117}], 
         Line3DBox[{301, 302, 722, 303, 304, 305, 723, 306, 307, 308, 724, 
          309, 310, 311, 725, 312, 313, 314, 726, 315, 316, 317, 727, 318, 
          319, 320, 728, 321, 322, 323, 729, 324, 325}], 
         Line3DBox[{1119, 1282, 1118, 930, 1120, 1283, 1121, 1284, 1122, 931, 
          1123, 1285, 1124, 1286, 1125, 932, 1126, 1287, 1127, 1288, 1128, 
          933, 1129, 1289, 1130, 1290, 1131, 934, 1132, 1291, 1133, 1292, 
          1134, 935, 1135, 1293, 1136, 1294, 1137, 936, 1138, 1295, 1139, 
          1296, 1140, 937, 1141, 1297, 1142}], 
         Line3DBox[{376, 377, 746, 378, 379, 380, 747, 381, 382, 383, 748, 
          384, 385, 386, 749, 387, 388, 389, 750, 390, 391, 392, 751, 393, 
          394, 395, 752, 396, 397, 398, 753, 399, 400}], 
         Line3DBox[{1144, 1298, 1143, 954, 1145, 1299, 1146, 1300, 1147, 955, 
          1148, 1301, 1149, 1302, 1150, 956, 1151, 1303, 1152, 1304, 1153, 
          957, 1154, 1305, 1155, 1306, 1156, 958, 1157, 1307, 1158, 1308, 
          1159, 959, 1160, 1309, 1161, 1310, 1162, 960, 1163, 1311, 1164, 
          1312, 1165, 961, 1166, 1313, 1167}], 
         Line3DBox[{451, 452, 770, 453, 454, 455, 771, 456, 457, 458, 772, 
          459, 460, 461, 773, 462, 463, 464, 774, 465, 466, 467, 775, 468, 
          469, 470, 776, 471, 472, 473, 777, 474, 475}], 
         Line3DBox[{1169, 1314, 1168, 978, 1170, 1315, 1171, 1316, 1172, 979, 
          1173, 1317, 1174, 1318, 1175, 980, 1176, 1319, 1177, 1320, 1178, 
          981, 1179, 1321, 1180, 1322, 1181, 982, 1182, 1323, 1183, 1324, 
          1184, 983, 1185, 1325, 1186, 1326, 1187, 984, 1188, 1327, 1189, 
          1328, 1190, 985, 1191, 1329, 1192}], 
         Line3DBox[{526, 527, 794, 528, 529, 530, 795, 531, 532, 533, 796, 
          534, 535, 536, 797, 537, 538, 539, 798, 540, 541, 542, 799, 543, 
          544, 545, 800, 546, 547, 548, 801, 549, 550}], 
         Line3DBox[{1194, 1330, 1193, 1002, 1195, 1331, 1196, 1332, 1197, 
          1003, 1198, 1333, 1199, 1334, 1200, 1004, 1201, 1335, 1202, 1336, 
          1203, 1005, 1204, 1337, 1205, 1338, 1206, 1006, 1207, 1339, 1208, 
          1340, 1209, 1007, 1210, 1341, 1211, 1342, 1212, 1008, 1213, 1343, 
          1214, 1344, 1215, 1009, 1216, 1345, 1217}]}, {
         GrayLevel[0.2], 
         Line3DBox[{626, 826, 627, 834, 642, 842, 650, 850, 658, 858, 666, 
          866, 674, 874, 682, 882, 690, 890, 698, 898, 706, 906, 714, 914, 
          722, 922, 730, 930, 738, 938, 746, 946, 754, 954, 762, 962, 770, 
          970, 778, 978, 786, 986, 794, 994, 802, 1002, 810, 1010, 818}], 
         Line3DBox[{4, 29, 1021, 54, 79, 104, 1046, 129, 154, 179, 1071, 204, 
          229, 254, 1096, 279, 304, 329, 1121, 354, 379, 404, 1146, 429, 454, 
          479, 1171, 504, 529, 554, 1196, 579, 604}], 
         Line3DBox[{628, 827, 629, 835, 643, 843, 651, 851, 659, 859, 667, 
          867, 675, 875, 683, 883, 691, 891, 699, 899, 707, 907, 715, 915, 
          723, 923, 731, 931, 739, 939, 747, 947, 755, 955, 763, 963, 771, 
          971, 779, 979, 787, 987, 795, 995, 803, 1003, 811, 1011, 819}], 
         Line3DBox[{7, 32, 1024, 57, 82, 107, 1049, 132, 157, 182, 1074, 207, 
          232, 257, 1099, 282, 307, 332, 1124, 357, 382, 407, 1149, 432, 457, 
          482, 1174, 507, 532, 557, 1199, 582, 607}], 
         Line3DBox[{630, 828, 631, 836, 644, 844, 652, 852, 660, 860, 668, 
          868, 676, 876, 684, 884, 692, 892, 700, 900, 708, 908, 716, 916, 
          724, 924, 732, 932, 740, 940, 748, 948, 756, 956, 764, 964, 772, 
          972, 780, 980, 788, 988, 796, 996, 804, 1004, 812, 1012, 820}], 
         Line3DBox[{10, 35, 1027, 60, 85, 110, 1052, 135, 160, 185, 1077, 210,
           235, 260, 1102, 285, 310, 335, 1127, 360, 385, 410, 1152, 435, 460,
           485, 1177, 510, 535, 560, 1202, 585, 610}], 
         Line3DBox[{632, 829, 633, 837, 645, 845, 653, 853, 661, 861, 669, 
          869, 677, 877, 685, 885, 693, 893, 701, 901, 709, 909, 717, 917, 
          725, 925, 733, 933, 741, 941, 749, 949, 757, 957, 765, 965, 773, 
          973, 781, 981, 789, 989, 797, 997, 805, 1005, 813, 1013, 821}], 
         Line3DBox[{13, 38, 1030, 63, 88, 113, 1055, 138, 163, 188, 1080, 213,
           238, 263, 1105, 288, 313, 338, 1130, 363, 388, 413, 1155, 438, 463,
           488, 1180, 513, 538, 563, 1205, 588, 613}], 
         Line3DBox[{634, 830, 635, 838, 646, 846, 654, 854, 662, 862, 670, 
          870, 678, 878, 686, 886, 694, 894, 702, 902, 710, 910, 718, 918, 
          726, 926, 734, 934, 742, 942, 750, 950, 758, 958, 766, 966, 774, 
          974, 782, 982, 790, 990, 798, 998, 806, 1006, 814, 1014, 822}], 
         Line3DBox[{16, 41, 1033, 66, 91, 116, 1058, 141, 166, 191, 1083, 216,
           241, 266, 1108, 291, 316, 341, 1133, 366, 391, 416, 1158, 441, 466,
           491, 1183, 516, 541, 566, 1208, 591, 616}], 
         Line3DBox[{636, 831, 637, 839, 647, 847, 655, 855, 663, 863, 671, 
          871, 679, 879, 687, 887, 695, 895, 703, 903, 711, 911, 719, 919, 
          727, 927, 735, 935, 743, 943, 751, 951, 759, 959, 767, 967, 775, 
          975, 783, 983, 791, 991, 799, 999, 807, 1007, 815, 1015, 823}], 
         Line3DBox[{19, 44, 1036, 69, 94, 119, 1061, 144, 169, 194, 1086, 219,
           244, 269, 1111, 294, 319, 344, 1136, 369, 394, 419, 1161, 444, 469,
           494, 1186, 519, 544, 569, 1211, 594, 619}], 
         Line3DBox[{638, 832, 639, 840, 648, 848, 656, 856, 664, 864, 672, 
          872, 680, 880, 688, 888, 696, 896, 704, 904, 712, 912, 720, 920, 
          728, 928, 736, 936, 744, 944, 752, 952, 760, 960, 768, 968, 776, 
          976, 784, 984, 792, 992, 800, 1000, 808, 1008, 816, 1016, 824}], 
         Line3DBox[{22, 47, 1039, 72, 97, 122, 1064, 147, 172, 197, 1089, 222,
           247, 272, 1114, 297, 322, 347, 1139, 372, 397, 422, 1164, 447, 472,
           497, 1189, 522, 547, 572, 1214, 597, 622}], 
         Line3DBox[{640, 833, 641, 841, 649, 849, 657, 857, 665, 865, 673, 
          873, 681, 881, 689, 889, 697, 897, 705, 905, 713, 913, 721, 921, 
          729, 929, 737, 937, 745, 945, 753, 953, 761, 961, 769, 969, 777, 
          977, 785, 985, 793, 993, 801, 1001, 809, 1009, 817, 1017, 
          825}]}, {}, {}}}, VertexNormals -> CompressedData["
1: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
4bG75U8tiUD6+qsc4/8DHhxmVg==
       "]], {}, {{}, {}}}, Axes -> True, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {360., 347.60929157824967`}, 
    Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "RotationControl" -> "Globe"}, PlotRange -> {Full, Full, Full}, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}}, SphericalRegion -> True, 
    Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
    0.42769327351158737`, 
    ViewPoint -> {1.1168544991007052`, -2.452181657167379, 
     2.0468124359819897`}, 
    ViewVertical -> {-0.250718786250936, 0.5504817406805105, 
     0.7963102055092681}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Psi]\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(\[GothicCapitalA]\\), \
\\(+\\)]\\)\[Psi]\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Specularity", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Lighting", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.886026163976506*^9, 3.88602618845158*^9}, 
   3.886026306382625*^9, 3.886030717935584*^9, 3.886032650590288*^9, 
   3.886035892911552*^9, 3.886044161479762*^9, 3.8860442211273537`*^9, 
   3.886045756810337*^9, 3.88604611582535*^9, {3.88604907068862*^9, 
   3.886049095386044*^9}, 3.8860491384883213`*^9, 3.886049237364027*^9, 
   3.886050674643743*^9, 3.886051537959271*^9, 3.886051589788022*^9, 
   3.8860518138284893`*^9, 3.886052067250102*^9, 3.8860540177157373`*^9, 
   3.886054076246479*^9, 3.886055436395791*^9, 3.8860555112280283`*^9},
 CellLabel->
  "Out[922]=",ExpressionUUID->"2180a805-9236-4d62-945e-972ccc30cc39"]
}, Open  ]],

Cell["\<\
open issues:
i)  sign of the wave function must not (?) affect observables, in general, \
the scattering lengths, in particular.
ii)\
\>", "Text",
 CellChangeTimes->{{3.886035950130375*^9, 
  3.886036022398511*^9}},ExpressionUUID->"e3a4b569-8afc-41cd-a05d-\
2746d6018163"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "[", "N_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"row", "\[Equal]", "col"}], ",", 
      RowBox[{"2", " ", "\"\<(2\[Alpha])\>\""}], ",", 
      RowBox[{"1", " ", "\"\<(2\[Alpha])\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"row", ",", "1", ",", 
      RowBox[{"N", "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"col", ",", "1", ",", 
      RowBox[{"N", "-", "1"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"nn", ",", "\"\<) \>\"", ",", 
       RowBox[{
        RowBox[{"mat", "[", "nn", "]"}], "//", "MatrixForm"}], ",", 
       "\"\<  |A|=\>\"", ",", 
       RowBox[{"Det", "[", 
        RowBox[{"mat", "[", "nn", "]"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"nn", ",", "1", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.886136119054984*^9, 3.8861363631429577`*^9}, {
  3.886137056404779*^9, 3.8861370737036448`*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"da439fcd-72c6-44e3-8f51-af3af6a496c1"],

Cell[BoxData[
 TemplateBox[{
  "Det", "matsq", 
   "\"Argument \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a non-empty square matrix.\"", 2, 390, 
   25, 18256381695354149176, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8861363305985613`*^9, 3.886136364321763*^9, {3.886137063655924*^9, 
   3.886137074304483*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"80e4df1b-50e4-4ac6-8f17-3a25da9fee76"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"{", "}"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"Det", "[", 
    RowBox[{"{", "}"}], "]"}]}],
  SequenceForm[1, ") ", 
   MatrixForm[{}], "  |A|=", 
   Det[{}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074307291*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"c7862a56-966e-4bcc-a759-d95eb42dfea2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}],
  SequenceForm[2, ") ", 
   MatrixForm[{{2 "(2\[Alpha])"}}], "  |A|=", 2 "(2\[Alpha])"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.8861370743077106`*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"a14f3f67-25c8-4095-a806-cc2465cd5c11"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"3", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"3", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "2"]}]}],
  SequenceForm[3, ") ", 
   MatrixForm[{{2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])"}}], "  |A|=", 3 "(2\[Alpha])"^2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074308241*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"7b1efbe5-70ce-4f90-a917-1cb4ce9aa8d9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"4", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"4", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "3"]}]}],
  SequenceForm[4, ") ", 
   MatrixForm[{{2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])"}}], "  |A|=", 4 
   "(2\[Alpha])"^3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074308794*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"ca356ce5-f474-4a05-9aff-67e257f43ab7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"5", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"5", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "4"]}]}],
  SequenceForm[5, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])"}}], 
   "  |A|=", 5 "(2\[Alpha])"^4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074309305*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"db87f89c-f8a4-4fe3-bd09-ba7b4ca6dd60"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"6", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"6", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "5"]}]}],
  SequenceForm[6, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])"}}], "  |A|=", 6 "(2\[Alpha])"^5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.88613707430982*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"67db3ec7-dfd7-48c1-ae58-e33a04655408"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"7", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"7", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "6"]}]}],
  SequenceForm[7, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", 2 "(2\[Alpha])"}}], "  |A|=", 7 "(2\[Alpha])"^6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.8861370743103933`*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"22550f41-52fc-49e3-b075-66f25580181d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"8", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"8", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "7"]}]}],
  SequenceForm[8, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])"}}], "  |A|=", 8 
   "(2\[Alpha])"^7],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074311049*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"7b8f88d2-f12a-4aa4-b122-90dd3b83a6ec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"9", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"9", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "8"]}]}],
  SequenceForm[9, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])"}}], 
   "  |A|=", 9 "(2\[Alpha])"^8],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074311846*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"b88a77f2-c3d7-440f-969f-d3e335e7e67b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"10", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"10", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "9"]}]}],
  SequenceForm[10, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])"}}], "  |A|=", 10 "(2\[Alpha])"^9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074312769*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"811f4135-e086-4085-b00c-9acb009a248b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NormTF", "[", "testcore", "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "/", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"NormT", "[", "testcore", "]"}], "2"]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.886220043251102*^9, 3.88622010669744*^9}, {
  3.886220140938747*^9, 3.886220189251519*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"62394fa1-6c9e-4f73-8543-946f6acf8f8c"],

Cell[BoxData["84.47143681854145`"], "Output",
 CellChangeTimes->{{3.886220054213173*^9, 3.8862201074782352`*^9}, {
   3.88622014804198*^9, 3.886220190353408*^9}, {3.886220403334009*^9, 
   3.886220427787387*^9}, 3.886220502848435*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"b1f1b5fb-cb1d-4be6-acb1-281f38ef1e7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bnd", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testcore", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"13.3", ",", "1.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"103.3", ",", "2.5"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unfi", "=", "testcore"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormT", "[", 
   RowBox[{"core_", ",", 
    RowBox[{"N_", ":", "3"}]}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"core", "[", 
         RowBox[{"[", "ii", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{
        RowBox[{"core", "[", 
         RowBox[{"[", "jj", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Pi", "^", 
           RowBox[{"(", 
            RowBox[{"N", "-", "1"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"N", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"core", "[", 
                 RowBox[{"[", "ii", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"core", "[", 
                 RowBox[{"[", "jj", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"N", "-", "1"}], ")"}]}]}], ")"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"3", "/", "2"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "1", ",", 
        RowBox[{"Length", "[", "core", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"jj", ",", "1", ",", 
        RowBox[{"Length", "[", "core", "]"}]}], "}"}]}], "]"}], ",", "2"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"no", "=", 
    RowBox[{"NormT", "[", "unfi", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Print", "[", "\"\<---------------------\>\"", "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Norm=\>\"", ",", "no"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<---------------------\>\"", "]"}], 
      "\[IndentingNewLine]", "nfifu"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          SqrtBox["no"]}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", "unfi"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "\"\<Normalized: \>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"nofi", "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SqrtBox["no"]], " ", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"r1", "^", "2"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"r2", "^", "2"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"r1", " ", "r2"}], ")"}]}]}], ")"}]}], "]"}]}], 
          "&"}], "/@", "unfi"}], "]"}], "\[IndentingNewLine]", "numi1"}], "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Pi"}], ")"}], "^", "2"}], " ", 
         RowBox[{"r1", "^", "2"}], " ", 
         RowBox[{"r2", "^", "2"}], " ", "nofi", "*", "nofi"}], ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "0", ",", "bnd"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "0", ",", "bnd"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<---------------------\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Unnormalized: \>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"unofi", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx1", "^", "2"}], "+", 
             RowBox[{"ry1", "^", "2"}], "+", 
             RowBox[{"rz1", "^", "2"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx2", "^", "2"}], "+", 
             RowBox[{"ry2", "^", "2"}], "+", 
             RowBox[{"rz2", "^", "2"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx1", " ", "rx2"}], "+", 
             RowBox[{"ry1", " ", "ry2"}], "+", 
             RowBox[{"rz1", " ", "rz2"}]}], ")"}]}]}], ")"}]}], "]"}]}], 
     "&"}], "/@", "unfi"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numi2", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"unofi", "*", "unofi"}], ",", 
     RowBox[{"{", 
      RowBox[{"rx1", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rx2", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ry1", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ry2", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rz1", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rz2", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), \(2  \[Pi]\)]\)d\[Phi]\
\!\(\*SubsuperscriptBox[\(\[Integral]\), \(-1\), \(1\)]\)d(cos\[Theta])\
\[Integral]\!\(\*SuperscriptBox[\(\[Rho]\), \(2\)]\)d\[Rho] \
\!\(\*SuperscriptBox[\(\[CapitalPsi]\), \(*\)]\)\[CapitalPsi] = \>\"", ",", 
   "numi2", ",", 
   "\"\<\!\(\*OverscriptBox[\(\(\\\ \)\(\(=\)\(\\\ \)\)\), \(?\)]\)\>\"", ",",
    "no"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormTF", "[", "testcore", "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "/", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"NormT", "[", "testcore", "]"}], "2"]]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<---------------------\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.886137687563052*^9, 3.8861376960526657`*^9}, {
   3.8861378746776133`*^9, 3.886138081028365*^9}, {3.886138150016366*^9, 
   3.886138197033593*^9}, {3.886138235904414*^9, 3.88613828665664*^9}, 
   3.8861383318276777`*^9, {3.8861383936028976`*^9, 3.886138501690277*^9}, {
   3.8861385583535757`*^9, 3.8861386208997393`*^9}, {3.886138677646489*^9, 
   3.8861387748513927`*^9}, 3.886138814083364*^9, {3.8861388508962193`*^9, 
   3.886138878720912*^9}, {3.8861389137362432`*^9, 3.886139066655684*^9}, {
   3.886139732667962*^9, 3.886139831913512*^9}, {3.886139867931203*^9, 
   3.886139920497748*^9}, {3.88613998928804*^9, 3.8861400628045397`*^9}, {
   3.886140095328641*^9, 3.886140159181925*^9}, {3.8861401912996407`*^9, 
   3.886140191690345*^9}, {3.886140262831954*^9, 3.8861402915580187`*^9}, {
   3.886140341552541*^9, 3.886140418906557*^9}, {3.886140500266655*^9, 
   3.886140638335527*^9}, {3.886140734001038*^9, 3.886140776587687*^9}, {
   3.886140871957653*^9, 3.886140883093769*^9}, {3.886141028276374*^9, 
   3.886141031879979*^9}, {3.886141110579072*^9, 3.8861411447713423`*^9}, {
   3.8861421213393373`*^9, 3.8861421214106817`*^9}, {3.8861421524058447`*^9, 
   3.8861421568011303`*^9}, 3.886142193376709*^9, {3.886143449542006*^9, 
   3.886143452593552*^9}, {3.886143621478788*^9, 3.886143648190003*^9}, {
   3.886143840773917*^9, 3.8861438596125174`*^9}, {3.886143900977839*^9, 
   3.886143919234111*^9}, {3.886143960175706*^9, 3.8861440168541203`*^9}, {
   3.886145891256851*^9, 3.8861459224480333`*^9}, {3.8861462311049643`*^9, 
   3.886146320655026*^9}, {3.886146356248159*^9, 3.886146382075163*^9}, {
   3.8861464245005713`*^9, 3.886146431492311*^9}, {3.88621894651313*^9, 
   3.886219154526558*^9}, {3.886219352216084*^9, 3.886219358708963*^9}, 
   3.886219406473542*^9, {3.886219600941052*^9, 3.8862197023767138`*^9}, {
   3.886219735389263*^9, 3.886219793845868*^9}, {3.886220226381144*^9, 
   3.886220269024935*^9}, {3.886220464661744*^9, 3.886220470373295*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"126ad689-d7b6-4c0f-a0f2-0df3308a1f2e"],

Cell[CellGroupData[{

Cell[BoxData["\<\"---------------------\"\>"], "Print",
 CellChangeTimes->{
  3.8861401526022177`*^9, 3.886140300500639*^9, 3.88614034230476*^9, 
   3.8861403886644278`*^9, 3.886140419581808*^9, 3.886140532541243*^9, 
   3.886140573450674*^9, 3.8861406694301243`*^9, 3.886140746321416*^9, 
   3.8861407772457314`*^9, 3.886140883864285*^9, 3.886141032419701*^9, 
   3.886141961654092*^9, 3.886142125346233*^9, 3.886142157500805*^9, 
   3.8861422086792917`*^9, 3.886143649586739*^9, 3.886143920277761*^9, 
   3.886143961947783*^9, {3.886144000209907*^9, 3.886144017652835*^9}, {
   3.8861458932227077`*^9, 3.886145923000825*^9}, 3.886146325703895*^9, {
   3.886146360167789*^9, 3.886146382619124*^9}, {3.886146427732685*^9, 
   3.886146432560564*^9}, 3.8862191643990726`*^9, 3.886219359393681*^9, 
   3.8862194079004927`*^9, {3.8862197073533993`*^9, 3.886219794385833*^9}, {
   3.886220255807227*^9, 3.886220269680799*^9}, 3.88622047802099*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"b6faab19-bacf-4286-930e-fda004279b9a"],

Cell[BoxData["\<\"Unnormalized: \"\>"], "Print",
 CellChangeTimes->{
  3.8861401526022177`*^9, 3.886140300500639*^9, 3.88614034230476*^9, 
   3.8861403886644278`*^9, 3.886140419581808*^9, 3.886140532541243*^9, 
   3.886140573450674*^9, 3.8861406694301243`*^9, 3.886140746321416*^9, 
   3.8861407772457314`*^9, 3.886140883864285*^9, 3.886141032419701*^9, 
   3.886141961654092*^9, 3.886142125346233*^9, 3.886142157500805*^9, 
   3.8861422086792917`*^9, 3.886143649586739*^9, 3.886143920277761*^9, 
   3.886143961947783*^9, {3.886144000209907*^9, 3.886144017652835*^9}, {
   3.8861458932227077`*^9, 3.886145923000825*^9}, 3.886146325703895*^9, {
   3.886146360167789*^9, 3.886146382619124*^9}, {3.886146427732685*^9, 
   3.886146432560564*^9}, 3.8862191643990726`*^9, 3.886219359393681*^9, 
   3.8862194079004927`*^9, {3.8862197073533993`*^9, 3.886219794385833*^9}, {
   3.886220255807227*^9, 3.886220269680799*^9}, 3.8862204780215693`*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"3f6dfaca-f142-442d-99ee-c6cf590f68cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"103.3`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2.5`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx1", "2"], "+", 
          SuperscriptBox["ry1", "2"], "+", 
          SuperscriptBox["rz1", "2"]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rx1", " ", "rx2"}], "+", 
          RowBox[{"ry1", " ", "ry2"}], "+", 
          RowBox[{"rz1", " ", "rz2"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx2", "2"], "+", 
          SuperscriptBox["ry2", "2"], "+", 
          SuperscriptBox["rz2", "2"]}], ")"}]}]}], ")"}]}]]}], "+", 
  RowBox[{"13.3`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "1.5`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx1", "2"], "+", 
          SuperscriptBox["ry1", "2"], "+", 
          SuperscriptBox["rz1", "2"]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rx1", " ", "rx2"}], "+", 
          RowBox[{"ry1", " ", "ry2"}], "+", 
          RowBox[{"rz1", " ", "rz2"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx2", "2"], "+", 
          SuperscriptBox["ry2", "2"], "+", 
          SuperscriptBox["rz2", "2"]}], ")"}]}]}], ")"}]}]]}]}]], "Output",
 CellChangeTimes->{
  3.886137696842328*^9, 3.8861377507507963`*^9, 3.88613785459977*^9, 
   3.8861379102637367`*^9, 3.886137977078844*^9, 3.886138010321496*^9, {
   3.886138048142976*^9, 3.88613806267899*^9}, 3.8861382025686083`*^9, 
   3.886138236712792*^9, 3.886138334826393*^9, 3.886138394484507*^9, {
   3.886138442731866*^9, 3.8861384785371532`*^9}, 3.886138625011817*^9, {
   3.886138678999895*^9, 3.8861387374349833`*^9}, 3.8861387764370823`*^9, {
   3.8861388606596413`*^9, 3.88613887985753*^9}, {3.8861389152577467`*^9, 
   3.886138942540612*^9}, {3.886138977237033*^9, 3.886139021308393*^9}, 
   3.886139052731038*^9, {3.886139737495667*^9, 3.886139766405717*^9}, 
   3.886139834557521*^9, 3.886139926996562*^9, {3.886140005858865*^9, 
   3.886140032491105*^9}, 3.886140065672864*^9, 3.886140096436301*^9, 
   3.886140152606744*^9, 3.886140300505378*^9, 3.8861403423057756`*^9, 
   3.886140388665229*^9, 3.88614041958251*^9, 3.886140532542397*^9, 
   3.886140573451611*^9, 3.886140669430995*^9, 3.886140746322761*^9, 
   3.886140777246894*^9, 3.8861408838652067`*^9, 3.8861410324213552`*^9, 
   3.8861419616551332`*^9, 3.886142125347698*^9, 3.886142157501781*^9, 
   3.8861422086805477`*^9, 3.886143649588059*^9, 3.886143920278777*^9, 
   3.88614396194921*^9, {3.8861440002108*^9, 3.886144017653796*^9}, {
   3.886145893223662*^9, 3.886145923002445*^9}, 3.8861463257055387`*^9, {
   3.886146360169389*^9, 3.886146382620658*^9}, {3.8861464277349043`*^9, 
   3.886146432562333*^9}, 3.886219164401112*^9, 3.88621935939507*^9, 
   3.886219407902286*^9, {3.886219707355237*^9, 3.886219794387237*^9}, {
   3.886220255808566*^9, 3.886220269682181*^9}, 3.886220478022126*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"3473d891-de8e-4a86-bf80-efd22347f8b1"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 279, 24, 
   18256972856502835814, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.886219707740636*^9, 3.886219794570259*^9}, {
   3.886220255982862*^9, 3.886220269857068*^9}, 3.886220478034148*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"2118fdc3-4422-4ff5-99a2-1b0d0f014629"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "eincr", 
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"805.0228198064881`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.8297920310273206`\\\"}]\\) for the integral and error \
estimates.\"", 2, 279, 25, 18256972856502835814, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.886219707740636*^9, 3.886219794570259*^9}, {
   3.886220255982862*^9, 3.886220269857068*^9}, 3.886220483123107*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"519351f6-4356-44a0-8bb6-b93df9a4e545"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(0\\), \\(2  \
\[Pi]\\)]\\)d\[Phi]\\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(-1\\), \
\\(1\\)]\\)d(cos\[Theta])\[Integral]\\!\\(\\*SuperscriptBox[\\(\[Rho]\\), \
\\(2\\)]\\)d\[Rho] \\!\\(\\*SuperscriptBox[\\(\[CapitalPsi]\\), \\(*\\)]\\)\
\[CapitalPsi] = \"\>", "\[InvisibleSpace]", "805.0228198064881`", 
   "\[InvisibleSpace]", "\<\"\\!\\(\\*OverscriptBox[\\(\\(\\\\ \
\\)\\(\\(=\\)\\(\\\\ \\)\\)\\), \\(?\\)]\\)\"\>", "\[InvisibleSpace]", 
   "804.6875207535431`"}],
  SequenceForm[
  "\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), \(2  \[Pi]\)]\)d\[Phi]\!\(\
\*SubsuperscriptBox[\(\[Integral]\), \(-1\), \
\(1\)]\)d(cos\[Theta])\[Integral]\!\(\*SuperscriptBox[\(\[Rho]\), \(2\)]\)d\
\[Rho] \!\(\*SuperscriptBox[\(\[CapitalPsi]\), \(*\)]\)\[CapitalPsi] = ", 
   805.0228198064881, 
   "\!\(\*OverscriptBox[\(\(\\ \)\(\(=\)\(\\ \)\)\), \(?\)]\)", 
   804.6875207535431],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8861401526022177`*^9, 3.886140300500639*^9, 3.88614034230476*^9, 
   3.8861403886644278`*^9, 3.886140419581808*^9, 3.886140532541243*^9, 
   3.886140573450674*^9, 3.8861406694301243`*^9, 3.886140746321416*^9, 
   3.8861407772457314`*^9, 3.886140883864285*^9, 3.886141032419701*^9, 
   3.886141961654092*^9, 3.886142125346233*^9, 3.886142157500805*^9, 
   3.8861422086792917`*^9, 3.886143649586739*^9, 3.886143920277761*^9, 
   3.886143961947783*^9, {3.886144000209907*^9, 3.886144017652835*^9}, {
   3.8861458932227077`*^9, 3.886145923000825*^9}, 3.886146325703895*^9, {
   3.886146360167789*^9, 3.886146382619124*^9}, {3.886146427732685*^9, 
   3.886146432560564*^9}, 3.8862191643990726`*^9, 3.886219359393681*^9, 
   3.8862194079004927`*^9, {3.8862197073533993`*^9, 3.886219794385833*^9}, {
   3.886220255807227*^9, 3.886220269680799*^9}, 3.886220483128519*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"0139c2be-f279-49d6-927b-adefbaac40e5"],

Cell[BoxData["84.47143681854145`"], "Output",
 CellChangeTimes->{
  3.886137696842328*^9, 3.8861377507507963`*^9, 3.88613785459977*^9, 
   3.8861379102637367`*^9, 3.886137977078844*^9, 3.886138010321496*^9, {
   3.886138048142976*^9, 3.88613806267899*^9}, 3.8861382025686083`*^9, 
   3.886138236712792*^9, 3.886138334826393*^9, 3.886138394484507*^9, {
   3.886138442731866*^9, 3.8861384785371532`*^9}, 3.886138625011817*^9, {
   3.886138678999895*^9, 3.8861387374349833`*^9}, 3.8861387764370823`*^9, {
   3.8861388606596413`*^9, 3.88613887985753*^9}, {3.8861389152577467`*^9, 
   3.886138942540612*^9}, {3.886138977237033*^9, 3.886139021308393*^9}, 
   3.886139052731038*^9, {3.886139737495667*^9, 3.886139766405717*^9}, 
   3.886139834557521*^9, 3.886139926996562*^9, {3.886140005858865*^9, 
   3.886140032491105*^9}, 3.886140065672864*^9, 3.886140096436301*^9, 
   3.886140152606744*^9, 3.886140300505378*^9, 3.8861403423057756`*^9, 
   3.886140388665229*^9, 3.88614041958251*^9, 3.886140532542397*^9, 
   3.886140573451611*^9, 3.886140669430995*^9, 3.886140746322761*^9, 
   3.886140777246894*^9, 3.8861408838652067`*^9, 3.8861410324213552`*^9, 
   3.8861419616551332`*^9, 3.886142125347698*^9, 3.886142157501781*^9, 
   3.8861422086805477`*^9, 3.886143649588059*^9, 3.886143920278777*^9, 
   3.88614396194921*^9, {3.8861440002108*^9, 3.886144017653796*^9}, {
   3.886145893223662*^9, 3.886145923002445*^9}, 3.8861463257055387`*^9, {
   3.886146360169389*^9, 3.886146382620658*^9}, {3.8861464277349043`*^9, 
   3.886146432562333*^9}, 3.886219164401112*^9, 3.88621935939507*^9, 
   3.886219407902286*^9, {3.886219707355237*^9, 3.886219794387237*^9}, {
   3.886220255808566*^9, 3.886220269682181*^9}, 3.886220483130233*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"c21752dd-729a-4121-96b4-978e1216a09b"],

Cell[BoxData["\<\"---------------------\"\>"], "Print",
 CellChangeTimes->{
  3.8861401526022177`*^9, 3.886140300500639*^9, 3.88614034230476*^9, 
   3.8861403886644278`*^9, 3.886140419581808*^9, 3.886140532541243*^9, 
   3.886140573450674*^9, 3.8861406694301243`*^9, 3.886140746321416*^9, 
   3.8861407772457314`*^9, 3.886140883864285*^9, 3.886141032419701*^9, 
   3.886141961654092*^9, 3.886142125346233*^9, 3.886142157500805*^9, 
   3.8861422086792917`*^9, 3.886143649586739*^9, 3.886143920277761*^9, 
   3.886143961947783*^9, {3.886144000209907*^9, 3.886144017652835*^9}, {
   3.8861458932227077`*^9, 3.886145923000825*^9}, 3.886146325703895*^9, {
   3.886146360167789*^9, 3.886146382619124*^9}, {3.886146427732685*^9, 
   3.886146432560564*^9}, 3.8862191643990726`*^9, 3.886219359393681*^9, 
   3.8862194079004927`*^9, {3.8862197073533993`*^9, 3.886219794385833*^9}, {
   3.886220255807227*^9, 3.886220269680799*^9}, 3.8862204831319847`*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"a582be5e-59e3-4be9-aeee-a16f69440039"]
}, Open  ]]
},
WindowSize->{960., 1052.25},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.1 for Linux x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a328b483-e448-448f-9c86-1bfe9b4836d7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1256, 30, 87, "Input",ExpressionUUID->"653e6f27-b0ac-45fc-bdc8-97ea1f24bb4a",
 InitializationCell->True],
Cell[1839, 54, 506, 7, 33, "Output",ExpressionUUID->"8c61aed9-0aef-4833-88e7-ac6d49da7df3"]
}, Open  ]],
Cell[2360, 64, 3641, 67, 108, "Input",ExpressionUUID->"58b6ae4e-cc02-4d48-9cb9-35e73a732b50",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6026, 135, 7537, 131, 296, "Input",ExpressionUUID->"bf83628a-d951-423c-bbe8-0c24586b1e07",
 InitializationCell->True],
Cell[13566, 268, 2572, 40, 42, "Print",ExpressionUUID->"8d72387e-f248-46a2-8972-96bf7b4691bd"]
}, Open  ]],
Cell[16153, 311, 918, 23, 67, "Input",ExpressionUUID->"ca19f55d-800e-4f0d-8de0-39c420dba2ab",
 InitializationCell->True],
Cell[17074, 336, 2750, 62, 152, "Input",ExpressionUUID->"933eaeb0-c9b9-438c-96db-3602df43d9f2",
 InitializationCell->True],
Cell[19827, 400, 32878, 720, 1132, "Input",ExpressionUUID->"1d34d1fa-fb94-4a35-9d0c-11b452365a0a",
 InitializationCell->True],
Cell[52708, 1122, 30996, 528, 878, "Input",ExpressionUUID->"3028559a-662e-4356-b9b5-ada81c3f8385",
 InitializationCell->True],
Cell[83707, 1652, 7568, 162, 627, "Input",ExpressionUUID->"90416275-401e-4491-8557-84af7f68d3db",
 InitializationCell->True],
Cell[91278, 1816, 29835, 763, 2047, "Input",ExpressionUUID->"c4b5c0e5-01ff-487e-a8a0-12d32a2683dd",
 InitializationCell->True],
Cell[121116, 2581, 4504, 114, 294, "Input",ExpressionUUID->"672176f5-b77a-4100-870a-a75327cd82d5",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[125645, 2699, 13447, 329, 957, "Input",ExpressionUUID->"cd73a3e1-b8d3-4358-be63-70dd031a36fc"],
Cell[CellGroupData[{
Cell[139117, 3032, 1384, 35, 44, "Print",ExpressionUUID->"78b3d1ef-7473-46c9-b622-2b876af242f4"],
Cell[140504, 3069, 1378, 35, 44, "Print",ExpressionUUID->"a0a2790d-7cba-41c8-b180-76da61447e89"],
Cell[141885, 3106, 1376, 35, 44, "Print",ExpressionUUID->"32d74874-3d3d-448b-943d-828c37007629"],
Cell[143264, 3143, 1361, 35, 44, "Print",ExpressionUUID->"521710a8-d5fa-4147-a44e-2dc450c0905c"],
Cell[144628, 3180, 1395, 37, 44, "Print",ExpressionUUID->"c78347a2-3c49-4b04-a570-f0cbe4eabc4e"]
}, Open  ]],
Cell[146038, 3220, 3908, 78, 328, "Output",ExpressionUUID->"343178bd-b4b8-455e-a33c-d5ec24025dc3"],
Cell[149949, 3300, 493934, 8354, 483, "Output",ExpressionUUID->"de5b6af2-0aca-475f-855a-e8437441ec0a"]
}, Open  ]],
Cell[643898, 11657, 6604, 173, 376, "Text",ExpressionUUID->"124754ec-269c-4607-b995-ae11898c43e2"],
Cell[CellGroupData[{
Cell[650527, 11834, 364, 8, 51, "Input",ExpressionUUID->"16a80f13-56d3-4766-9a5b-0d49e75c13d3"],
Cell[650894, 11844, 27668, 575, 457, "Output",ExpressionUUID->"7059fd37-b57e-4536-badf-50c980b51f84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[678599, 12424, 1730, 48, 95, "Input",ExpressionUUID->"db8682ab-cdf2-4188-aa81-9ee925b01dec"],
Cell[680332, 12474, 1400, 40, 38, "Output",ExpressionUUID->"b7fa7648-fa97-4a43-9f7d-eb940d1aa10e"],
Cell[681735, 12516, 296, 5, 33, "Output",ExpressionUUID->"c8cc94e6-ff98-4d9e-adcf-37ff87b620e0"],
Cell[682034, 12523, 537, 12, 38, "Message",ExpressionUUID->"7ac94a4b-33f6-42cb-a040-1d9cf4e18a9c"],
Cell[682574, 12537, 295, 5, 33, "Output",ExpressionUUID->"e1508404-d4ed-4cd0-a24d-13ac50ed2068"]
}, Open  ]],
Cell[CellGroupData[{
Cell[682906, 12547, 597, 13, 29, "Input",ExpressionUUID->"b829d9b2-2b60-4a92-9775-9edb2e8fb246"],
Cell[683506, 12562, 412, 7, 33, "Output",ExpressionUUID->"fe8b0535-aa0c-4c03-a9dd-880fbec895cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683955, 12574, 697, 16, 29, "Input",ExpressionUUID->"e4eccd3d-1a24-4317-8677-1d8ad964b0e4"],
Cell[684655, 12592, 108719, 1847, 367, "Output",ExpressionUUID->"2180a805-9236-4d62-945e-972ccc30cc39"]
}, Open  ]],
Cell[793389, 14442, 282, 8, 81, "Text",ExpressionUUID->"e3a4b569-8afc-41cd-a05d-2746d6018163"],
Cell[CellGroupData[{
Cell[793696, 14454, 1228, 33, 92, "Input",ExpressionUUID->"da439fcd-72c6-44e3-8f51-af3af6a496c1"],
Cell[794927, 14489, 503, 12, 22, "Message",ExpressionUUID->"80e4df1b-50e4-4ac6-8f17-3a25da9fee76"],
Cell[CellGroupData[{
Cell[795455, 14505, 639, 19, 23, "Print",ExpressionUUID->"c7862a56-966e-4bcc-a759-d95eb42dfea2"],
Cell[796097, 14526, 1072, 28, 23, "Print",ExpressionUUID->"a14f3f67-25c8-4095-a806-cc2465cd5c11"],
Cell[797172, 14556, 1260, 32, 38, "Print",ExpressionUUID->"7b1efbe5-70ce-4f90-a917-1cb4ce9aa8d9"],
Cell[798435, 14590, 1513, 38, 55, "Print",ExpressionUUID->"ca356ce5-f474-4a05-9aff-67e257f43ab7"],
Cell[799951, 14630, 1844, 44, 72, "Print",ExpressionUUID->"db87f89c-f8a4-4fe3-bd09-ba7b4ca6dd60"],
Cell[801798, 14676, 2277, 54, 89, "Print",ExpressionUUID->"67db3ec7-dfd7-48c1-ae58-e33a04655408"],
Cell[804078, 14732, 2768, 62, 106, "Print",ExpressionUUID->"22550f41-52fc-49e3-b075-66f25580181d"],
Cell[806849, 14796, 3334, 71, 122, "Print",ExpressionUUID->"7b8f88d2-f12a-4aa4-b122-90dd3b83a6ec"],
Cell[810186, 14869, 3976, 80, 139, "Print",ExpressionUUID->"b88a77f2-c3d7-440f-969f-d3e335e7e67b"],
Cell[814165, 14951, 4759, 98, 156, "Print",ExpressionUUID->"811f4135-e086-4085-b00c-9acb009a248b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[818973, 15055, 417, 11, 37, "Input",ExpressionUUID->"62394fa1-6c9e-4f73-8543-946f6acf8f8c"],
Cell[819393, 15068, 317, 5, 33, "Output",ExpressionUUID->"b1f1b5fb-cb1d-4be6-acb1-281f38ef1e7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[819747, 15078, 9210, 235, 585, "Input",ExpressionUUID->"126ad689-d7b6-4c0f-a0f2-0df3308a1f2e"],
Cell[CellGroupData[{
Cell[828982, 15317, 1048, 16, 23, "Print",ExpressionUUID->"b6faab19-bacf-4286-930e-fda004279b9a"],
Cell[830033, 15335, 1044, 16, 23, "Print",ExpressionUUID->"3f6dfaca-f142-442d-99ee-c6cf590f68cc"]
}, Open  ]],
Cell[831092, 15354, 3369, 75, 38, "Output",ExpressionUUID->"3473d891-de8e-4a86-bf80-efd22347f8b1"],
Cell[834464, 15431, 582, 12, 38, "Message",ExpressionUUID->"2118fdc3-4422-4ff5-99a2-1b0d0f014629"],
Cell[835049, 15445, 1124, 19, 86, "Message",ExpressionUUID->"519351f6-4356-44a0-8bb6-b93df9a4e545"],
Cell[836176, 15466, 2001, 34, 37, "Print",ExpressionUUID->"0139c2be-f279-49d6-927b-adefbaac40e5"],
Cell[838180, 15502, 1807, 26, 33, "Output",ExpressionUUID->"c21752dd-729a-4121-96b4-978e1216a09b"],
Cell[839990, 15530, 1051, 16, 23, "Print",ExpressionUUID->"a582be5e-59e3-4be9-aeee-a16f69440039"]
}, Open  ]]
}
]
*)

