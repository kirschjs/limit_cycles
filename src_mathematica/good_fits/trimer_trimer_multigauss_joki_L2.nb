(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1170908,      21372]
NotebookOptionsPosition[   1163933,      21260]
NotebookOutlinePosition[   1164377,      21277]
CellTagsIndexPosition[   1164334,      21274]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"ParallelEvaluate", "[", 
     RowBox[{"Off", "[", 
      RowBox[{
       StyleBox[
        RowBox[{"General", "::", "munfl"}], "MessageName"], 
       StyleBox[",", "MessageName"], 
       RowBox[{"FindFit", "::", "cvmit"}]}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Off", "[", 
    RowBox[{
     StyleBox[
      RowBox[{"General", "::", "munfl"}], "MessageName"], 
     StyleBox[",", "MessageName"], 
     RowBox[{"General", "::", "stop"}], ",", 
     RowBox[{"LinearSolve", "::", "luc"}], ",", 
     RowBox[{"FindFit", "::", "cvmit"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8296300966415033`*^9, 3.829630143697412*^9}, 
   3.8296301981102867`*^9, {3.830085788224523*^9, 3.830085830927006*^9}, {
   3.830085922017994*^9, 3.830085922454791*^9}, {3.830254676397111*^9, 
   3.830254683576117*^9}, {3.8357535253401318`*^9, 3.835753526480729*^9}, 
   3.835757939272066*^9, {3.841374283992467*^9, 3.841374298670226*^9}, 
   3.876982287566571*^9, 3.8863949178510523`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"653e6f27-b0ac-45fc-bdc8-97ea1f24bb4a"],

Cell[BoxData["\<\"/home/johannesk/kette_repo/limit_cycles/src_mathematica/\
good_fits\"\>"], "Output",
 CellChangeTimes->{{3.885789979260504*^9, 3.8857899803723907`*^9}, 
   3.88579007619263*^9, 3.885790144670609*^9, 3.885893317780836*^9, 
   3.885893402628194*^9, 3.885973645223077*^9, 3.886026047883564*^9, 
   3.886044125840271*^9, 3.88604511894895*^9, 3.886045272681233*^9, 
   3.8861291236294947`*^9, 3.886219164255301*^9, 3.886747293672792*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"1892d7a4-8632-4b45-9570-9ead22d18b1e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Nuclear", " ", "E2"}], "=", 
    RowBox[{
     RowBox[{"2.22", " ", "E3"}], "=", 
     RowBox[{
      RowBox[{"8.48", " ", "\[HBar]c"}], "=", "198"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LECsNUCL", "=", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<../LECs_nucl_Joki.dat\>\"", ",", "\"\<Table\>\""}], "]"}],
       "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"activeLEC", "=", 
     RowBox[{"LECsNUCL", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806896936913022*^9, 3.8068970008591266`*^9}, 
   3.806897170588989*^9, 3.8069185960989933`*^9, 3.828961525247902*^9, {
   3.82896195420479*^9, 3.828961958065777*^9}, 3.829047005911919*^9, 
   3.829049549313146*^9, 3.829050563497466*^9, {3.829111485536989*^9, 
   3.82911149275898*^9}, {3.829111954111908*^9, 3.8291119612539*^9}, {
   3.829112252140929*^9, 3.829112261893633*^9}, {3.829112573732985*^9, 
   3.829112651253894*^9}, {3.8291128337762623`*^9, 3.829112883724078*^9}, {
   3.829113166587775*^9, 3.8291131806499767`*^9}, {3.829113328957966*^9, 
   3.829113359441307*^9}, {3.829113389516396*^9, 3.829113421977861*^9}, 
   3.82911359058664*^9, {3.831020999626773*^9, 3.831021052854327*^9}, {
   3.831021137239236*^9, 3.831021161717834*^9}, {3.831021192429678*^9, 
   3.831021281026369*^9}, {3.831021336132536*^9, 3.831021437429002*^9}, {
   3.831032542266756*^9, 3.8310325557267437`*^9}, {3.834050512313829*^9, 
   3.834050517106021*^9}, {3.834050604750242*^9, 3.834050630559705*^9}, {
   3.834050750565744*^9, 3.83405077321001*^9}, {3.834050823224724*^9, 
   3.8340508902194643`*^9}, {3.834050957167952*^9, 3.834050973889583*^9}, {
   3.834052294530594*^9, 3.834052435905081*^9}, {3.83465332463794*^9, 
   3.8346534999392233`*^9}, {3.8357552237033463`*^9, 3.835755238065895*^9}, 
   3.835756956831279*^9, {3.835759112957494*^9, 3.8357591266674023`*^9}, {
   3.83575916390582*^9, 3.835759178021888*^9}, 3.83620997072495*^9, {
   3.83621035297618*^9, 3.836210429280836*^9}, {3.840523938427368*^9, 
   3.840524020511397*^9}, {3.840697378938952*^9, 3.840697451024289*^9}, {
   3.84137465740092*^9, 3.8413747378881598`*^9}, {3.8413747790104237`*^9, 
   3.8413747864186783`*^9}, {3.841374848538939*^9, 3.841374849132146*^9}, {
   3.841374890194478*^9, 3.841374964797176*^9}, 3.841375120156419*^9, {
   3.841375263998637*^9, 3.8413753719531593`*^9}, {3.841375402268126*^9, 
   3.841375402827441*^9}, {3.841375468144746*^9, 3.8413755600898323`*^9}, {
   3.855570823759363*^9, 3.855570831337441*^9}, 3.855571422722322*^9, {
   3.855651207266287*^9, 3.855651235174877*^9}, {3.855722420660387*^9, 
   3.855722425128508*^9}, {3.8603765100850153`*^9, 3.860376518611704*^9}, 
   3.860376579439577*^9, {3.875072442974223*^9, 3.875072573691984*^9}, {
   3.876266776807109*^9, 3.876266829985648*^9}, 3.876980116419195*^9, {
   3.876980157396861*^9, 3.876980179743556*^9}, 3.8769817535983562`*^9, {
   3.881214732169114*^9, 3.881214818255166*^9}, 3.881214867434598*^9, 
   3.881651217243663*^9, {3.881651265148467*^9, 3.881651269548263*^9}, {
   3.881730031418*^9, 3.881730078791593*^9}, 3.885429718807684*^9, {
   3.885429769971409*^9, 3.885429779421628*^9}, {3.8859733632464952`*^9, 
   3.8859733996630163`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"58b6ae4e-cc02-4d48-9cb9-35e73a732b50"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hbar", "=", "197.327053"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mm", "=", "938.92"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m1", "=", 
   RowBox[{"3", " ", "Mm"}]}], ";", 
  RowBox[{"m2", "=", 
   RowBox[{"3", " ", "Mm"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", 
   RowBox[{"m1", " ", 
    RowBox[{"m2", "/", 
     RowBox[{"(", 
      RowBox[{"m1", "+", "m2"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mh2", "=", 
   FractionBox[
    RowBox[{"2", " ", "\[Mu]"}], 
    SuperscriptBox[
     RowBox[{"(", "hbar", ")"}], "2"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<\!\(\*FractionBox[SuperscriptBox[\(\[HBar]\), \(2\)], \(2  \[Mu]\)]\) \
= \>\"", ",", 
    RowBox[{"1", "/", "mh2"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dimerCores", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2.00", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.49894", ",", "20.5763"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.31002", ",", "2.03082"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.230922", ",", "56.5742"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.136023", ",", "20.549"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.146917", ",", "20.5961"}], "}"}]}], "}"}]}], "}"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]Range", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "activeLEC", "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.830082358524274*^9, 3.8300823663157797`*^9}, {
   3.830082537201302*^9, 3.830082537387905*^9}, {3.8300848735709677`*^9, 
   3.830084875028632*^9}, {3.830167157273056*^9, 3.830167157902136*^9}, 
   3.830405743337331*^9, {3.8311012282156*^9, 3.831101270404479*^9}, {
   3.831101315678876*^9, 3.831101344436973*^9}, {3.83110142954226*^9, 
   3.831101439591865*^9}, {3.831101476215837*^9, 3.831101525039752*^9}, {
   3.831101798751298*^9, 3.831101798869615*^9}, {3.831102702112359*^9, 
   3.83110271990127*^9}, {3.8311838175160913`*^9, 3.831183818780045*^9}, {
   3.831184164997231*^9, 3.831184166055088*^9}, {3.831377118577701*^9, 
   3.8313771191640177`*^9}, {3.831384105406933*^9, 3.831384125104849*^9}, {
   3.8314519844611187`*^9, 3.831451984622528*^9}, {3.831615729709292*^9, 
   3.831615731371269*^9}, {3.831619786789652*^9, 3.831619811656218*^9}, {
   3.831722648819048*^9, 3.831722658717618*^9}, 3.831722692024437*^9, 
   3.831722918395677*^9, {3.8317232267389107`*^9, 3.831723234279372*^9}, {
   3.83172517702496*^9, 3.83172517913588*^9}, {3.8317255367605677`*^9, 
   3.8317255382098618`*^9}, 3.831725861501629*^9, {3.8317259860166483`*^9, 
   3.831726075561963*^9}, {3.831791593522347*^9, 3.831791593690034*^9}, {
   3.831795317273732*^9, 3.831795317406324*^9}, {3.831901002374483*^9, 
   3.831901008630803*^9}, {3.831901526303162*^9, 3.831901543867508*^9}, {
   3.8319016674291563`*^9, 3.831901716747959*^9}, {3.831901771282752*^9, 
   3.831901774091483*^9}, {3.831991946785798*^9, 3.8319919487051764`*^9}, {
   3.832314922326722*^9, 3.8323149225106153`*^9}, 3.8346381600446367`*^9, 
   3.834639668771867*^9, {3.834653545874679*^9, 3.8346535540909157`*^9}, {
   3.8346552759476748`*^9, 3.834655290297477*^9}, {3.83465540548203*^9, 
   3.8346554060383368`*^9}, {3.8346561580471983`*^9, 
   3.8346561606658583`*^9}, {3.835605613540668*^9, 3.835605613694296*^9}, {
   3.835665194742416*^9, 3.835665221512479*^9}, 3.835755258202922*^9, {
   3.8357577079588614`*^9, 3.8357577086613617`*^9}, 3.836215933259561*^9, {
   3.8405173239155827`*^9, 3.840517332935677*^9}, {3.840517476930221*^9, 
   3.840517479550274*^9}, {3.840530868486946*^9, 3.8405308718753843`*^9}, {
   3.840688846259037*^9, 3.8406888498032627`*^9}, {3.840702192506586*^9, 
   3.840702224785261*^9}, {3.840858763084635*^9, 3.840858764778303*^9}, {
   3.840859150752317*^9, 3.840859155998938*^9}, 3.8415725414485607`*^9, {
   3.8415726354920053`*^9, 3.841572666824752*^9}, {3.841572703912736*^9, 
   3.841572704373498*^9}, {3.8520293922986813`*^9, 3.8520294168591413`*^9}, {
   3.8520294507655315`*^9, 3.8520294623077016`*^9}, {3.855138256734597*^9, 
   3.855138257232785*^9}, {3.855309727761969*^9, 3.855309732148938*^9}, {
   3.855311522219215*^9, 3.855311523235752*^9}, {3.855570887682955*^9, 
   3.855570941640139*^9}, {3.8555709947513638`*^9, 3.85557105470498*^9}, {
   3.855720346609249*^9, 3.855720410613899*^9}, {3.8557204451213293`*^9, 
   3.855720523576931*^9}, {3.855720567138908*^9, 3.8557205855261*^9}, {
   3.855737422396502*^9, 3.8557374309496*^9}, 3.855739574641673*^9, {
   3.855833484671033*^9, 3.85583351269689*^9}, {3.855912522031412*^9, 
   3.855912522157153*^9}, {3.856083828965963*^9, 3.856083830532338*^9}, {
   3.8603766337548323`*^9, 3.860376633945304*^9}, {3.876981895578863*^9, 
   3.876981906281995*^9}, {3.876982373547111*^9, 3.876982374671156*^9}, {
   3.8769826195828447`*^9, 3.876982626855981*^9}, {3.87703621105529*^9, 
   3.877036215305921*^9}, {3.8770362560037622`*^9, 3.877036323216028*^9}, {
   3.877055460296286*^9, 3.8770554657732763`*^9}, {3.877055566570574*^9, 
   3.8770555670379677`*^9}, {3.8770556968455467`*^9, 3.877055700505698*^9}, {
   3.881214516573257*^9, 3.881214553829466*^9}, {3.881214596669283*^9, 
   3.881214684682786*^9}, {3.8812149293103647`*^9, 3.881214932953937*^9}, 
   3.88165190455663*^9, {3.881651940596526*^9, 3.881651944296399*^9}, {
   3.8816526434183598`*^9, 3.881652646391582*^9}, 3.881652967773328*^9, {
   3.8817300120193367`*^9, 3.881730013237975*^9}, {3.881730381074184*^9, 
   3.8817303830645647`*^9}, {3.881730494914953*^9, 3.881730496109775*^9}, {
   3.8817305978878403`*^9, 3.881730599388689*^9}, {3.881730643393938*^9, 
   3.881730644110693*^9}, {3.881730779433846*^9, 3.881730780702931*^9}, {
   3.881730918447208*^9, 3.881730919659218*^9}, {3.8842103888346233`*^9, 
   3.884210440794512*^9}, {3.884211601161422*^9, 3.884211601935669*^9}, {
   3.884392167023378*^9, 3.8843922096976547`*^9}, {3.884392540139711*^9, 
   3.8843925416962557`*^9}, {3.884403370831963*^9, 3.884403372060595*^9}, {
   3.884404114495083*^9, 3.884404115748169*^9}, {3.884404449557184*^9, 
   3.884404450973816*^9}, {3.88440456780939*^9, 3.884404568909408*^9}, {
   3.884404844348922*^9, 3.8844048455347347`*^9}, {3.8844055504145412`*^9, 
   3.884405551864994*^9}, {3.884405685224637*^9, 3.884405686482229*^9}, {
   3.8844058107860622`*^9, 3.8844058119434233`*^9}, {3.884406068482894*^9, 
   3.8844060697750473`*^9}, {3.884406467265251*^9, 3.884406468446217*^9}, {
   3.8844068307706633`*^9, 3.8844068320808573`*^9}, {3.884407846849098*^9, 
   3.884407848287491*^9}, {3.884408673555654*^9, 3.8844086747410793`*^9}, {
   3.884765507258594*^9, 3.884765534865128*^9}, {3.8847668239631767`*^9, 
   3.884766825449367*^9}, {3.884823223076294*^9, 3.8848232241588163`*^9}, {
   3.8850122428406067`*^9, 3.8850122544800158`*^9}, {3.885014532813892*^9, 
   3.885014533908082*^9}, {3.8853646219568644`*^9, 3.885364623303783*^9}, {
   3.885364709683135*^9, 3.88536471065042*^9}, {3.885364938583353*^9, 
   3.885364940301486*^9}, {3.885365341777729*^9, 3.885365342545933*^9}, {
   3.885365432115045*^9, 3.88536543316794*^9}, {3.8853655238117857`*^9, 
   3.88536552547402*^9}, {3.885429904055991*^9, 3.885429912021083*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"bf83628a-d951-423c-bbe8-0c24586b1e07"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*FractionBox[SuperscriptBox[\\(\[HBar]\\), \\(2\\)], \
\\(2  \[Mu]\\)]\\) = \"\>", "\[InvisibleSpace]", "13.823671823536552`"}],
  SequenceForm[
  "\!\(\*FractionBox[SuperscriptBox[\(\[HBar]\), \(2\)], \(2  \[Mu]\)]\) = ", 
   13.823671823536552`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.877055675340523*^9, 3.877055675447035*^9}, 
   3.877056177961293*^9, {3.881214846658543*^9, 3.881214870698656*^9}, {
   3.8812149423141127`*^9, 3.881214942426353*^9}, 3.881651279982519*^9, 
   3.881651613219248*^9, 3.881651906354641*^9, 3.8816519454151773`*^9, 
   3.8816526473215637`*^9, 3.881652968782064*^9, {3.881730105994976*^9, 
   3.8817301061064157`*^9}, {3.881730389992296*^9, 3.881730390116166*^9}, 
   3.8817304998872757`*^9, {3.881730686607732*^9, 3.881730686718339*^9}, 
   3.881730924504072*^9, {3.884210472650733*^9, 3.884210472742928*^9}, 
   3.88421054061773*^9, 3.884211612835244*^9, {3.8843922170260553`*^9, 
   3.884392217144064*^9}, 3.884392582870741*^9, {3.884404458299676*^9, 
   3.884404458413314*^9}, 3.884404572785242*^9, 3.884404848733047*^9, 
   3.8844055554462137`*^9, 3.884405689257699*^9, 3.884405814858053*^9, 
   3.884406072862152*^9, 3.884406471924618*^9, 3.884406835968952*^9, 
   3.884408685649785*^9, {3.8847655437873163`*^9, 3.8847655439241037`*^9}, {
   3.884766848741816*^9, 3.884766848865098*^9}, {3.8848232312915897`*^9, 
   3.884823231384369*^9}, {3.885012272246141*^9, 3.885012272424411*^9}, {
   3.885014545700667*^9, 3.885014545905702*^9}, {3.88536463852826*^9, 
   3.885364638650255*^9}, {3.885364720048114*^9, 3.885364720790847*^9}, {
   3.885364949257059*^9, 3.885364949424183*^9}, {3.885365353624016*^9, 
   3.8853653537828913`*^9}, {3.8853654425453033`*^9, 
   3.8853654432007008`*^9}, {3.885365538283258*^9, 3.8853655383716297`*^9}, 
   3.885429731837542*^9, 3.885429786275672*^9, 3.885429923931909*^9, 
   3.8854406631620073`*^9, 3.8854415394951468`*^9, {3.88578147938144*^9, 
   3.885781479641973*^9}, 3.885781723797435*^9, 3.8857818279997053`*^9, {
   3.885781882245954*^9, 3.88578188264424*^9}, 3.8857878181455317`*^9, 
   3.885789824587644*^9, {3.885789979572227*^9, 3.885789982219308*^9}, 
   3.8857900763609037`*^9, 3.88579014480184*^9, 3.885893317893812*^9, 
   3.8858934030399027`*^9, 3.885973645344606*^9, 3.886026047979539*^9, 
   3.8860441265126743`*^9, 3.8860451193712053`*^9, 3.886045273105721*^9, 
   3.8861291237148*^9, 3.886219164344091*^9, 3.886747293718914*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"5c08c234-1ded-43fd-820a-f7570f7ddc58"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RiccatiBesselJ", "[", 
    RowBox[{"z_", ",", "l_"}], "]"}], ":=", 
   RowBox[{"z", " ", 
    RowBox[{"SphericalBesselJ", "[", 
     RowBox[{"l", ",", "z"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RiccatiBesselN", "[", 
    RowBox[{"z_", ",", "l_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "l"}], " ", "z", " ", 
    RowBox[{"SphericalBesselY", "[", 
     RowBox[{"l", ",", "z"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.810732656566537*^9, 3.8107327240548153`*^9}, 
   3.85583038315562*^9, {3.855831353899652*^9, 3.855831357722906*^9}, {
   3.855831429434786*^9, 3.8558314329617767`*^9}, 3.85583330744737*^9, 
   3.855833470146158*^9, 3.8762677802384663`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"ca19f55d-800e-4f0d-8de0-39c420dba2ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Boundery", " ", "conditions", " ", "for", " ", "the", " ", 
    "wavefunction"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"alpha", "[", 
     RowBox[{"ra_", ",", "ka_", ",", "la_", ",", "ha_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"RiccatiBesselN", "[", 
      RowBox[{
       RowBox[{"ka", " ", 
        RowBox[{"(", 
         RowBox[{"ra", "+", "ha"}], ")"}]}], ",", "la"}], "]"}], "/", 
     RowBox[{"RiccatiBesselN", "[", 
      RowBox[{
       RowBox[{"ka", " ", "ra"}], ",", "la"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"beta", "[", 
     RowBox[{"rb_", ",", "kb_", ",", "lb_", ",", "hb_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"RiccatiBesselJ", "[", 
      RowBox[{
       RowBox[{"kb", " ", 
        RowBox[{"(", 
         RowBox[{"rb", "+", "hb"}], ")"}]}], ",", "lb"}], "]"}], "-", 
     RowBox[{
      RowBox[{"RiccatiBesselJ", "[", 
       RowBox[{
        RowBox[{"kb", " ", "rb"}], ",", "lb"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RiccatiBesselN", "[", 
         RowBox[{
          RowBox[{"kb", " ", 
           RowBox[{"(", 
            RowBox[{"rb", "+", "hb"}], ")"}]}], ",", "lb"}], "]"}], "/", 
        RowBox[{"RiccatiBesselN", "[", 
         RowBox[{
          RowBox[{"kb", " ", "rb"}], ",", "lb"}], "]"}]}], 
       ")"}]}]}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8098473071820097`*^9, 3.809847317226472*^9}, {
   3.809847573153267*^9, 3.809847665806992*^9}, {3.809847729396802*^9, 
   3.809847734585537*^9}, {3.8098479538264227`*^9, 3.809847966574915*^9}, {
   3.809848289852029*^9, 3.809848319080701*^9}, {3.8098483537623672`*^9, 
   3.809848397494103*^9}, {3.809848518776417*^9, 3.809848571830183*^9}, {
   3.8098492627933397`*^9, 3.80984931107325*^9}, {3.8098619500099773`*^9, 
   3.809861976307332*^9}, 3.809862724285603*^9, {3.80986300402169*^9, 
   3.8098630106232767`*^9}, {3.809863053584362*^9, 3.809863058036331*^9}, {
   3.809863288675404*^9, 3.809863291078908*^9}, 3.8098636108028603`*^9, {
   3.809863785277006*^9, 3.809863828179673*^9}, {3.8098725064058933`*^9, 
   3.809872521342906*^9}, {3.8107326398667297`*^9, 3.810732649847804*^9}, {
   3.8107330799145813`*^9, 3.810733111293742*^9}, {3.810733168121323*^9, 
   3.810733313522121*^9}, {3.8107341182906713`*^9, 3.810734203823607*^9}, {
   3.810734479009882*^9, 3.81073448941695*^9}, {3.834572206439838*^9, 
   3.834572252424436*^9}, {3.834631789889462*^9, 3.834631804593012*^9}, {
   3.834637822542837*^9, 3.834637824919507*^9}, {3.8520282182987714`*^9, 
   3.852028224117735*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"933eaeb0-c9b9-438c-96db-3602df43d9f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NormTT", "[", 
     RowBox[{"core_", "?", "ArrayQ"}], "]"}], ":=", 
    RowBox[{"Total", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"core", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"core", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{
          RowBox[{"core", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], 
         RowBox[{
          RowBox[{"core", "[", 
           RowBox[{"[", "l", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Pi", "^", "4"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", "^", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"core", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                   RowBox[{
                    RowBox[{"core", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}], " ", 
                
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"core", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                   RowBox[{
                    RowBox[{"core", "[", 
                    RowBox[{"[", "l", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], 
               ")"}]}], ")"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"3", "/", "2"}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "core", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", "core", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"Length", "[", "core", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", 
          RowBox[{"Length", "[", "core", "]"}]}], "}"}]}], "]"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VlocTF", "[", 
     RowBox[{
     "r_", ",", "lam_", ",", "Cc_", ",", "Dd_", ",", "Aa_", ",", "Bb_", ",", 
      "Gg_", ",", "Hh_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eta1", ",", "eta2", ",", "eta3", ",", "w1", ",", "w2", ",", "w3"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"eta2", "=", " ", 
        RowBox[{
         RowBox[{"3", "^", 
          RowBox[{"(", 
           RowBox[{"7", "/", "2"}], ")"}]}], 
         RowBox[{"Cc", " ", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Aa", "+", "Bb"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"Gg", "+", "Hh"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "lam", " ", "Bb"}], "+", 
                RowBox[{"Gg", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "lam"}], "+", 
                   RowBox[{"3", "Bb"}]}], ")"}]}], "+", 
                RowBox[{"2", " ", "lam", " ", "Hh"}], "+", 
                RowBox[{"3", "Bb", " ", "Hh"}], "+", 
                RowBox[{"Aa", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "lam"}], "+", 
                   RowBox[{"3", "Gg"}], "+", 
                   RowBox[{"3", "Hh"}]}], ")"}]}]}], ")"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"w2", "=", " ", 
        RowBox[{"3", 
         RowBox[{"(", 
          RowBox[{"Aa", "+", "Bb"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"Gg", "+", "Hh"}], ")"}], 
         RowBox[{"lam", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "lam", " ", "Bb"}], "+", 
            RowBox[{"Gg", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "lam"}], "+", 
               RowBox[{"3", "Bb"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "lam", " ", "Hh"}], "+", 
            RowBox[{"3", "Bb", " ", "Hh"}], "+", 
            RowBox[{"Aa", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "lam"}], "+", 
               RowBox[{"3", "Gg"}], "+", 
               RowBox[{"3", "Hh"}]}], ")"}]}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"eta3", " ", "=", 
        RowBox[{
         RowBox[{"3", "^", 
          RowBox[{"(", 
           RowBox[{"7", "/", "2"}], ")"}]}], 
         RowBox[{"Dd", " ", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Aa", "+", "Bb"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"lam", "+", "Gg", "+", "Hh"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"lam", " ", "Bb"}], "+", 
                RowBox[{"Gg", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"4", "lam"}], "+", 
                   RowBox[{"3", "Bb"}]}], ")"}]}], "+", 
                RowBox[{"4", " ", "lam", " ", "Hh"}], "+", 
                RowBox[{"3", "Bb", " ", "Hh"}], "+", 
                RowBox[{"Aa", 
                 RowBox[{"(", 
                  RowBox[{"lam", "+", 
                   RowBox[{"3", "Gg"}], "+", 
                   RowBox[{"3", "Hh"}]}], ")"}]}]}], ")"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"w3", " ", "=", " ", 
        RowBox[{"6", 
         RowBox[{"(", 
          RowBox[{"Aa", "+", "Bb"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"Gg", "+", "Hh"}], ")"}], 
         RowBox[{"lam", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"lam", " ", "Bb"}], "+", 
            RowBox[{"Gg", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", "lam"}], "+", 
               RowBox[{"3", "Bb"}]}], ")"}]}], "+", 
            RowBox[{"4", " ", "lam", " ", "Hh"}], "+", 
            RowBox[{"3", "Bb", " ", "Hh"}], "+", 
            RowBox[{"Aa", 
             RowBox[{"(", 
              RowBox[{"lam", "+", 
               RowBox[{"3", "Gg"}], "+", 
               RowBox[{"3", "Hh"}]}], ")"}]}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"eta1", " ", "=", 
        RowBox[{
         RowBox[{"3", "^", 
          RowBox[{"(", 
           RowBox[{"7", "/", "2"}], ")"}]}], 
         RowBox[{"Dd", " ", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Gg", "+", "Hh"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 RowBox[{"lam", "^", "2"}], " ", "Bb"}], "+", 
                RowBox[{"2", "lam", " ", 
                 RowBox[{"Bb", "^", "2"}]}], "+", 
                RowBox[{"Gg", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"lam", "^", "2"}], "+", 
                   RowBox[{"8", " ", "lam", " ", "Bb"}], "+", 
                   RowBox[{"3", 
                    RowBox[{"Bb", "^", "2"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"lam", "^", "2"}], " ", "Hh"}], "+", 
                RowBox[{"8", " ", "lam", " ", "Bb", " ", "Hh"}], "+", 
                RowBox[{"3", 
                 RowBox[{"Bb", "^", "2"}], " ", "Hh"}], "+", 
                RowBox[{
                 RowBox[{"Aa", "^", "2"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "lam"}], "+", 
                   RowBox[{"3", "Gg"}], "+", 
                   RowBox[{"3", "Hh"}]}], ")"}]}], "+", 
                RowBox[{"Aa", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Gg", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"8", " ", "lam"}], "+", 
                    RowBox[{"6", "Bb"}]}], ")"}]}], "+", 
                   RowBox[{"4", "lam", 
                    RowBox[{"(", 
                    RowBox[{"lam", "+", 
                    RowBox[{"2", "Hh"}]}], ")"}]}], "+", 
                   RowBox[{"Bb", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", "lam"}], "+", 
                    RowBox[{"6", "Hh"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
             ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"w1", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", 
           RowBox[{"(", 
            RowBox[{"Aa", "+", "Bb"}], ")"}], "lam", 
           RowBox[{"(", 
            RowBox[{"Aa", "+", "Bb", "+", 
             RowBox[{"2", "lam"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"Gg", "+", "Hh"}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             RowBox[{"lam", "^", "2"}], " ", "Bb"}], "+", 
            RowBox[{"2", "lam", " ", 
             RowBox[{"Bb", "^", "2"}]}], "+", 
            RowBox[{"Gg", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"lam", "^", "2"}], "+", 
               RowBox[{"8", " ", "lam", " ", "Bb"}], "+", 
               RowBox[{"3", 
                RowBox[{"Bb", "^", "2"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"lam", "^", "2"}], " ", "Hh"}], "+", 
            RowBox[{"8", " ", "lam", " ", "Bb", " ", "Hh"}], "+", 
            RowBox[{"3", 
             RowBox[{"Bb", "^", "2"}], " ", "Hh"}], "+", 
            RowBox[{
             RowBox[{"Aa", "^", "2"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "lam"}], "+", 
               RowBox[{"3", "Gg"}], "+", 
               RowBox[{"3", "Hh"}]}], ")"}]}], "+", 
            RowBox[{"Aa", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Gg", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"8", " ", "lam"}], "+", 
                  RowBox[{"6", "Bb"}]}], ")"}]}], "+", 
               RowBox[{"4", "lam", 
                RowBox[{"(", 
                 RowBox[{"lam", "+", 
                  RowBox[{"2", "Hh"}]}], ")"}]}], "+", 
               RowBox[{"Bb", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", "lam"}], "+", 
                  RowBox[{"6", "Hh"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"eta2", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "w2"}], " ", 
           SuperscriptBox["r", "2"]}], "]"}]}], "+", 
        RowBox[{"eta3", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "w3"}], " ", 
           SuperscriptBox["r", "2"]}], "]"}]}], "+", 
        RowBox[{"eta1", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "w1"}], " ", 
           RowBox[{"r", "^", "2"}]}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WnolocTF", "[", 
    RowBox[{
    "r_", ",", "rp_", ",", "Ee_", ",", "lam_", ",", "Cc_", ",", "Dd_", ",", 
     "Aa_", ",", "Bb_", ",", "Gg_", ",", "Hh_", ",", "Ll_", ",", 
     "TwoMyOverHBsq_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "zeta1", ",", "zeta2", ",", "zeta3", ",", "a1", ",", "b1", ",", "c1", 
       ",", "a2", ",", "b2", ",", "c2", ",", "a3", ",", "b3", ",", "c3"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"zeta1", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a1", "=", 
       RowBox[{
        RowBox[{"4", "Bb", " ", "Hh"}], " ", "+", " ", 
        RowBox[{"Gg", " ", "Bb"}], "+", 
        RowBox[{"Gg", " ", "Hh"}], "+", 
        RowBox[{"Aa", " ", "Bb"}], " ", "+", 
        RowBox[{"Aa", " ", "Hh"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b1", "=", 
       RowBox[{
        RowBox[{"2", "Gg", " ", "Bb"}], " ", "-", 
        RowBox[{"Gg", " ", "Hh"}], " ", "-", 
        RowBox[{"2", " ", "Aa", " ", "Bb"}], " ", "+", 
        RowBox[{"2", " ", "Aa", " ", "Hh"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{
        RowBox[{"Gg", " ", "Bb"}], " ", "+", 
        RowBox[{"Hh", " ", "Gg"}], "+", 
        RowBox[{"4", "Aa", " ", "Gg"}], " ", "+", 
        RowBox[{"Aa", " ", "Bb"}], " ", "+", 
        RowBox[{"Aa", " ", "Hh"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"zeta2", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeta3", "=", "0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"a2", "=", 
       RowBox[{
        RowBox[{"4", "Hh", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Bb"}], ")"}]}], "+", 
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], " ", "+", "Bb", "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Bb", "+", "Hh"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       RowBox[{
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "lam"}], "+", 
           RowBox[{"2", "Bb"}], "-", 
           RowBox[{"2", " ", "Hh"}]}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "lam"}], "-", 
           RowBox[{"2", "Bb"}], "+", 
           RowBox[{"2", "Gg"}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Bb", "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", 
           RowBox[{"4", "Gg"}], "+", "Bb", "+", "Hh"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"a3", "=", " ", 
       RowBox[{
        RowBox[{"4", "Bb", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{"Aa", "+", 
           RowBox[{"2", "lam"}], "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "lam"}], "+", "Bb", "+", "Hh"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b3", "=", 
       RowBox[{
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "Bb"}], "-", 
           RowBox[{"4", "lam"}], "-", 
           RowBox[{"2", "Hh"}]}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "lam"}], "+", 
           RowBox[{"2", "Hh"}], "-", 
           RowBox[{"2", "Bb"}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c3", "=", 
       RowBox[{
        RowBox[{"Gg", 
         RowBox[{"(", 
          RowBox[{"Bb", "+", 
           RowBox[{"2", "lam"}], "+", "Hh"}], ")"}]}], "+", 
        RowBox[{"Aa", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "Gg"}], "+", 
           RowBox[{"2", "lam"}], "+", "Bb", "+", "Hh"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"4", " ", "Pi", " ", "r", " ", "rp"}], ")"}]}], " ", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zeta1", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "a1"}], " ", 
             RowBox[{"r", "^", "2"}]}], "-", 
            RowBox[{"c1", " ", 
             RowBox[{"rp", "^", "2"}]}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   RowBox[{"a1", "^", "2"}], " ", 
                   RowBox[{"r", "^", "2"}]}], "+", 
                  RowBox[{
                   RowBox[{"b1", "^", "2"}], " ", 
                   RowBox[{"rp", "^", "2"}]}], "-", 
                  RowBox[{"2", " ", "a1"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Ll", "+", "1"}], ")"}], " ", 
                RowBox[{"Ll", "/", 
                 RowBox[{"r", "^", "2"}]}]}], "-", 
               RowBox[{"TwoMyOverHBsq", " ", "Ee"}]}], ")"}], " ", 
             RowBox[{"I", "^", "Ll"}], "  ", 
             RowBox[{"SphericalBesselJ", "[", 
              RowBox[{"Ll", ",", 
               RowBox[{"I", " ", "b1", " ", "r", " ", "rp"}]}], "]"}]}], 
            "\[IndentingNewLine]", "-", 
            RowBox[{"4", " ", "a1", " ", "b1", " ", "r", " ", "rp", " ", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"Ll", "^", "2"}], "+", 
                  RowBox[{"l", "^", "2"}]}], ")"}], " ", 
                RowBox[{
                 RowBox[{"I", "^", 
                  RowBox[{"(", 
                   RowBox[{"l", "+", "1"}], ")"}]}], "/", 
                 RowBox[{"Sqrt", "[", "3", "]"}]}], " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"2", "/", 
                   RowBox[{"Sqrt", "[", "5", "]"}]}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"Ll", "+", "l"}], ")"}], "/", "2"}], ")"}]}], " ", 
                RowBox[{"SphericalBesselJ", "[", 
                 RowBox[{
                  RowBox[{"1", "+", "l"}], ",", 
                  RowBox[{"I", " ", "b1", " ", "r", " ", "rp"}]}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"-", "Ll"}], ",", "Ll"}], "}"}]}], "]"}]}]}], 
           ")"}]}], "\[IndentingNewLine]", "+", 
         RowBox[{
          RowBox[{"I", "^", "Ll"}], " ", "zeta2", " ", 
          RowBox[{"SphericalBesselJ", "[", 
           RowBox[{"Ll", ",", 
            RowBox[{"I", " ", "b2", " ", "r", " ", "rp"}]}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "a2"}], " ", 
             RowBox[{"r", "^", "2"}]}], "-", 
            RowBox[{"c2", " ", 
             RowBox[{"rp", "^", "2"}]}]}], "]"}]}], "\[IndentingNewLine]", 
         "+", 
         RowBox[{
          RowBox[{"I", "^", "Ll"}], " ", "zeta3", " ", 
          RowBox[{"SphericalBesselJ", "[", 
           RowBox[{"Ll", ",", 
            RowBox[{"I", " ", "b3", " ", "r", " ", "rp"}]}], "]"}], " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "a3"}], " ", 
             RowBox[{"r", "^", "2"}]}], "-", 
            RowBox[{"c3", " ", 
             RowBox[{"rp", "^", "2"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
        ")"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.801892467318017*^9, 3.8018925002061853`*^9}, {
   3.801893158798995*^9, 3.801893161694428*^9}, {3.801894097701667*^9, 
   3.801894097941848*^9}, {3.801894438748991*^9, 3.801894440131065*^9}, {
   3.801894722165625*^9, 3.801894749067191*^9}, {3.801895847004627*^9, 
   3.801895848969494*^9}, {3.801909683960307*^9, 3.801909717316461*^9}, {
   3.801910042629107*^9, 3.801910053417841*^9}, {3.8019108398225727`*^9, 
   3.8019108437299356`*^9}, {3.801915129888688*^9, 3.801915131749421*^9}, {
   3.801977843420405*^9, 3.801977845517983*^9}, {3.801978719956852*^9, 
   3.8019787236474524`*^9}, {3.801997341404051*^9, 3.801997361000883*^9}, {
   3.80199768661966*^9, 3.801997687249464*^9}, 3.802063526510613*^9, {
   3.8020653312198553`*^9, 3.802065335198555*^9}, 3.802176010492588*^9, 
   3.8030157683918877`*^9, {3.8030167660294313`*^9, 3.8030167862260303`*^9}, 
   3.8030190968311043`*^9, 3.803019199213236*^9, {3.8030192485448503`*^9, 
   3.803019253151905*^9}, {3.803019290668828*^9, 3.803019315436187*^9}, {
   3.8030195792365026`*^9, 3.8030195794672422`*^9}, {3.803042274092853*^9, 
   3.803042274517417*^9}, {3.803200058968026*^9, 3.803200060653748*^9}, 
   3.8032137177922583`*^9, {3.80689780896726*^9, 3.8068978545299416`*^9}, {
   3.8069188037497816`*^9, 3.806918803903943*^9}, {3.806992401910433*^9, 
   3.80699240233816*^9}, {3.808023938621386*^9, 3.808023953680669*^9}, 
   3.811065068939959*^9, {3.811237374127685*^9, 3.8112373747730618`*^9}, {
   3.828961945141528*^9, 3.828961963411664*^9}, {3.828962126381213*^9, 
   3.828962146712731*^9}, {3.829025153262753*^9, 3.829025219513521*^9}, 
   3.8290262401462927`*^9, {3.829026422763246*^9, 3.829026434624408*^9}, {
   3.829026478331995*^9, 3.829026508690338*^9}, {3.829026551130254*^9, 
   3.829026582805099*^9}, {3.8290266195072117`*^9, 3.829026753812564*^9}, {
   3.829026932733026*^9, 3.8290269356298*^9}, {3.829027276468822*^9, 
   3.829027301769758*^9}, {3.8290276076949778`*^9, 3.829027675718071*^9}, {
   3.82902771324024*^9, 3.829027781531455*^9}, {3.829027837534582*^9, 
   3.829027872075479*^9}, {3.829027965053953*^9, 3.82902804579659*^9}, {
   3.829028106940831*^9, 3.829028216072899*^9}, {3.8290282817157097`*^9, 
   3.829028290054338*^9}, {3.8290283216320763`*^9, 3.829028332224819*^9}, {
   3.8290283689329433`*^9, 3.829028381865678*^9}, {3.829028424246985*^9, 
   3.829028454203835*^9}, {3.829028537755336*^9, 3.8290287434078903`*^9}, {
   3.829028786710608*^9, 3.8290288042494287`*^9}, {3.8290288502086983`*^9, 
   3.8290290565537157`*^9}, {3.829029383773424*^9, 3.829029392995202*^9}, {
   3.8290294311851673`*^9, 3.829029433151523*^9}, {3.8290295302241096`*^9, 
   3.8290295377740793`*^9}, {3.82902956887919*^9, 3.829029607565781*^9}, 
   3.829029952866518*^9, 3.829030052058166*^9, {3.829030130145849*^9, 
   3.829030137802986*^9}, {3.8290302387620153`*^9, 3.8290302392106657`*^9}, {
   3.8290304070214043`*^9, 3.829030421098668*^9}, {3.829030625985882*^9, 
   3.829030677109067*^9}, {3.829031085218238*^9, 3.829031096249442*^9}, {
   3.8290317014340277`*^9, 3.829031702837329*^9}, {3.829032082028879*^9, 
   3.8290320906337748`*^9}, {3.829032163044195*^9, 3.829032199377716*^9}, {
   3.829032264383943*^9, 3.829032266924317*^9}, {3.829032560510306*^9, 
   3.829032560686266*^9}, 3.829032724958557*^9, {3.829034092875155*^9, 
   3.829034093043749*^9}, {3.829040423747259*^9, 3.829040453943123*^9}, {
   3.829040796555052*^9, 3.829040796745625*^9}, {3.8290408973760853`*^9, 
   3.8290408975564747`*^9}, {3.829042146269074*^9, 3.8290421475839357`*^9}, {
   3.829045037037434*^9, 3.8290450381128283`*^9}, {3.829045075866453*^9, 
   3.829045077508686*^9}, {3.829045638524869*^9, 3.829045660299512*^9}, {
   3.8290456948047123`*^9, 3.8290457298640947`*^9}, {3.829045774534081*^9, 
   3.8290457747370863`*^9}, 3.8290458666528463`*^9, {3.829045896727647*^9, 
   3.829045903624382*^9}, 3.8290470256245604`*^9, {3.829047323380723*^9, 
   3.82904734836267*^9}, 3.829047447505147*^9, {3.82904897307802*^9, 
   3.829048982500882*^9}, 3.8290504817824507`*^9, {3.8290507967356977`*^9, 
   3.8290507969900007`*^9}, {3.829215663293272*^9, 3.829215669347509*^9}, {
   3.829215747201853*^9, 3.829215793098819*^9}, {3.8292158310650187`*^9, 
   3.829215885110899*^9}, {3.829215917702985*^9, 3.829215928924259*^9}, {
   3.8292160581307487`*^9, 3.829216069085018*^9}, {3.829217042690834*^9, 
   3.829217079393022*^9}, {3.829217256655546*^9, 3.829217265766756*^9}, {
   3.829217605673552*^9, 3.829217606178463*^9}, {3.829217982426296*^9, 
   3.829217987206685*^9}, {3.829218433942974*^9, 3.8292184357968683`*^9}, {
   3.829218517674664*^9, 3.829218524542429*^9}, 3.829218652414425*^9, {
   3.829218742769401*^9, 3.829218765815611*^9}, 3.829219027690482*^9, {
   3.8292190789894257`*^9, 3.829219079134283*^9}, {3.829219205637911*^9, 
   3.829219205871358*^9}, {3.8292196323464527`*^9, 3.829219653136817*^9}, {
   3.82921983465938*^9, 3.829219836320269*^9}, {3.829219969792766*^9, 
   3.829219972109107*^9}, {3.829220080493692*^9, 3.8292200808415947`*^9}, {
   3.829220114289222*^9, 3.829220115138957*^9}, {3.829220524393718*^9, 
   3.829220533178056*^9}, {3.829220905398019*^9, 3.829220925389814*^9}, 
   3.829221034086018*^9, {3.829221833782493*^9, 3.8292218339727*^9}, {
   3.8292219936050873`*^9, 3.8292219958804483`*^9}, {3.829222478002133*^9, 
   3.829222480265678*^9}, {3.829222768485291*^9, 3.829222775245501*^9}, 
   3.829283166704246*^9, {3.829283302005631*^9, 3.8292833025214643`*^9}, {
   3.8292833912991657`*^9, 3.829283391767819*^9}, {3.829284082955415*^9, 
   3.8292840858297*^9}, {3.829284264802721*^9, 3.829284264941513*^9}, {
   3.82928429870163*^9, 3.8292842988806562`*^9}, 3.829284618747243*^9, {
   3.829308408533846*^9, 3.829308429490027*^9}, {3.829390677431068*^9, 
   3.829390681573649*^9}, {3.829392761451092*^9, 3.82939276563743*^9}, {
   3.829394333911601*^9, 3.829394334071722*^9}, {3.829629969334939*^9, 
   3.82962997102838*^9}, 3.8296314679480667`*^9, {3.829631541051281*^9, 
   3.829631553638998*^9}, 3.8296324336993427`*^9, 3.829632818513318*^9, {
   3.829635009310836*^9, 3.829635027953731*^9}, {3.829635572253907*^9, 
   3.829635572723858*^9}, {3.829645815718639*^9, 3.829645815867497*^9}, {
   3.8296515366920853`*^9, 3.829651537105164*^9}, 3.829653174038562*^9, {
   3.829654248354002*^9, 3.829654249664966*^9}, {3.830081454085843*^9, 
   3.830081454711007*^9}, {3.8300822093471727`*^9, 3.830082209641708*^9}, {
   3.8300823479134483`*^9, 3.830082348727803*^9}, 3.831101067972599*^9, {
   3.831101161444682*^9, 3.831101164581204*^9}, {3.831898878271998*^9, 
   3.831898939209*^9}, {3.831898970911107*^9, 3.831899124930388*^9}, {
   3.831899163692109*^9, 3.831899166189124*^9}, {3.831899250587871*^9, 
   3.831899383771085*^9}, {3.831899447908812*^9, 3.8318995323924847`*^9}, {
   3.831899600768495*^9, 3.831899619714341*^9}, {3.831899666684527*^9, 
   3.831899938935375*^9}, {3.831900055298876*^9, 3.831900066462925*^9}, {
   3.831900417983684*^9, 3.831900474329039*^9}, {3.831900716904687*^9, 
   3.831900726274486*^9}, {3.831907855515967*^9, 3.831907856215623*^9}, {
   3.8319877033002357`*^9, 3.8319877072122593`*^9}, 3.831987945620595*^9, {
   3.831988297628137*^9, 3.831988322626186*^9}, {3.831988518631733*^9, 
   3.8319885208017187`*^9}, {3.831989198596623*^9, 3.8319892360941057`*^9}, {
   3.831989295685381*^9, 3.831989347275859*^9}, {3.8319894129637337`*^9, 
   3.831989419659133*^9}, {3.831991270736796*^9, 3.831991282177586*^9}, {
   3.8415677440150957`*^9, 3.841567811526626*^9}, {3.841568077865671*^9, 
   3.8415681086301603`*^9}, {3.841568194254199*^9, 3.841568210549117*^9}, {
   3.841568292525248*^9, 3.841568303574844*^9}, {3.841568358721343*^9, 
   3.841568363988818*^9}, {3.841568487478312*^9, 3.841568490225037*^9}, {
   3.841568548337976*^9, 3.841568570783893*^9}, {3.841568612043398*^9, 
   3.8415687391213427`*^9}, {3.841568847345256*^9, 3.8415688489736357`*^9}, {
   3.84156911957481*^9, 3.841569132710617*^9}, {3.841569265362671*^9, 
   3.84156926579792*^9}, {3.841569297176078*^9, 3.841569373099285*^9}, {
   3.841569474702115*^9, 3.84156947777103*^9}, {3.84156951100327*^9, 
   3.841569511781008*^9}, {3.841569543880797*^9, 3.841569544807575*^9}, {
   3.841569740839243*^9, 3.841569969056686*^9}, {3.841570003215819*^9, 
   3.841570052061222*^9}, {3.841570102956746*^9, 3.841570113926784*^9}, {
   3.841570185140707*^9, 3.841570229399667*^9}, {3.841570291745309*^9, 
   3.8415703628323298`*^9}, {3.8415704235479*^9, 3.841570467660336*^9}, {
   3.841570535498198*^9, 3.841570676177003*^9}, {3.84157370151686*^9, 
   3.8415737021694508`*^9}, {3.841648758858382*^9, 3.841648846270207*^9}, {
   3.841824858862773*^9, 3.8418248694761467`*^9}, {3.841824944942635*^9, 
   3.841824999728359*^9}, {3.841825033008472*^9, 3.841825139597019*^9}, {
   3.841825210672501*^9, 3.8418252146274757`*^9}, {3.841825321513179*^9, 
   3.841825398900426*^9}, {3.8418254401634207`*^9, 3.841825464636052*^9}, {
   3.8418255018110733`*^9, 3.841825517987542*^9}, {3.841825577357398*^9, 
   3.841825603622463*^9}, {3.8418256787516117`*^9, 3.8418256788312807`*^9}, {
   3.841825714034934*^9, 3.841825714123699*^9}, {3.841825820660972*^9, 
   3.841825837467999*^9}, {3.841825883587535*^9, 3.84182591417071*^9}, {
   3.8418259497220707`*^9, 3.841825977438492*^9}, {3.8418274071192837`*^9, 
   3.841827431503604*^9}, 3.841827527727193*^9, {3.841828450589056*^9, 
   3.841828453984212*^9}, 3.8429528916294537`*^9, 3.842952929745389*^9, {
   3.843214022625164*^9, 3.843214028896063*^9}, {3.855139257570621*^9, 
   3.8551392578559933`*^9}, 3.8551408886753607`*^9, {3.855309472317254*^9, 
   3.855309537911681*^9}, {3.855310175618671*^9, 3.855310197495757*^9}, {
   3.855311406567627*^9, 3.8553114483109083`*^9}, {3.855738814328362*^9, 
   3.855738814679195*^9}, 3.855829375897744*^9, {3.855829487259807*^9, 
   3.855829489040373*^9}, {3.8558298253361607`*^9, 3.855829829792454*^9}, {
   3.856411957105308*^9, 3.856411961225603*^9}, {3.856431327721566*^9, 
   3.856431333943243*^9}, {3.875082790793445*^9, 3.8750828959030123`*^9}, {
   3.875082951070619*^9, 3.875083003128962*^9}, {3.8750830331522417`*^9, 
   3.875083061704331*^9}, {3.875083113036057*^9, 3.8750832959996843`*^9}, {
   3.875083329338893*^9, 3.8750833866423473`*^9}, 3.875683682325513*^9, {
   3.8756944955132217`*^9, 3.875694539576473*^9}, {3.876105236998472*^9, 
   3.876105302643255*^9}, {3.87610855029954*^9, 3.876108558613761*^9}, {
   3.876108610027898*^9, 3.876108668786162*^9}, {3.876108708009933*^9, 
   3.876108720168108*^9}, {3.8761091203686523`*^9, 3.876109164889174*^9}, {
   3.8761092463208447`*^9, 3.876109297901437*^9}, {3.876109418146208*^9, 
   3.876109541936162*^9}, {3.876109602128745*^9, 3.876109640208702*^9}, {
   3.876109695522987*^9, 3.876109857756661*^9}, {3.8761098961294203`*^9, 
   3.87610994763923*^9}, {3.8761162111733313`*^9, 3.876116212235091*^9}, {
   3.876266746823936*^9, 3.876266769174567*^9}, {3.876266839165031*^9, 
   3.8762670813160458`*^9}, {3.876267119338045*^9, 3.876267302120058*^9}, {
   3.87626738246589*^9, 3.876267430615614*^9}, 3.876267849549697*^9, {
   3.8762680036429443`*^9, 3.8762680073065443`*^9}, {3.876272949164504*^9, 
   3.876272950461103*^9}, {3.876273098167901*^9, 3.876273119682022*^9}, {
   3.876811059243297*^9, 3.876811094794902*^9}, {3.876980210264368*^9, 
   3.876980210867654*^9}, {3.877055219267973*^9, 3.877055219538458*^9}, {
   3.87705528078961*^9, 3.8770552810132647`*^9}, {3.8770553821676702`*^9, 
   3.8770553972120523`*^9}, {3.877056169390284*^9, 3.877056212849986*^9}, {
   3.881214709403595*^9, 3.881214725940761*^9}, {3.8842104478500843`*^9, 
   3.8842104613303137`*^9}, 3.884389093515679*^9, 3.884389126168221*^9, {
   3.8843891849150333`*^9, 3.884389187020005*^9}, {3.884389285644466*^9, 
   3.884389358150239*^9}, {3.884389389954734*^9, 3.884389406255611*^9}, 
   3.886220300486787*^9, {3.886220378985017*^9, 3.88622041621382*^9}, {
   3.886220578110416*^9, 3.8862206544662848`*^9}, {3.886221121945621*^9, 
   3.886221138398641*^9}, {3.886221203032398*^9, 3.886221256270247*^9}, {
   3.8862212899486637`*^9, 3.886221377169681*^9}, {3.886221466522778*^9, 
   3.886221485769885*^9}, {3.886221520521635*^9, 3.886221532675531*^9}, {
   3.886221912053527*^9, 3.886221916881071*^9}, {3.8862219493479347`*^9, 
   3.886221989343895*^9}, {3.886222109297024*^9, 3.8862221183975573`*^9}, {
   3.886222657235841*^9, 3.886222657732451*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1d34d1fa-fb94-4a35-9d0c-11b452365a0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SolveSecular", "[", 
    RowBox[{
     RowBox[{"Rdis_", "?", "NumberQ"}], ",", 
     RowBox[{"Npoints_", "?", "NumberQ"}], ",", 
     RowBox[{"momentum_", "?", "NumberQ"}], ",", 
     RowBox[{"Lin_", "?", "NumberQ"}], ",", 
     RowBox[{"lam_", "?", "NumberQ"}], ",", 
     RowBox[{"c0_", "?", "NumberQ"}], ",", 
     RowBox[{"d0_", "?", "NumberQ"}], ",", 
     RowBox[{"a00_", "?", "ArrayQ"}], ",", 
     RowBox[{"TwoMyOverHBsq_", "?", "NumberQ"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "hDif", ",", "Dmat", ",", "Kmat", ",", "Wmat", ",", "bcol", ",", "Amat",
        ",", "ucol", ",", "wf", ",", "tanDelta", ",", "usol", ",", 
       "energyMeV", ",", "nff", ",", "cij"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hDif", "=", 
       RowBox[{"Rdis", "/", "Npoints"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"energyMeV", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"momentum", "^", "2"}], ")"}], "/", "TwoMyOverHBsq"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Kmat", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Band", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            RowBox[{"Band", "[", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}], ",", 
           RowBox[{
            RowBox[{"Band", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Npoints", ",", "Npoints"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"normsqu", "=", 
       RowBox[{"1.", "/", 
        RowBox[{"NormTT", "[", "a00", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Wmat", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Npoints", ",", "Npoints"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"prefac", "=", 
       RowBox[{"(*", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"4", " ", "\[Pi]"}], ")"}], "1.5"], "*)"}], "1"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Wmatt", "=", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"cij", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"a00", "[", 
              RowBox[{"[", "ii", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", 
            RowBox[{
             RowBox[{"a00", "[", 
              RowBox[{"[", "jj", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", 
            RowBox[{
             RowBox[{"a00", "[", 
              RowBox[{"[", "kk", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "  ", 
            RowBox[{
             RowBox[{"a00", "[", 
              RowBox[{"[", "ll", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", " ", "normsqu"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "cij"}], " ", 
              SuperscriptBox["hDif", "2"], " ", "TwoMyOverHBsq", " ", 
              RowBox[{"VlocTF", "[", 
               RowBox[{
                RowBox[{"i", " ", "hDif"}], ",", "lam", ",", "c0", ",", "d0", 
                ",", 
                RowBox[{
                 RowBox[{"a00", "[", 
                  RowBox[{"[", "ii", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"a00", "[", 
                  RowBox[{"[", "jj", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"a00", "[", 
                  RowBox[{"[", "kk", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"a00", "[", 
                  RowBox[{"[", "ll", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "Npoints"}], "}"}]}], "]"}], 
           "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", 
           RowBox[{"Length", "[", "a00", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"jj", ",", "1", ",", 
           RowBox[{"Length", "[", "a00", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"kk", ",", "1", ",", 
           RowBox[{"Length", "[", "a00", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ll", ",", "1", ",", 
           RowBox[{"Length", "[", "a00", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Wmat", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Wmatt", ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dmat", "=", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["hDif", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["momentum", "2"], "-", 
             FractionBox[
              RowBox[{"Lin", " ", 
               RowBox[{"(", 
                RowBox[{"Lin", "+", "1"}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"i", " ", "hDif"}], ")"}], "2"]]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "Npoints"}], "}"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Chop", "[", "Wmat", "]"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"1", ";;", "4"}], ",", 
             RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], "//", "MatrixForm"}], 
         "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Amat", "=", 
       RowBox[{"Kmat", "+", "Dmat", "+", "Wmat"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bcol", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", "Npoints"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ucol", "=", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\"\<u\>\"", "##"], "&"}], ",", 
         RowBox[{"{", "Npoints", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bcol", "\[LeftDoubleBracket]", 
        RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", 
       RowBox[{"-", " ", 
        RowBox[{"beta", "[", 
         RowBox[{"Rdis", ",", "momentum", ",", "Lin", ",", "hDif"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Amat", "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Amat", "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "+", 
        RowBox[{"alpha", "[", 
         RowBox[{"Rdis", ",", "momentum", ",", "Lin", ",", "hDif"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"usol", "=", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"Amat", ",", "bcol"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tanDelta", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"RiccatiBesselJ", "[", 
           RowBox[{
            RowBox[{"momentum", "  ", "Rdis"}], ",", "Lin"}], "]"}], 
          RowBox[{"RiccatiBesselN", "[", 
           RowBox[{
            RowBox[{"momentum", " ", "Rdis"}], ",", "Lin"}], "]"}]], ")"}], 
        "-", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"usol", "\[LeftDoubleBracket]", 
           RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], 
          RowBox[{"RiccatiBesselN", "[", 
           RowBox[{
            RowBox[{"momentum", " ", "Rdis"}], ",", "Lin"}], "]"}]], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(N\), \(terms\)]\) = \>\"", ",", 
          RowBox[{
           RowBox[{"Length", "[", "a00", "]"}], "^", "4"}], ",", 
          "\"\< calculated for \!\(\*SubscriptBox[\(E\), \(rel\)]\) = \>\"", 
          ",", "energyMeV", ",", "\"\< MeV\>\""}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "tanDelta"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.799844193663694*^9, 3.799844230508864*^9}, {
   3.799844441240127*^9, 3.7998444608270397`*^9}, {3.799844511909587*^9, 
   3.799844516255533*^9}, {3.7998445959948177`*^9, 3.799844729887206*^9}, {
   3.79984480394598*^9, 3.7998448428953257`*^9}, {3.799844927142901*^9, 
   3.79984494453616*^9}, {3.799844982928282*^9, 3.7998451208467817`*^9}, {
   3.799845205204481*^9, 3.799845216833956*^9}, {3.7998452945936327`*^9, 
   3.799845352232326*^9}, {3.799845405290604*^9, 3.7998455540676823`*^9}, {
   3.79984563702781*^9, 3.799845748421855*^9}, {3.799845789111649*^9, 
   3.799845876284544*^9}, {3.799845946231172*^9, 3.799845961811461*^9}, {
   3.7998466664306307`*^9, 3.799846704347189*^9}, {3.799846820691683*^9, 
   3.799847031730378*^9}, {3.799847077882975*^9, 3.7998470988892803`*^9}, 
   3.7998473180575943`*^9, {3.799847608308605*^9, 3.799847627955985*^9}, {
   3.799847693131727*^9, 3.799847698714774*^9}, {3.799847783933577*^9, 
   3.7998478684696293`*^9}, {3.799847908280759*^9, 3.799847946499229*^9}, {
   3.799847977637109*^9, 3.799848002538436*^9}, {3.7998481584128437`*^9, 
   3.799848222982203*^9}, {3.799848272978325*^9, 3.799848275511722*^9}, {
   3.799848330997065*^9, 3.7998483375548487`*^9}, {3.799848589571003*^9, 
   3.799848640343828*^9}, {3.79984867482891*^9, 3.7998486753069477`*^9}, {
   3.799848766223956*^9, 3.799848885523119*^9}, 3.799848928103075*^9, {
   3.799848962416375*^9, 3.799849004175256*^9}, {3.799849085452805*^9, 
   3.7998490856999073`*^9}, {3.799849122505766*^9, 3.799849151473476*^9}, {
   3.7998492512811213`*^9, 3.799849251559629*^9}, 3.799849282162941*^9, {
   3.7998502689626102`*^9, 3.799850381190243*^9}, {3.799850431973194*^9, 
   3.7998505461945353`*^9}, {3.799850598974743*^9, 3.79985063021171*^9}, {
   3.799924676005452*^9, 3.799924778131298*^9}, {3.7999248750411263`*^9, 
   3.7999249376841297`*^9}, {3.799925000955814*^9, 3.799925095123474*^9}, {
   3.799925193860635*^9, 3.799925232862447*^9}, {3.79992527527987*^9, 
   3.799925344780155*^9}, {3.799925429765581*^9, 3.7999254411803637`*^9}, {
   3.799925480678334*^9, 3.7999255920619297`*^9}, {3.799925688109899*^9, 
   3.799925703407652*^9}, {3.799925786678752*^9, 3.799925786919655*^9}, {
   3.799926504868712*^9, 3.799926511403908*^9}, {3.79992654578473*^9, 
   3.799926655151861*^9}, {3.799926725006506*^9, 3.799926800200645*^9}, {
   3.7999270766666117`*^9, 3.7999270871158857`*^9}, {3.799927171210371*^9, 
   3.799927342307374*^9}, {3.799927374445335*^9, 3.799927374726967*^9}, {
   3.799927416477796*^9, 3.799927417804901*^9}, {3.799927451007119*^9, 
   3.799927479502017*^9}, {3.799927537494401*^9, 3.7999275399997*^9}, {
   3.7999283968882637`*^9, 3.799928421624054*^9}, {3.799928465136036*^9, 
   3.799928467530869*^9}, {3.7999285079618*^9, 3.799928544496697*^9}, {
   3.799928590135507*^9, 3.799928614297763*^9}, {3.7999286657554007`*^9, 
   3.799928692067577*^9}, {3.799929002487925*^9, 3.799929020072877*^9}, {
   3.799929347054367*^9, 3.799929472130046*^9}, {3.799929525262292*^9, 
   3.79992954340695*^9}, {3.799929577383519*^9, 3.7999296114145517`*^9}, {
   3.799934434749699*^9, 3.799934446826674*^9}, {3.7999344845313883`*^9, 
   3.799934691808429*^9}, {3.7999349123169613`*^9, 3.799934934315812*^9}, {
   3.799935027930644*^9, 3.799935028568728*^9}, {3.7999350722886763`*^9, 
   3.7999351056342583`*^9}, {3.799935152143138*^9, 3.799935271998769*^9}, {
   3.799935313988963*^9, 3.799935331280711*^9}, {3.79993537078939*^9, 
   3.799935372597519*^9}, {3.7999354276431847`*^9, 3.799935629198086*^9}, {
   3.799935772113929*^9, 3.799935801284212*^9}, {3.799935846592125*^9, 
   3.799935895726575*^9}, {3.799936313684577*^9, 3.799936357155007*^9}, {
   3.79993646021567*^9, 3.7999364706924953`*^9}, {3.799936548795611*^9, 
   3.7999366062701187`*^9}, {3.7999884664465437`*^9, 3.799988472228293*^9}, {
   3.799988514989059*^9, 3.799988551048834*^9}, {3.799988595134609*^9, 
   3.799988634692646*^9}, {3.799988747647192*^9, 3.799988748843103*^9}, {
   3.799988936167357*^9, 3.79998894496148*^9}, {3.799989015406828*^9, 
   3.799989038766877*^9}, {3.799989070366557*^9, 3.799989110943717*^9}, {
   3.7999891713129263`*^9, 3.7999891883863773`*^9}, {3.799989286160109*^9, 
   3.799989292718109*^9}, 3.79998932632767*^9, {3.799989398787711*^9, 
   3.799989546688485*^9}, {3.7999904733493557`*^9, 3.799990481804119*^9}, {
   3.799990533807106*^9, 3.799990578103994*^9}, {3.799990616703088*^9, 
   3.7999906965926456`*^9}, {3.799990727002733*^9, 3.7999907277214746`*^9}, {
   3.799990836717557*^9, 3.799990837249289*^9}, {3.799991153205656*^9, 
   3.799991235994212*^9}, {3.799991277917851*^9, 3.799991439373312*^9}, {
   3.799991492076641*^9, 3.7999915097700577`*^9}, {3.799991541466531*^9, 
   3.799991654458838*^9}, {3.7999917925511703`*^9, 3.7999918434518127`*^9}, {
   3.799991908358567*^9, 3.79999192743939*^9}, {3.799991972910569*^9, 
   3.799992061436681*^9}, {3.799992096905427*^9, 3.799992119691773*^9}, {
   3.799992172864959*^9, 3.7999921784147387`*^9}, {3.799992313538797*^9, 
   3.799992406694436*^9}, {3.7999929662084618`*^9, 3.799993062749951*^9}, {
   3.799993138292499*^9, 3.7999931388442698`*^9}, {3.7999931952235622`*^9, 
   3.7999932260773067`*^9}, {3.799993327194326*^9, 3.7999934777762947`*^9}, {
   3.799993547711424*^9, 3.799993605646385*^9}, {3.799993658013557*^9, 
   3.799993738809091*^9}, {3.79999378058265*^9, 3.799993810606718*^9}, {
   3.7999938413333273`*^9, 3.79999389793344*^9}, {3.7999939868336077`*^9, 
   3.7999939874209433`*^9}, {3.799994047718979*^9, 3.799994059129052*^9}, {
   3.799994135591795*^9, 3.799994148238324*^9}, {3.799994232139573*^9, 
   3.799994282787696*^9}, 3.7999944807491703`*^9, {3.7999945551351748`*^9, 
   3.799994617769114*^9}, {3.799994685667983*^9, 3.799994699800915*^9}, {
   3.799995005330387*^9, 3.799995040525578*^9}, 3.79999510528281*^9, {
   3.799995479859974*^9, 3.79999548053471*^9}, 3.799995553791123*^9, {
   3.799995722973968*^9, 3.799995913145459*^9}, 3.799996059469851*^9, {
   3.799996265317923*^9, 3.799996267062655*^9}, {3.79999632752061*^9, 
   3.799996327953368*^9}, 3.799996366233173*^9, {3.7999968507725897`*^9, 
   3.7999968745497913`*^9}, {3.80007496535467*^9, 3.8000749722731133`*^9}, {
   3.8000750160900545`*^9, 3.8000750254061146`*^9}, {3.8000753432434216`*^9, 
   3.8000753467123184`*^9}, {3.800075551731288*^9, 3.8000756228858185`*^9}, {
   3.800075737527067*^9, 3.8000757388553495`*^9}, {3.8000758116196213`*^9, 
   3.800075838238616*^9}, {3.8000758742567406`*^9, 3.800075879217273*^9}, {
   3.80007695006821*^9, 3.800077029572923*^9}, {3.800077279604842*^9, 
   3.800077343390944*^9}, {3.8000773766078606`*^9, 3.800077553486528*^9}, {
   3.8000775980411615`*^9, 3.8000776401045837`*^9}, {3.800077697137789*^9, 
   3.8000777013067207`*^9}, {3.800077760767965*^9, 3.800077793765132*^9}, {
   3.8000778264663115`*^9, 3.800077827254505*^9}, {3.8000778603859787`*^9, 
   3.8000778741467443`*^9}, {3.8000779137713346`*^9, 3.800077961190894*^9}, {
   3.8000780130031047`*^9, 3.800078030819998*^9}, 3.8000781540045357`*^9, 
   3.8000782051591053`*^9, {3.800078305104042*^9, 3.8000784169805217`*^9}, {
   3.8000784823989396`*^9, 3.800078487823582*^9}, {3.800078682208682*^9, 
   3.8000786829687977`*^9}, {3.8000787864506454`*^9, 3.800078894283725*^9}, {
   3.8000790588142133`*^9, 3.8000791216496506`*^9}, {3.8000791788586073`*^9, 
   3.800079243222021*^9}, {3.800079278599666*^9, 3.80007936457133*^9}, {
   3.8000795294375706`*^9, 3.80007954532176*^9}, {3.8000798118962293`*^9, 
   3.800079848633455*^9}, {3.800079932688916*^9, 3.8000799365290103`*^9}, {
   3.8000802398624735`*^9, 3.800080280065024*^9}, {3.800080341627653*^9, 
   3.8000803642588015`*^9}, {3.800080395306312*^9, 3.800080436169254*^9}, {
   3.800080516519368*^9, 3.8000805171965227`*^9}, {3.800080654035022*^9, 
   3.8000806685646057`*^9}, 3.800080750749682*^9, {3.800080874375285*^9, 
   3.800080875111829*^9}, {3.80008092129685*^9, 3.8000809341725316`*^9}, {
   3.8000810548372107`*^9, 3.800081056105132*^9}, {3.8000810929702463`*^9, 
   3.8000811095624847`*^9}, {3.8000940172588415`*^9, 3.80009401783049*^9}, {
   3.8000942896679916`*^9, 3.8000943138789616`*^9}, {3.80009491747377*^9, 
   3.800095006934316*^9}, {3.80009583809197*^9, 3.8000958947978163`*^9}, {
   3.800183407281279*^9, 3.8001834098027487`*^9}, {3.800344567872706*^9, 
   3.8003446489559383`*^9}, {3.800344865055419*^9, 3.80034487678575*^9}, {
   3.800344938377816*^9, 3.800344941968897*^9}, {3.80062365074096*^9, 
   3.8006236672037477`*^9}, {3.800707797049458*^9, 3.800707811371029*^9}, {
   3.800707895563611*^9, 3.800707946281095*^9}, {3.80070798069246*^9, 
   3.800707981074359*^9}, {3.80070802708425*^9, 3.800708047941217*^9}, {
   3.8007081848269567`*^9, 3.8007081996575212`*^9}, {3.800709992099866*^9, 
   3.800710026979464*^9}, {3.800775893582098*^9, 3.800775895527501*^9}, {
   3.800775940994974*^9, 3.800775942180678*^9}, {3.800787412479102*^9, 
   3.800787420448372*^9}, {3.800787710698966*^9, 3.800787771925763*^9}, {
   3.802005951353228*^9, 3.80200595640174*^9}, {3.802007385616667*^9, 
   3.802007404145932*^9}, {3.802007435375537*^9, 3.802007457913396*^9}, {
   3.802007495246876*^9, 3.8020075196308947`*^9}, {3.802064213782629*^9, 
   3.802064233517988*^9}, {3.802064264782897*^9, 3.802064283370596*^9}, {
   3.802080320687752*^9, 3.802080323968884*^9}, {3.802080986161145*^9, 
   3.802081000628293*^9}, {3.802084695820767*^9, 3.80208469896583*^9}, {
   3.802085848377822*^9, 3.802085882155978*^9}, 3.802086283689695*^9, {
   3.8020863342565193`*^9, 3.802086388433837*^9}, {3.8020867299193363`*^9, 
   3.802086732014345*^9}, {3.80208683736917*^9, 3.802086850617855*^9}, {
   3.802086892662299*^9, 3.802086990482793*^9}, {3.802087992210573*^9, 
   3.802087992978444*^9}, {3.8020883154980173`*^9, 3.8020883162764997`*^9}, {
   3.8020887779844723`*^9, 3.802088780135391*^9}, {3.802088838526451*^9, 
   3.802088839146234*^9}, {3.80209002926132*^9, 3.802090049056148*^9}, {
   3.802090705469558*^9, 3.8020907086826553`*^9}, {3.8020907447237186`*^9, 
   3.802090746873187*^9}, 3.802173090900278*^9, {3.802407782409938*^9, 
   3.802407786302537*^9}, {3.802428156908763*^9, 3.802428196926394*^9}, {
   3.80242829890408*^9, 3.80242834958454*^9}, 3.802428524480928*^9, 
   3.802428607144813*^9, {3.802428878685329*^9, 3.802428888211162*^9}, {
   3.802428936051935*^9, 3.802428938827497*^9}, {3.802429050379375*^9, 
   3.802429052918789*^9}, {3.803018365932871*^9, 3.8030183701616983`*^9}, {
   3.803121794019141*^9, 3.803121813418847*^9}, {3.803123046310863*^9, 
   3.8031230808913527`*^9}, {3.8032004179059353`*^9, 3.803200418928659*^9}, {
   3.803207423114007*^9, 3.80320743274937*^9}, {3.803207482294245*^9, 
   3.803207539447887*^9}, {3.8032076346992273`*^9, 3.803207675299769*^9}, {
   3.803207774616317*^9, 3.803207775828804*^9}, {3.803207816959113*^9, 
   3.803207867143499*^9}, {3.803208055543057*^9, 3.8032080848854647`*^9}, {
   3.803208367252927*^9, 3.8032083694828863`*^9}, 3.803208416553891*^9, {
   3.803208931796586*^9, 3.8032089386840277`*^9}, {3.803209027424718*^9, 
   3.8032090741807137`*^9}, {3.8032091790958*^9, 3.803209212567052*^9}, {
   3.8032093043657627`*^9, 3.803209357285877*^9}, {3.803209623152487*^9, 
   3.8032096443107986`*^9}, {3.803209958884386*^9, 3.8032099652138577`*^9}, {
   3.803210136309246*^9, 3.803210159328474*^9}, 3.8032102062093763`*^9, {
   3.80321037916393*^9, 3.8032104111009073`*^9}, 3.803210574517756*^9, {
   3.803210924192305*^9, 3.8032109311341887`*^9}, {3.803212569977618*^9, 
   3.80321261588428*^9}, {3.806920575343734*^9, 3.8069205797937446`*^9}, {
   3.806920846985707*^9, 3.806920863569208*^9}, {3.8087405121561413`*^9, 
   3.808740525648115*^9}, {3.809067772060987*^9, 3.809067849213327*^9}, {
   3.809068081955419*^9, 3.809068101399476*^9}, 3.809068334258327*^9, {
   3.809671294417556*^9, 3.809671367188324*^9}, 3.809678196453836*^9, {
   3.809679035076413*^9, 3.809679051116723*^9}, {3.8096801175999813`*^9, 
   3.809680135020228*^9}, {3.8098514240293007`*^9, 3.809851506226119*^9}, {
   3.80985155243821*^9, 3.809851554137392*^9}, {3.809851621847348*^9, 
   3.809851669081147*^9}, {3.809852565499466*^9, 3.809852570062813*^9}, {
   3.809852600365532*^9, 3.809852676277113*^9}, {3.8098527452964773`*^9, 
   3.8098528985256367`*^9}, {3.8098530399672318`*^9, 3.809853082109309*^9}, 
   3.809853127630151*^9, {3.8098533682936363`*^9, 3.8098533850027637`*^9}, {
   3.8098534644451017`*^9, 3.809853467694722*^9}, {3.809853499062636*^9, 
   3.809853590792116*^9}, {3.809853736639696*^9, 3.809853746386903*^9}, {
   3.8098537806348467`*^9, 3.8098537829986*^9}, {3.809853819405582*^9, 
   3.809853819750307*^9}, {3.809854551949188*^9, 3.809854553131732*^9}, {
   3.8099269825118437`*^9, 3.809927020467502*^9}, {3.809928121097967*^9, 
   3.8099281765026407`*^9}, {3.809929070175688*^9, 3.809929070892633*^9}, {
   3.809929125306304*^9, 3.809929125699844*^9}, {3.809929545391727*^9, 
   3.809929557676708*^9}, 3.8099318218816023`*^9, {3.809931858164618*^9, 
   3.809931865762574*^9}, {3.809931913111473*^9, 3.809931916326679*^9}, {
   3.809932569240436*^9, 3.809932569915555*^9}, {3.8099326276763773`*^9, 
   3.809932628755328*^9}, {3.8099330635453167`*^9, 3.809933064444811*^9}, 
   3.8099331052262163`*^9, {3.809933519019308*^9, 3.809933550560299*^9}, {
   3.809933591648569*^9, 3.809933621441395*^9}, {3.8099367255965347`*^9, 
   3.809936732306823*^9}, {3.8099376409784813`*^9, 3.809937641875082*^9}, {
   3.810734578224083*^9, 3.810734700538475*^9}, {3.810735114422081*^9, 
   3.810735283569613*^9}, {3.810882355841002*^9, 3.8108823638030443`*^9}, {
   3.810882579066205*^9, 3.810882620526643*^9}, {3.8109817943501377`*^9, 
   3.8109817945408583`*^9}, {3.821426341693012*^9, 3.821426366609893*^9}, 
   3.821429647580228*^9, {3.825407792463499*^9, 3.825407804688518*^9}, {
   3.825409006454506*^9, 3.8254090133047*^9}, {3.828964911256871*^9, 
   3.828964914449892*^9}, {3.8290252918418207`*^9, 3.8290253784778957`*^9}, {
   3.829025412492963*^9, 3.8290254260990753`*^9}, {3.829026175879011*^9, 
   3.82902619911973*^9}, {3.829026864074347*^9, 3.8290268948010683`*^9}, {
   3.8290306907882147`*^9, 3.8290307321495132`*^9}, {3.829031992585284*^9, 
   3.829031995745303*^9}, 3.8291097056926928`*^9, {3.829110478003386*^9, 
   3.82911048065366*^9}, {3.8292171307026777`*^9, 3.829217140033675*^9}, {
   3.829217570682005*^9, 3.8292175920837297`*^9}, {3.8292186933182497`*^9, 
   3.829218695576868*^9}, {3.8292194899626303`*^9, 3.829219516282468*^9}, {
   3.829219722221026*^9, 3.829219808906848*^9}, {3.829220616014531*^9, 
   3.829220672810478*^9}, 3.82922104306598*^9, {3.8292211341087627`*^9, 
   3.8292211941514597`*^9}, {3.82922123114109*^9, 3.8292212544517717`*^9}, {
   3.829221297587142*^9, 3.8292214349089537`*^9}, {3.829222131964431*^9, 
   3.829222157215315*^9}, {3.829222188597337*^9, 3.829222190919815*^9}, {
   3.829222314705717*^9, 3.829222322059657*^9}, 3.8311023139792423`*^9, {
   3.831102477797772*^9, 3.831102612232815*^9}, {3.831615038720523*^9, 
   3.831615040571928*^9}, {3.8316150779132032`*^9, 3.831615079855959*^9}, {
   3.831711972137498*^9, 3.83171200599697*^9}, {3.831794396256179*^9, 
   3.8317944033202353`*^9}, {3.831794442101242*^9, 3.8317944676163177`*^9}, {
   3.831794607435645*^9, 3.831794610961461*^9}, {3.83190077987712*^9, 
   3.831900855309862*^9}, 3.831907779891659*^9, 3.8319081859495993`*^9, {
   3.831908235428681*^9, 3.831908236380185*^9}, {3.831991722803873*^9, 
   3.831991725885995*^9}, {3.8341393318788548`*^9, 3.834139336112371*^9}, {
   3.834631555275609*^9, 3.834631584397361*^9}, {3.8346322534542637`*^9, 
   3.834632295846616*^9}, {3.834639369819707*^9, 3.8346393914913197`*^9}, {
   3.841571024024613*^9, 3.84157102508857*^9}, {3.841571392913176*^9, 
   3.841571417465238*^9}, {3.8415715556886806`*^9, 3.841571570199567*^9}, {
   3.841571677539032*^9, 3.841571728253522*^9}, {3.841571958488062*^9, 
   3.841571975921307*^9}, {3.841572011436118*^9, 3.8415720641222486`*^9}, {
   3.841572204423155*^9, 3.841572295750936*^9}, {3.841572417212858*^9, 
   3.841572425538875*^9}, {3.8416489243985167`*^9, 3.841648925889845*^9}, 
   3.841648963455215*^9, {3.841648997024519*^9, 3.841649021358337*^9}, {
   3.841649438580233*^9, 3.841649449524832*^9}, {3.8416504863392563`*^9, 
   3.8416505123633966`*^9}, {3.841650663432287*^9, 3.841650666106103*^9}, {
   3.841826165723908*^9, 3.841826190611351*^9}, {3.841826326095098*^9, 
   3.841826328889881*^9}, {3.841826392398587*^9, 3.841826400570425*^9}, {
   3.841826863276381*^9, 3.841826864839554*^9}, {3.841827040537311*^9, 
   3.84182704336581*^9}, 3.841827127413891*^9, {3.841827313279365*^9, 
   3.841827315303254*^9}, {3.8418276341263323`*^9, 3.8418276359043617`*^9}, {
   3.841827815136207*^9, 3.841827827923222*^9}, {3.841828614310586*^9, 
   3.8418286314801817`*^9}, {3.841828688692485*^9, 3.841828699885957*^9}, {
   3.841828778253668*^9, 3.8418288171526623`*^9}, 3.841828848175873*^9, {
   3.841828972331201*^9, 3.84182905238803*^9}, {3.8419118987625303`*^9, 
   3.841911904623579*^9}, {3.8419120544795847`*^9, 3.8419120673277063`*^9}, {
   3.8419125987250843`*^9, 3.841912651363162*^9}, {3.841913152368607*^9, 
   3.84191323345641*^9}, {3.841913273053026*^9, 3.841913274250862*^9}, {
   3.8419133597806597`*^9, 3.841913373626795*^9}, {3.841913600465466*^9, 
   3.841913602897298*^9}, {3.841914194359885*^9, 3.8419141986422243`*^9}, {
   3.841914282820601*^9, 3.841914351756329*^9}, {3.8419144559414253`*^9, 
   3.84191445647486*^9}, {3.841914487830793*^9, 3.8419144886774273`*^9}, {
   3.841914900048169*^9, 3.841914909637231*^9}, {3.841914970851769*^9, 
   3.841914994321884*^9}, {3.841915193943528*^9, 3.8419152224487743`*^9}, {
   3.841915255803546*^9, 3.841915256272504*^9}, 3.8419153177044287`*^9, {
   3.841915351703801*^9, 3.841915353260645*^9}, {3.842952978544484*^9, 
   3.842953070772779*^9}, {3.842953329231512*^9, 3.8429533308688803`*^9}, {
   3.843214076467773*^9, 3.8432140781251373`*^9}, {3.853433222979254*^9, 
   3.8534332236998997`*^9}, {3.8534332782360077`*^9, 3.853433322361244*^9}, {
   3.8538416449848766`*^9, 3.8538416496607637`*^9}, 3.854896103705266*^9, 
   3.8548964439793167`*^9, {3.8548964963238497`*^9, 3.854896534538065*^9}, {
   3.854896788120029*^9, 3.854896860589439*^9}, {3.8551381695401*^9, 
   3.8551381933093243`*^9}, {3.855138226180984*^9, 3.8551382307149076`*^9}, {
   3.8551384419477997`*^9, 3.8551384628281603`*^9}, {3.8551392294710703`*^9, 
   3.855139229937039*^9}, {3.855223245996191*^9, 3.855223264437994*^9}, {
   3.855225512508484*^9, 3.855225519102825*^9}, {3.855309574339238*^9, 
   3.8553095908159246`*^9}, {3.855311456897386*^9, 3.855311466666657*^9}, {
   3.855738749886683*^9, 3.8557387529407253`*^9}, {3.855739257329893*^9, 
   3.855739260660693*^9}, {3.8558263006238403`*^9, 3.855826318851335*^9}, 
   3.8558263916534233`*^9, 3.856431933789548*^9, {3.8564319708063993`*^9, 
   3.8564319767984324`*^9}, {3.856432094852029*^9, 3.8564320962103987`*^9}, {
   3.85643446497815*^9, 3.856434469014505*^9}, {3.856434522849461*^9, 
   3.856434570801791*^9}, {3.85643460661213*^9, 3.856434608114378*^9}, {
   3.8564346886154346`*^9, 3.856434724670094*^9}, {3.856436406902815*^9, 
   3.856436407398603*^9}, {3.8564364794403667`*^9, 3.8564364803644743`*^9}, {
   3.856513777756095*^9, 3.856513790278425*^9}, {3.856514267923616*^9, 
   3.856514290557982*^9}, 3.856514372136942*^9, {3.856514674988344*^9, 
   3.856514679387521*^9}, {3.856514882816506*^9, 3.8565149314105*^9}, 
   3.8565150821978197`*^9, {3.856515631246176*^9, 3.8565157366225157`*^9}, {
   3.856515847050394*^9, 3.8565158483065033`*^9}, {3.875083464966526*^9, 
   3.875083547589588*^9}, {3.875083583645959*^9, 3.8750835905142736`*^9}, {
   3.875083683962113*^9, 3.875083695921957*^9}, {3.8750837549639053`*^9, 
   3.875083766875103*^9}, {3.875083805757502*^9, 3.875084014644315*^9}, {
   3.8756848935899343`*^9, 3.875685094196081*^9}, {3.876117646018712*^9, 
   3.87611771835958*^9}, {3.876117759922542*^9, 3.876117838602028*^9}, {
   3.876118961047276*^9, 3.876118970190247*^9}, {3.8762674817437468`*^9, 
   3.8762674960494947`*^9}, {3.8762677139837513`*^9, 3.876267721930969*^9}, 
   3.8762678616140842`*^9, 3.8762683183746357`*^9, {3.876272560865924*^9, 
   3.8762725750986853`*^9}, {3.876273138136012*^9, 3.8762731460971403`*^9}, {
   3.876273496791423*^9, 3.876273497410933*^9}, 3.876273576203952*^9, 
   3.876287094732327*^9, 3.876287445174914*^9, {3.876299806779771*^9, 
   3.876299808178389*^9}, {3.87630684205429*^9, 3.8763068569136047`*^9}, {
   3.8769804906008673`*^9, 3.876980491068535*^9}, {3.877055778833086*^9, 
   3.8770557791731243`*^9}, {3.8816518514569798`*^9, 3.881651854133834*^9}, {
   3.881652122200842*^9, 3.8816522391941566`*^9}, {3.881653026312437*^9, 
   3.881653040838046*^9}, {3.8816532541559963`*^9, 3.881653305941975*^9}, {
   3.881653401867261*^9, 3.8816534024573927`*^9}, {3.881653533176447*^9, 
   3.8816535949210052`*^9}, {3.881654162454218*^9, 3.881654172113081*^9}, {
   3.881654238801531*^9, 3.881654241844913*^9}, {3.8816542753675537`*^9, 
   3.881654283714489*^9}, {3.88165495596985*^9, 3.881655006515341*^9}, 
   3.881655036527032*^9, {3.881655522124681*^9, 3.881655529599183*^9}, {
   3.881655582214588*^9, 3.881655583275587*^9}, {3.881655648249186*^9, 
   3.881655660926043*^9}, {3.881655774338138*^9, 3.8816558280475407`*^9}, 
   3.881655884333254*^9, {3.88165599485882*^9, 3.88165603228379*^9}, {
   3.881656100865925*^9, 3.881656212926361*^9}, 3.8854408360012302`*^9, {
   3.886222609721839*^9, 3.886222610368292*^9}, {3.886222649962356*^9, 
   3.886222651760696*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"3028559a-662e-4356-b9b5-ada81c3f8385"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetERE", "[", 
   RowBox[{"l_", ",", "rMax_", ",", "nPoints_", ",", "core_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"locall", "=", "l"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dataS", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tanDsL", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tanDs", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"eRange", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"0.01", ",", "0.1", ",", "0.03"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"LECc", " ", "=", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"activeLEC", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "locall"}], "&"}]}], 
         "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LECd", " ", "=", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"activeLEC", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "locall"}], "&"}]}], 
         "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"SetSharedVariable", "[", "tanDs", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"momFM", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"mh2", " ", "energ"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"TanDelSwave", "=", 
         RowBox[{"SolveSecular", "[", 
          RowBox[{
          "rMax", ",", "nPoints", ",", "momFM", ",", "0", ",", "locall", ",", 
           "LECc", ",", "LECd", ",", "core", ",", "mh2"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"tanDs", ",", 
          RowBox[{"{", 
           RowBox[{"energ", ",", "TanDelSwave"}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"energ", ",", "eRange"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"tanDs", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"tanDs", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ">", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", 
      RowBox[{
      "Sort", " ", "all", " ", "the", " ", "momentum", " ", "since", " ", 
       "it", " ", "is", " ", "parallel"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Extract", " ", "the", " ", "ERE", " ", "Parameters"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Lrel", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dataS", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"mh2", " ", "eRange"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"mh2", " ", "eRange"}], " ", "]"}], "/", 
          RowBox[{"Re", "[", 
           RowBox[{"tanDs", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}]}], 
        "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"EreS", "=", 
      RowBox[{"Fit", "[", 
       RowBox[{
        RowBox[{"dataS", "\[LeftDoubleBracket]", 
         RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"p", "^", "2"}]}], "}"}], ",", "p"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a0tf", "=", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"Coefficient", "[", 
         RowBox[{"EreS", ",", "p", ",", "0"}], "]"}], 
        RowBox[{"-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r0tf", "=", " ", 
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"EreS", ",", "p", ",", "2"}], "]"}], "*", "2."}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"a0tf", ",", "r0tf", ",", "dataS"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.852262297124173*^9, 3.852262297124173*^9}, 
   3.8522626678443975`*^9, 3.8532267951977344`*^9, 3.853227124588494*^9, {
   3.853230498909873*^9, 3.853230519102766*^9}, {3.85323056358375*^9, 
   3.853230689577078*^9}, {3.8532308705205493`*^9, 3.8532308712537766`*^9}, 
   3.853231048818413*^9, 3.853231289893648*^9, {3.853298625530425*^9, 
   3.853298637683942*^9}, {3.8533002735976334`*^9, 3.8533002887755575`*^9}, {
   3.8533014821443253`*^9, 3.8533014858587027`*^9}, {3.8535226285993876`*^9, 
   3.8535226316622157`*^9}, 3.854895908307124*^9, 3.8548960211506567`*^9, {
   3.855229248986372*^9, 3.855229290007184*^9}, {3.855309712787837*^9, 
   3.855309717662904*^9}, {3.855311481860064*^9, 3.855311483768371*^9}, {
   3.855650771146367*^9, 3.855650852916173*^9}, {3.855739954296426*^9, 
   3.855739959539967*^9}, {3.8562617195048323`*^9, 3.856261744633113*^9}, {
   3.856263303436569*^9, 3.856263310396605*^9}, {3.8564314772238827`*^9, 
   3.856431487196451*^9}, {3.856431538535982*^9, 3.85643154245259*^9}, {
   3.8564315953330593`*^9, 3.85643160274969*^9}, 3.85643165797653*^9, {
   3.856431708992791*^9, 3.856431712106429*^9}, {3.8564318010960493`*^9, 
   3.856431805782648*^9}, {3.8565159742883387`*^9, 3.85651597750677*^9}, {
   3.875072644709866*^9, 3.87507275343948*^9}, {3.875072816418131*^9, 
   3.875072904761282*^9}, {3.875073151014079*^9, 3.875073155787969*^9}, {
   3.875073358726117*^9, 3.8750733611864233`*^9}, {3.87507348671796*^9, 
   3.8750734972629223`*^9}, {3.875073643186861*^9, 3.8750736530067053`*^9}, {
   3.875073690076045*^9, 3.875073773305233*^9}, {3.87507382416695*^9, 
   3.8750739575666447`*^9}, {3.875074000848612*^9, 3.875074004687408*^9}, {
   3.8750740375920963`*^9, 3.875074039838542*^9}, {3.8750740714123383`*^9, 
   3.875074080840233*^9}, {3.875084271891074*^9, 3.875084273119851*^9}, {
   3.875685291100933*^9, 3.875685341272833*^9}, {3.875685411682775*^9, 
   3.8756854139141912`*^9}, {3.8756856451720467`*^9, 3.875685658703032*^9}, 
   3.8756858077492237`*^9, {3.8769808456831083`*^9, 3.876980874393066*^9}, {
   3.8769809069774218`*^9, 3.876981035163525*^9}, {3.876981121311613*^9, 
   3.876981139396195*^9}, {3.8769811908095713`*^9, 3.8769812420744677`*^9}, {
   3.876981345227887*^9, 3.876981364082205*^9}, {3.876981450540691*^9, 
   3.8769814588597937`*^9}, {3.8769815386121817`*^9, 
   3.8769815395085297`*^9}, {3.87698167153968*^9, 3.87698167657003*^9}, {
   3.876981802133235*^9, 3.876981862925025*^9}, {3.876982027191504*^9, 
   3.876982092725515*^9}, {3.881653235263174*^9, 3.881653236840893*^9}, {
   3.885440719685811*^9, 3.8854407289682913`*^9}, {3.88544082518581*^9, 
   3.885440827437736*^9}, {3.88544289250159*^9, 3.885442893633552*^9}, {
   3.885893396609612*^9, 3.885893397594534*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"90416275-401e-4491-8557-84af7f68d3db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"JacobiWavefunctions", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2.0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01061740"}], ",", "4.13404400", ",", 
           "0.27286900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00820667", ",", "4.13404400", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00232704"}], ",", "4.13404400", ",", 
           "0.06354700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00663043", ",", "3.47668300", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00824312", ",", "3.47668300", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00882996", ",", "3.47668300", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.48249900", ",", "1.41086700", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.05509460"}], ",", "1.41086700", ",", 
           "0.18057100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.31809900", ",", "1.41086700", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.50162500"}], ",", "1.26632400", ",", 
           "0.27286900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.07544860", ",", "1.26632400", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.33183300"}], ",", "1.26632400", ",", 
           "0.06354700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.17321700", ",", "0.84262700", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.03289340", ",", "0.84262700", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.16311400", ",", "0.84262700", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.13230000"}], ",", "0.25662000", ",", 
           "0.27286900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.18971000", ",", "0.25662000", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.27975700"}], ",", "0.25662000", ",", 
           "0.06354700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.45883000", ",", "0.24733700", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3.86811000"}], ",", "0.24733700", ",", 
           "0.18057100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.44169500", ",", "0.24733700", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00315959", ",", "0.00556100", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00699255"}], ",", "0.00556100", ",", 
           "0.18057100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01162550", ",", "0.00556100", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00052919", ",", "9.20551700", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00090575"}], ",", "9.20551700", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00019846"}], ",", "9.20551700", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.05794020", ",", "1.92216500", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.09777030"}], ",", "1.92216500", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.10221100"}], ",", "1.92216500", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.03306620"}], ",", "1.31386900", ",", 
           "1.90963000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.06791630", ",", "1.31386900", ",", "0.22164800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.20769300", ",", "1.31386900", ",", "0.06304600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.03301990", ",", "1.00860000", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.15354300"}], ",", "1.00860000", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.25679100"}], ",", "1.00860000", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01307010"}], ",", "0.22007800", ",", 
           "1.90963000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00014706", ",", "0.22007800", ",", "0.22164800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.12907900"}], ",", "0.22007800", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.02167700", ",", "0.12481900", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.04734000"}], ",", "0.12481900", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.32768600"}], ",", "0.12481900", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02038300"}], ",", "0.08951100", ",", 
           "1.90963000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.77814700", ",", "0.08951100", ",", "0.22164800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.75664800", ",", "0.08951100", ",", "0.06304600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00690824", ",", "0.07059200", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.24339700"}], ",", "0.07059200", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.59746100"}], ",", "0.07059200", ",", 
           "0.06304600"}], "}"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"4.0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00458098"}], ",", "10.55522400", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01136790", ",", "10.55522400", ",", "0.50551500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.02270740", ",", "10.55522400", ",", "0.11475700"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.04961920"}], ",", "5.06681000", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.06063370", ",", "5.06681000", ",", "0.50551500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.06508300", ",", "5.06681000", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.34673700"}], ",", "1.60615500", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.35959000", ",", "1.60615500", ",", "0.50551500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"1.24912000", ",", "1.60615500", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.51247900", ",", "1.41350500", ",", "4.77353400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.79196700"}], ",", "1.41350500", ",", 
           "0.50551500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.56730000"}], ",", "1.41350500", ",", 
           "0.11475700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.19744800"}], ",", "1.25872800", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.56620100", ",", "1.25872800", ",", "0.50551500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"1.53940000", ",", "1.25872800", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00115267", ",", "0.33103800", ",", "4.77353400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01668790"}], ",", "0.33103800", ",", 
           "0.50551500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.12163300"}], ",", "0.33103800", ",", 
           "0.11475700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00096886"}], ",", "0.27555800", ",", 
           "4.77353400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02503190"}], ",", "0.27555800", ",", 
           "0.50551500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.44081300", ",", "0.27555800", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00036285", ",", "0.05549300", ",", "4.77353400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00574768"}], ",", "0.05549300", ",", 
           "0.50551500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.07541940", ",", "0.05549300", ",", "0.11475700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00912753", ",", "11.52004800", ",", "1.15339600"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02106490"}], ",", "11.52004800", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00927716"}], ",", "11.52004800", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02952810"}], ",", "6.93907300", ",", 
           "1.15339600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01076950"}], ",", "6.93907300", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01134370"}], ",", "6.93907300", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02627570"}], ",", "3.73198100", ",", 
           "1.15339600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.09169450"}], ",", "3.73198100", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.06370020"}], ",", "3.73198100", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.04294550", ",", "1.02516800", ",", "1.15339600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.15630900"}], ",", "1.02516800", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.09345540"}], ",", "1.02516800", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01720450", ",", "0.29212900", ",", "1.15339600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.10470700"}], ",", "0.29212900", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.17589800"}], ",", "0.29212900", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02948640"}], ",", "0.10880500", ",", 
           "1.15339600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.28674000", ",", "0.10880500", ",", "0.26045100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.25576700", ",", "0.10880500", ",", "0.06921300"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.01889250", ",", "0.07992100", ",", "1.15339600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.14249100"}], ",", "0.07992100", ",", 
           "0.26045100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.28664400"}], ",", "0.07992100", ",", 
           "0.06921300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00035011"}], ",", "0.00212900", ",", 
           "1.15339600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00208741", ",", "0.00212900", ",", "0.26045100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00418899"}], ",", "0.00212900", ",", 
           "0.06921300"}], "}"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"6.0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.00062059", ",", "22.11367000", ",", "7.18348300"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01211750", ",", "22.11367000", ",", "0.64982000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.02221600", ",", "22.11367000", ",", "0.11860500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.04489910"}], ",", "10.20688800", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.04803360", ",", "10.20688800", ",", "0.64982000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.06331490", ",", "10.20688800", ",", "0.11860500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "23.06490000"}], ",", "3.17864800", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"55.03550000", ",", "3.17864800", ",", "0.64982000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"35.77350000", ",", "3.17864800", ",", "0.11860500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"23.02960000", ",", "3.17669500", ",", "7.18348300"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "55.05410000"}], ",", "3.17669500", ",", 
           "0.64982000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "35.70400000"}], ",", "3.17669500", ",", 
           "0.11860500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00348992"}], ",", "1.77152600", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.19498800", ",", "1.77152600", ",", "0.64982000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.09566220", ",", "1.77152600", ",", "0.11860500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00099838"}], ",", "0.58969500", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.16368300"}], ",", "0.58969500", ",", 
           "0.64982000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.19464400", ",", "0.58969500", ",", "0.11860500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00002652"}], ",", "0.12010900", ",", 
           "7.18348300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00191004"}], ",", "0.12010900", ",", 
           "0.64982000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.28231900", ",", "0.12010900", ",", "0.11860500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00021903", ",", "0.02707800", ",", "7.18348300"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00403877"}], ",", "0.02707800", ",", 
           "0.64982000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.05870350", ",", "0.02707800", ",", "0.11860500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.15210800", ",", "11.01490100", ",", "1.76242800"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.60825100"}], ",", "11.01490100", ",", 
           "0.45681100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.53017300"}], ",", "11.01490100", ",", 
           "0.09890900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.19106400"}], ",", "9.93859100", ",", 
           "1.76242800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.71844400", ",", "9.93859100", ",", "0.45681100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.62131800", ",", "9.93859100", ",", "0.09890900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.01916960", ",", "6.75448800", ",", "1.76242800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.22536400"}], ",", "6.75448800", ",", 
           "0.45681100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.21887800"}], ",", "6.75448800", ",", 
           "0.09890900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.22475600", ",", "1.17395700", ",", "1.76242800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.79114000"}], ",", "1.17395700", ",", 
           "0.45681100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.10797000"}], ",", "1.17395700", ",", 
           "0.09890900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.16637900"}], ",", "1.08075000", ",", 
           "1.76242800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.75193900", ",", "1.08075000", ",", "0.45681100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"1.13919000", ",", "1.08075000", ",", "0.09890900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.01603430", ",", "0.58720700", ",", "1.76242800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.26600000"}], ",", "0.58720700", ",", 
           "0.45681100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.32337200"}], ",", "0.58720700", ",", 
           "0.09890900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00232547"}], ",", "0.20157400", ",", 
           "1.76242800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01257080", ",", "0.20157400", ",", "0.45681100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.09572980", ",", "0.20157400", ",", "0.09890900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00072643"}], ",", "0.01209200", ",", 
           "1.76242800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00429262", ",", "0.01209200", ",", "0.45681100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.03173840"}], ",", "0.01209200", ",", 
           "0.09890900"}], "}"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"8.0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "1.350050000000"}], ",", "29.837433", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "1.101763000000"}], ",", "29.837433", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.292022900000"}], ",", "29.837433", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "5.066550000000"}], ",", "8.021332", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "7.502069000000"}], ",", "8.021332", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "1.316996000000"}], ",", "8.021332", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "50.045930000000"}], ",", "6.819089", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "23.537650000000"}], ",", "6.819089", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4.345863000000"}], ",", "6.819089", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "38.349850000000"}], ",", "6.472970", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "17.221770000000"}], ",", "6.472970", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "3.338054000000"}], ",", "6.472970", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.008560050000"}], ",", "1.928825", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.264949800000"}], ",", "1.928825", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.104524000000"}], ",", "1.928825", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.025065260000"}], ",", "0.620773", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.023383680000"}], ",", "0.620773", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.052844610000"}], ",", "0.620773", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.026071950000"}], ",", "0.249573", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.004922941000"}], ",", "0.249573", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.024115290000"}], ",", "0.249573", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.016153620000"}], ",", "0.201153", ",", 
           "20.745098"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.002168304000"}], ",", "0.201153", ",", 
           "0.424953"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.005384575000"}], ",", "0.201153", ",", 
           "0.084938"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.910980900000"}], ",", "95.746994", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.106493300000"}], ",", "95.746994", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.034689410000"}], ",", "95.746994", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6.827391000000"}], ",", "25.353510", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.132411000000"}], ",", "25.353510", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.319185900000"}], ",", "25.353510", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "4.567933000000"}], ",", "11.856841", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.549231800000"}], ",", "11.856841", ",", "0.422598"}
           ], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.088119900000"}], ",", "11.856841", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "3.307262000000"}], ",", "5.971210", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.449431900000"}], ",", "5.971210", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.195909900000"}], ",", "5.971210", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.289124800000"}], ",", "1.731460", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.287979500000"}], ",", "1.731460", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.134991900000"}], ",", "1.731460", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.017155450000"}], ",", "0.350429", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.098680500000"}], ",", "0.350429", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.061948000000"}], ",", "0.350429", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.001277606000"}], ",", "0.048203", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.001547105000"}], ",", "0.048203", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.010311740000"}], ",", "0.048203", ",", 
           "0.091095"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.000153746900"}], ",", "0.012204", ",", 
           "18.736151"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.000091307040"}], ",", "0.012204", ",", 
           "0.422598"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"+", "0.000313691700"}], ",", "0.012204", ",", 
           "0.091095"}], "}"}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.87997881138181*^9, 3.87997888240655*^9}, {
   3.879979047132784*^9, 3.879979124492281*^9}, {3.8799793299349747`*^9, 
   3.879979330527898*^9}, {3.879979379513853*^9, 3.879979473028241*^9}, {
   3.879979559777766*^9, 3.8799796541747303`*^9}, {3.8799798667419987`*^9, 
   3.879979940035074*^9}, {3.8799809488050117`*^9, 3.879981014099066*^9}, 
   3.879981134950248*^9, {3.879981187168734*^9, 3.8799812104899387`*^9}, 
   3.880069340594688*^9, {3.8800693800626297`*^9, 3.8800696292965183`*^9}, {
   3.88006966801653*^9, 3.880069697359706*^9}, {3.880069845597196*^9, 
   3.880069936366872*^9}, {3.880069997406066*^9, 3.880070028506919*^9}, {
   3.880070069693969*^9, 3.8800701675495358`*^9}, {3.880070585850917*^9, 
   3.880070586586556*^9}, {3.8805246502660437`*^9, 3.88052465067103*^9}, {
   3.880767007416758*^9, 3.880767007904817*^9}, {3.880767038693595*^9, 
   3.88076703921305*^9}, {3.881193873592485*^9, 3.88119388120263*^9}, {
   3.881193918494905*^9, 3.8811939852791967`*^9}, {3.881194079195204*^9, 
   3.881194080459393*^9}, {3.881194126125787*^9, 3.881194126799931*^9}, {
   3.884401503781804*^9, 3.884401718917144*^9}, {3.884406511593296*^9, 
   3.8844065145478086`*^9}, {3.885272745119813*^9, 3.885272750545686*^9}, {
   3.885440620159534*^9, 3.885440623922069*^9}, {3.885893438184784*^9, 
   3.885893448511142*^9}, {3.885973436409441*^9, 3.885973456160191*^9}, {
   3.885973502570406*^9, 3.885973637717575*^9}, {3.885973735500214*^9, 
   3.885973745581862*^9}, {3.8860259870666513`*^9, 3.8860260699468117`*^9}, {
   3.886026107598469*^9, 3.886026108528513*^9}, {3.886026208664525*^9, 
   3.8860262883959923`*^9}, 3.886026429646792*^9, {3.8860264858081636`*^9, 
   3.8860264862978563`*^9}, {3.8860306891788883`*^9, 3.886030691080044*^9}, {
   3.886032410271105*^9, 3.886032539482724*^9}, {3.886032583292101*^9, 
   3.88603263678168*^9}, {3.8860328338069277`*^9, 3.88603283399434*^9}, {
   3.886044110316873*^9, 3.886044110546784*^9}, {3.88604557077649*^9, 
   3.886045588207439*^9}, {3.8860490335738783`*^9, 3.886049052821246*^9}, {
   3.886050610859318*^9, 3.8860506139809093`*^9}, {3.886050723157034*^9, 
   3.8860507485457287`*^9}, {3.8860507798403378`*^9, 3.886050817097349*^9}, 
   3.886051186905405*^9, 3.8860513526725492`*^9, 3.886051494692792*^9, {
   3.886051764072358*^9, 3.886051777097571*^9}, {3.8860519819716673`*^9, 
   3.886052023343891*^9}, {3.88605357321213*^9, 3.8860535962503653`*^9}, {
   3.886129031099698*^9, 3.886129110415749*^9}, {3.886132267289234*^9, 
   3.886132276814495*^9}, {3.8861323144534807`*^9, 3.886132330993595*^9}, {
   3.886132889343792*^9, 3.886132927168478*^9}, {3.886225245610917*^9, 
   3.886225253378871*^9}, 3.886225289658082*^9, {3.8862253278723917`*^9, 
   3.8862253319656687`*^9}, {3.886225677172179*^9, 3.886225707510765*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"c4b5c0e5-01ff-487e-a8a0-12d32a2683dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FitCoreToGauss", "[", 
   RowBox[{"nGauss_", ",", "core_", ",", 
    RowBox[{"ami_", ":", 
     RowBox[{"-", "10"}]}], ",", 
    RowBox[{"ama_", ":", "10"}], ",", 
    RowBox[{"bmi_", ":", "0.0"}], ",", 
    RowBox[{"bma_", ":", "10"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nk", ",", "amin", ",", "amax", ",", "bmin", ",", "bmax"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nk", "=", "nGauss"}], ";", "\[IndentingNewLine]", 
     RowBox[{"amin", "=", "ami"}], ";", 
     RowBox[{"amax", "=", "ama"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bmin", "=", "bmi"}], ";", 
     RowBox[{"bmax", "=", "bma"}], ";", "\[IndentingNewLine]", 
     RowBox[{"modelCluster", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"aLn", "@", "i"}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"bLn", "@", "i"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rrel1", "^", "2"}], "+", 
               RowBox[{"rrel2", "^", "2"}]}], ")"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nk"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"amin", "<", 
             RowBox[{"aLn", "@", "i"}], " ", "<", "amax"}], ",", 
            RowBox[{"bmin", "<", 
             RowBox[{"bLn", "@", "i"}], " ", "<", "bmax"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nk"}], "}"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nlmLABC", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"core", ",", "modelCluster", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"aLn", "@", "i"}], ",", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.01"}], ",", "0.01"}], "}"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"bLn", "@", "i"}], ",", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"bmin", ",", "bmax"}], "}"}], "]"}]}], "}"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "nk"}], "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"rrel1", ",", "rrel2"}], "}"}], ",", 
        RowBox[{"Weights", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#1", "^", "2"}], "+", 
              RowBox[{"#2", "^", "2"}]}], ")"}], "^", "0.5"}], "&"}], 
          ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nlresi", "=", 
      RowBox[{"nlmLABC", "[", "\"\<FitResiduals\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"basispara", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"aLn", "@", "i"}], ",", 
           RowBox[{"bLn", "@", "i"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nk"}], "}"}]}], "]"}], "/.", 
       RowBox[{"nlmLABC", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"basispara", ",", "nlmLABC"}], "}"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.885781716343829*^9, 3.885781719843355*^9}, {
   3.885781774717826*^9, 3.885781823515849*^9}, {3.8857873706110697`*^9, 
   3.8857873755994*^9}, {3.885789778810441*^9, 3.885789821259838*^9}, {
   3.885789966190568*^9, 3.885789969497094*^9}, {3.885790068766841*^9, 
   3.88579007279206*^9}, {3.8857901398748913`*^9, 3.885790141450322*^9}, {
   3.8858933681315193`*^9, 3.885893386331789*^9}, 3.885893422708391*^9, {
   3.8860295506980877`*^9, 3.886029616086021*^9}, {3.88602989668684*^9, 
   3.8860299015682*^9}, {3.886031006106612*^9, 3.886031015032031*^9}, {
   3.886031049150289*^9, 3.886031052471985*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"672176f5-b77a-4100-870a-a75327cd82d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cutoff", "=", "2.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunctionPara", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"JacobiWavefunctions", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "cutoff"}], "&"}]}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rmax", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grdPoints", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1r2Range", "=", 
   RowBox[{"Subdivide", "[", 
    RowBox[{"Rmax", ",", 
     RowBox[{"grdPoints", "-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunction", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], " ", 
          RowBox[{"r1", "^", "2"}]}], "-", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", 
          RowBox[{"r2", "^", "2"}]}]}], "]"}]}], "&"}], "/@", 
     "JacobiWavefunctionPara"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"JacobiWavefunction", "=", "JacobiWavefunction"}], 
   RowBox[{"(*", 
    RowBox[{"/", 
     RowBox[{"Sqrt", "[", "norma", "]"}]}], "*)"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunctionSym", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], " ", 
            RowBox[{"r1", "^", "2"}]}], "-", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", 
            RowBox[{"r2", "^", "2"}]}]}], "]"}], "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], " ", 
            RowBox[{"r2", "^", "2"}]}], "-", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", 
            RowBox[{"r1", "^", "2"}]}]}], "]"}]}], ")"}]}], "&"}], "/@", 
     "JacobiWavefunctionPara"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunctionGrid", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"JacobiWavefunction", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r1", "\[Rule]", "R1"}], ",", 
        RowBox[{"r2", "\[Rule]", "R2"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"R1", ",", "r1r2Range"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R2", ",", "r1r2Range"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunctionSymGrid", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"JacobiWavefunctionSym", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r1", "\[Rule]", "R1"}], ",", 
        RowBox[{"r2", "\[Rule]", "R2"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"R1", ",", "r1r2Range"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R2", ",", "r1r2Range"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobilWavefunctionGridFlat", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"R1", ",", "R2", ",", 
         RowBox[{"JacobiWavefunction", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r1", "\[Rule]", "R1"}], ",", 
            RowBox[{"r2", "\[Rule]", "R2"}]}], "}"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R1", ",", "r1r2Range"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R2", ",", "r1r2Range"}], "}"}]}], "]"}], ",", "1"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"fitfunctions", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fits", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scattlengths", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitDim", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rMax", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nGrd", "=", "80"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nIter", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["a", "min"], "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "100"}], ",", 
        RowBox[{"-", "90"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["a", "max"], "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"90", ",", "100"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["b", "min"], "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["b", "max"], "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"{", 
       RowBox[{"10", ",", "31"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tmpCore", ",", "tmpFit"}], "}"}], "=", 
     RowBox[{"FitCoreToGauss", "[", 
      RowBox[{"fitDim", ",", "JacobilWavefunctionGridFlat", ",", 
       SubscriptBox["a", "min"], ",", 
       SubscriptBox["a", "max"], ",", 
       SubscriptBox["b", "min"], ",", 
       SubscriptBox["b", "max"]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fitfunctions", ",", "tmpCore"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"fits", ",", "tmpFit"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"tmp", "=", 
     RowBox[{"GetERE", "[", 
      RowBox[{"cutoff", ",", "rMax", ",", "nGrd", ",", "tmpCore"}], "]"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"scattlengths", ",", 
      RowBox[{"tmp", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "nn", ",", 
      "\"\<) \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = \>\"", ",", 
      RowBox[{"scattlengths", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", "tmpCore"}], "]"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"nn", ",", 
     RowBox[{"Range", "[", "nIter", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{"scattlengths", ",", 
   RowBox[{"{", "0.01", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<scattering length [fm]\>\"", ",", "\"\<nbr. of fits\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Mean", "[", "scattlengths", "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"StandardDeviation", "[", "scattlengths", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Mean", "[", "scattlengths", "]"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"StandardDeviation", "[", "scattlengths", "]"}]}]}]}], 
       "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selection", "=", 
   RowBox[{"Range", "[", "nIter", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legends", "=", 
   RowBox[{"Append", "[", 
    RowBox[{
    "selection", ",", 
     "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(variational\)]\)\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitsGrid", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "[", "#", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rrel1", "\[Rule]", "R1"}], ",", 
          RowBox[{"rrel2", "\[Rule]", "R2"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"R1", ",", "r1r2Range"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R2", ",", "r1r2Range"}], "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"fits", "[", 
     RowBox[{"[", "selection", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{"fitsGrid", ",", "JacobiWavefunctionGrid"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "legends"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<|\!\(\*SubscriptBox[OverscriptBox[\(\[Rho]\), \(\[RightVector]\)], \
\(1\)]\)|  [fm]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[OverscriptBox[\(\[Rho]\), \(\[RightVector]\)], \
\(2\)]\)|  [fm]\>\"", ",", 
      "\"\<\[Sum]\!\(\*SubsuperscriptBox[\(a\), \(n\), \((fit)\)]\)\
\[CenterDot]\!\(\*SuperscriptBox[\(e\), \(\(-\*SubsuperscriptBox[\(b\), \
\(n\), \((fit)\)]\) \((\*SubsuperscriptBox[\(\[Rho]\), \(1\), \(2\)] + \
\*SubsuperscriptBox[\(\[Rho]\), \(2\), \(2\)])\)\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.885429962488078*^9, 3.8854299632348213`*^9}, {
   3.885440767475045*^9, 3.885440807233531*^9}, {3.8854408631222553`*^9, 
   3.8854409763222227`*^9}, {3.8854410885943747`*^9, 
   3.8854411008144417`*^9}, {3.885441280391975*^9, 3.885441324996578*^9}, {
   3.8854413620159073`*^9, 3.885441518928265*^9}, {3.885441682357369*^9, 
   3.885441724040558*^9}, {3.8854419501760283`*^9, 3.885441954478765*^9}, {
   3.885442048229998*^9, 3.885442083277034*^9}, {3.885442191217997*^9, 
   3.885442194123066*^9}, {3.8854426169100447`*^9, 3.885442725210022*^9}, 
   3.885442834995224*^9, {3.8854429172064457`*^9, 3.885443090609778*^9}, {
   3.885893473382963*^9, 3.8858934831576843`*^9}, {3.885973482206197*^9, 
   3.8859734847750187`*^9}, {3.885973757318309*^9, 3.885973763267603*^9}, {
   3.88602963954387*^9, 3.886029799070207*^9}, {3.886029862812289*^9, 
   3.88602993511861*^9}, {3.886030257556491*^9, 3.88603038736896*^9}, {
   3.886030446562502*^9, 3.886030455351427*^9}, {3.886030751094039*^9, 
   3.886030815179007*^9}, {3.886031127645817*^9, 3.886031150708974*^9}, {
   3.886031310316846*^9, 3.886031405802371*^9}, {3.886031995322133*^9, 
   3.886031998522088*^9}, {3.886032711500923*^9, 3.8860327119834137`*^9}, {
   3.8860362035549803`*^9, 3.8860362416452427`*^9}, 3.8860448739323893`*^9, {
   3.886044915306943*^9, 3.886044937119874*^9}, 3.886044969378969*^9, {
   3.886045463132394*^9, 3.886045466108515*^9}, {3.886045625798738*^9, 
   3.886045630769565*^9}, {3.8860456619375153`*^9, 3.8860456620705347`*^9}, {
   3.886045702839323*^9, 3.886045702989612*^9}, {3.886045821947324*^9, 
   3.886045843672346*^9}, {3.8860458815195704`*^9, 3.8860459643023643`*^9}, 
   3.886046067158277*^9, {3.886046133016328*^9, 3.886046155003347*^9}, {
   3.886047937204669*^9, 3.8860479445273247`*^9}, {3.886048854769449*^9, 
   3.88604886155742*^9}, 3.886048957485279*^9, {3.886049192150814*^9, 
   3.8860491969761133`*^9}, {3.886051557146295*^9, 3.886051559379252*^9}, {
   3.886051904454282*^9, 3.886051941736477*^9}, {3.8860536745872707`*^9, 
   3.886053707248496*^9}, {3.886053740912279*^9, 3.886053741060814*^9}, 
   3.886053779073605*^9, {3.8860539335251083`*^9, 3.8860539598897943`*^9}, {
   3.886054027810939*^9, 3.88605402794646*^9}, {3.886055188124674*^9, 
   3.8860551882476187`*^9}, {3.886055221611219*^9, 3.886055221806939*^9}, {
   3.886055259908636*^9, 3.886055279112426*^9}, {3.8860553881462717`*^9, 
   3.886055388292008*^9}, {3.886055447556858*^9, 3.886055447760408*^9}, {
   3.886055583274911*^9, 3.8860555834774513`*^9}, {3.886129130220636*^9, 
   3.88612918740446*^9}, {3.886132256499866*^9, 3.886132256620236*^9}, 
   3.8861323380234222`*^9, 3.886132428273026*^9, {3.8861324912855453`*^9, 
   3.88613249726224*^9}, {3.886132962137882*^9, 3.886132971593329*^9}, {
   3.88613304748149*^9, 3.886133047699725*^9}, {3.886133131461891*^9, 
   3.88613313162632*^9}, {3.886133195635892*^9, 3.8861331957997303`*^9}, 
   3.886133270932084*^9, {3.886133333417405*^9, 3.8861333335970488`*^9}, {
   3.886224494032984*^9, 3.8862245240748663`*^9}, {3.88622456256362*^9, 
   3.886224562682701*^9}, 3.8862252991478558`*^9, {3.8862254700114183`*^9, 
   3.8862254729182796`*^9}, {3.886225670580575*^9, 3.8862256707078247`*^9}, 
   3.886225743422017*^9, {3.886225778594273*^9, 3.8862258438817883`*^9}, {
   3.886225874792306*^9, 3.886225934777768*^9}, {3.886225972541685*^9, 
   3.886226028537547*^9}, {3.886226087228603*^9, 3.886226089910507*^9}, {
   3.886226125979707*^9, 3.886226145761325*^9}, {3.886226189212873*^9, 
   3.886226190755447*^9}, {3.886747289480693*^9, 3.8867473163617764`*^9}},
 CellLabel->
  "In[447]:=",ExpressionUUID->"cd73a3e1-b8d3-4358-be63-70dd031a36fc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "1", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.45370476965075823`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"15.507756074560552`", ",", "17.44704913586467`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.757472961605064`"}], ",", "0.14576846813570846`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.9907723414323206`", ",", "0.14576859799948408`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "16.272649724001955`"}], ",", "17.907166293682288`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.837272043869759`", ",", "0.14576852115012293`"}], "}"}]}], 
    "}"}]}],
  SequenceForm[
  1, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.45370476965075823`, {{15.507756074560552`, 
   17.44704913586467}, {-5.757472961605064, 0.14576846813570846`}, {
   0.9907723414323206, 0.14576859799948408`}, {-16.272649724001955`, 
   17.907166293682288`}, {3.837272043869759, 0.14576852115012293`}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8867473203639174`*^9, {3.886748794239944*^9, 3.88674881745179*^9}, 
   3.886748958024884*^9},
 CellLabel->
  "During evaluation of \
In[447]:=",ExpressionUUID->"8afd81e4-2bcf-459c-96fd-715b4dd5ea90"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"500\\\"}]\\) iterations.\"", 2, 465, 1618, 
   18260436411921590205, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8867488149842253`*^9, 3.886748958444895*^9},
 CellLabel->
  "During evaluation of \
In[447]:=",ExpressionUUID->"2a06eacc-2630-4d49-aaf1-7f77ff362c6f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "2", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4509862987420715`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"49.54198442306452`", ",", "0.21651158005537852`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "54.33444419437526`"}], ",", "0.21242066501178625`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"68.44997390387286`", ",", "0.1434568328774188`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0.11427070426582146`", ",", "11.248274582385081`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "64.59065709881011`"}], ",", "0.14139865034147323`"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  2, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.4509862987420715, {{49.54198442306452, 
   0.21651158005537852`}, {-54.33444419437526, 0.21242066501178625`}, {
   68.44997390387286, 0.1434568328774188}, {0.11427070426582146`, 
   11.248274582385081`}, {-64.59065709881011, 0.14139865034147323`}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8867473203639174`*^9, {3.886748794239944*^9, 3.88674881745179*^9}, 
   3.8867489608771877`*^9},
 CellLabel->
  "During evaluation of \
In[447]:=",ExpressionUUID->"d86a2140-44a0-460d-bdbc-89e982796c40"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "3", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.45370503853734`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "40.563801030163845`"}], ",", "16.76460196144581`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "16.501741115344913`"}], ",", "0.14576911224407635`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24.67218600818273`", ",", "16.64042431856793`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15.347097895203458`", ",", "16.610998848072516`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15.57230543370335`", ",", "0.14576911652235308`"}], "}"}]}], 
    "}"}]}],
  SequenceForm[
  3, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.45370503853734, {{-40.563801030163845`, 
   16.76460196144581}, {-16.501741115344913`, 0.14576911224407635`}, {
   24.67218600818273, 16.64042431856793}, {15.347097895203458`, 
   16.610998848072516`}, {15.57230543370335, 0.14576911652235308`}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8867473203639174`*^9, {3.886748794239944*^9, 3.88674881745179*^9}, 
   3.886748963491745*^9},
 CellLabel->
  "During evaluation of \
In[447]:=",ExpressionUUID->"3eda8c46-818a-49f6-985b-73577feab6a9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "4", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4536801609766484`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "58.955375817589484`"}], ",", "27.99399981402837`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "31.527417816873697`"}], ",", "27.893818927149713`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9295094943154505`"}], ",", "0.14577911760684037`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33.26320233205753`", ",", "26.23382019713651`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"40.1232597071485`", ",", "26.373799268201722`"}], "}"}]}], 
    "}"}]}],
  SequenceForm[
  4, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.4536801609766484, {{-58.955375817589484`, 
   27.99399981402837}, {-31.527417816873697`, 
   27.893818927149713`}, {-0.9295094943154505, 0.14577911760684037`}, {
   33.26320233205753, 26.23382019713651}, {40.1232597071485, 
   26.373799268201722`}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8867473203639174`*^9, {3.886748794239944*^9, 3.88674881745179*^9}, 
   3.886748965980154*^9},
 CellLabel->
  "During evaluation of \
In[447]:=",ExpressionUUID->"493fac36-27f3-4150-9c24-597533e3adf1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "5", "\[InvisibleSpace]", "\<\") \\!\\(\\*SubscriptBox[\\(a\\), \\(trimer - \
trimer\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4505256114964564`"}], "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "76.15671023182739`"}], ",", "0.47440785440706534`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48.913170993765554`", ",", "0.42241389473861496`"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"37.85951121743164`", ",", "0.5081289910621528`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.3085460508876926`"}], ",", "0.08840533851067116`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "11.213478747498943`"}], ",", "0.3404934680927258`"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  5, ") \!\(\*SubscriptBox[\(a\), \(trimer - trimer\)]\) = ", \
-0.4505256114964564, {{-76.15671023182739, 0.47440785440706534`}, {
   48.913170993765554`, 0.42241389473861496`}, {37.85951121743164, 
   0.5081289910621528}, {-0.3085460508876926, 
   0.08840533851067116}, {-11.213478747498943`, 0.3404934680927258}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8867473203639174`*^9, {3.886748794239944*^9, 3.88674881745179*^9}, 
   3.886748968532712*^9},
 CellLabel->
  "During evaluation of \
In[447]:=",ExpressionUUID->"ba682bd9-8114-4462-9ef2-606c385dc125"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6789999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6789999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{-0.46, 0}, {-0.45, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{-257.21393782603263`, 
           420.15498806741016`}, {-125.43265396261023`, 137.5}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ]}, {}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"scattering length [fm]\"", TraditionalForm], 
    FormBox["\"nbr. of fits\"", TraditionalForm]},
  AxesOrigin->{-0.4558877592610175, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  PlotRange->{{-0.4557582445156189, -0.449282507245691}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.885893417855555*^9, 3.885893489742448*^9, 3.885973773243619*^9, 
   3.886029759588313*^9, 3.886029804273608*^9, 3.886029870693363*^9, 
   3.886029942135857*^9, {3.886030374355723*^9, 3.886030394440476*^9}, 
   3.886030462586419*^9, 3.88603073926197*^9, 3.886030827859376*^9, {
   3.88603102398645*^9, 3.886031061347703*^9}, {3.886031142256096*^9, 
   3.886031157587884*^9}, {3.8860313190100603`*^9, 3.886031399078905*^9}, 
   3.8860314318359118`*^9, 3.886031708129878*^9, 3.886032023730515*^9, 
   3.886032687641053*^9, 3.886032808261466*^9, 3.886035984925419*^9, 
   3.886036274466262*^9, 3.8860442710083447`*^9, 3.8860448851758966`*^9, {
   3.886044927085291*^9, 3.886044953884457*^9}, 3.8860451363249407`*^9, 
   3.886045336083129*^9, 3.886045483519207*^9, 3.886045678972992*^9, 
   3.886045719903119*^9, 3.886045838343248*^9, {3.886045872840424*^9, 
   3.8860459533051863`*^9}, 3.8860460837011023`*^9, {3.886046150007551*^9, 
   3.886046171049452*^9}, 3.88604797137118*^9, 3.886048942200698*^9, 
   3.886048979269897*^9, 3.88604911871371*^9, 3.886049217579173*^9, 
   3.886050641778501*^9, 3.886050841036642*^9, 3.886051217934525*^9, 
   3.886051518353661*^9, 3.8860515764433107`*^9, 3.886051798135643*^9, {
   3.886051915491355*^9, 3.886051944178385*^9}, 3.886052034619315*^9, 
   3.886053610238865*^9, {3.886053761624339*^9, 3.88605378001589*^9}, 
   3.88605398366967*^9, 3.8860540485591373`*^9, 3.8860552050391417`*^9, 
   3.886055240412912*^9, 3.8860553109904118`*^9, 3.886055420175798*^9, 
   3.886055486372675*^9, 3.886055615779456*^9, 3.8861330083715143`*^9, 
   3.886133097381796*^9, 3.886133169911264*^9, 3.886133239709468*^9, 
   3.88613331276291*^9, 3.886133377998407*^9, 3.8861335335193443`*^9, 
   3.8862226887552853`*^9, 3.8862245415077753`*^9, 3.8862245787894907`*^9, 
   3.886225309119186*^9, 3.886225357004081*^9, 3.886225488982327*^9, 
   3.8862257298744164`*^9, {3.886225760319159*^9, 3.886225860346689*^9}, {
   3.886225893141335*^9, 3.8862259136470623`*^9}, 3.886225957815997*^9, {
   3.886225993727564*^9, 3.886226050023541*^9}, {3.886226110750787*^9, 
   3.886226160721549*^9}, 3.88622620690036*^9, {3.886747307514124*^9, 
   3.88674733079541*^9}, {3.886748804443623*^9, 3.886748828184989*^9}, 
   3.8867489685614643`*^9},
 CellLabel->
  "Out[466]=",ExpressionUUID->"c23e4530-2c2a-4606-8f9f-33d12e09972e"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1:eJxsnXk0Vd///29IkuHK0E3iurhokEKDkp1KKpWKBkmaS0KaNEkDSYlKEQ2S
IoQQkcxjIRkypKiMpRJKQv36rt+7ez57v/bnn/da+3OXlec9e5/zOPvhuVU3
Oa3YKsRisZQ5LJYw69//Oo3//Xeu5YJb38b0Z/z3f6B/44c13jz9cb7jv3Ex
wbiUzdaRDz0//TfOFoyLvr18cv6Q9v/G5QTji/1NUpfWNv83zhGMby+odHe3
ff/fuJJgPObDYMjYx2/+G+cKxk1N559+plr93zhPMG514dP2Lyte/jeuLhif
k+AXeaW38L9xvmD8gbOn2OVlWf+NawnGryva7qzkJGfg+bAQnsO/fFhIW8XS
6cE8Mh8WuvHi0hkpITIfFmp9Gb1O5kwbkQ8LOfXXG55xJPNhoaj4OV6pImQ+
LGSj3rKtgU/m8/fz0Qb3n8a9IvJhob7mV6Pn/S4j8mEhvQCbGr9jZD4s5Gpu
zev7lUnkw0IjPYSsu8OTiHzEEH49/MtHjMhBTDCuMK50d92xdiIfMfQwx77B
lN9K5COGhirlTphn2ETkI4ZitZ4n+g55R+QjhhJfNWVcPPWayEcMHfdvlbez
ryLyEUNqfzI31Qwn8xFDt1PChi0bW0DkI4be3hQuTBMl8xFD68VeG8htekTk
w0b4vPiXD5u4HsQE43gObMG4bEuXf9HQZiIfNsLnEUcwrp76naP24S2RDxuF
r+hV2T1QQ+TDRhdHTQ2Kcqkg8mGjpx+WLZ6hWkLkw0YTVt6PDhvMJfJho62N
nQv8xzwl8mGjqOaGet6uBCIfOYSvD//ykSPmhZhgHL8e2IJxPAc5wXj/i/yA
HolGIh85dGLxV1/FwToiHzmkv2R708iqKiIfOWIe8QTjx98V7/q1t4jIRw5l
J6zP3LQ6m8hHDn2e1vJ8hFMKkY8cmh9rUBrTG0fkwyF+r3/5cIj1QUwwjs8L
tmAcvx7kBON4DhzBOL6eKAnGda0tzL5ZlxP5cFBQZLl7/aViIh8OOjWrJ33G
tjwiHw4KETN7O746nciHQ8wjLcH42c9lj5+diSbyUUL4/eJfPkrEOikmGMfX
B7ZgHJ8XcoJx/HrgCMbxHJQE44GHXe3WxZcQ+SgR6wlPMI7fj9QF43OsVmlk
dD0m8lFC33jhy6abPyTyUULLVpret5YLJ/LhIvy++S8fLvH9ignG8XWSLRjH
1wc5wTg+LziCcfx6UBKM4zlwBeMpAyK+GYNZRD5cFH4t8+fdrlQiHy6xnvAF
45a2o6fs/hxJ5MNFS/ZLLir4cZvIh4fw54d/+fCI30tMMI7fL9iCcXydlBOM
4+sDRzCOzwslwTh+PXAF43gOPMH4goEh00/rJBL58NCo0ks2nfIPiHx4SEbB
Tz54XBiRDw9lNB1yNGgLIvJRR/hz1L981InnBzHBOP79sgXj+P1CTjCOr5Mc
wTi+PigJxvF5wRWM49cDTzCO56AuGJebwu44+T2MyEcd9dv/8VrCvkHko448
7FLFb2y+TOTDJ76vf/nwiecoMcE4/vzAFozj9005wTh+v+AIxvF1Ukkwjq8P
XME4Pi94gnH8elAXjOM58AXjkvpKj+L5/kQ+fBTQH/vg93tvIh8thD9X/8tH
i3ieFBOM478XWzCOf79ygnH8vskRjOP3CyXBOL5OcgXj+PrAE4zj80JdMI5f
D3zBOJ6DlmA85fPSxy+/niDy6TRGcopBevofiXw6jd2P9+aMc4P8xfry/cGf
FMhfqKzBxdoI8pfdg198T4kWIp9OY26iU/Tb/ZC/WHJG9tNvQP4KKeweMHhO
8kWnsbOVjmdtG/n83Gnc2O2929sG8ldZzfmmCwaQv1jDs1bMHfWYyIeF8BwY
/mLtW2Isdg3yF1LWNdo2HfIXOrRYRSEH8hdrdWrprFuQvxqvr2oM5kD+yvS1
CWaLQv7iDvmYPnM15C/2n6Migf6Qv1hBX7u020i+YCG7sU9O72+D/FWmbzzk
eQLJp39/b+x6YPgLz4HhL3ejC96HUiB/sWpj5u7dAPmrkb9q8YpNkL/QsH1P
folD/go5cFFx5grIX4293z54D4f81Si0cjVr/gsiHzFkFyz//cO1fCIfMdQZ
9NS+WBzyl+6vDYfUrpB8ykb4vGD4C78eGP7Cc2D4q3H+bK1CPchf+Dxi+Mu9
Z7JscCXkL7uUP1NYiZC/7KYs/7JGHPKX+1z13912xUQ+bNTJG+6nFAz5q3Gx
eV+EI+Qv9Iq3tfV1IpGPHMLXB4a/8HnB8Bd+PTD8hefA8FfIOomISRT+CpF6
dSw2H/IXWvZBas8ByF/4POIJxhtvdLsfrSgk8pFDFiGVx4ZpQv7SPXxAZoJW
KpGPHCo87/9uW1I8kQ+H+L0Y/sLXB4a/8HnB8Bd+PTD8hefA8Be+njD8xZ05
6UZp50sin78/57D1V9tXz4l8OMjCR0m4YSCXyOfvv9NNZN3GQchf+Dxi+Et3
79E381eTfPr334XdLxj+wtdJhr/w9YHhL3xeMPyFXw8Mf+E5KP3Pz5H/evVL
MZGPErGe8ATj+P2I4S/3t8f8hFNTiHyUUNyvyXedWAlEPkrIeTBBdWVtFJEP
F+H3TYa/8O+X4S98nWT4C18fGP7C5wXDX/j1wPAXngPDX6xW7fSSSshffl9m
N4e4PyHy4RLrCcNfdtLh00LmxRL5cNGO+ca7/PRJPuUh/PmB4S/892L4C79f
MPyFr5MMf+HrA8Nf+Lxg+Au/Hhj+wnPgCcbRgGvChDOPiHz+/nvOOEZXXIkj
8vn7e9UnXVGbcZ/Ih4e0kos/ZX8JJfJRR/hzFMNf+PMDw1/498vwF36/YPgL
XycZ/sLXB4a/8HnB8Bd+PfCYz2M5MPxV807CR/HbfSKfv9y37XZ3T98dIp+/
n9/s4O2GbhL58Invi+Ev/DmK4S/8+YHhL/y+yfAXfr9g+AtfJxn+wtcHhr/w
ecETjOPXA8NfeA4Mf9nNvKdcLnmLyIeP5JLXBC66E0Dk8/f/x56rGf7CnycZ
/sJ/L4a/8O+X4S/8vsnwF36/YPgLXycZ/sLXB55gHJ8XDH/h1wPDX3gODH8d
KFxsIT/0EpFPp/EaLvJedqWXyKfT+GpOMPpG2f+Kv5/jw6fsfxUY8g0sKPtf
K2d7vl5F2f8KCbs9xJOy/8Xq/dWsRtn/cm6f01dM2f9iqfzm0/a/nDd5v7tI
2f+y+Dgn24ey/6V7aPXBIsr+F54Dw19/VANU+ij7X7/2PT/XPwTyV/nukVFj
KPtf587qivlS9r9YM/8UZlD2v1g2ysubKftfbL3NHzIo+1+Z7aOT51L2vzKP
rfh6nrL/xc18Vd5N2f/qHJLh2EbZ/8KvB4a/8BwY/jL1NHRqpux/rXxWPsKC
sv/l9zNRYjFl/wtdy0D+lP0vC+GiyKuU/S+2rFfURsr+F0tyRWg1Zf+r7PvL
gkWU/S+UnrwxmbL/pZthuXk4Zf8LnxcMf+HXA8NfeA4MfxkHF7JfUva/8Hn0
P/yl5aI0jrL/Fcc5dcWZsv/l3sIyiabsf3G/b86aStn/Cjm79Octyv5XnNa4
JWcp+1/swVDEoex/4esDw1/4vGD4C78eGP7Cc2D4q5Mtcvwnjb/mccerUPa/
UHFPjBxl/wufRzzm8472uT8o+19lngbB6yn7X7qeMbksyv4Xq7Hqchhl/wv/
vRj+wteH/+EvbF78D39h18P/8BeWA8Nf+HryP/tfV0bvp+1/NW7dUFhL2f9i
W5urGFD2v9yPCPdzKftf+Dxi+Iu7w3VfMmX/C79fMPyFr5MMf+HrA8Nf+Lz4
H/7Crof/2f/CcmD4K05Kc9hayv4Xvp7wBOP4/YjhL78/F7iJlP0viw1/hupQ
9r9Q8L1hCyn7X/h9k+Ev/Ptl+AtfJxn+wtcHhr/wecHwF349MPyF58DwV9m0
lvWplP0vNHFaZxBl/wtfTxj+QgYmNtaU/a8Qe93YZMr+F/78wPAX/nsx/IXf
Lxj+wtdJhr/w9YHhL3xeMPyFXw8Mf+E58ATjLMN5pw9R9r86E2f01FP2v/yO
HvH2pux/cVVsSxUp+1/4cxTDX/jzA8Nf+PfL8Bd+v2D4C18nGf7C1weGv/B5
wfAXfj3wBON4Dgx/hQQPsl0o+1+6m9clTabsf8U1TNM7Q9n/wr8vhr/w5yiG
v/DnB4a/8Pvm//AXdr/4H/7C1kmGv/D1geEvfF7wBOP49cDwF54Dw1+60T8s
r1P2v0JerTatp+x/4c/VDH/hz5P/w1/Y78XwF/79MvyF3zcZ/sLvFwx/4esk
w1/4+sBjfg42Lxj+wq8Hhr/wHBj+amwrfpJM2f86HOztcUN0SiaeT6fxubWd
RxUuQP5K+x6aPvUs5K83vhUp6RT+anivMyKSwl8xp/xOPKXw14pgvvpGCn/9
tHLf+J7CXyc3vj/WSuEvkdMPpm2m8NeEWE6sBYW/DslG3VpC4S88B4a/es6M
T7g6DvKXw61hCu8o/uHhsWVtHhT+khnFz35L4S/dCa/v9VD4y80K1ShrQv7a
b57eWk7hr58/7sXPpPBXddQw0fUU/hpU8ndMovDXYuGGPgcKf+HXA8NfeA4M
f6l9LPJa4wb5611Yk3EMhb+ShWf98aPwVxv32sMsCn8t3aualUfhr4kmbCFH
Cn+Zep5/85zCX8VJbidGUfirtDfJ6BCFv143zpjnuxHyFz4vGP7CrweGv/Ac
GP7q8B7tNFYU8hc+jxj+Gin1TtOJwl/vzdY7+VH4q3PHwZ8xFP5K+uN4X47C
X1LDC4x2UPjrYFVX6ggKfz294tsQYg/5C18fGP7C5wXDX/j1wPAXngPDX+Os
siaqSEL+Gh7y688iCn9F3hYfr0bhL3we8QTjt8XZu4oo/HW/blmCKoW/Uq5o
uJ9yhPyV/3pG82QKf+G/F8Nf+PrA8Bc+Lxj+wq8Hhr/wHBj+wtcThr9e650y
+Erhr/v759U8ovBX5N6jE39vhfy1TdVGOOwV5C98HjH8taRZUa/RE/IXfr9g
+AtfJxn+wtcHhr/wecHwF349MPyF58Dw12V9gzfTKfyFryc8wTh+P2L4q/Ps
uZHTKPy1o+f+zdTFkL8kcsqenJaF/IXfNxn+wr9fhr/wdZLhL3x9YPgLnxcM
f+HXA8NfeA4Mf72wCxBzo/DXPc3i+WMp/IWvJwx/aQ1ZpuHVAflLT+vBCXEK
f+HPDwx/4b8Xw1/4/YLhL3ydZPgLXx8Y/sLnBcNf+PXA8BeeA08wzvdY8pNF
4a+Zh85KiFD46/egdHy5NuSv4sSWCT0tkL/w5yiGv/DnB4a/8O+X4S/8fsHw
F75OMvyFrw8Mf+HzguEv/HrgCcbxHBj+6mZlhSf1QP7SD+68MSgF+etNQ7rS
1U2Qv/Dvi+Ev/DmK4S/8+YHhL/y+yfAXfr9g+AtfJxn+wtcHhr/wecETjOPX
A8NfeA4MfxU/u7DwrgbkL5NPVjYb30H+wp+rGf7CnycZ/sJ/L4a/8O+X4S/8
vsnwF36/YPgLXycZ/sLXB55gHJ8XDH/h1wPDX3gODH/tTK9kB32B/GU3bN6R
Tb9Jvvg7PjF5z5YIyF+Zq+44lh2H/PWzaX/rfHPIX+z62rrvatA/XGNuqPSd
4h9GpPV7qXpA/kJLNLr1MqF/KHTeS8amE/qHv5fp7xHaA/lLViXA8uoMyF+l
HlIOs0Sgf4jnwPAXm8dy01wM+ctZ0uzBc1nIXzu4JYtvVUP+cvexmuqcCPlL
bEurtq8C5C80ce3G7s/1RD4sNP3UtZy8JZC/ps7NKH12HfKX19/vSmIA+ocq
KvbZ/p8gf3G3fexVD4H+IX49MPyF58DwF2tfRdfaTMhfPx1Kl84+DPnLa9LB
kwecIH/F1emfLRKG/KXVnxxweibkr8rFvy7fEoH81eG1yPbmGugfbtQzMY2N
gv5hWdz7LxYjIH+1uNj6DhyH/iE+Lxj+wq8Hhr/wHBj+srDp3OpiCvkLn0cM
f8WNn8Y5+BTyV8017oI/oZC/3qvMWKAkAfmrLIA3h3sQ+oefNZ68uxEB+Stw
Z8X+we2Qv05nLBfZnAf9Q3x9YPgLnxcMf+HXA8NfeA4Mf83TFgrOHwL563T1
/rLqOMhfgXM/mQ53hvyFzyOeYDxkgt8x1zboHz78c2TPm4mQv9yCxC/qjob+
Ye7g49GcEOgf4r8Xw1/4+sDwFz4vGP7CrweGv/AcGP7C1xOGvwo1hy8u+g79
Q/VZAZcedED/cNgQUc1FIyB/pU8OsJzQD/kLn0cMfz21VTuvOg/6h/j9guEv
fJ1k+AtfHxj+wucFw1/49cDwF54Dw19sN6drJ0Ugf+HrCU8wjt+PGP6SOCJ/
nRMJ/cPedbVHf7THE/kooRP5o8LLMqF/iN83Gf7Cv1+Gv/B1kuEvfH1g+Auf
Fwx/4dcDw194Dgx/WZcu1XlYB/lL9amWU9U+6B/i6wnDX5pzK5dfVIX+4Rv3
hXOadKF/iD8/MPyF/14Mf+H3C4a/8HWS4S98fWD4C58XDH/h1wPDX3gOPMG4
/+1Qvvge6B9Krz0TpXcS+odqZktDD42H/mFk37QX3SJ3iHzUEf4cxfAX/vzA
8Bf+/TL8hd8vGP7C10mGv/D1geEvfF4w/IVfDzzBOJ4Dw1+X7z5pMWyE/mH8
OBlDNJzkU3VUIK+jqX4X+of498XwF/4cxfAX/vzA8Bd+32T4C79fMPyFr5MM
f+HrA8Nf+LzgCcbx64HhLzwHhr/U2232qThA//D9tifVh40DiXy0EP5czfAX
/jzJ8Bf+ezH8hX+/DH/h902Gv/D7BcNf+DrJ8Be+PvAE4/i8YPgLvx4Y/sJz
YPgrVHvnOs8K6B9unnxAZEc25C+Tdo+i/HOQv+5cyf1idgby16UdTp6PlkD+
2i290RmNgfxl7nI50GMv5K8t1xSSfM5C/jKZ0H+0MhXy1/TmhSb1DZC/Ji7s
6T24BPJXjO0FsUFFyF9pFnsPBOXA/a+bJj9PGFD2v8Y+WpojQfEP5X91SE9T
hvzFMZeTLX4F+Ssta4RldBTkr9IC19eZcpC/um3txpl3Qf5alJwQ520G+Wv5
G27/8AuQvzLkxpksegv56+v202m/yyF/NbAelgzuhPy1LmRrwe/zkL9sLD30
zHmQv761HOC4FEL+GjC727F2P+QvH1u/xrodkL+sXm+crS4C+avuSlqBgTHk
rwWuEv2yfyqJfMTQuC7rlCMmkL9UX0+JzwuC/HXau/6xFgvy15FCd/2ejZC/
ykYsviJnBfnL8n3sc/E3kL8O6KwJFXKF/DXXaqjieQT5y5r9Sd9uH+Qvzt5r
WutzIH/NsvaTunkX8teRg8c6a0Qhf73g3zFZYQ/564aNyI8bYZC/3ki1GX6k
8Fdz9ZS3aimQvxyuB7qdV4X8NfvNlzUv4yB/XeWbrRPaBfkrdcvSmH37IH/l
zz2VclQE8te4+AlXxJMhf53oKQ+94QT56+Bwn6aiAMhfOhlLll59D/lrUN40
/+4kyF8iZ1eEWI6B/BWgmPIg9CLkr1/SmjuDD0L+Cjnr865gFOSvx9sf9WsN
hfzFzu21V8mB/OWh/1zBPJm2/3Vn31QLyF+SA8o/w7shf8UdDnZSa4P8pWCk
/kZJEvJXzyKfMUIiGUQ+HPQs8W7Y3aOQv5KHRHwu1oH8tfTRdtOVFyF/Rd04
pOD+E/LXIxnXMWZzIX/dGz3z0dMIyF+XbeeL++2F/OVv7Fg0tRfyl36Yf931
YZC/GipqT51IgPw1dbee1LJ5kL8aUNjuO0mQv0ZJ5Ke8fA/5qz5vwM/6CuQv
XxmJ5X65kL+EkntiGi0gf5mUfEm7MxTy169g6bVrKfy11Vj4UfUNyF8W98ty
RLohf0mUXe3YmQz5K/LKKH1+O+SvOBPtQ1u8IX+tHPPwumwh5C8zqdE9tkMg
f/3Wux/4URTy15cK00uTv0D+mvNHKfZkEOSvZQXtr6StIH/JxUfzEij8teCj
SeXyr5C/IrsMOTWjIH+dq5nzVccM8tedc7JBO70hfyUVdu5N2wf56/q0FXE7
XSB/Rf2ZpM3viyDy4aE17NUP/T7Av//aMGdG2aoDkL+4OxIuSgnB/a9vjqxN
3ETIX0Mdhp/uTYT8NTpUTfSgEeSv6QYnj8xSzCDy+ctZS/ZW7MqA/JVnpdLM
KoL8lVw3ZkuFC+Svw5ygD9uiIH+F2iuF+9TDv/9q8jt67M4NyF+B7kl+6uaQ
v25Kr/sy/TfkL86GKWbzlSF/VY4v/vjIB/JX5J+I4zGGkL9E3IZtqb4K+atj
ucWe4k7IX2t+Z5uKSEH+qlorOtVYGPLXuDdGm281wb//ulvb335lE+Qv/yV5
79JCIX81Pogo0deE/KVbfEN+aDbkr0kXnylo3YL8lTzl4M3FjZC/6lxEfv5M
gPx1c5HoZM5SyF83fcRNp1P4y3nN1sxBNchfD9Yc23Z/AP79l1zDuAOyhZC/
bgqX6Bo8gfwVFzl60rG0f/tl/cb/cpq2THyl7sIuYpyFeN/erp637h9fCKN/
n++a4Xfj+jhynIUsb++qefj8v+dtd4bXdObtWGtt++85XEow7mXktS0ktJ34
PAtlO1Um2tZ9JD7PQlbL790r0/jv85kygp+Tu6TTu+hWKzHOQiObln+2nPDf
uDvDgzF1ct09O/97rkOjBOPl66+NPzP0A/F5Flp16WzYkiHk51nIoiy93S/i
3/OPouDn3Kq/H7HgRiMxzkIOm+rGypv/N57J8OY40+ARX47895zgriIY715b
3+rfU018noU+SVrJpnS+Jj7PQreffGo8cfy/z3NVBT+ntHRFouObCmKchVpt
/MzWHv1v3J0n+LxWlskpjbH/3Xca1QTjNaOblQ5fKiI+//f7cqu1eXb9BfF5
FjoeKbPUXf6/zyMNwc8JW7hoqL9OLjHOQm5awaJdz3P+/3gIw8vGc++dnzA0
gxhnoSddNsGXdqcT160Ycg/uWXFi/Cfi+hRD3jLtg4edPxLXmxiK627V37im
nbjexNCiG8I549PI60oMraqb83BoQzNxnYihoMHcGxMrPhDXiRha9mrhucnX
3xHXgxga7v/Uf82/5+FMhh8XWQ91rrGtI75fMZQ/S3Ox58RXxPf4l/saVbNk
t5QT34sYGvtAfBXnVQnxvYihDp+Tao+iC4j8xVCrWOMtvdhsImcxJLW79kN7
chqRMxs9HFoVPudBG5EzG12WkNudJ9RG5MxG1fNzxI1FWomc2ejwG7/WNp9m
Imc2iniscf1aPTkf2UjJe2Hoe9Z7Imc2EnEJSBzobyByZqNtngeUCr++JnL+
++8c9eFVYFc1kTMb9cz+8uyDWiWRMxut593TPZVQRuTMRteM76lZcp4TObOR
QdrlH2+O5xE5s5FFnuGotN5MImc2GnHpyCtnuVQiZzmk/yT6UrNvM5GzHAoP
vyz/5VcTkbMcesIf2nVGqYnIWQ5duF62a0/VeyJnOaQV9XZRhfU7Imc5tL3q
2rplBxqInOXQ6v76JSe6XhM5yyFr8/GpCjtriJzlUO0MB+XijkoiZznU2KXV
PfbaSyJnOSRjZrz38aQSImc5xFb45l7577oV5CyHbt6TmzmhKJvI+S93ayc5
fbv3lMhZDk2XvJWWXpRE5MxB/PtftxZy3xM5c1DH7O+u3nfeETlz0Hc103Lf
tkYiZw7qahg7kRfVQOTMQU/bhdYf13lD5MxB90Zxui/srSNy5qC9h13lpP+t
54KcOchROMe12qOSyJmD5g+vSooIeEnkzEEVu4pNjAJKiJw56MH5vO7Ms4VE
zhx0QIf13K81h8j5779T2mSN+9UMIue/n28Tlh/8/JjImYPeGLZevKuVQOSs
hPh+krUmlm+InJWQUfh8s9Cz9UTOSmjv7+b9KuteEzkrociErgVTb9YSOSuh
+RZtdw2Cq4mclVClY1Nc6dYqImcllBXuf6V6SAWRsxJKX2x6VPoff2UyfG2f
Xya980AxkbMSypyccanzawGRsxIKjFMzu1KbQ+SshMbdkh4vqphJ5KyEhNNl
/D18UoicldCLqsKGyHGJRM5KSO7ZrmztPzFEzlwUdT7ygUzlKyJnLgra/POi
9dRXRM5/OffohNKmRVVEzlxUfICXEthZQeTMRW/3SKxI31BO5MxFTXr3be+H
lxE5c9HrzHXx0VdLiJy5SDl+Zq58TRGRMxdNzRdV3aKZT+TMRat6OG4Pb2cT
OXORXwK773RLOpEzF0U4FE7OY6cQOXPRp84bUsEfEoicucigoHdL+pZYImcu
Onn3ytq13AgiZx66am20IoXzksiZh3bG6jwKDi0jcuahG/Vvl5xtekHkzEMb
7Ou1q9+UEDnzUPYlz6LdHs+JnHmosXjyKpOuQiJnHnJ5bdNQopVP5MxDgaue
bm6xziFy5qGehcai2wMyiZz//jt5z/oN2p4QOfOQ6kargRXqyUTOPPTz1WWD
23nxRM48lN5Y9GbjswdEzjwkO2Yy+/XJcCJnHvqoqPDzkkwokbM66m2QsI6/
U0jkrI6UwkaNc+0rIHJWR4bC3zda9ucTOaujogk75vp65BE5qyNHI7Oq1soc
Imd1VHlsKr+9L4vIWR3tinwaHfg1g8hZHXXqvDjxvekJkbM6suJmVi9vTyZy
Vkc3E75sVVBKJHJWR3tmR9WJP4gjclZHCpourCrJKCLnv//OdZycswfvEjmr
o6lNViu1v4UQOaujpOqzG1eJBxE581HRKDPDnfJZRM58ZPv8kPumW5lEznzU
Wu0xc93bDCJnPnpy8Mc1yZqnRM58FDc1+iLnX4+QO/Oeof+leq3Dv/uIIGc+
MlMdvH1SPYnImY/C5bNM+KsTiJz5aNZE+8FJ/nFEznxk2p9xq+R9FJEzH8Vo
SAhVq4QTOfNRx+DiIb+zQomc+UjqoKrs9dwbRM58dG/HxVxztwAiZz7ifLgX
PlLqEpGzFipRexEz43kSkbMWWpq0NzpjYhKRsxaasmox967JIyJnLbQmRlmv
oS2ByFkLvd29XyFkTTyRsxYyEBu4ZXA7jshZC6W8PzZ36rkHRM5ayCFkxMOR
pfeJnLVQ7P1dw14o3yNy1kKSF3seHQoKJXLWQstWdzqer7tJ5KyF4oS9raSH
XSNy1kJFa374tby+TOSshULzrvX4r/ElctZCJuFDbrNGeRE59xuPMBjBXa3b
ReT8w3jB/BP3G36S7yu+GTtU9CkkryLfVwwY7+mxXthnSr5/6DVuqtObO3IP
+Z6hy3iUq5B+mi353mDQuK/+9vKraeR7g5/GzzrUFH+6ku8Huo3Xr/UKfbKN
fD/w2/hcgk7E/Ysk7/cZj9Hd3lb6gOT6HuN7RgNtTZIk1/8x9jauDJDnkpz+
y1gkwbEqoY/k8e/Gp8Nqp7W8I7jbfShyEffmHDxGcrcwMvmQtVTZkMjZnYXe
LmVLrsgl3/OIouj8fUXTx7bhObsLI0shzYCDd1uInIegUVmKi9oam/Cc3UWR
nvuXsb+rSO4WQUOV9Xecym/Ac3YfgjbvTDpzJoF8rzIMHdk2jNW5keBudxEk
NcL/YX0Xyd1CyPZMVFvKPOJ9iPswlL9oa5DJc5K7h6Lf/epLzfWInN2FUHYw
uzFtGJmzJJI9lj+v+0A7kfMIpP78VMQdX+J92t//vtqP7NZOJd9vSCG5ZO3n
Jf+8U0HOI9ByjeEKjVLk+43hSLMntWbibeL9hrsUagz0EtdbTb7vkkBC5fnz
8o+/IXIejt6MrAzcxiLfb0ij/V8/2RbuI7jbXQINLcrhv/d9SeQsjtwrFmdM
XEq833CXRm/fTHUcGktytyRKG7G2Lzgni8hZHE3rEndNVyTeb2SORLN5pg83
nW/Bc3aXQfE+8vbzPrbgOSM26th84tCz2hYiZ1l02PQwx8XvA57z3//uuD5p
W0fNezxndzaaopYy+mT2OzxnJIu4003y5F/WEzmPRNGnYn4r2tThOWeykens
l455R4n3G+6yyLc7yHD4b4K70Uh04PIl4cv/9pUEOcug9NWXI3Icn+E5Z8qi
7FcS2iyRHDxn95HI6t2XxtA7xPs6JINGbGy5aGORQuSsgCb2vavWmvaByFke
bTe/uiMy7wORsxxS8MoQSvn8gch5FHoxwUc//U4jkbM8ihHrGeU5q5HIWQ75
3M5Oz+l4S+Q8Ci0ct618/74aImcFVFOu0jE0+hWRsxxKiQkf2mRPvN9wH4X8
tcrv5+0vJXJWQPN2DR050PqMyFke6UWGmr/7lk/kPAqpXfoyVUkik8hZAUlM
+PrwlfITImd55PdJqsj32yMiZ0UUYjC3tcijgch5NPrcq9Z+a1cjkTMHpei6
8axTyPcbY5DVyA3xo2e/JnIejY7Y9w4Z6Kgjcuag1bv7t1W11RI5j0FOmulD
1/aR3K2IBnoeR3/PLSdy5qCYVNe9d+SI9xvuY1Df9FzXjWWFRM6KaOgzzYnC
RvlEzqOR+M93esLjifcbmWOQ28EGe2t2KpGzIhp5SO3uSrskIufRKPfSIenr
S+OJnJVRvVHYvREfaoicx6KdMZ4Rk1AdkbMSyv54dv0pIfL9hgqyLrit1vyv
91WQ81g0Rm3hxJnHqoicldC0C63Lbn6oJHJWQX6ty2cbbn9B5KyMWMm84sD2
EiJnJfS7fIq2m/tzImcVtN9Bb/jKfTlEzsrIcdbSOTIPs4icxyLH0CHzNMrT
iZxV0LZHPPZm20QiZ2XksiSiZEbeQyLnsShRJDLx09YHeM52qkhmy+gxtu3l
eM6ZXBT4qShGc0olnjOXi6yCPrzNGajEc3ZXRWfqkk9ILijDc27koiuzVy5t
OFGG54y4SGjJuSkN+sT7jRBVtGNY9b4d2QVEzqoozCc6d9q/ef0vZzsuMmw+
k+e7NA/POVMV1SVe7A9b9xTP+e9/xY/cHZjMeYLn7M5FrBKeZ2pNMp5zoyra
lfhOviU0Bs8ZqaIRv1Rl+8dF4TmH/M3taOKuU8n3iJzVUFtj/BWtyOdEzjwk
t3VcTnlbCZEzD/nv7RG22ES833BXQ13HGuI1cwqInHko44uH46cdhUTOPFSb
N63+8xTi/UaIGip6cCpfa0kWkbMaupTwIqL4ayaRMw9pu8w7uDUvg8hZDal6
bJ17Z/kjImc1pOvzZqrlzwQiZx5yPXXqzOWsh0TOauio47J5/ePvETmroeS3
nutXDN4hcuYhpOOu9bophMhZAwWYf5L4eCiHyFkdyRrOXDFkeR6RszoS/74z
ZZU/8X7DXQNdOPnBJuphJpGzOhoanGLQa5tF5KyOyh7ERgVsIt5vhGggfcXm
vfvRYyJnDVR4pVchXuYxkbM6Guspdu7YP54V5KyB6grGWzkVPyBy1kAbvm95
+sgqmshZHX0bduHHMZf7RM4aSKp0SJro+5tEzhpoVL7R++UW14mc1VE9Z+Xo
BzqBRM6aqC3LQE9vayqRMx+lCKn9cZv9lMiZj2YWVqpbziXeb7hrorgn988+
vpxE5MxHrb9i3jc8TyZy5qPC4z8G7w0n3m+EaKIBcYuLA+viiJw1kdBo4zzu
gTgiZz7KV17RwD0cS+Ssiex8H+0bEA8jctZEQRsHi3XW3iFy5qMbNqe+bT9/
m8hZExk/zbyeFO9P5KyJ0vPv3ZdYcpnImY++PF52WzbCD8+Z1Wk8sOS9p2TB
J2KchQIDssXu+EGvoLMtKThIH3oFNXtPuj2X68C/l7+fVz8/z9rgEvQK4lbf
zTpVD72CzorlM2VkyM+zkHtoLt/eDnoFv/2iLg5WQ69g3q8REts3Q69g+tL7
0x5eg15BffZOWWUe9ArSGj7H7dCBXkH+suGSdVnQK2CrFDgbhUKvwM5FaFT5
EugVvLXK+F5tBb0Cia7riw7chV6BkPyweLM86BX0rHC1VpgIvYKqZPVf745A
r6A3VuJexmjoFXCNIpp27CM9gU5jC2nX3vpuch/q7xPo1oOnvtSUEp9nIRNk
YWl4tBC/Pv/+nB+8jmkTmwge+b8nrGIpnbVe0Cv4MjD2dLsu9AqaxZpFX4ZD
r2DC1926LXbQK/i5U+9wSQT0CqYv4PJrL0OvgBu/rarnO/QKRo4Qq05kk+83
xFDH+7Vrt/dCr0BntyN/XRT0Cvyy08w4idArqL+wkh2kDr2Cx615H0PKq4jv
UQzNMVhY7/+H5O6/v9/9nNkzFKFXULNnxpMr6tArUAy+OXu/O/QKZiTEa+0b
+5TImY2cK3ceWtwOvQKtp50SKUbQKyh90Xvx8SzoFUTYK36NT4degVKLrFA8
q4nImY2a6uW8HOSgV6B/2MT920/oFXS+4txZkgu9AjZL5ZVuGPQKkHDrK58M
cr6wkWjK0zPPl0GvwObIDZ6bE8Hdf8f7Kj+KHh4FvYKyeZ9OZXRAr0B59Z/D
xZnQK/i9Z2nq5izoFfTk7nuzRauZyFkOJWZslzk3F3oFZRba/v2d0CvYYXRa
MXQ79AombCqz0naEXsHsCyb7WfnQK+iMsTH1U4ZewTRupw3nPPQKFIqKNCp0
oVcwsP2ARL9rMZGzHDr6djzaoAW9Am0/0dLSi9ArCDq9UHvjD+gVsBqPu9ys
TCZy5iD1fcqZmQbQK8gNO+FyPAF6Bc6rVrV97YReAeuISvS3MOgVfMmoHXJa
CnoFned/Ds2aDr2CiLlJLqoToFfAvSmhM1QdegVnX/PzMydBr0DuV+rj/Opi
ImcOUrt78Jfov7+L/B+vILfv0e6VN6BXIFqYrKH5AHoFSVGDDwzTUoic/+bQ
GDG99HYikbMSkksRklhiAL0Cy23scyGboFdQbM1xWK0FvYI4raaOC+ugV9C1
SO+yzELoFaQVR2emDYVeQctv95FvrpUTOSuhthHrxSX1oVeQmWBg9yid4O6/
49xbVpaHt0Cv4OuDwjH7LkKvwMH20I1dKtAriA8epi8/n3i/8Xdc2dlx7DDP
R0TOf3/fI6/S59g/JHLmIlfpJV2HjkCvIGKw2GF0XRWRMxd5fQrIDWgnuPv/
eoM3p+zS8IZewed1Il6VP14SOXNRjeiHLntj6BWYbdZSb6kqJnL+y8Ujpruo
TodewYWdRc++JhLc/Xf8/PphHs67oVewnL3mzIWRGUTOXHS0bZqHSzX0CvIC
1AenmD4icuYi/vzl1W0BxPuN//t7h5D8BcEZ0UTOPCRlL3KsI6aMyJmHemIn
yr6YAb2CjwqZFzMUoFewpttJrnc09ArE+22TpSueETnzUOmT6S8j1kCvYFdj
orfSozwiZx5iJ1R2Tx0NvQLPVbqTLvtCr6DLNPVE5/o0ImcemnvV+Owy9cdE
zn9//oakPa8WJRI581CxTsOs9qY4ImceGjep+becfjSRMw95xd2wa54TTuSs
jhT4aLSXBPQKTtc9TXhhD72C2opct95D0CuQmGO+s1QRegXPtEeuWekFvYJx
ls/uDLyEXkH8JrX2EwPQK7DTydofvy6NyFkd9RTbmNmWPSZyVkdm0y58jDxI
vN/4v8/vNFpydF88kbM6ShJu1xBZH0vkrI4im4rW5myJJHJWR1WJ2pJ3pt4j
clZHWi0qEzv2k/4GH3WHR7v4sKBXcEBiQHHVFegVoAWPq7U/Qa/ATnRN5xZO
OpEzH6llvl1Z/gd6BbqRe38/e5RC5Px3fEqT/COUTOTMR86/zHyLniUSOfMR
d77zkyLbeCJnPmKv+iMhJxVH5MxHp7p8lca9jSJy5qNEt8mfV7eHEznzUe/T
7DetS8KInPlI/FDnackpt4mc+UhMKCb3TNp1ImctpFKQHNRYnkzkrIUq3Rbr
mJslEzlroW+aSo99DyUROWuhWSpT7KcuekTkrIWUrvqPP/4pgchZC105K5N1
0j6eyFkLDfQiKaUi8v2GFmrbs8rx69wYImct9EXR7Zbjr0giZy20s14yW6so
nMhZC22pulBhXhJG5KyFauU1hXj9xPuNv+Pu+sZ/lqYS75H+z5cYxZWdrRxE
5KyFTkVXfqt9d4XIud9YbtuD5x61JA/+MBZ74iAzRIR8X/HNONF0hPxFb+gV
OCv8OFnmDr0C/V3SRyZGQK/AYjz/rdgF6BX83HClZPUr6BWwfksd23sUegUH
3MeKj0bQKzi62dKy3xh6Bca9uqrHzKFXELFtSL7FapLr/xhL7fI8ne1Jcvov
4zLJ4TaDCdAruGV/92OFTAaes/tQFOawNFzvJvQK/DI8nkzxgF5Bx/BAyepf
0CuwGCctFGcFvYKpGn4umTXQKxDzWX4+UYLI2V0U6U+VUSlogV6B7ppbu1Oy
oFdgevmnV7In9ArqFzUEjRkOvYIlKfKzLl2EXoFzM0tkvQfxPsR9GDr/bmVS
jQn0Cq5alx17MUhwt7sQumzqFD1rKfQK0p42jjGOg16BWdgtlREF0CsQnb1z
n/Ie6BUUzi1317eCXsHb6afmmMyAXoH5CeWE5TnQK7jp0rG7dA30Cjo/dFf+
2gK9gsqd8+Mzc2uJnKVRm2GtnpUs9AocpfU375kEvYImb/etZ4KKiZyl0dfM
Y8Wp86FX8Ovbi4WLoqFX8Dtgw6aLl6FX0CQhOvJeJvQKbA6/iC1WbsVzRmwU
32L4q5ZNvt+QRWuOGZfPjYNewRYnLef9XdAr8FTOKPWpgF6B44tWhdAH0Cto
vC0u46kBvYI9UxdEKulAr8B61RJxj0DoFbyXY9cKh5QSOcugRGv2W9fyIjzn
TFl0Kqh2/r1nBHe7j0SXWjp/OJdAr0Cr8f1yOXni/UamAhJ7v1OhyhJ6BZy+
48PCWilegaXhn5cjyfcbo9CO+WKpSyOgV+AR4RGWYwS9gqONXW8MG6FXYJrD
s3cZD72CxrCTkhnroFfwYfzZbEsJ6BUo/dG0mpRC+PxIAUU5PthvYgG9Al3T
UecXukGvQMIqxX5QFnoFQftmPjuSCr0C1prpqk0KxPuNTEW0Y++Vq6+OQa9g
0Y7JJ4odoVcQkGsp8ykDegURpX2njklAr0D//LKHO55Ar0BXP2tjdxT0CgpP
Li1oC4ReQZujYfDc7dArCN4WN1s+vozIeQxKS0of+9oEegXBL0zb21/nETmP
RsUaWxNbe7KJnMcgk0u10/48hV6BaIfdwkXHk4mcR6OgMUl2xxqJv5vIVEai
vXsTFW9Ar6D4qv8B22HQK7BxKelNK6kjclZBznM3HlquBL2CN2fu3TThQ69A
yGfgtZgH9Aqss6S8AiJLiZyVUZlYakCmEfQKvpxoN8iqfUbkrILMNy5oEp0O
vYKRmgn97regV1D4a4yuxbAMImcV9GPupud1iQR3uyuj2Tsub9f7d27I/3gF
k40tV5yKi8NztlNFksq8Tfc9oFcw++XD7fsrKvCcuVzk9utOVV8w9Ar8dPyd
j5a8wHNu5KKGHyYm8urQKxC1mN12984LPOcQVXRw5FR9nfnQK3h8v7v9hwf0
Cq7vu2XO+ZaL55ypiq4erM8bmgy9ApHHa8YbJUGvoLhSPOBz3mM850ZV9M2n
/7j7vId4zkgVGdo7FN3ZQfzdRAgXlVZ0ST/fGUXkrIZMY989Ux8CvQLO2tMn
9upBr+DdlreKm4JKiZzVUEfQ6xNX5kOvYIzDEM/rrQVEzjwk5uIh+iGigMhZ
DTW5azZfnQ29ArP0B1s7O6BX4LZj3dW5jdAriH54e3KpTxKRsxoKSFy438fm
EZEzD+1aO6vm9OYEImc1ZKIXdfiLUBSRsxrKzQuoDeiIIHLmoeZ7F2bZyJD+
hgbawT4qmTYLegXWdfUN/O+5RM7qaHjYhcHUMdArMBfOtv4ZC72CTVLVicMt
oFfQPiIuz3Ux9Aq2JpfcfqGZQuSsgVxnjXFv+w29ghlfbny8WEX83USmBvIu
3+Ft2kxwN1cDhURZz14wnfi7CXd11KZ+IcOw4QGRswbiq34fzS4huPvvf40L
XG8+cST9DXWkXWEubbP7NpGzJnp5JKFBTvIJkTMfeb/freceBL2Cltj96YMb
oVeg9WV61srIZCJnPjJt+yQlkf6YyJmPLGb0LpL+Ar0Cd8uZw/boxBM5a6J9
A0oeLSieyJmPJnubIrMbD4mcNdH212oLFKXuEzlrokyjgbSVlhFEznx05uHV
Ex/j7xE5ayKlQ0flgk/dInLWRFuOd1p5Zt0gcuajg73ayqP6yb9P6TRefWVn
0ZhJ34hxFnLzb7t/gNJX0JjibbSV0lcwNmucWB2lryCnfIZW7XroFZy8uuS5
B6WvwKspw2cJpa/geiy6U0HpK7Cc1Tm2gtJX0H3thZotpa9gbNTCzAFKX4HL
iaPjfCh9BakbFnGtKH0FqYdqwq5S+grYfst+Lab0FbjrF0wfTekr2D8v8Fo3
pa+AN6L2VQClr2DlvHPm6ZS+Ap1AxYunKX0FFwv6Q50ofQUVfYfErSl9BRc+
ONWqU/oKtN2Xex2g9BWw3Y6UFlL6CpQuo4CjlL4Cm1GDS3wpfQWzND2MPlP6
CiR/bm1UpfQVFPw82XSG0lewb+jOATNKX8GBMfJz9lL6Cs6Ii4x2oPQVWKRE
bzGg9BVcSDeol6T0Fdwzn6qnT+krUAke9JxK6StoU1S/uoHSVzDvVUdqPaWv
gDPZebEXpa8gPHatqBylr6DHz0lDgdJXIMu5Jf2Q0legcHlIhA6lr2C16nb5
BkpfQcON6QrmlL6Ck37Wy15Q+go2afKUzCh9BSKa5150UvoK1vpqGoZQ+gr8
L+l/aKX0FYTZphwUGYBeQWDIrzUllL6CBbF1ecGUvoL8CXuKmyh9BUUn5uWc
pPQVoCBl6eWUvoI1jQ1bail9BStDDJuTKH0FUp+M+7ZS+grEV8w8/JnSVzBR
7/3Z75S+guU5wmkXKH0F1w9tm3eQ0lcgnHiUU0PpK5jOj8pZRekrUEqPOulJ
6Stw9hL/PJrSV1CYdcS9hNJXwDaVf0XrKzjvHS+VROkr2KI/9nAZpa9gQVXh
RE1KX8Gv6VaxLZS+gjnl9t8TKH0FQgMPU0sofQVrbFv3+1L6Cjp1A5b4U/oK
WLsePdKm9BWUWr5d4UHpK3AM1TK5TOkrWHfvVaYMpa+Au2V2dA2lryA39fM1
Wl+B89trHYaUvoKZsfO0n1L6Cgbia3+co/QViL+Y5buf0ldQOn/qrC5KX0GS
7DHlYEpfgbP5nQYzSl9BunV6eTilr+Be2L6F6pS+gjWXKxUNKX0FxtVhdtMp
fQW2W1MWlFH6Ck7FdknXUPoK5l1YNSBF6SsQVVywbhulr6AjMM23g9JXsOZr
3D4/Sl9BzLKcKhalr+CdeenVw5S+gh0zvy8LofQVXNK7o6hA6SuQKp7+S5bS
V8AetueCDaWvYEHIV8sWSl9B2MNN169R+go6qmd60PoKWkLT6iMofQWOhgdX
R1L6CmoecMxGUvoKdLO/J2yg9BX4xartiqb0FSw6bDbjMKWvQF91xbxUSl+B
LLq+y4/SVyB3Sy0yktJX8OXuBM8FlL6CLYYyvx5T+gp+/lg6idZXED/KOe0M
pa9gzW+995WUvgLlZ0nZ9pS+gtSofN/ZlL6C2sE5jkWUvgJdXoHzO0pfwa1U
68SNlL6CCdmZQuMpfQUOp93UzCh9BcqbUrOuUvoK3oW4WS2l9BUkvuS5FFH6
CtyD9jqdovQVTPsufCSG0leQv+gkdx+lr0Ayo1bRgtJXEL1lUrQ3pa9ga+Dl
r+8pfQUxksd7P1D6Clpa+C0+lL4CL6Min4+UvgJOxqUWU0pfgd2xkLQRlL6C
oLO9mSxKX8H1GPuZ2ZS+AoP1kzNcKX0F6+6vW6ZI6SvgLLLbPYvSV7DMKOLz
ZkpfgYPKLq31lL6CuZojHCwofQVhx55EClH6CgJl9l2UpPQVWCw5VbOR0lfg
7n8l7yClrwBJRyaOofQVOMV7vNGg9BU45M+4lErpK1i/2+RAHqWvoHx4hPIX
Sl+Br9L8juOUvoIy56Nr9Sl9BR+XbW8elIR9Bfrhjlk6lL6CNq2DzxIpfQVS
d7SXB1H6CgJ3LztbSekrWIuG371C6Ss4GRnqOp7SVxAkNjKfR+kriDshPZtF
6SvgubALnlL6ChJ1jet2UvoKSpduKHGi9BXM8/Vv/S4K+wrC5350KKP0FbSV
2I10ovQVWDpIvG5UgH0Fzwel3WwVvhE5/zBWuleiVEXpK+i5EthgQOkreJaW
vvktpa/A6Onhh2MofQXt6w36cih9BSHnXJWuU/oKLHZyrAYofQVzT7ppZFH6
Ci6MT9ocTekruLFzRO4LSl/BzxatmbS+gtzRRs0ylL6C30rWnFhKX0HRiiSf
15S+gnM+5pY7KH0FQdv3PV1O6Suw+Pi8AlH6CgZ7yj4ZUvoKPLyLtrpT+gpO
7jKJ/UrpK1iar24q/Ap6BRFpm5XPUfoKVuqMDD1P6SvQqTfkdlH6CsJ9ima/
ofQVyNkEz3tM6SuIkp1+aTalr4Cd//LAAkpfwaecb7rxlL4Cr7J2mReUvoJ+
/dKZwZS+gqvbV2pvofQVDFHYqvWK0ldQtXB9eCulr0D0aLO5PqWvQHpZ58Rp
lL6CQI0T54opfQXtx9SS7Sl9BYofR/sWUfoKzO46qdL6CtoeXdgzntJXcO+9
7GcWpa+guW1E91VKX8EDf9/UBEpfwRcLo227KH0FtRtjnZZQ+gp+Jk/aVUHp
K5D8MvG0K6WvIO2m0PIuSl/Bqn0q+mcofQVuVfcuj6H0FdgdTtiqQukr+LDh
xfhCSl/BTenWFbS+gsTwWV4XKX0F59fWHMyk9BU82h04sV8Y9hUo9GvuD6T0
FfS9NK5YTukrEHco+q1D6StwmrRtMI7SV7DYsCQ6g9JXYClZ45NN6Su40b92
ijelr0D0dELdM0pfQbXKJs4hSl9BW4eShRilr+BE9dfpzZS+Av1o9pMcSl/B
5FsvVfsofQVck7gpbyh9BYVmne8UKH0FQUrHRhZT+go8i+0ne1D6CtRbina8
pPQVHDe4OzaM0lfg8njDCVtKX4G6ykk/ZUpfgbrFuTTWZ+gVxDtu2FdL6SuQ
f2U4zJrSV6C//ojeD0pfgYlr42RaX8EmJeXi9ZS+gg1lX0T+zIJ9BW5q59b9
Hgf7CmqDnE4uo/QVvG9vVF1I6StIWHz0zUVKX8HikCnq0pS+gnss0W49Sl/B
qROzRLwofQWJn6fUt1D6CjTlDHpmUfoKFLSvP7pF6SuwXbYzcTqlr4DjJ1R7
ldJXsK3FfsERSl9B9AopvaWUvoL5dv2LJCh9BWk3zyUoUvoKzoq/27eG0ldw
2EK8aBKlr8Bu3u+YGkpfQfjO/GBaX8Gz3IFnWpS+Aq+HdaZ5lL6COPft3RKU
voL8olGNbyl9Bdou4y+9pfQVVGWOurCF0lfAibDI06P0FfTmNJido/QVSOSp
zwui9BUceOnroEnpK7gQGFceS+krWPhn4GQ5pa/g3q5hBW2UvoJDM6KXuVD6
CirPtqZpUPoKbLkvYssofQW/Mt8uW0rpK3j8efNzNUpfwZuw2MxWSl+B7hqf
/nZKX0GNbUmkGqWvoKOjKKCA0ldgEF3Uak3pKxDiqNwPpPQVxNkWfl5I6Svo
ebti61lKXwF/4QHuR0pfQe2US1tMKH0FV0MMNhRT+gpq3ztOa6b0FXTun143
YAH7Ch5rpm9dQekrSDJv0rlH6SvItY7nd1H6CtpVRdwuUfoKmj+3pdpT+gp2
7D7hHk7pK7izRbHChdJXcDTmDceG0ldwXHYf/w6lr0Ax8cfnXZS+guAPR2d8
fAf7ClbZ1cyZRukrSPWxCfSn9BUUnDq/VYvSV1A3rdh8H6Wv4GyiybqFlL6C
DqVV7x5Q+go+mMnPqqL0FXTMtFO7TukrOHBncnQXpa9gh6h/twKlr6BRKtBQ
ktJXwDV4ZthB6SuQdN4+UoXSV7Dp2tzSNZS+ggUvV8qEUPoK5j1ef7jXHPYV
5AZlTWJR+grEP96vOjzAycTHWWjv8BmhMQuhVzDW8vIVkwnQK8hizw6MfwK9
Ats/VrMz7KBXYLVz2JPrd6BXsERTf/P419Ar6B0cm2jDh16BzuldDwxCoFcQ
ndpckEbxCvoU+g+Z20Ov4IyB7esiilfwKCXN7TbFKzCc3neujOIVRLe9HH6Q
4hW4Rh0bbkLxCpY7hm/QPgq9gjvKVTPiKV5BcbdmcCfFK7jqU7r1OsUrOHD0
4Jz9FK9gw4R3tespXkHooQ1DFSleQU/vl+6FFK/Afv3RkjiKV9AnPRC1lOIV
DLpZhK6meAW+LhtaEyleQde28CnhIgSn/P38hzWqLRIUr2DruMd1rydAr2DP
Efa7iXugV/DiysymNxSvYMqPseWBFK9gw9ugvRspXsH68DPyBylegVOUpt8O
ilfgW6d9KYziFXAMly4ZugF6Bct3dPUF0s5B0PIsGUnxCpQOxkf3VkGvQMuG
43Gc4hXsblAN6ImBXgErauLhzRSvYMZk1chkilcwp+zgcANh6BWYdFdPuUvx
CnYuN78z5wL0CrICJh78QPEKRp+uz1EaAr2CMolBu+UUr+Dw+FvP/1C8gmad
kdpJFK/gi7ql5ieKV1C5f53NYYpXICHkcUGb4hW4ep0QuUPxChQ9r2YdpngF
Pi83r/ooC72CrFc/zWb7Qa/gxTKpa3P6oVeQtHhjQQXFK4jb3G8XT/EKLBua
Z4mtg17BiPsynbcoXkGvqvrtxxSvoC7kpPw0ildw/9vB3GqKV7DUIeE2h+IV
yCmf87pC8Qru/FY5doviFUS8ea7TUQi9gksbLx/YRfEKbnx68mcGxSs4U623
S1gVegXft7/3zqJ4BYsC0qWzKF6B0LpHU/dRvIIvRg6rMihewVX57oEnFK9A
9fpCB22KV6CVGSL1juIVjBuatf0OxSv4lHD9oyLFK/Du0fO6QPEKOuq8eCsp
XkHe5yqvvivQK5BOaRlxkOIV7Pr9wVOD4hVYLP7pe4riFURn+ju9oXgF4bpD
HVZQvIJjK0tz1lO8glSVQ7ctKF5BZ8La6HqKV+ASeL6b5hWMbJUqH0rxCn4P
CF03oXgFHp7fo59QvIKTKzSiVlO8gls9d7bmjIZewdTW+cmD56FXcOS88iJt
ilcg/LlOzvA39Aocvz57qkk7B0HshsxuildwLfGATBfFKzC+9Sb1JsUrkJvW
cTaN4hXs2/Dq2i2KVzB1VhLPm+IVGF59F91SDb2CB6sqUsdRvALfxYnT9lC8
AqHFBem/m6FXMEHYaMJsildQb9t9l0PxCobJDKaXbIZegc3uCe/dVaBXMNdL
e9NDilfwSOJp9kWKV5Cx6/dZJ4pX0HGydvcjildwbJ9G+lyKV5AdsF6YTfEK
fqqILfSneAW7Li5yDKd4BSOmvDBXp3gFR0trCh+0Qq9gdoe+dYka9ApEVj6f
qUrxCswvPfu4twh6BQbnB/WGUryCt+JOQ6rZ0CvYevzcdzeKV9C9zLLHhOIV
dM6c66NE8QrcehKlLCleQXbTlI33KV6B/e0xT8MpXgGv5GezDMUriKrq9t5N
8Qr45gNtz9qgVzBX7uvdy2OgVxB8xMrDNxp6BdrrVid0SkCvwNVL0u3JAegV
1PvNzdzbCb2C++yL88cOh15BtPfTUD7FKxgxac5RFYpX8Mtom3TlG+gVsK7L
7PKohl6B//AZqn7HoVcwViXiZ1MH9AryRh6QHlSDXkHoxz3fwlZBryDObeeW
xMvQKxh7c1lh8zvoFdj5HpETongFzTKLUowoXgG6uFLRLAd6Bd2uejv5x6BX
oBP4p4ZD8QrWFsZMTHgGvYKNCllVMyhegfasr+u5FK/gtFaqqw3FK9goJ76C
S/EKQpfmRqWEUM5BOH+kwcwbegUTKvcfnFICvQJhhY9lg2OhV3Ah+FthyjXo
FTSapXhPqYVegV9GfUT9UOgVTFifNfi6DnoFX+vmOZWsgl7BbJ+ncqfkoVcg
xlpZ97n73/sNxivIkF174H0f9AqmF85/OGYt9ArOVcxT7loAvQKRqINPj1K8
guEOYbayG6BXsOdt5P1XFK9g6uqaA/xD0Cs4K1Hh+oPiFSxftTg2l+IVeLH5
tyopXsH19HHGtRSvYNGxzRpNKtArCLkzOOMgxStoul39247iFVxdq5u/0Q16
Bfkdppv/aEOvIMfpbtvYPOgVnN68+3sqxSswWHEru47iFZi7ynFnvoNeAds3
QX0axSuobt51ppriFTQsHxX3lOIVBMx7pSSyCXoFv8yFut5SvAJNrrXDLYpX
MDvyyXFJilewYmZVhBTFK+Cmr78xjeIVSA8JHS/pCr0C1xOpQ5f6Qa9At0mn
upLiFaSGehhMUIdewbpXtzr0paFXoOpf/nI/xSuwj5FaY0fxCtbmLWgf7g69
ApuLJ45cpHgFsyLPv3xJ8QoaLC90vqF4BdHncl+PoHgFptrXDZ7HQK/AZHv/
YRuKV+C59/Gv6RSv4KX5+Yxcilfw8vJ0mUiKV1C66Y/epDroFfSf03iYQvEK
tnefnKJTC72CGWNtT6RSvIKdFRdZlhSv4G31fu2FFK/Ac3T/uUaKV2CQZbRI
lOIVFJ+4vfUwxSvYO7X1UwDFK/hV/PB9JsUrsM11sOVSvALnYdoR1cugV7DA
ymDVbopXkG347XU3xSvoWHxmh/AX6BXob8v58pniFciNbWQlULyCQGXxz+zP
0CuQVt4rGUDxCrra0xXHUryCTVLGtz5TvAJb39+t4RSvQGt0m0EFxSvgn0/2
i6J4BSt057nWjoBegReb+3IFxSvIEVdwlqR4BXI+9+6O8YRegdGc4wMlFK9A
9dCv0d4Ur0D5zIoJSyheQdjsue0TKV7Bqfgozz8Ur0A98NAuO4pXsGHvhKhe
ilcw/8hN3+sUr+BjdKytLsUrEH415lsxxSv4XeB4Oo/iFeRvGLm9Qhp6BQvy
HNTLN0CvgL0TzVKheAWKzTetJ1G8ArT0yxkbilcQUX7VMpHiFXh9uh3ZQ/EK
JDxKbBZTvIIX/hPVIilewYzrr79yKV7BHF+TH4cpXsHb66urrChegdmY8Zvl
KV4B97XZ6fI46BVM7vCaffsl9AoWxB9qbVwPvQIFkRtTMnKhV3CrOPa9MMUr
iGhaVLSB4hWohX6aq0vxCsSSDAteULwC5zhJJEzxCqwf6Bx5RfEKLBu0VSop
XkFganerPsUrsL8UM1eY4hUYcbKrrShewRYLl2MqFK8gSFq3ImYU9AqazD/u
n0rxCq5vO7yv9zb0CiRiv69SongFEusjMxOSoFcgn1MeyqJ4BSYzGp0SKF6B
ZcfcHH2KV/Dl7JixPdnQK3DfkLU+leIVbH7+4VgqxSvwc3Le2mYOvYLlShtf
n6d4BU/E9pq+y4VeQVnp5q9cilewp1+6q6oXegX9c6f4jqJ4BV63l9qMp3gF
P55K5fsNQK/g2su2pVoUr2CSpMPuaIpXYLmjPaiA4hWM2DR7uzLFK8h8etjU
nuIV1Ews3JZM8Qo2HdPes4riFcT/jBb/Zgy9glZx4eWTKF7BpEK/k33PoFdw
XNis+fRz6BU03c5fUGEJvYKVOhpPQ/dAryAiM3R+TCP0Cg78KVrMXga9ggPV
Qpc9JkKvICNj+toHW6BXcKGmNKfPCHoFv4fHbSwxgV6BwYQzpgYUr8Cwbc9u
G4pXsPriCllVildg2FeUdoriFeiqyryM2A+9gvgwdcPJh6BXYMri1U6jeAXr
9nbPcl4DvYLDdWpFceegV3Drm75M+EPoFTyWlfeSpHgFE3fqPdIOh16B++SE
yrk5HcQ4C12z0vZetAN6BU1pvp0TZkCvwFLxifTWV9ArCDuumx9gA70C+zlz
zmrVQq8gxFa3VawTegWRr8dvidwGvYKRt7+9C/0IvQJe2Y54Q1foFYz+ODTH
IAZ6BYum/TS+wodewfLCArlEBL2C0hGzbLRzoVewSt6m0+Q69AosBxfuzjWF
XkHumQ8D+qDnsNN44pjGuy8DoVdga5RX8TEWegWHXJcffK4KvQIfrtHpRZRz
EKZlvL02XRF6BUIt15KenYbnILgprSgeHAa9gu5po7fpfYTnIPBDspc0+8Jz
EHbJrGiw/QLPQeCXHcrKugi9Am9LuasnKOcgPBr3nPPzLvQK1vonavsYQK+g
ZaXNsBP+0CvwU7s8/Wcw9ApSY15MyxtBvN/4Oz7KZEezpwY8B+Fz09IPLCHi
/cbf8cBF33r7wqFXMK+GXXXuNvQKzOxFwmfIQK8gfYiL/tHn8ByE2IMm67qE
oFdwdq9Z4KaJ0CtIfZw9zW0q9AryT9xbtu8M9ApEp803uDAKnoNQ9WaPjewA
9AqUb3zuCLKEXsGXc8hvyGroFRxu1LTbWgG9AstHcVdmjoDnIHjtn/pRUhZ6
Bdw4k5gJLdAryH0fNWlmHPQKfk3RSE68Cr0CVemp4T/T4TkIdx8f3lOyCnoF
q5+Y3T9+Cp6DMOLGw2GeGtArmG7sujP1K/QKXJqsp0x8BL0CyZb0voXV0CuY
O+79pUuG8BwEq42yDm+XQa9A3aNov1UP9Ar+pD3M4W6GXoHWqRVnp66FXsGV
C+4Va+OgV3DBJ+6cMxt6BZ7Cm/12e0GvwCQn98aUadAraN/rNfP7OXgOwhbV
c6kvZ0CvwN3EiHfmGvQKLENynNS7oFdwenTWpzU58ByE2+a3h27Qh17BGecw
SY9Y6BVsMt1837UdegVKpTkKv32hV/DmavmOb731RM4c9Mu87sJ+degViFYI
8ddyoVfgbrX8TIEq9Ap+3HhU/sEAegWXborqeXfAcxCavOXvNUtCr2BwW7Xm
m3DoFeS46VS+j4ZewcHUlYd0YuA5CNcG1imb+cBzENi/npRMHgu9goOpaVXD
F0OvQNYjxmRABnoFE1xMg7kLoVegNG94eMIs6BUos5wWZLGgV/Dn/NxFj67D
cxB27G1cPHQW9AqkWdV9dRXwHITk+vC4ogPQK/jeu3z2iWDoFcSJ9pTv5UKv
YPaw1vr7U+E5CLdafc2EXeA5CLP536R/rYLnIFhP2T/Faw/0ClxKn+5ZXQ7P
QZCfobNhVDM8B6HBfqeiEeUchNUvToXu6IfnIFwqZS8dWAC9gpFBoXKjP8Fz
ELKTHRx0zKFX4OyXe/t4LjwHod9wybeyfdAr+PZ2xCjZf/3M/+MVpA66VP4s
hF6B7aQ/46x14TkIpQO6506ehucgOLdEzFp3D56D8EP7pl5bEjwHIeZUs8t1
E+gV1A13Peo5DnoFo/wdCo9Pgl7BJ69Lr5Pa4DkIE1vT48sdoFeg325cnf0v
t//xCiT9So2cedAr6A/ia6ZfhF6Bye6dq0Is4TkIoUvWKySMhOcg7H3x+oyl
ATwHIUByhqzqS3gOwjsnhfxyJXgOwo1lq8ucjOE5CDeeWpy5xoVeweg7i+Lb
j0GvwDu7b5LbOegVLGqvN9ykDb0CPY9bce2XoFdQ3XXFq7IaegVL1iyUXjAI
vYKtq1a5hq6A5yC8LwjxnZoBz0H4PnVRct9GeA7C++YNmwI3wHMQ+r/0GdrM
hOcg2LzKfHBsBTwHIZ/z0vDtDHgOQjZrRKm2HzwHYcwkDvouDL2CLKtRK48E
QK+Aa2IakEw5ByGo9YXvPVl4DsLghScvT32HXsE5+Sq2+D14DsKK1JhlSRPg
OQiOrWM8+xLhOQgiJ5SajRbCcxAyZcry63tjiZz56Hsz549aATwHoYBlbPbp
PTwH4eyAf9nmdfAchLeuah/nWMFzEJyc7YUn6NwgctZConEG5g4Z8ByEjx8f
lcnrw3MQ4sIf/FixBZ6DsL5DbvtwfXgOQubHGKORVfAchA8LRc2uWcJzEC44
xOZveATPQfg9J7bhrDo8B8Fl9BDLymZ4DsKlhcKl77LhOQhlYSpDJtbAcxB+
Pl1mt45D+htaKEQv1NZ5DNHH+HfcdYenVdBdeA5CesI753Sfq0TO/cYpazU+
a58i31f8MN52QlIrig3PQbDu3m+zxAp6Bb8fnPSPOgG9gsT03p01KdArkPZ5
IrIwFHoF3nVyu0bWQq/g6J692w4egF7Bh+V9KzPHQa9g27P5sx7qQ68gqDWq
1IxyDoKGxoJFPtvhOQioaMyB1UHwHASXb98/3HgKvYIw8aI5hpRzEHYVRNr/
P7bOOxzLt43jQvbeZG8NKSNEnoySZBRCVtvKbEglDSNlV4QiCdkZlZE9IpGV
SKhskkjI6H06Xvftx3n92Xlch7ju9b0/z+c5z51h0Cuos2m04zkMvQJbd5v2
7aAvJQWBo80x8bEN9Aoo/F66049Ar0D8wnObI/xwDsKOhZTaoT7oFcQcrThn
mAu9goVj7SmybtArIJVMpK9bB72CUQEupqkw6BU8c82k5L0P5yCEzealBhpB
r0B+k5ZlxHroFWQ7CXiM7odewQnmrETpNOgVaLh2EmMj9Ap81Nd7FnpAr0BF
WGrf2AnoFWQ/Ste20oZewcGiVBHrd9AreFauG9VtCL2CGImqzfuMoVdAuz2O
6nE2nIOwf17bkJoF4RXsZPzmKwu9gs1Z4mqP0uAcBD7em8MPD0GvQLNv44/e
LOgVzOxqUtoVCL2CD8mZi19boFfANqBLEiID5yCMb3xaOCcF5yB4G/XYUr6E
XsG8mKTq6VnoFWjZFExrNEOvoCh6WmM0GnoFCTtCt5ZyQK8gyizIpU0IegU0
Tm8tQx9Cr4CEfeqmRTqcg/Dmp2JgYx+cgyBrd/6RazOcg0CyOFkh1wC9ggEJ
2lofajgHIUBKdneJOfQK3HTs8rZNQq/g+znmFnt+OAdB83L2vpF46BVwhHmy
UytBr+DR7Iu9rfXQK+AMoJf6JAC9gsSrJYEGh6BXEGxk2biDGnoFvmJ/t/G8
hXMQjhd2brxtDb2CLMqSoZJA6BVs+HpVX5MNegV3KV+NH8+GXkHz4es90RRw
DkJLcehNgzPQK4jhe2Kibge9gtbQzpGEV9ArKOidVBJd6Fyzz9wE8d9P6SJS
oVdwZ/ebv+ceQK+g0J+evAsxB0HwsaQ/mS30CkSfBs6/fQnnIAwqqGSlHoJe
Qd2ml1cnBuEcBAmZmqwCbO7Mf7yCy9/kDvdmQa9A+E5pur0LnINAmpimwt8A
5yBsktd2ZQmGXsGrSONf7r871uwzL+EsfRZL0Cs4ByH3g+mR35zQK/hJdv6g
tiD0Cgb1dsw0e0OvQIEn55pBAZyD4LF743jcfugV8FuaGaeOwTkIhn3ZR0bV
oFeQ5kDyYvYJ9Aq8+GfUChBzEJz8Yh+pxcE5CELHeRL2mMM5CBajVIJXMA/2
P16BmbhAyic/6BVkjn7fr9QE5yC0FVbEMERCr6Cas/1P0ic4ByE71U8jRQp6
BSXnMqXrc+AcBJoolQOzh6BXELMlYkooHHoFntHXHNyW4BwE4+2tYeLPoVfg
5kwonsiAXgHvCcLS5ldwDoKBc1mN5TY4ByFfJUNbQR/OQZBxJOOOM4VzEASK
+vWus0KvQHuwRsVaE3oFRWHXTB6lwzkI6UvdJI+MoFegnrePgnUGzkGQjJKQ
5S2EcxDCzw49iNsNvYI91v7KmyagV2A7oNl5/yv0Ckz1vyvyXoJzENp/8bma
68I5CF/ONM01GMA5CI5qoldMJ9a8dxNECJ6qE31Og3AOwl/yPK3nnHAOwkk9
auq9WtArEGn2NaxeB70Cj9Q7qnKboVfg1lryeQThFQhF5DgdMUL0KzilfkfI
AHoFqqq0ajLccA5C555XtqGT0CvQMr/yyKwKzkEov6OfNNkC5yCwvbnld28j
nIOgYdAY/LAKzkGQIvuSOvkRzkGYPPVtpMcHzkFwYn9stjcEzkGIf6BvzUkK
5yAsMr9J9rgPvQIvCemJQMQcBNrkjILsB3AOgkOnH9+tLDgHgSLnTFZQN/QK
fuYzWLLxwjkIrJvOuW6XgXMQ3nkFp6YHwDkIJUkmplrr4RyEJjOLVx6GcA5C
i0dcsVoenIPgvEjOvbsXzkE4RHJsMkb60Zp9Fifsfx0S43w5evU+k0yo1f+d
2NQRA70C4+ffvJQQcxAG7K5EcCLmIPxhoInraoNeQbO62qvM49Ar+JBz04an
C3oF8s4CNqVz0CuIuKDTnGgLvYIwoVrd+EHoFYQEe28dd4deQe2R0+z7EqFX
UP6X+vGsMPQKvI7N9TUoQq8g1YSNlL4MegVXrRuVxBFeQcIlI48phFcwfvbo
fJ069AoGHvAnpN6FXsGNv8HfLmRDr0BNd7innA96BbpnZz4lO0OvIIM3VCee
EXoFAiMORyWPQ69g9+5ikpi+tZ9DkRCkmnbeelwPvQK+YIfP4m7QK3h030h4
9B30Cl77xzPsvAC9Avu3NTIqk8Vr6iQEaesr4aru0CvgdSxcl6ABvQKjUWu7
qDjoFbC8y79HeAK9gotZD2YEaKBX4CBscfirAPQKxIN06DQXYL+CifC6yxQI
r0BdnCBc8gR6BXohR1y3skKvYO5SvBxXDfQKCqlmbu3/s/a9m4pgOxayI4gL
egVhFk9ZdotBr6BkyOK+iCf0CnivROi1LsF+BfutszoDSdfyDSbClyXpIonD
0Cv4RtKidNsIegUhtDxFdg3QK+Brr+1XpIRegbdWOwkNC/QKnra0VlqPQK8g
ZeBu9JVc6BW8ahzj6oiAXkFLi9rd5wXQK5Cp+UU7YAC9AvWzl7b2e0CvgLCv
QXlOEHoFNhIpTnLj0CvIOvNDVfc59AoWhnJaaVuhV1Bi+j7/iQL0CjwCPLwf
7Idewba2O9xck9Ar0PeVl/VAeAW9uvsjCq2gV7A5oMrq9AvoFZi0/N1gxAq9
AuePYj/E/KBX8LHa2KJyO/QKmkUo5bRuQq/ga+v+zZ3y0CsICaluaI2CXoGg
+JBi0y/oFVy/f538QCn0CmJufJ/Pl4dewfBli/31WdArsGw0PP1jBHoFQ75s
DGN3oVegoSX6e3IRegU3dvges9sIvYLZGpobASLQK9gtelThB8Ir2F/KWF8o
C70Cy7rMv1RD0CugtlV8/YMOegVb23WHjVOgVzC06HHvZB70CngCVQxtM6FX
0Op4ftTwJvQKGNafZVeXhF7BVmozrttG0CuQU2c7F8sNvYKUw3V6NvrQK2iI
cC64uBt6BTmeG7+Sk0Ov4MS9+z5+j6BX0K5tEX1dFXoFog8NC9rboVcwsuX5
OLkX9AoEldOEphOgV0DOc+QV40boFXjYh3BVaECv4Ku1kiUB4RUoJ1mb7NkP
vQI9sphQynPQKzC/ur31WSv0CqQ7szgYB6BXoGtLOZmK8Aouyuo8JlmAXgH9
11iaA/ugV3C47E95wgT0CjKKZE13GEOvgGd6Sen1e+gV/L4skTp+HXoFHh8L
f3ZIQa+gQ5FW/X0H9ApqH3qkKMpBr+DFLhrKc5egV8DM4xvBcwN6BS+ZeUye
5UKvYPDX66c3CdArmJ9+SqssAb2C4zOF+jQIryDF3iqEagx6BYdGy2KOnYVe
Aafr5dFd76FXEHWy+AaZDPQKqIzbqeJioVdgGPJYWNIBegVLi7FyivzQK3AR
pa6QkINeQYbgna6gcugVeD+b5/P7ueZ7E/98A7ki99Ms0CsgV1EVOykOvYIM
nfdqbTehV1C+JNi6Za3PT6yXbvYrLJODXkHGt1+6mXHQK5Ay5PzuMAi9ArK7
h75JM5Su2WdRglWZp0SrI/QKmIIrqnc0Qa/gdeuwesNp6BUE2gTq+plCr2Cb
HlMjByf0CvZNfvtCIwC9gpbbb/kEaKBXMPXXa1zdBXoFY/GcoWEciDkI72hD
VFOgV+ATtf5JA1Xpmn0mvl8bbGdzUIJewfU3Y6nHuIvW7LM44VyjXIxsNfQK
DlXL5wdrQa9gdjB1pKkCegW2ATnXf+tCr4AqZ1fn+SHoFTR8MT0znQS9ghRl
o90RhdArmD5hb3NLAXoFUwPGjwI0oVfQ+86eM34P9Apebhf6++QL9AqY7jMo
TBpBr0D7iJa+8g3oFRjT3CkiNYBeQfVSwrnBMegVNKeL9qichl6B1KSxyfYy
6BWcCaU1kpOGXsHT8Hnd71+hV8Dxl5vZ5yX0CsI+Nh/ofge9ghNWTy5d44Be
gWJXhIPETugVjMi/D6AiiV6zz5KE1hnNrOhNEWv2eV5tijZ17y0H6BWEBo99
yyKFXgFNKLXQbvA9iAW1S1YkOqPXoVdwt/G4d9ML6BVcpKi84hIFvQIV4xM1
s23QK/j2/ssHY4RX8JeBTcxyC/QKAlltmFNloFfQaT0RHr8begXklnNTFnuh
V8CTZSB+9DL0Ck5ZNGwfi4NewTkWWpWdH2C/gqZd1Lzr70KvoL5GtSLbGHoF
ZFdfqT77Br0CdfkL8qHW0CvYdPfPnewB6BX8uGliWMgBvQL/F67lgd+gV1DI
crjkCMIryHni/fj5WegV8E7/Jrm0uOa925ucoCvnctE5AHoF5aS7TpZegl4B
d637/U516BWYPzLTPTe15r3bm5QQfOBReIEg9ApepJvSUOZCr0D8FNtDl3Lo
FXx4F/xq6ir0CjLyHz/wOQa9Avn3GmljmtAr+D5MeXi6BnoFl20ffKU4BL0C
d6oUrSkT6BVIltpYJ+RCr2DvkZO3++ihV3DrcHjv1S3QK6jR9dEmj4Zewe8q
peZLetAraL6/0/hGCvQKvgvFyrJ6Qq+gPvXtEfFW6BV8n/d/vHc79Ao6Qzkr
aiWgVyDVbrDJNA96BTFn6q21fkOvwPViXLtmE/QK+s7TpVvEQa+gXvbFySvc
0CvgLMzcQyECvYIQ93d2N9f2CSSwEDhuXrRyewq9gqivt0WSPkGvgGaQNsig
BXoFXJ9eWNyuh16B37Ha7ily6BV4/4072IbwCjYbzsm7TUCv4MCxURkHHugV
bJ4atxpD9CsQv0O1NwrhFUgJKrN+aYJewa1BY/JPwtAr4G1/usfMGHoFUn/K
TrlTQa/A842FPUUN9AoS6qz7ZCygV1A2u2nJJQB6BeycjUdpuKBXcFko5tOT
59ArKNp1RdF+HfQKjlFs3vbgHPQKTOb43TwR/QpoRp6Y8RZAr4CbsqZKeB3s
V/Ds5bMsgyzoFQzeEzizLxZ6BdfSf9QoR0OvQLvxtwupPfQKkiOnH9a/gF7B
KdNThvNm0CvgnXo/Oz8KvYKxvGDWFBLYr+DsTafmriLoFaRUuHRrOEOvQN6h
g5KqCnoFnonaXuT3oFdwM7j/7JlF6BWYBRhu7SiBXoFd/jNqdh7oFWxMEWaf
E4FegclrJWO9m9AroAqc+lpbCr2CqKT8ktGD0Cvw3GYZPfATegWXdgxSTetC
r8B9sHz0bDr0ChLtL16+xAW9As0LaZq8CdArqHM8OT1iBL0Cl8iwdvJ70Cv4
k/vyZyLCKyitSTh5tRl6BUta8jyUD6BXIDPmoRjZBb2CBXs/Sd1N0CvYQ//u
qtxL6BVM8IZeCLGCXsE44VbHg4fQKxCySvv9lxr2K9je8PvL72roFXxirXdK
fQ29gtGrU9UnK6FXcCC5x2JYBHoF+1rVg6u3Qa/gu5PKVQZF6BXQxkT81eaA
XkGabcLVTIRXEFVWaMiQCr2Cj9fLIhctoFfAUSjzQXEJegUHs9yO0lZAr+CO
69ywnz70Cl7o/iGpmYdewUxPqfPCH+gVbP2y/+bYNegV8Cu+2iB2AHoFkR2n
Zf/oQq+AJqSbTLsEegXmjpn1SSXQK7A7P1YzOvV0zT6LETZendAsPwS9gtfk
IhxP6KBXcLRWgVZXHnoFm9PuGGwuh15Blub2U4+PQa/gxdPYaHlr6BVsdg9/
Er0NegVhGnbnb67PX7PPooTW386kH1uhVzDz6rgZYwP0Cuq8nDd1CkKvwFJt
bvzEU+gVZHgGdmTmQq9g2xUPJ3ZnhFdguXGA4Rr0Ckrv6Jn9EYVewUztle3n
86FX4NGv9bjaF3oF9+5Nmh95Cb2Cgbq7BPcG6BVQPWvN27AIvYKQ+krrsxuh
V2B/zLfi4k7oFXSW8wysD4ZeweeyNNHn88lr9lmCINkULblbE3oF6gI67a7R
0CuwWvAX+zMPvQJh//E3HjbQK5jdeG9rRjHmFZAQsP0W/tl9WBP3BybUsPoO
fZpDMvsml+tU+Hrv6F8Hr+Hz65nw+vP1bUm78b7obHhdrjAtrB+fD86F18Wf
/Tj5Bp9nzbtSD6HvUMf7JAvi9dQ7KenMeF9fYbx+31z1YD7eh1YUr8/00Jln
431TxfF6Lae2sh3e51MSr78TacxQwuddYvtDRjB67PDx+dvRNftDRphUCnkY
g/sVVPj6AObhRU+XkTX7Q0YIp2M7U0W6dn/ICElJ4ezj2Jx0fH/ICGO7pj0C
sP7b+P6QEVSTtLTjsX7R+P6QEaKOz4aaK6zdHzKCXaZ0Hj7nF98fMgJvAudG
D6x/LL4/ZASrtxe9j2GcGd8fMoLeC/e0ki1r9od4/ZU7t+Za4d87wPaNgWBs
mJj4Xmx49b4R10tr2pqZW63dTwaCv6r/qbj44dX7SVyfNTUod9R0TZ24Xuch
WcUmbE4Bts/E9e1aFTRq5GvqxPWen0MGhwL7V+8/cX2h+PpJP7xvPBu+Pijm
vYMrzn+48PXTInuag/H+51z4+skevi3CWP9z7HgR17sv9Z8TwPt48+LrU3Im
9ypgfbyx4/jv7728uaEP70ctiK+vPy+cH4n1o8aOL3H9w67uA7fwvsrC+Hpr
+y6pdqyvMnbcieuVyaaPGuH9gUXx9bWbbTWCsf7A2PlAXD/Y7rPzCD4/Vxxf
X3jh9wN6bH4udp4Q12832S/4FO/XKomvN83gl+3B+rVi5wnxfszSZ/jdCJtX
gp0PxHrlgYmA2tjB1cedWDfp3P18PTaHAju+xHryK7GYB9jcBOw4EuuSqd06
LeZfVh8vYv31MKnlVawvPXZciHUtg6Gn8lgfdWz/ifVuV7qD+DxxbJ+J9fIw
39ozWJ9qbD+JdSdV7bZBrK8ytm/EepZCWigXNl8Y259/P//MOY447HME/Ppi
I5iE3Uo4gM1hwerE55LB++LhEHwOC3Z9sREyOtmmftn1r64T1zdbPtjkh815
wa8vNkLUYuXDLS1r6sT1+h/23d6Gz+9gwtfzBuyL/0rydXWduJ7cLSJ3Yb5n
9f4T159ue3BE//yaOnH94fmuA9fweQpc+PpETq6pIGwuAFYnrnf39GBjxOcC
8OLrW536shqw/vZYnbi+LOnuvXa8v70gvr5P9pnVM6xPO1Ynrv9UeiQ7De/T
Loyv763fZqKO9RvH6sT1bp8set5JrrmO/v0+VxTEh7G+2ViduN4h5XVa5I81
1xFx/XyTaIcjNkcAqxPXawstPr6Oz5WWxNfLUy3EymPzkbE6cX3+1ysaCvh8
ZOw+zENwPNbJx47N38HvtzyE2K5nyXvxeT1U+Hrqu6/vmmLzWfD7Jw/hlO95
3jfYPBH8PslDMNfdVMCBzb/A74c8BCeyCo92bF4Dft/jIRTv33OZMWrN/hPr
/Nk7K9k/1q65j/EQIk1eHx/A+rfj9ysewoR047VprN84fl/iISSxl6mLY3O3
8fsPcR/iaJ+zYHOi8fsPL2GU3pg1H5srhF93AoTHhaO91/DzDbsv8RI27omm
Hb/UtbpOXD9l1jV4F5tbhN+veAk65utdPlp1rq4T11erSOz3xeba4PcxXkI4
57cPkdh8Fvy6EyD82jVe9w2bz4Lf33gJHUqO/PVja+rE9b2TklN8GD/E73u8
BC3qthfJEWvqxPUtDvXqqti8DJIVzmBf/Z7RDpv7gF93AoTSbSVhE9jcB/w+
yUtQqKYQOoHNL8CvOwGCyS8ur+fY/AL8/slL+LVPjeI09j1o/LoTIDwUrpuX
HypcfdyJ640FS9sNsTn1+HUnQHiUM36SA5tTj99veQkqW+wXt2Lz1vHrToCw
Z74k9h02bx2/D/MSMp85UDZic8Px606AQB/6K+8iNjccO0+I+X3QIkTbDJsn
hZ0PxHpDw8FcJ2z+FHbcifVLvUJlrNjcIuz4EuuWwokyN7A5O9hxJNaZtdXc
X2G+AXa8iPX0O1VTpdgcE+y4EOuRWSLa97C5G9j+E+shOUxzNweKV+8zsS50
1HjhoOia/STWXXeldtKkr9k3Yj1DjI60Hesbj+0Psa5/eMLpDjY/Hb+OhAnl
Xh0WddicLKxOfI+5msKs543NycKvI2GCZJn6DTFsDhdWJ67/yN3P64nN4cKv
I2ECXzqNCdeHd6vrxPVjgddF8rC5Ofh1JEx4oJYoYoTNLcLqxPXyReG/P2Nz
i/DrSJjAxPHTuxX/OWz4+keJbDs315avPi7E9eelSd6GYHNksDpxfSKjuqn3
/ZLVx4u4fmMs4yYKntLVdeJ6smLmuz6B+auPI3F9suObbVVMa+rE9aMTDxmi
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
fex5hJerzxPi+nu3mMuu22evrv/LsTMEBt7arNXnCTGX2riRcjYfgByYSaDG
RTUecuCQ8iJtrlzIgSc+cD05UAk58ESGxZ4QfsiBBR/RSa8XhRx4iNaShl4O
cmASWkU3IUXIgZlyWqcUuCEHtpEuO5d9pGj1vhHrLn+0g2vrclfvz7//19XE
6YdGxur9KeUlkLJTZmtXQQ7866CHOccWyIG7jUum240hB6abjNE5/xRy4K6g
Q0xRopADvxqsGonD+sf+hwMzkQh8kEmAHJhANvghsKRl9f4T1+8QnLDgugM5
MEdtrViLDOTAtz6JV5duhRyY7U/Bq+r2NbyXuL40R94mr/jt6jpxvWCssZHn
CciBg+xq637kVq2uE9ffsaT0cTkDObCviczW8GDIgSf3FFybsCxafdz/ceN6
C22r969W1//N69kRNJJyIW/1+UBcL6jlUlhrlb26TlzPZPKXjo1hzecpxPXj
PF6xTn9S1lx3AgS7Lvpyydqk1ecJ8f1lJpMusYQbcuC2l6J/vlyCHHi3/L6u
u3+bVh9fYp0i/7XfW33IgRdOn6eb96hffbyIdZGnF/5QLNSsPi7E+o/0NxvO
hkIObMhk6hfEUrJ6n4l1jftqt/RF1+wnsf7LTvXA5bNr9o1YvzEZzLuxew0/
J9ZPtAW16GLfH/kPB+Y6eeHG+MeG1XXie5A6wcBIGftew384sKBqcp/t2cbV
deJ6A0aPma6pN6v3858v86xilxIP5MAfXZUK74lCDmxx6aGwl3Pd6jpx/Vzr
CIUnJ+TAl7s3EawlIQeWCqFoaAiFHLhyLu/MoYeQA1O8eSkmkQ45sKPVxYcO
ApADZ0dTyrFrFaw+jv9+n6EdPm7tkANXRYgubt+Tt/r4/uPY1i9cP+jkrq4T
19dL96gM92WtPu7E9S/IhsXILTNX14nrU/pqzSpOpKw+H4jrc722fT88nLS6
Tlw/87r88+CBhNXnCXF9B7sEqfD849V14npvObW/egVrPkcgvrfy1jNIm/lD
DvxbeGzHlr6K1cedWOeJfrTrnDfkwO81R2+UjEEOHHVzn9TR35ADv0hdTFcu
yl99XIh1fhcnPkrfvNX7T6yLaxm2D0U8X73PxPrGrf1LbHJpq/eTWG/LlaJ/
opC4et+IdZqLEzfpt6/ZH2K9m1OQdRd/1Or9iRMn9FP1UzQlQQ48vsB3c1gG
cmClnGzJs3yvV+8Psc5/+K9nfSnkwCS9V90eYd7gfzgwSW+yYsPj3NX7Q6xP
XvpQvNv++er9+cdp46r3Rpekrd4fYt0/66FN/+41nJxYlxwQ2DJ2bs3nC8Q6
FWlGpV9RzOr9IdZvpLX+7Phy7//1/3DgBEe9JNlHkAP30VGwJJZCDmzrfu/+
hyuQA9PzCx975gM5sC3TZfoiFciBmy7l9LDRY3OxV96vA76ekfWOghzYheP3
9ffekAMbbGQkzTKGHNj0ilqzRhbkwMkNczeu0EEOHCJ91+XyO2ze5QoH1iUr
N5/NhBxYclyx7FAK5ouucGAFsRC30o+QA2sNjTLQFWPPkRUOPGt9793hD5AD
yykwC9QMQA78yG3sTIMp5MBOjYMc8emQA7+5rlczFAk58AUWBTlpLciBT758
97hRAuuHsMKBvY12UrpKY8+7FQ4sYxp7Jr8McuDexzTMvmKQA59d4PUZIGA/
Z4UDXz5uZDSvBjlwl05P1AZqyIGHlDtkjVkhBzY3OUDjEwk5MO9fCeOt+Zjv
vcKBi14U831Shxz4/oWuqvUvIQcOaLYN2NOPzeFa4cCnP4ns5WFY9ij+w4EP
5LOrhIVCDvyVjamDLG75uf8fDhzduGd4+NPyc/Y/HLhUdaHokBH2OdEKB2Zw
8L1Z7ov1wVjhwHe+HHrxUR1y4B+lV+oLtCAHvhHVoZVYt/xc+A8HpjPOt19k
hRxYPaxjx9/XkAP/1jj2tjN3+f7/Hw78M3D+qrcmNi9vhQOLC01zM2G56D8c
mPfiZbboG8se73848H3z91casb6a/+HA4QMTv13eQQ5MMWazT+fq8nX6Hw6s
ZO9Y+8R2+Tn+Hw584uqEsW8Z9vnsCgf2ujv07DzCBz58z652w9afq58jxPrZ
9XYL2ggfuOehIocuwgemObjT8zvCByZdeF7wDuEDu+g+6dFG+MAM9Yp/WBE+
8All5j+vED7wjmmySxkIH1hfNfn7cYQPLJfkVCaN8IH5yjZSdSJ84N78ANWT
CB/4/Ab23e4IH/h6iLl+I8IH3iL79dY0wgc2tRo8F4zwgYvNi5uTED4wE6Vr
kAXCB579rbcV5QNX61wXPIvwgR0FHCQtET7wkOSFulyED+zfVxJ4AOEDx2QS
nrQgfOCKZiXJDkvIga/fP/DWB+ED+9GQczsifGCD/LQT8ggf+JiEMK82wgcm
l7jdOIHwgQ0ryIqCED5wzMVTmhcQPvCETMSBuwgfmMQhL08K4QMnJpzdJ4rw
gU3DW3mUET7w3rgfRgMIHzjh+bGYBwgfOJvTpcgP4QObLsl+bUX4wPQlHTwG
CB847cTWtACED6whQetogPCBE64UppAifGCGJ1KGUQgfOPKM/q1WhA889aBR
xArhAxupTPC1IHzgoGL5LnqED2wWLKEch/CByXIvc31E+MANRt0HfRA+sFp7
go0iwgcea9/pg/KB+etelNsjfOCTkeE/viJ84Ejms6H0CB/YjED99B7CBy6w
1hE0RvjABRc/JtxH+MB8qftKFxA+sNu1yxsDET5woq6CrBzCBxaIXvRVQPjA
d8Pkvg0ifOAEq/wL5AuQAyuKp1aYIHxg3uLU674IH9gpXlI9HOEDH0n8UMqM
8IGtTubvfY/wgW9kTjJ+RPjAA/FFXckIH9hJ+cLhFIQPXJBaHbwL4QN3LO52
qkX4wBn0V2e+IXzggQHxgUCED2xw4MbHowgf2PvuvaoLCB/4ekq8xyaEDxxF
xVItjPCBveVqFLkRPjBTiP6f/QgfeIhH9L41wgeOjPtj+g7hA7v403znRvjA
gid2pX1E+MCaQSYLDAgf+GM6lzYLwgeWEa5x+YLwgf1VawNHED4wgTEldwPC
B866xriLBOEDH9K8rVuM8IGlI3lCbyJ84HOakQ+mED6wMG3HhwiED6z5Yayg
C+EDc21z2e+P8IH3ZnZWRSN84OrNrvV9CB/4Tdkl73cIH5hpD/sHlA9cWfD9
AcoHdul+MKaM8IEpePYeOYXwgccii4LHED6wTPl0jjXCBw7JFHFIQ/jAsQXm
uUcRPvDm8lLSTQgfmKskbGAPwge2uRJXRIvwgZ2zfT6LIXxgx2qlsAKEDyzs
xlTzGuED58qoddohfOCWuYs05ggfOLRmPt4Z4QMnZZpRsCF84NprmhXXET7w
nYBshhcIH3hnpqbUa4QPbPoj62wIwgfW8dRW8kT4wI43vUS0ET5w1K2ZUhKE
D2x5Rv18FcIHbtCzfueM8IGZvC41vEH4wLzhhIjLCB846JtzhyjCB5byNvQ/
j/CBf4U4i3EgfGBWrljG5wgfmBDFz2iI8IFNe3tOdCB84BNyfJ7vET7w3rY3
WyQQPvBCdsfv2wgfmKZRJfgcwgfO0K9oI0H4wF90G+57InxgOaGDmgUIH5iV
EOMQgvCB+Y8VlN1H+MBf4ryM9RA+cEyG/c5yhA8sb7mtxAPhAzdTJ/OPI3zg
YF6tsasIH1gz+O7gNAX0gZM0RhzfI3xgFQkf1e8IH9iCc/FAMMIH5ghflyyN
8IEPxSn3v0D4wH8UjTMHED5wg5aCyiTCB7bdOa0fh/CB2WJFUlIQPnBuk7Bb
LcIHPvLsiD4Pwgd+73LZTA7hAw+9s2FxRvjANbPX+/wQPjD97MleIYQPfFjo
NHsPwgdmGFWbO4nwgXc320/nIHzgF6xX+KMRPnCY7BMeDoQPPP50s+9ehA/s
HeXufAPhA3Pp2JxRQfjAI/qn+xfpoQ9s5Ej3qZcD+sC3A3WNbBE+8LiB6ikH
hA8sOlBr24TwgZPsqqNRPnDHV6cd/QgfuObGnZOSCB+4c0e97lmED1xXVHy8
G+EDL/56P6qM8IHpx7fc9ED4wKIC10P4ET5wlvfpKTqED/xCt086EeEDj/Ga
fElH+MA+AbUnvRE+8DdtdpU2hA8cd9uDNwbhA+tVi+4h+wA5MKP+xJYdCB/Y
qy0xfAPCB2b/oExpjvCB20o5g04gfOD+70MF9ggf+PyTbWmTCB84ueg4/22E
D2zjmXNSAOED21LcneJA+MBBm14cT0P4wNJdyoKTCB+YZ4Q7uBbhAz9iHDyI
8oHl0pgKKxA+8DFe/npLhA9MVyWqGYXwgS9nfOayQPjAgvJ1ymMIHzgpsHbX
Z4QPnJuk4h+K8IGt34+T/1WBPjC9y2kWAYQPXMmt2s+M8IFTWRXDdiF84MSv
rN9JED5w3pnILfNk0Ad+oz3xhQPhA3dEOV/XR/jAt2i+nDVF+MA6fxeuNyN8
4Ohvl5VGvkAfeG/TIeY4hA/MVN10fi/CB2aflzgXifCBvw73Cu1D+MCJDpQ1
QwgfWPOVpeeMLvSB3amV4jP2QQ5MM/KszXOBq/T//17hwCc3vur8tBlyYKVt
QikvERy47MOs9q4QyIH92mUdyIQgBzbYPxt8A8GBnX7UvZZAcGANf6ljzxEc
+OTV29NeCA6cFvA6XhzBgc3eZGzJqYMcuIxpV2R2IeTAfEbh99Q3Qw7seonp
yxZXyIF3v79ALU8GOXCjPsOD3fOQA0+f/hpQhuDAaaV3nT+j+kJQPWQ+g+DA
eXSvy0MRHHhK3+iXOoID027dfVkAwYGPcpS1KSE48AEJueObPkEOPLPIl2sh
Djmw1V/jXSU2kAMb21EWxjyBHLjx3s6+zwgOvP03X3MkggOrT7Vvf4rgwHaG
uk92B0EO/GL/0ZoWBAfOOj5vk43gwDoRxYxlCA5MeiRP4SyCAyfJrHc8iODA
Vw41VFgiOPCD3PPMkwgOrBb7ueARggOXOCzdckZw4LHrHWfyEBx4YqdGIC+C
A3v9ymUwQnDgP6qnGFs/Qw5MEsPs4NMOObCUyg9LQQQHvilZ4GGB4MBpBf01
RQgOLH3TIV0+DnJg6+4o96MIDlwWseXCNwQHNurpV6E6gvCBVR1NShAcuEDg
4mMDBAdm2zF2qwjBga+cFSvWQHDg8r7tR58hOPBdaiWhkKuQAx9lozkoiODA
eflFXo8RHFhZce72ewQHnuOYv6hrDzmwn7zVp1oEB7ZM8mO/gODAzqkSIbYI
Dsx9s6uCdx3kwO/pFm0MERyY9hnzRCyCA88IiT5+heDA99mnFgoRHFgoZp+j
FIIDT+SYpXUhOLBb5J0pFAc+a/3hQSyCAyuovBAOQHDg8ghLMiYEB54VoNp3
F8GB7R9veJ2E4MDC72b7mREcmE8gebZvDHLgKpbzjIsikAPH61Wm5sch+kLc
udSjHQA5sEfqFWp1BAdOG2qivoDgwMGdUmEJCA7suSn27V8EB+6Mu86+A8GB
JUvjGL4gODDLIEPzegQHVr7/JW2gHXJgh1AdpyQEB05tmwo4g+DA8SOuPxNM
IAfe3HruwvZ3kAPXT0lETyA48P3AhpMxCA5s6JRkLXUZcuAn/G1K2QgOzKWs
d2C9NeTAhraTc5EIDtwvzSL1AsGBx0WNJEYRHPjZzwuV7QgOrOeY85gLwYE3
ri87/QTBgUdzYkZ4EBx4aYE0Rh3BgX18p9MKERw43aSlYCOCAwfvz93hiuDA
tNsbdUURHPhyw8c36YOQA4vrLgzVDUEOrMH242n4BsiBs7zsTuSGQw7M90j/
Tf8XyIHJOEbeL/JBDhwU/fNN/gPIga03f+mwRHDg85cv7D6H6gsh6fuOBcGB
W88dsfBEcGA2/tv+9xAcOOCXrH8QggNfPyiWehjBgUn31xQv9UMOvGtMzvyd
COTA0ZeMfYLTIAe2Cb7ERorgwL3a+QHbOyAHtre8/C4LwYHnGBdS9RAcOP6i
9XoeBAf+NTM+tQ/BgXkvZKfNtEEOLGnB5XMVwYHpSH2CpBAc2MP/GvkTBAd+
siRwJRbBgZM/v5UeewM58Finv/AhBAeu+t7mP3cPcuDYX09OVnBDDqwwqPVy
8Q7kwJvJVDfvQnDgLqupp1wIDkx+6O1OIQQH1g2rG3GvhRxY6sjhnAk6yIE9
/Om9Cs9DDtzPrJOviuDAhNBDPNoVkAOHlHQld62HHHizZdnip07IgYPdrAdz
ERx40csg/jCCA5/pEYr4lQE5MI/v/TJPBAcOOxp+3gHBgRnzB2gvIDjwpTv8
OlIIDkzJvFj87jjkwPJ3FmXXIzhwV4hGqfsE5MBTHrJ24lcgB/7Rqen8zgRy
4G+mQgN0CA48eSppexI55MAkqVs8jyM4cGDTcZMRVsiBH44W/lVCcGCHpW++
YggOTPa9k015CXJgizObv3oLQA7cTeO8rp0JcuBnTKFafNSQA0tH/v3IheDA
uwJfs91ghxz4vplM9VEvyIGbdO+UVCI4MGtg4tMNvpADJ/fp1FojOLAMveOZ
NAQHLilRNEs/ATlw0MeGijlVyIFvt2jyT+6FHPjm8TPTBQgOPH9b7Hk+ggPz
+x3cfADBgV2y6AlkCA5c+tpzjz2CA8tv9tsjj+DA8gdjyzsRHFh5yPWMBYID
u3anPPuA4MBMwTmiOxAc2C6DwdQGwYHtWkJJjBAcWDTyooMNggNHFEwNyiE4
cPZsGs1PNciBledqi24gOPDHfge/dgQH7m4/J7UPwYFlhJibks9BDmxosj+z
EsGBIzQ/8JIfgxxYJeVOUxOCA8uXqepQIDiwVfDSYBKCAw+nZVrJIDjwCQO3
KwIIDnyVTLv/5lvIgfeQCHfsQHDgP7qkk90IDlx/7fFJTwQHJv2w4Wc9ggMf
cZ9ScTGFHFjnynGxPgHIgXelFF6lR3DgPVIx8m8zIAf+U//8aymCAx+U0fTo
oIUcuNqa5XQLI+TAe7IvDvZaQg4cc8rz7MxjyIGTS+O1MnohB479Kcec9Bxy
4IM725IZEBzYqtLRShDBgfdWOYo2W0MOTJc5bcKL4MCvWNn96REc+IGxVICO
LeTA3ttyWjUq1nLOeTWzu7lSgfKQA7d9drVgXYAcmH6geG5fO+TAj3Ufr7eW
gxyY6U/hu218kAObbz+33d8VcuDfUo9kh17AvhAPXxv4PRCEHHjDVi7CNBnk
wBRZ8rqOJbAvhBFPIePJD5AD9xUFT2xWghx44JAF5bW7kAPzP/w+FmUEObDG
xq9hYcqwL4SfSwK9TybkwBcKitqo90MO7Nbw2vVwM+wLkXGj3y1GHXJg7ic6
2cNXIAcuM+Y8dCkCcuCRkbz37HKwL0Sclcwg1QTkwCmfNp1IOQU5cMJVmeoI
C8iB7XfvviXZATlwiEi44mw05MAFGY07qmiHVu8zcf34bULIusOI/sC9EjYn
WyAHNj7K6titDzmwqE/tOeNfkAMf23P8mccw5MC8DRUcS8GQA7P6ZKgvMEMO
vNltT7TgPsiB2ZWkrTn7YV+IHns7HlVEX4hOao/LvhshB+a86/jm6lbIgQPK
57Z63YYcWGe4S/mYFOTAgup7Il4i+kJEDTYGJ7LCvhBZSem/D56AfSEsx9hO
U8vBvhDC722zlT0gB2Z5/PNL/AjkwJzqtv2+YrAvhFFe1r2dtLAvxN+i5xWC
xyEH/ny/2fbnTNfq4/KvP4MmdVKOCuTAhxtvxNvOw74Qo/5hn14Mwb4Qsj6x
WcNhkAMvBhU23ZiGHLh0JEOVpQ32hTB8U8OWS4AcuIFWxUKqEnJg7pH1FfIZ
kAPr7JhVuycOOfD3Pr1vJKR9q+vE9ZE6P2fmkiAH9j+nMELPCjmwYJZ6xuYB
yIElbxy8pWAGOfC9IO8WsyzIgf/odgadE4UcmKKFVNxMEHJgfhLnvWUkkAP/
vaOhkxcD+0KENTDpLeyFHJglKp6NexT2hdgyWJzd7Ag5sNywWnt5JewL0T55
z7+1HXLgA6b7GPcuQg58m72NiSYR9oU4WJCh/2Iz7AvxbR+F9gMj2BciyDGz
2joP9oUwWtx3pnIP5MAm7BYT6jGQA2t+ZGq7/Rhy4MqvqVt3ZkEOHBSYdduF
CXJgb2NDvxohyIFt3Xv3r1eBHLj8paOjtC7kwPQhDaouwpADnzQx8Yg/CPtC
OA1u8J3LhX0hlnZn9twShX0hrFSrWkYyIQe+6GF44a0Q5MCVft8W5AiQA2/Z
0Pu0KRJyYG178iQlZsiBi9e5yV1+C/tC/Nku9jL3PuTAQowKSbPFsC+EL9nx
kDP+kAOrV1Q+3L4DcuDfD/Oav8lDDhz2iEI2YAz2hWAkaZ/rbIF9IV52JWXV
nocc2CWk8vHVStgXYl75wM/3ZyEHno8SlygOhRxY/YydSZwR7AvxtSYuWKEE
9oWYVtB5OXcU9oUgv8bbr7oP9oUoZX5f3TWTufo8Ia53415n1NoP+0KE7SNr
+FIO+0LsKOl+oMgDOXCgoOpNHURfiMwL6kcmSSEHfvrK0/WdCeTAw+7+O6dv
w74QfQHsif30kANPzxjuuhYNOfDPblpOVmbYFyL+gCVHDgvsC/G13/pYpDXs
CzHdz/VXpAb2hXifILBuy0fYF2JqB/cp2RHYF0I8rvxAfzDsC0E68OBF3U3Y
F8KL92D9IiXkwLfctSOPbYEcuOBV+Q4vBciBDxdqP7t6A/aFoH34nNJXDOED
C90uaFKCHNhbXVXY7wHkwIun2iU+J0EOXOEl3fo1DXLgLIpfze6CkAPvohzs
eqYA+0IULLq1zr6BHNhq69+N5jKwL4R74yc/I3nYFyKCXolVqAn2hZgfn1O2
2An7Qlh8KE2/chD2haghUdMe/Qr7QtxauPv++BHYF2L2tb7NEa741XXi+jjZ
eCuXDbGrz5N//RbeXywrC4Uc2IH5YI/VOOwLUX0tUf+sH+TAimoedgU/IAc2
iqtwFp2EHPhCwaGL0hmwL0TsYLA2mRvsC9GwIHP7+k3YF+KLM0d1My/sC1HN
1aTcrQT7QnR7iIzsNoZ9ITxsfY2jnsK+EHkb33LNPoUcOMCI7f41RF8Iih1a
8kGcsC+EW5/59i15kAPf5C4bNa2AfSEeLBzh1w6EfSF2if9k/GMC+0K4DCSr
HEmEfSEe6h9+76wG+0KUk9A2SIXAvhDOLvZkm6XXfL5ArBfnfHEpDrz///p/
OLBDTYr9zjDIgT8kZy5+bYEcuKU49KbBGciBzcQFUj75QQ58Qo+aeq8W5MDx
D/StOUlhX4hF5jfJHvchB15Kv3439RrkwBxtjomPbSAH9jbqsaV8CTlwQe+k
kugCNv9xhQNXc7b/SfoE+0K4tpZ8HkFwYNrkjILsB7AvBIXfS3f6EciBHTr9
+G5lwb4QtzrZHFg6IAfesZBSO9QHOfCzct2obkPIgYuipzVGoyEHLvSnJ+9C
9IWgiVI5MHsIcmBVVVo1GW7YF+JnPoMlGy/sCxF9tOKcYS7kwAk7QreWckAO
zLrpnOt2GdgX4lSdlspzOciBSSUT6evWQQ68f17bkJoFcmAap7eWoQ8hB/YR
+7uN5y3sCzGooJKVeghyYOPtrWHizyEHrrijnzTZAvtClCSZmGqth30hRgW4
mKbCIAcmYZ+6aZEO+0K83fTy6sQg7AvRZGbxysMQ9oUg1G44fzgK9oUIm81L
DTSCHJiP9+bww0OQA8vanX/k2gz7Qmz4elVfkw1y4Mvf5A73ZkEO7OQX+0gt
DvaFMHAuq7HcBvtCSJJ9SZ38CPtCOC+Sc+/uhX0h5DdpWUashxx43eJkhVwD
5MBCd0rT7V1gX4gClQxtBX3YF+IQybHJGOk1n9cT71d202r9580hB1Z5WKLj
8why4OfmIU/p1CAHXqoUpJyehxyYzH4gJqABcmB2vlATq+2QAysYUieGCEEO
/JE2oHS3I+TAtZmWz6OTIAcW0poLoFoHOTCtz145r+G1nHNerTX/TPmSD+TA
bTLHA0+0Qw5cpbVuoXQL5MBD2YKy9I8gBx5PSdHcfRBy4IDLr9883A45sNDW
EEHfDMiBA6aOVYnoQw787O/dzUv1kAMXROQ5q8pDDixqveXO7AnIgQfPil0a
vwE5cMHoLrk/FJADqyxS8s0uQg78YddTsSNOkAOzzGiIettBDjyV1STE+A1y
YLt5NiGHtZ4wcf29rp6r/HSQA5fuu8RIfxBy4G0H04NK3kEOnEL9QT58H+TA
g8dbe7x+Qg6seKv02wKCAy+QJSxG3IUcWLBZSjeGHXJgUbtPC2S6kAMr+x/X
CemBHDhjh1DO4E3Igc+e+yE0xwY5cCK3YZyFIOTASlPOCscvQQ68a4GxX0IY
cuCn5LpLdR8gB7Y1iKEiZ4Ac2G14w9bTeyEHpjWqnjosAjkwj8ulZ88vQg7M
Nm9Be2sccmDyTbtvHBSGHJhSt79zNyXkwB2J3zMcERw4q5ubam4RcuCCK2d6
FlUhBzbbq3lEHdEf+GLta8qJbsiBX/IJHXUNhRxYL2FPje1vyIFZ7y2afqqB
HLgum3RjlirkwHq1P5IuIjhwt/3IEb00yIENzDc/9JCAHLigwXjr3iXoA18f
jXu9Oxly4BNscoxcLJADs+bt0ZYfgRx4E9/VmgoryIE5jDgiY15ADuzus4FZ
ZiPkwH6Mr5W9RCAHdjt3+Ts/ggM/KRCkGoiCHHhKYLr7oAbkwCo7jnv790MO
PBokKTh4GnJgz/UW8SJVkAN/l1DY+rMDcuDwAKuJYNLS1ecDcf2V8a5SryTI
ge/xfnA/tRFy4EszL6b3akEOfFQhdZ3xY8iBd24++ZtMB3Jgg3NbfIXjIAcO
c3GlfpcIOfAnJ+6Q8TzIge/s82dyYoccmLyaKvaFCOTAbEm52wt3Qg6snVRw
sfkA5MDibanTeZKQA49URVYetET0B+6VzyzMhBz46QlxBc+5Nb50KS/BIZtJ
liUfcuD2Q/3RrWKQA0f5nno1rgM5MKXvy0zJR5AD9xgV78vnhBz4/XSJtuk7
yIE5Jie/2UdDDpxFe6+vH9EfuGBW2/PKbciB999ILQlShBzYX2T974S1fJi4
nlY0+7PrJOTAjnTTB8I/Qg4cGmCi43INcmB52/4TIe8gB3b9zPjI9TrkwAuJ
/YkXYyAHTp4OSd9kDzlw27Pz54dqIQcm9268338ScmApjZYDDgTIgX2cKW8O
dkAOfJ3nTNjTAsiBlRNzIl5FQg6caE3buB/Bgfv4X6+fR3DgT0o8nCcQHPjQ
qZcezIchByZcelNVEAI5cLib7pNCTsiBW8k5iz8mQw7s/VittUsKcmBWL6Xf
8vyQA6sUFlL2HYYcmOn39LqSGMiBf/4NoKDKgRx4xJQrde8Q5MC+TZeWVO9B
Dqwa5MHYex1y4Bo/r3sv6SAHVnTNnGvZDDnwBXJ9s627IAcO6SXbSe4HOfCp
uClVkW2QA6twFQp+UoccOOb++py7yZADJ16OeSyVBzmwskvTi/C3kANz1/ek
M0lDDvz6kOgvT13IgTd7fXBk7IQcWOSBkwunPOTACoHzW9XlEBxYinv6Zznk
wP4dR3d7cEAOPPDaPnWRH3JgO55UKpJsyIGnnqhuPSwNObBVd9YvmyXYH/jL
s8YjO5kgB26UiaF9Fgs58Fd/P9uZeciBaZ72uF64DzmwnMm3FDF8LswKB7Y0
O2FUzVK8+nj986aut+nyvYEcWMuFT0HbC3Lgp5lUaWVXIQeW7vpIJz67xq/+
11/C3UZ2IyPkwCQWtTM3dkMO3Eyx0aKlF3JgbR+v7q11kANLJKnVTBpBDiwY
cqLuyE7Igecf/sy+2Q458LNwrap7vZAD/+LjTNgQBzmwe/dH03tHIAf2LqhS
+XoXcmCPW5tOyghBDjyk/PyRy2XIgSsU+LL26kEOnJ7yY+4Nz7JH/R8O3FI5
NuceAjlwT3+drH4D5MAvbb26apwgB15gz9Ogvgw58EErzlhNKciBq1PL44tq
oQ/M/c7470VHyIE/GD6so7wFOfDEhScU945BDnz9UUf8o1zIgU238aVoL0EO
vOuBd+beRsiBLYqeqD9LhxxY+jSbxo8AyIG3eV/nkRiFHHjphsj3jSmQA4s/
/Fscg+DAZVtkAk37IQf+Jh0mZ3wIcmA376/hD+IgB5YNCj2ng+DA0sbHpMIR
HFhkVLBUlBNyYI55CWtxWsiBL4Xt++GQDzmwYeijgsMbIAfuog07/0wEcuB6
jm/rfihCDqwvIaj9lwxy4OwUi207EP2B05VpzsnFQg78dnRwi38T5MATPtZH
dawgBz4Y/Edntgpy4CNeV2fP1EAOfDNkfW5Z9zKn/Q8HFni/UKoXDjmwuu4h
ecfnkAN/PUS4PDYJObDrj9vjUTKQA/PSfenMiYUceISy8rm0BeTABa47qOes
IAfmlh2r4fkCOXDEDqkLu0UgB153QYPbpRpyYM/ovNzzTyEHrja+VKMrCjnw
6EguKUs65MBva+poxpshB75UXl6RxQo5cEPW++xTY5ADS1KKnDPxhhz4okf0
ljeKkAOfj3PREdy/zIG96f9f/zeX7Uq15tT55ftPKQde3zL3pV1yx/J9ppQf
r3epJiTSflt+77MRwetDvdn3JFOw94Xfy/c3MsJerWvPemYx7kdLwOqib28k
Pwle/n+9mfF6diC7vSb2eZM3O14/rXvfNqVq+ffx5sbr32dEhmMdlu8b3nx4
3T7DN3krYfk6LV3hpZGjtRkS25evr1JhvM52cmNF89DydVS6wktZlXceXGeI
5cOfy9c1FcGxZY7jpcny3+W9wkW79ZjoD1Yuc1HCCp8cO37tYl3H8t9FWOGQ
HP4lpPnfsfv58vlJvA83bg6UK36C3Q9XOGS+jJeweT5WX+GN5SO3LG+QYu+z
AvjPMat5LNJ/fvl9U3CFNxpHfeuuWFjeB0FhvH7X/ReZwTHseSGC/5ypKz3Z
EhXL153gClekmbbLN7mLef4r/HDnm1ZRIw0sh8z8f9+Iz4u+TlkNFtdlvue9
fD4Q64Zi1By9DMv8qpQdr2dQ/eL0VVn+e0u58fol+5l1C2PY8eXD6xtE9m3Z
eWX57+1d4Xj3dh3S67m2/J7VK4zXS8Z9nEZtl+8zvSscb310vvyMFZYbJ5eP
OxuB04NUrsgK42zrCHi9jEdnqBfjkNR4XeJXwcctj7HzdoWnbRfJ575ejj0H
VzjY4TPzp9qGlvmw9wrv2hE0qP/o2/LxIiwfX+LzK3TQcJfyaez7Fyu8i/TA
7e092DwmgjBe76ja0fV9+/LfGyeC/5za9BvVkgeW/17CCtd6n56ZGnEMq6/w
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
arHfETlH69Kj4BhEzlHlKm83RuScQir3PV8qYc5533D8hyAi52x9E3J9rg7m
nJwEUeVtF2HO8WcSj21F5Jweo6CJz4ics5F7SL4FkXMEP2nfbM6COcd1nnGy
bQbmnL7H1XtbjGDOiSneqNaByDkSguaOsYick3678hMtIue4KwyORiByjtid
lyGpiJyzVON0swqRc7aN+e963ARzTp/uyDkFRM45KC32Ot4V5hzPTpHarNsw
58Q9WVS6gMg56qfnPS0QOcefSbDpICLncJA/3F5SCXPO79cM1SELMOf0PW5f
skHkHMFiy4c7EDnH1/3VH0VEznGhlEpu14c5p5KGw4UekXOY7AgqAoic86g+
8ysZIufQWaaU5ryAOedB05CeJCLnnG8nDffZAnPOCeasROk0mHNuS8nuLjGH
OWeTvLYrSzDMOQJF/XrXWWHOOXWNXjKVCX5upeHa+UyhAOYctgFdkhAZ+LmV
m45d3rZJmHNi+J6YqNvBnPMq0viX+2+MM6/knMzR7/uVmuDnVtqDNSrWmv9r
687Dsfq2OIDLVFRKKZIylLGRNEuvEsnUoFnRQJqFpPG+aVZoQvkJTSpDhCQk
JY2GUCqKRCqiAUkq93ieOGu9a/+7n+51znnP2fu7Pmed/aM5Z1DB/ln3O9Gc
s7h+s731XJpzXNwdXxgU05xTp3cxtVmXvreq3SxfuGYgfW9luiPeovoczTnP
jhVXX0imOceje1wvv2T63iqxaMHiH4o05zxPzQyRO0VzTtrx3fNCY+h7q5i/
pWKhdjTneEUdmWQ4lOacXdrDv/oy3lslpjetfnmT5pz40JjpS6fTnNP3+LY+
MuNpztH6cbFbUBTNOd8kPGdPV6M5Jz7qwNRIXZpzply3kO7dRN9bqQclbFhs
R3NOD99USYtzNOdobbnmuHggfW81Oy1qkEMOzTnTHFMapxbQnHPE5GHr5tM0
53ywGdtUIKQ5Z6xywu6ZKfS91e3NscOzE+h7K51g7VEqqfS91QmPj6fDTRie
4zzliPpMmnOkE9bH+ZXSnLNjk7vzFk+ac0K0s4ZazKU5J+J/t31nzqE5Z6uJ
Xl24Jc05/w0Lqlc/QXOOucPBCUO+0pxTYpbscuw7zTkVs5rnZOjRnPN7+YvI
UW4053Q1CO9yNp6+twpe6Of6XJ3mHH+7JXljZWjOGXzRt+XJDfreatt/u9e6
/aXvrVyqTIsD39Gcs8C2dpzKdvreymzRztCFWfS9Vc4u/6gYH/reKvhDVO50
xnursok9KvaPojlnRWqx3mEHmnOi14ol/TxPc86LhgGbFlnR91YKDw8dCNCj
7600Nc1n+K6i762ubIrtrBJI31sNjdOaHBpN31s9/DbON6+SvreK63z7421f
mnO0Rj6IS/lD31vtGtg0OYXx3mrASsHfocn0vdXUmXn+Z7Loe6tCr/D0ydfp
eyv3b40VZ27RnGNaqfflbRzNOSc7J9etiKc5R22F8gWzRfS91fZJXys3fKDv
rS7IPjKZwHhvFb9B1avGkuacJuP88ca+NOdUaXd9tE+GvrcqmO9d9p80fW8l
HhFtNDCXvreyr+mitjOcvrcauU6iX/gC+t6qVfL6tGuK9L3Vhj5nF5ofpe+t
FFakKtbH0JwzcmmnlIfzaM75fmb5uZIjNOfsH1CTlNbQnp/5nDNN11cyXYrm
nCjFeI3KdJpzJAs1wo8NozlnbtfPlq8+05zz62VoaIELzTnuH8OVFJtozvnh
oF+e84jmnAKttJDAITTnfBKLufqnmvbnbDeNPNC6jOacv7vdgi99oDnH7aLu
rBmaNOdMGpzd30WJ5pzsc0subWW9txJ8rZZjeE7D+em/YlNpzuk92VrrqwLN
Oc2PXK03H6c5J/+g5pszp2jOERMvdu5jRXNOVW3V5QUqNOeMuSY8VWpJc47r
jXd6Y2/RnGNYdeKAhxnNOUPFnDcIGTkn6b9eS29epTmnqmq40TFVmnM6B6z6
uEaT5hz3jROyI77SnCPv7bHkxGyac3pPaKqeE05zju9Vc2v7/jTnSIb6ST97
RHPOWstvrxbl05zj3OJjEhpKc06ItZvmUEbOcdh468OWJJpzRi34r8Y0iuac
nyVGEXuSaM6x+lUmM8CU5hyfqw9WbZ9Fc47yuD9XMt/QnOPyRT+lluE5Rxpm
Fx1YSHNOtxQVV5P5NOf8ed81xcWa5pwG9w/G4wNpzrk7vMVibAPNOfujrlSv
rqc5J1xT/PGk0TTnnAqMzfqxjeacc9sl57ck05yTEj4yIF6L5pwbnxO2xTD6
c3RvvNgkl0JzjnPxjogCaeo5p+57DN7bQHPOmMJLnwcLac7pltsUuy+b5pyE
+wKnr0Kac0yDGi9+ZOScd11XS2oY0pzzs1XCav8qmnMst72QHRpLc85mq5Eu
Hxg553WLxsz/BtCcU6v4ojXHieac0OAhqtknac7ZEad/VyaG5pw+G3z6D/5E
c84Sz3N19wJpzokLCz6SJ0M9Z0qwXvj+gTTnuIQFdNt7j+acXhumfL9zjuac
18dOyB3zoznHbLncINMnNOdYN6n+fXab5py5LqoVDtk05/gOdcnStac5x9Sv
v654Fs054YK0N3NG05zz0vt17oyNNOcEez+uTIqlOUfqbm1ppC7NOX21+x64
rUZzzr3spLK0NzTnDJZrGjX0PM05JybEvA2aTnPOmZ7//W9XJ5pzQo8WV6z3
aXezf985cvlklNOjwyE2//KGQLFj/NjkxJ55D9q/l1TtGF8QbiL/OuLfc/2W
zzl+ZsuyA43b76uWjpxj4/4jY/q7GpG/KyEQO9I9ee/Zf9+TZvA5x/Jol4ep
yVUixyMhOGbvVuxo3r7fi3LHeIq5woDaX2Uix8n9e7erjwZK/TtONfWO8Xla
Hyvi1ApFjl9C4HIjO2zVsX+eL9DsGF95KWXlYtdMfF5t+xFNHCPMl2g/LwlB
+/jgEvGsTpbV+Hy5cVdV+7pBwR/w+XLj3d57e1rc+bc+Cvn88/bn5NRhKRX4
OnDjAfn3LuvvKRe5PnKC4DPdaw1c3+Lrw/37h6npM6qC/+2jksHnou1TZugs
mVyMrxs33jR4nURXuSKR68nlJdXldekJz/D15P79JduZUkKrf99dtn2H8G88
6ceiuAGJOfg6c+P7XhTsTPF5IHL95QQKncwcGhXu4+vP/fvfc8M2Xwj6V2eF
8zmqIsUid9upNPy7cNf1teK28fs69t36d/258R5xmXXJKyvxdWvr/zl74ecC
81J83bhxib2rzh31E7k+bf5z+p73j56F+Dpw4+n13mUTnuTh8+LGt0QYqKrP
v4fPixv3dFUy+qubIXJfKQj6z174O0rjvch9pSAwOnRy/4sTlSL3lYLA1GGa
b+GWdyL3lYKgPKvSUVpG5D7hxnc8kLrW6FIicp8oCH6tv7y/oPmFyH2iILh3
wHiFfuAzkftEQfBE0DJ2z5R8PM79ncji1pWO2bki94mCwG3UhSViV7NF7hMF
gcbbR1WLbEXuB248zrU2PH7tXTzO/f/LP+yTH7A6Q+Q+URA8y2zYMVvzlsh9
oiDQcXbym+aehK9z2/usBQdbNNrro455SVlgGB068sGN1/i6ceOj86Uqdeye
izwXyoJ57qP3e75+LDLPcLkrwu/U+vZ+17d8Hmsa/ajF4kIaPn5uPKPxk3qP
CpHj5H6H61t37FMZ+BrfD9x4oZ7zz48rS/Dxc+OBXqV/l518ie8HbrzaqLas
Lr5I5P5XERTN6yfpb1yA7wdu3Kai8tLQn3n4fLlxO2P1aKlf9/H5tr3vO/R6
2mr1TPz7tnmUzKEuYXq3RZ4LFYHioe1mSnuTRX53VYGjSuSz10mJIs+LikD5
7WHfc24J+Pflxj3UjqmFylzF1407rg9GUtYxYYX4+nDjp3Yft3XVz8fXgRuv
O2ejecz3ET5fbtxpVshaQ8UMfJzc+DWL1d32aF7Dx8mN+/tVG+oEReHj4a7H
71UROYn5efh3bHOq7lW/Qjvn4ePkxifeNxD//uyJyHOtIZjzILLUPP2RyHOt
IXDKcakZHHkP/45teW+f2f6FmndFnl8uNzbmG86VThF5TjUEBRM/NG9MvS7y
u2gI0sdf2W12NwqfLzdeJ17bMkk5Av8ubf1IeqE1rWpn8XXg/ndTN1ke7P09
E58vN14b2hwT8b87+Ly4cYHP1orV7cfZMc9wue6aT+rsFXEi84Om4Ef3pXoj
3UX+bpsXHRr3xO1cOr7+3HiP+1l2oz/dwsfDjS/T3a1T/TQFX39u/HdXJ+8n
xcn4OLnxh3Nk/vauScDXnxvPeGH7zLvdUduPnxv3mGL04GafK/j6t70f1Dte
mSt9EZ9XWz9VRVTNhfRgfP3b/E1R5Ua0UwA+L+68Ue4S8vumotzSkbtaJqN1
U8jvm4rXI35/EjR/ZvD7pibC+UqN37fkI3we2+eHtv1M4HMh4PczQfdJ+33F
jaPfUcjvd4pyl5Df1xStmxn8/qVo/uw4HgnBZfg8dvxdCZH7pH0dkROg/Nxx
/eVwvhXy+4UycyA33hPmEyG//yda3zuuvxxepzL4/TzR/K/G77uC5r2O85XD
84yA348FPY8d10EOPxcd65G8YAbM7UJ+n0xmvuXG38J8ksHve/kJrlMd64i8
YDac9zrmf3n8PHbMM4oCVL+0H2fbOKwjhPz+k+Uwbwv5/SdR3hbj94dBebv9
d+TGUZ4U8vtMMnNX23//HeaKDH7fSLQuq/H7yeB1SqNjHM3/An6fGRM4f7Zf
N24cz1ft962yIBXVU/x+jLiOkO8YxzmZ34+RmSe5cZwrNDrG0TrVcb8p4/mz
Yz1VFaA6tGM9VRUchXWfkN//ENc7/P6HqN7pWH9Vcb3Tsf6qCkxg/hfyrpWJ
cjK//yHKyQJ+n5wrMCd3rNeqOE9m8PsczmXlLm4c5ZOOXK2K13cBv68OWjc7
1mtVvB61X0/u78yH9bKQ3z8Q1X3t14cbR3WQkN8/EOV/MX4fHpSTM/j9A5l5
khtH+aT9+LnxA3DdbL9PuPUTu8S/8+LGUb0v5Pfxuw7rViG/j99eWLe23yfc
eG9Yt7Zfh7Z9/2DdJ+T38VOH9Y6Q38cP1TsCfl8gVO+0Xzdu/AesIzL4ffxW
wbydwe/j1xfmbSG/jxDK22r8PkIo37Zff26cmQPbjgfmrvbfhRt/CHNLxzys
iV1FyO+bh+r9jnlVE9fLQn7fPFT3ifH7EaF6KoPfNw/VEWr8PkUot3fMq5rs
fMuNo9wl5Pe1Qy4h5PevQ3VoBr9PHapf2v8uN47zM+91bxePeOhxkHrdW28l
bbF31Osqx/2YnDKXet1+k2Hni8+373vJe51rUJO5c7fPIn9XQuBStVqhewn1
unEu95X9P1Ovi5xvGHbLnnqdXWryAMOf1Ot22C7u0hBbJJJbJAQljrcSf6QX
iBy/hOC+cGCft38fiOQWCYFBqu298aOp172+4D/82HjqdXHuWX2G7aFeV3c5
dtCEQup1Vef7nan9Rr1OxcBov/0b6nVL02bOmXmMet2GQbImr9yo16VFTA02
9KFet9e7+WuEJPU6x5K1T2LiRV2Cy3tzfN0mzqFeZ3b7f1s9PorkQG58a7nb
Q6tf2fg6c+OzIj+aXpGkXrdX0XWE8GKWyPrSRfB40K3bk9ZSr/v1dsOqt51E
8jN3XT3m6jmHHKJeVyn79WHIYep156ZVbyg2oF7n7WIl4bCQel3O0GBXmWiR
HMWNB+omPYyXp15XWFKfGydJve77LkN9u9HU61J+7Q7xn0m9Tmy3V83WW9Tr
Tm7N3XjIn3pdaS/HAQd6Ua/z6+b0R34c9bp1Q7V+lsRQr2vVnmdZM4Z6XenT
EQoRJU/xOPd37JruONvLUa+r3pdqr/33ich9oiCYd1zd2a5QxLW4cQnT3/WZ
RtTrDM5mmnZheF1wollfsb3U63Je/56VcvAGvs5t+yxZPP7xYw31Otcl0kYX
TlKvu/z2ZXn1T5HrwI17+JyaeGg89bqKxyNqlipRr9Py8hB4db0lMs8oC35E
VWW+/SZynNzvMM84RmNfQwm+H7jxo7sKhK2G1OscN0ocvW1Jve5Tf0F58lLq
dbZhXhPzXubj+4EbH9mreN+4cdTrbNbL6O3/H/W6i0PWOXvV3MW/LzduFZX/
XX8u9Totn6qajYtvivzuqoJtDYp+aeJJ+Ppw/94vJXrUsspE/Pty41z83Jn3
Kw5fN+64bNM3vvoziXqdc7Wm1Km8p/g6tP13fHynjfBreYjPlxtP3HVItlqd
et3WIZPfPyiNx8fJjW9cf/jE4kex+Hi466Ewcb9HUHfqdV2ks7u/mJ6Lj5Mb
NxzyadxuHep1ERODPL9rU68rs7JpPDqXel30uDvRvSWo15UKEtTvJlKv6928
w7z5Q5LI76IhsJn92GxESyw+X248N99hnkVlpMhzpyEY3+Onp6lNBL4O3P/O
YIGD3Y1o6nWflw9fsmkd9TqdoypGi1Op1w2PSLOPHhUvMj9oCi7dqHplGSny
d9v2cRr48J3YS+p10wJHHDpgkI6Pp+39pnxXt4NrUvH158brNT8mmkbfxMfZ
dt5Kw547WF/H17/N07bXXv7PMAEff1sf2qSBeoOCYvD158Z/3ff8UFN1BZ8X
N/6/SSaKZY/O4evPjS+1b5jvIhOOz4s7b5S7gNeh3AK8Dq2bwOvwesR7HZo/
gdeh+Qp4HXoegdeh5wJ4HbpPgNeh3xF4HcpdwOvQugm8Ds2fwOvQ8wi8Dt8n
vNeh/Ay8DuVb4HXMHMiNo3wCvA6t78Dr0DoFvA7N/8Dr0LwHvA7NM8Dr0PMI
vA49F8DrUG4HXsfMt237RMF8Ar0OrlPA69C8B7zuO3wegdeh+gV4HaojgNeh
vA28DuVt4HUobwOvQ3kSeB0zd3HjKFcAr0PrMvA6vE5pdIyj+R94HZo/gdfh
+Yr3OlxP8V6H6wje63BO5r2OmSe5cZwrNDrG0ToFvA7Nn8DrUB0KvA7VfcDr
cL3Dex2qd4DXoXoHeB3K/8DrcE7mvQ7lZOB1KCcDr0N5EngdM3dx4yifAK9D
6zvwOrRuAq9D6xHwOlQvA69DdR/wOlQHAa9D+R94HcrJwOsiWHmybX8qmE+A
16F1E3gddgne61C9D7wO1a3A61DdCrwO1a3A61DdB7wO1TvA61C9A7wO1TvA
61AdAbwO5W3gdShvA69DeRt4Hcq3wOuYOZAbvwxzF/A6lFuA1yFXAV6H6n3g
daheBl6H6j7gdaieAl6H6gjgdRtgbgdex8y33DjKXcDrkEsAr8uGdSjwunhY
vwCvG4fyM+91p5sdoncz+uuevTxS8YzRX5dRm/eilNFf97XXE/UTjP66kFE7
js9n9NdZFRw0P8DorwuYuvviPUZ/Xa8zGbOcGf116auG1zcw+uuGr9MxUmf0
13XtHOt9jdFfp+Ho+nAFo7/u4P5+J+Yx+us6bV7yN5jRX3cjrLS6eQb1Ooe+
vz2GMfrrbA/tPTyL0V83r7K7wJDRX5dn8PzEGEZ/ncMNJfWxjP4647Q8w1pW
f90Ku5XLGP11tukvGrox+uui82YYZTD664RXJ09h9dfpL9ri1Z/RXzezPGJ5
EqO/7sv+3/VfGf11Xi62O8IY/XWjpYwkXBn9dWKPG/38GP11qv2rf95m9Nd9
99G86sDor9N2UBkcwOivMxgY3aOJ0V939GXJgfGM/roBXwbbqzD66x6cdOjc
zOivG68z93gCo79u6oEVcaWM/rqjq5o1XzH660aMsWmRZfTXVfdPPP2L0V/n
p5637zmjv65u28AIA0Z/3ZjWGy3ejP46ufr1AUsZ/XXSD+WK/8TQ/ropqc5F
8xj9dZr2vXxiGP111Xci9h1leJ2ymF6mOaO/LjNkbPEERn+dd+NWPW1Gf51S
xaTv2Yz+urUvrh3SY/TXuWjNWefO6K9bvOX2ttWM/rpex8Q1JjP660oDDvtK
MvrrMg17lqgz+uvih717V8vor/uiO9TSidFf9yB7iME3Rn+d4vP7hqz+ulLt
HKshjP46K6e32zsx+usu3X7kvJLRX1e51GfTSUZ/3epuBfbdGf111x6XGRQw
+usO+G3XPsXqr5PtXuzD6K/LP26rfpXRX1drFTGA1V/3aI99si+jv+59Yrnu
CEZ/XWj21xovRn+d/otB9/ow+usWqK6xS2D011WuXD35DKO/zut83YgvjP66
KUdXe5ky+uuy5uVNU2P01/kdmL7XjtFfp5ZUMm8Go7/OJ7rB0YnRX+cbHBsy
itFf92OprfQwRn/d8QK5318Z/XUJoWMeyTH66xy29z99ltFfZ3htobYDo7+u
2LZH/nRGf93XNf5/1Bj9dZr1msoujP662Iqcc3qM/jpxQf68MkZ/3ZUlI+9m
MPrrpD/dEsow+utuWvxO9WL01ymPHZx2idFfZ314wuJ0Rn/dFokZ530Y/XU+
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
1zHzbdv+ezB3Aa9DLgG8DtWhwOtQ/QK8Dudn3uvMJ0z628j4HvbkWAfd1krq
ddPFRr7XnEG9boDPhncnb9DvYd9YV/Y/WE+9znGBlVREBfW69+sa5Zb8pV5n
rdQ8WXUJ9bqyA002YdXU6xIzN2suiaDfw8a2ShrLZtDvYZN/DBLclade90ha
e/blSdTrDr0PWfFYnnqdp4SKtaor9bq4HJOtBz9Sr6t0l8yrk6rCvy83Hj5z
p0TcB+p1lkmqSld8qdf9mDdw24h11OtGLO8slPCiXndo/ji3a99e4evGjbfW
XWytj6Lfwz5SK0/pN4t6nda4hWuqauj3sPHiYt763anXVZhvU7fuS73u/IYl
Q/UT6few0t+dh7Zuol73dO3JkMoW6nVHfbtnXg2hXrdr/Ef/4aeo11n3L/0b
oUa9rovvSf8vFtTrAtOF4tOu0u9hnZc77dRXpV4363dAUX4P6nXVs9YF7RxD
va5UTf+l7wrqdZfLbtar5FCvs7uaNXXDMep1ts8XrG/sTr2uq+T7Y02DqNcp
zDA8onOWel25X2KPsFHU60Jt+g5Y+Y5+D6sXHBP/UZV6nefwG662PanX+Shc
zH9YQb+HjRg9f/yuqdTrGuucxlmvoV63rL/flz+7qNedd5JTLt5Cv4etfS9h
cXIl9bqR+8YNv+tNvc7mYsqnRQ30e9iRyq+7dbWiXvepX2laV03qdWvO1zYt
kKTfw4qNkHcdUkG/hx0hqyPQLaPfw57SlXmfrka9zqarZdciI+p1spK7vyrO
pV43TOJrft5r+j1snovOz+Xm1Ovuj9frFuxPve6Ne3nPK/X0e9gxi9xPS82j
Xqdg5/b0gSX9HlYrs/9Pn7rr+Ppw/z66W2HcjHz6PWxSnlPV9k/0e9iFG1K6
tDC+hz0nEWVa94x+D5v/UU1nVjfqdcr2e22uaFCvS5vb/ZD/Y/o97OqQiMyg
q/R7WHepFyM2DKRe1/ztoeqfhfR72NAbx0eWTaReF7vTV6nnBOp1erbyL+cu
o14XuWVImrUM9bqSmITUzMvU63ZvD9zyp4h+D9t1wRLZsa/o97D7dDqvM31G
v4et6b1x2YvZ9HtYI5PygzZJ1OsCxYPv7nKlXiddLmVoEUe9zthD17ifOv0e
1t+iqJN6NP0eNmaGtsLNIup1H4VX/7wbQb+H9Vg+36rIkX4PKy7nNjQ6jH4P
K2UaXdppAv0e9vq1Uf3+qNPvYWWuX7gWsYN+D7uxVn2Ycgn9HvZUgd9K63f0
e9i9RpH608fQ72FR7gJeh3IL8Dq0bgKvw+sR73Vo/gReh+Yr4HXoeQRe5waf
C+B1E+F9ArwO/Y7A6zbD3AW8Dq2bwOuC4PwJvA49j8Dr8H3Cex3Kz8DrUL4F
XsfMgdw4yifA69D6DrwOrVPA69D8D7wOzXvA69A8A7wuAD6PwOvQcwG8rgrm
duB1zHzb1ncH8wnwOrROAa9D8x7wOgn4PAKvOwHrF+B1NrCOAF4XBvM28LoZ
MG8Dr0N5G3gdypPA65i5q+14YK4AXofWZeB1eJ3S6BhH8z/wOjR/wv46NF/x
XleK6ine63AdwXsdzsm81zHzJDf+FOUKjY5xtE4Br0PzJ/A6c1iHAq9LgHUf
8Dpc7/BeJ/YF1DvA6x7Degd4Hcr/wOtwTua9DuVk4HUoJwOvQ3kSeB0zd7X1
xcF8AryuGK7vwOsmw3UTeB1aj4DXoXoZeB2q+4DXoToIeB3K/8DrqmFOBl7H
zJNtfX0wnwCvQ+sm8DrsErzX3YD1PvA6VLcCr0N1K/A6VLcCr0N1H/A6VO8A
r0P1DvA6VO8Ar0N1BPA6lLeB16G8DbwO5W3gdSjfAq/rxsqB3DjKXcDrTsPc
ArwOuQrwOlTvA6+rgfUy8DpHWPcBr2sdDuop4HWojgBetwbmduB1zHzLjaPc
BbwOuQTwOlSHAq9D9QvwOpyfea+b2nNM+UIf6nVHIjs75JdTr9uxNeaDkhn1
utGTMk8MPUW9rvuwn9OP1VGvW1f0VkKlknrd0hkGF8p+Ua/7c2uIecEi6nWl
h6MOpzO8LvTk48VjzlGvU3yheft5EvU671cbtJ//pPvXXQ+YmqOnQ72uRcG4
xlaVel12659NJ7ZTr5t0baNyYRX1uoM5Z6ODxajXyRpduabyjnpdoYmuRtkR
6nWnUyZMGr6eet3B5TERmtuo15mEx2dE1VOv+3y4ec/JS9TrHCfe+FxjRb3O
cYaJsU8F9TqhZG7qkGa6f12kx7vAUinqdbE7vaedj6Ze5+cYYe/oRL2ud6iB
hXkl9Tr52u3JhmHU6+zEf+1QDaBeN2ny3Astg6nX6ci6rXtjRb0u/rx0q3Ik
9TpZfck3q/tSr1skW3Mxuzv1OiW3V4nujP3rDqY/uFjtSL2uQqzU9+Mj6nUl
e922pTL2r1PN37RkiRz1us1LEouP6FKvm253xfn5eep1NXW+n64aUK+ze3Nr
nnUp9bq/1xo27uxPvc6/vlwqUIZ6XUHVxADNt9TrhOeSxqpNo16nKVX2M309
9brTh90Wtgip1zm7C62+u1OvG6uV1fPHKup1CfpjRqUeoF53wMQ1RraJel3D
j1yZZGvqdcpiGc8P6lCve+O11zhJjnpdRnL24l3vqNfl9utq8Owj9bpFVmFm
v3Wo1ymP9N7ZfQr1ukZ9d71VC6nXLdg6LL6xlHpdVbNSZIsl9TrB3bS83qeo
11W5L01R/UO97m/Iwa0rV1Gv21C4XL3LfOp1Z66kmkjVU69rCDT79iqPep1f
vuKLmjfU675HxV9zM6Zed9EgVn7lc+p1wT6e5xb3oV7XLXlEedJw6nXxk/b0
kblHvW6U07f+M45Tryva2av5pAr1uhsnTDbkLKBeV6bZ22WxMfW6sFNFr49N
pl6n0PLG4+h66nU6C+2nvO9Dva7Ye2VjTgr1ul13I7/eekO9Libq+em7SdTr
jO95/nGMpF73QbzvjbHDqNfFS2qFtWZSr/vSd9m7L4z+uv2bfwUZP6Zed2Z4
oYz/QOp1Y60j9XO9qddVRjUNqvhFve7BOsVFVnOo1x2/O//1+D3U64T2h75Z
3KZeN9V5WnOhDfW6/3kYFgQPp143cqPJU7uN1Ovc5HeFVGVRr0u4++a/RbnU
67wDnHevmEC9zsy25Y7ZZ+p1+Xl3GwOUqdd5dvEdpHiael2W7LNhMYup19U8
XVd/lOF197+Nc0grp143cdOqRQtHUa9T9rzeeK81F58XN656c9P85tPU65xP
S+wxCqde1+X0irgSL+p1g6K3NEjfp173t7bTxgGDqNcl6J5d4iugXvdulm6h
gzT1uvWSY1cdPEq9bsXiwX29PlKvE49dpHiJ4XVdn21atO4k9brupzOidBj7
1/ltCXNN3ke9Lqx0bOfJxtTrVhw4lduQS72u3ypd3y/Dqdd1enB9Sfpa6nUT
Y893dZ5PvS6kxl52bytj/zq/TZc/iVOv2yPT8461HPW6y8syhuxneN3QstT3
owyo12Vf8xyy7D/qdd9zvo8Iek+9LigtXX4Xw+scxnwP7l5JvU57ziTdLn7U
64wfND70W0+9zmyMe2EXTep1CvPzK26K5i5ufM6Hbb/HNFKvK98l/7q5mHpd
wGCxXDtZ6nUnw/ZetV9Ovc5y/rq++xleF/YsIqWXAfW65swrdb2+Uq/rdbb7
isE7qdeJ11oHRNpQr4t2Wv/x3UXqdUrmWtOuMbyuYXdhmKcc9boT2/MsRypR
r7u/xfxrmA31uhEqg+6cuUK97sky4fnBP6nXpYl7n8uMoV5XfPTlTsfZ1OuG
n88b6htLvW7Ff+/zvjP2r6vXnN5HspJ6nYaF5cteWtTrVo/t43bBjnpdWGx6
UGYw9ToJw6Ll44ZTr3ta4+YZdJN63arzOp3M+1Gvs9nuoX1+MfU6q7nRWdYM
r9Of5aW/leF1RvvUHLw0qNdZ7TD3e9KHet3e93lyH0ZQr5u5O/qFhRjtr8t5
NWva2TfU68yGeFuJJVGvW+ftXZ2VRr1OIfFUtKQS9bounZ6uLe9GvW76yY1P
jAZSrzO7+zz+aTr1uh5KZdIlKtTrrB5c7fz0M/W66GnNpw/Npl63/+Doo1Zb
qdc5/n60fMhA6nXpr3rY1q6nXmcR4PHBbCn1uh/FwSveNFCvqzn/+sWZe9Tr
vtXIfptzg3rdZP2Q99d3Uq8zHR/u2e0u9bozdVYxMZaM72HfxmeL7aZed/iC
e9ff06jX6eh+dbUMpV4X/XlroWIj9bo7l4XmbsXU6+5MubTL4zT1OslbWkq7
4qjXDSgSyvmMol43blGZ+AZVun/d2Vyn6FcnqNd5Lpv1+stn6nUj/Wdt6zIx
4vb/Af0XZEI=
      "], {{{
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
D1wHbgRvhM/SfuC70jnoDJ6FO8CtkD8Ft4NbFt03tILvYz87kTeFGyN/DG4D
t1AsTf2IctPDBes3R/4S3A1uCz8Et4SbwXvhFnBT+JUUHxTPvodHZ7bnA/DF
mW3sfXgQ3El1NTxAuQx+A+6v/cOvw33hdvCH8GC4s+wTHqh8B38HX5DZ/j+G
h8Bd4MOL9nH5YCg6bsjOjyw6VsiGD6I/KbOP/AiPyWznPxccDxWD9Rt0DrvU
ZPK/yZn9qFi078s3S/C5JLNPHVV0/JFvHp16TOVr5XPdYjR/Lgw+tx25a22d
2725c6xq+1W535/y5nW5c5R6hzW5fVQ56I3cNa/O8CW4YXTOU15TXaxzeDW3
7+rcXkk5RXltP1w/ui5R3VInuj5QvdE8uqZU3dg+uiZTrdg6uv6SzTeNro9V
xzaOzp0KovWiayDVNnWjayDVTnezXoXKEcG9suqu13LHOb3HF3P3CrKBF3LX
EbLndblrPdn/BrhnsI9shCcF2/ZDuXs1+dQjufO//OKW3H2z7Hl37v5b9v9A
7hghH7k1d88he34sdz6T3T6Zu2/Qu/537ngmO/kid6yVfT4Pjwz233tyx2bZ
wFe5e2vZ5Fu5c6ps6ePcfbZs7IPcvbX84l14QXTdoJnDRcE90ePIB0TXSap1
n051rPz3FfiSYH95MtXt8tk9cKvguLEbbhkcT/bDlwb7y7Bon9YZvAZPDfbB
0dH9s/rol6LPV373cqrz5Y9vwNODffBN+LJgX7s/On8rFu2EmwXHq8dTza+4
cWt0TaAedmHKTZozdIAbB/dHHVPfpNjbBm4QXP+3TT2LYu/SlPs0r3g21fyK
h4+kPkLx5+HUXyiuPgb3DY5RI6N7YNXG06PrO73zfdG2pRg4M7q3V49/dbTv
6h0+k3oKxdK/Rb97xfAJ0XMZzWdui65L1L/fBdcJ7s3vjK5pNAfYEF3Padax
Prqe0xzjbrhucF+/LOV9zVumpjNXX9wnulZWvXpzdI7RXOKm6JpSM5/N0TWZ
5g8bo3OPZh29o+t11fDbousqzRZapeeqt+0XXX+rhr8q5XrNjsZH26VmTfem
96I5xsToGZbmWjvSe1QOej46xilHDEnnr5p8XPSsQbOF66JzsGZ0N0bPhjQL
WpxqEs2prkk1hnqc5anGUI9zbXSdqv79+uhaVrOvNdGxRrO+rtE9snL9lGT/
mudcmeofzb7WRs8ENcebEz2n0LxiYHS9on68e3TPr157dfRMUHPCFtG5X732
tOQLmmO0TO9dM4H+0TWQ+qAG0XW5+sdm0TWQev8m0bW7Zg6romdemjEuSTWk
5m8ro2cimq2tiJ5laKYxN3rmornHDdEzMs3cGkXX+up35kfPEzWf7BtdV6mf
6pHig+YJl6Y4oNnOvOgZiuYq66JnfJrF9UyxRbOILsnHNeu4JMUizZEui+4X
NIOaET0rU+3dK7oOU8/4P++0ZGU=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmXccV9Mbx2/dk+Je8XWNFhoqs6yyIiqamhL5oZLQskKDtpYUEUUpDQ1F
lJQ9kz2yFZEVEcr6Rf0+79/n/HFe3/M5zx3nnvM8n+dznm+NHld27F82SZI3
yiRJ0G/jIkluTJPkAPVvzZJkmdrJ6reVsYtsDwufJNxG+Fzhy/S7XNc31di7
sp2qseuF9xO+RXix2vHqn6nrOsp2htpw2atq7A7ZypWSZP/E7+Td8+L7GRvO
u4R7C+uyZKzwOcJThY8QXip8jfCzwmcLfyE8XbiM3jVCuG6u+Qk/KHsj4Vdl
byE8VnicWkv1m6mNVv9mtTPV76u2kr6uX6frmwqPEj5Q+G7hBWrHqt9E7+gg
22y1q2Tfh2+Q7T61I9VvJHsr2U5XGyZ7FY1Nlu2UeL1+kvGZv+EE9VsGf9sA
tRdkb6exTbL1F14t3Fz4A+G/1HqrP0HXD5dtoNorsnfU2GbZUi3Uvon3gL0o
hGsLT0o9332Ea7G3wu2F/9A9l7O2et4w4YqyV2dusrcW3ku4Bu8TbiN8X9yP
vTU2WPeWZK+p/kTmLNtDGjtRuLWe11m4dvB+8/2jZMt0/UHqj+GbZL9cbYn6
p2nsddmXqDVUv4Xu6yTblWpPyt5KYx/JNl94aPTPEcKfCr8nfIHw18IV9Pxq
ifeMvftbY33wRXxCuHzJc2FO+GIufHBin8A3dhOunHjP2LvdS957fARfuVtt
p/rDNFZb/vWq8FNxfsz/eeFl3Cv8hPBU4R3CNwnX0vXvCL8m3Fn4U9nfUWur
fi/Nr7dsb6u9KnunuN+1So63hRq7RLYqwvWE7xU+T7hSyf42LXU8VhU+Rnim
8PnC1Ur21/uEuwofXPL6zhO+SLh6yf43X/hi4Zol798C4R7Cb2kObYQv0fyu
EH5X7XXepbGPM8+JuS1S66l+Hd1/SuKYI/aOKfl+YpRYrSt8auI9Z+/ZM/z8
huC9XKv2RPT3tRp/Qa2Z+l1l7867Y7zzTObGnJn7A2rd1F+v9oH6F8r+vexn
6b77U3MQXPQB38TaCX+emb+IN/aAvVjDPepfqPFLde1RJWNikFisJ9wysU/i
m/VL3nt84Crh99XeVP8NtXXqH1Hy/OEUuKV2yXy6WLiX8P7ChyfmNOIfH+J5
3YLX5z3h9sJXCPcRfjnyE89kbRro/g7qr9HYDbI9knn92wX7x8rCe48PwF0v
FubrJsLPwM0lP/9ljV0vWxfd96j6j6i9IHyCWg/1K8b4nZPZ/xrrurYxvnvK
vpfGbsYe+R8OGip8ruxzhOeyJ4U5BC65Bc5W/zlyivoPqT2r/h1qf6k/RPfX
ULycUDK3rdXYYNlOLDk2iJEhwk2EewpvgMOJxcgn+NhKvf/JyP+sCWvTTNf3
Un+jxsbCnZFf2eP/733JfLhJY+NlO6nkWCVmbxRuXjL/fss3CLcU7oevCd8q
fJrwRXBVar5pLNxd+BPhkcLHlexr+Bxcf7pwD7hAeJRwi5L56jvhicJPqy2N
/LhC8zuoZF/Gp/9TmLPX0U/M5WVKzkXkGHIN+YVc2Ur7sFr45Ny5kDVhbZgz
c++vsSJ3ziZ319f1iwrn+6OEzxZ+QviU3HNhjVnrRsKNE8+RuS7Sdb/jixo7
ULZFur+u+s00/jh7IXyYcHPhVcKPCx8n3En4GdZP95yRmEPh0sa5tQU+i++S
M8mdR+r6hexP7vvxcXy9k75/aGKOhqs7Cw9PrAnQBvg4vk7MfKdnDSJnqn+A
7DML+zC+XEf4AeGj9fxKiXMOuQcNghY5TPYFxHfu64mBGcJtZRwk/KfwFOF2
woMT+zS+jU/hW1doLNO9XWQfqX7Q8+6VrYPwjYlzBrkDH8AX+mqslNvn8D18
ZK/cPowvXyZcnrXIvd6TNbZEtmOF68T8/yB8LHxIzP+Lhb9S+1z9SzW2LbMP
4ouXCO8S/k34F+FrhSvo3n+Fd8X8Vzl3TK6N+erHzD6Or+PTO4S/Fv4yzu93
4Y3Cn8Xn/5o5RoiVixPn6nFah/cjf/8pHPSOVO0nXfez2jfkjLh+2Bn7Sfjq
xNfuEi4b9V9V4TIiogrCYyOf8A2s06+Fvy3IXpL91sR6sUHueIGPl8neMLf/
k18fhQ+F68f8uwI+Ej5aeIbwY8LH5/bvKXBaYU7aENeX76ifW7ugcdG6eW4/
mEbcCP9Ni/y3H9+u+VWU7ZaoN8oKZ8Ljo57Yoev/ifrigNycCDeeI/xTZs56
LebrrZnfsU34usTvJmeRu1oLfyb7MLXd1a+ud8yV7cjc/o7mQ/u9nTk+L5X9
DXJd5vjvIfyacLPcWpwcTa5Gk4MHyP5h4XfwrquF3yusWVhb1hiuaZrbzpzQ
VpwpiP/Ldf2bhTU52ryP8FuFORAubEBOxpb721kDtNRZub+dNUB7NSfmEmsY
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
/lO8PeoZ6vv/A/5zzSU=
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
Xt2FnhYcCxUrKjH+DbXiHlE=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmAnYV1MXxe9bnX+le8u/rqRUCplnIkLmIT5Ths/0kYgQEZkyhJDxSxNp
HhFSiXpLk0qTJmmgSWUqUaQZ69c6z/Oe573r7Hvv/9x99l577VOv+X1Xti6T
JMnskiQpp/8D0iTpr/FGniT/16isMUeGgbI9pPkWxSQZrOtFmivK1k0jC0my
UHPvy36k8FbZpiR+TyfhncJThbsJ9xDeW/cvEv5I+BW97xtdV9VcE9k6CX8t
XEX4DOE++r9ez4+Jz98se19dT9FcJdlf0SjRPTM097bsN8reS9elsleU7Unh
acK7hY8VvkLjSN2/QXOrdf9DwgtkGyTcSvgZ3f+lrhPdc6JsN2qcoesdmtom
++HCf+r+CcLvCDcv2jdzNVcl+qy87p8bfZkKT5etv/CDwhWE5wu/LXy3cBfh
vXT/fOEhwuWFZ8neQ/gu4af0/um6/ltzx8lW0Jiq626aayn7y7lt3NNDOAhP
EO4ifLvwLUX/9gzNZbIdovG7rsdp7q3UPtkdn39P+CXhbXH/ugjvL1xL40Vs
Gkfrekfcz8HCBwv/KjxWuLvwvsIrhD8Ufk74COG/hCcL9xZ+U+tZpes6+uYL
ZaursVb2EZp7RfaDhH8R/ky4q3CN3O/kXc+n3pMk7veHwo2EywnPFh4lfKDw
j3p+tHBn4W76ve91XU/3XCLbKRpldT1LcyPwv+yrdV1XcxfJdkBcE2t5NfW3
r9b7hif2wanCQfd+JTxa+DDhP2T/XLin8OXCh8n+i/BK4cf0/kmJfYAvXhVe
KpzrnrOEuwuvEa4vfKnwUxo/695PNfcU+SL7Ol0fKPt/ZHtD+DvhGsLnEjsa
k8o5J9ro/tdkX6brfWQ/W7ZHi14bMUvsPqKxTNfva+5+3f+48Brhj4UfZr3C
q4Q/Em4r/KjwcuEPhB8Qflb4N+FS4ReEO+v9K3RdS793vmxXahyj642aW5M6
pomTj4Jj/XmNzXp+vOwvk2/CG2J+PytcX/gH4VHCb6T2wZN8V7Bv6mmsk32k
7K9pfj/hlXG9HYmRoveWmCA2DtXYFH8Pfvif8Fmy/U1OwSfCTYR3Ce8Svj83
t/SN+TNa76sqbrxJ99wrWz/hP2VrKHyt8E0aZ+p6p+Z2pPZpH/Yu2NdwylvC
jwZzzQO5c7F/zF982k/XHYJ9fXfR38Ie1IT/hDcLnyD71cL/1Wik662a26xn
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
            "]], 
           Polygon3DBox[CompressedData["
1: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
rsv5XgD2P/z4J2A=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.560181, 0.691569, 0.194885], Lighting -> {{"Ambient", 
             RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
            "Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
fYqeZXzuXqL9wrzccfJ7c3KvIXnIvwCjULNF
            "]], 
           Polygon3DBox[CompressedData["
1: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
/dey/4tqRP9jfdVf/w9rw7AQ
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 6], 
          RGBColor[0.922526, 0.385626, 0.209179], Lighting -> {{"Ambient", 
             RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2306315, 0.0964065, 0.05229475], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJwtmHn8VVMXxu+9yr1S+1c/nV0apIgGKqFRg2ZCyVg0UmlOZShDeMsr4ZV5
9hojJdKIZkUaCQ0aFYmSiBKV7/N57h/3s79n3XXW2fucvdd+1q7ca0inwZlU
KrUqnUodR3tJTKVG51KpDoWp1Dza2vxZjPazJJXqSHsO9mXwFXBdeDrtGQpA
O4PfmXCadqF84RK0p/KbR/xB2VTqE/hc7CVp3+VXBT6M/X34dPgI/C7x63Jd
nvjvwefDFeG/4Rfg7vBKuDNcDz6BPs+CB8LTaKsS5yhxluNzNdfnYb8vpFI/
0odmcCP8b8TeFJ6Nz4Vwc34L4La0NbDfRPsn/ouJMw17A64rYT8t2lf3TMfe
mLYy9k/gi+GzFZO2Jn0oQvuRbHCW9rbo/wbh0x6+Gy5WkEpNpT0Nn795Vm/4
AM9dAD8Hn4T9B/g4/Cdy3Yd7S8Bz4aHw2zz3NDjChdgrw3sYawG8AB6GvRS8
GB4Bv0Z7MjH3EfN7/GplHKcRPD/te+XbDPsptI+qj/CmrOM1gcvn/PzGcFna
D/k1hBPat/idAh/AP8dzZ3I9gPiT6OcZcBn1We8Snz/wOYb9Va5vwH5idKzB
8BHsL8M94Qz2N+HecBp+A74Rfpq2gDg7iDNZ3wE+BD8OF4e3wv/XM+E98DvE
rM51We6dDJ+ldwG/SJvgsxufJ+AS8Db5a+7CB+ELeG5ffXf87+Yd/cC7ugD+
mDitNO/h6vhclJ8Dmgtb8HmDe8/E3iY/r/bgPwa+HN4Lj4U7wd2IuQb/mvDN
wffWh7/C54acn9WcOIPg1vKhPYrPCuLPxac119Wwfwi31JqEbyXOdnwawL3g
L+FaWteJ+1O90PN9E/ZXifMr9v9yfSX2HxPPz8vgLsH5QfFvhNfCteHN+PTH
pyW8Ce4Htyj0+9iIz8vEvBr/FXBV7FWj+6Z3tR//B+Cr4N/gcfDV8EH4Kfg6
+C/4WbgrfAh+Br4e/gm+F+4Iz4Fb5Bx/MO0/PGuZ8gn2epqL2JfCl+Tc50/h
S+E68BK4fc7v5GH6uZd7W8ErsF+D/Xz4fuw/pT2uEfB3cEO4AWPpiU+v/O83
7HN57nnYu3HdCJ+pxDkXrgB/Dl+p3AePIs5O/BvDq7B3yflbfwn3yNk+gjbF
3FtNzJbEHM51W+wL8WmX8zyZAV+gHAq3wGco3Ab+AHtDzV34WtrNPOt14szC
3kx5ttB92YV9KvaZ2JsqB2FflHgOnwU/HpyL2sGrsV+f81yaEDzeYVyvwd41
53fyAPaf054PXyfOsU3gfti/TvudK0/XZ1yFWgP8vsc+mT7UgGfD98DV4Fnw
nXBNeA58H3xl9JwpIGdeET1XA3wm7Ux8RuFzefT6KoH9GvhhuBTcE35eebLA
z12P/4v4XwZ/Az8Hd47Od4X4VKWdgf1W7Fdhf5DrkgWOl6P/G7Cfrj0AnxFw
LeV6+AF4ZPTeeTPj3cXY62Sch+drHcPlaEtH37+X/8tH378/eK98nzgDFT96
bv8RnNenYR+M/WzlXPh+uAr8ATwUrhz9HX9XHLiJ5iVcJfq7H4AbRueTFGMp
Fx3rV+zdotdagr1r9ForDY+nzdLndcS/Dz7Gs1bBO7jnrIxzdWv8R/Lf8fi3
gUfpngLPD82TefgPhH+BZ8ND9Ez4o6zz2T54jt4z/C38StZraAc8Ce4Eb4Bf
ynrNac5MyfqbHE8fvoGvj94PTuK5beE79J0KrGWO4L8cn2bR/SiCvWl07joO
7hCdT4rDd9L+jf9nWY/pILwEbhKd3zIFXmf7sX+M/cLo8RTF3iBY5+gbXoz9
LtoTsN+qb4h9Udbr+Hd4PtwYnz5cp/G5DL4HPhFeRNuUcVXUfI2e378Qeze/
uhnv48ptq4kzIescsxJ+JGuNUAOfDO3Q6D2sEjF7wy/BZeE6tMvxH6/3FhxH
e8Hrwd9X3/ktOJ3x3jSA68PYl2adV76An4Brw5/DD8K3613ivxYeFq3tTs3P
AcVciX1EtM6rjH1wzGuFAmtIacKCnPPubvynZZ2nlW/fyuvG5vhUou0R3Afl
KOVO5ZwZ+NwTnNOUc/pH64ryxB+U1w8V9X2D54/mUZ9ojXEy9oF5XVEB7ge/
ApfTt4vWtVXga4Pfs/bWW3J+P2uyzsHaE5/O+t1qDgzRd4nOjUe4r350bj8G
V4vO4QfhenB3+CjcgXYd9z7Pvedgv05zUd88Ovf+A5eNzpX74FHROnu4dAht
I/pThvaMaD3wp/au4Her91cjer87hK1m9J74l9ZxdB48DPeK1thlGO+KYK0o
zfiI5jK8kb5N0DyFNysnB88laWLt4YXYd2IfE/wdmxdaA9bDXirnnPQp9nH4
NIKXwGOyvl9xHsrrNz33F7g+vBj73dpb4YXw7Xo/OevVYVnrhfL471duCdYz
2rv1/rbCE7GvT7zWpP8vwmdR2tqgQnQs1RqHE+8R3Qqt96XHHufeU6L7If3f
nns/SXtvvRRemvb+qzpA+uop/E+KzsvS5JWix6kaoSg8Bb4JLgJPgvvCKfj1
nN9zW2IuSFszVIwes2qfP+jbY3Bn+E/4SbgLvDG4RtNa2xRcc2l9bYXPy3je
bsnPAa2zhsH7i3KU6irpukfp8+/EfEjrj5gH4P/B1xa6tlB/hisPc++ytHXC
z8HrUfNKtZo03sP4tMrnQK2DdYnrGdVZWxPrM2nXN4Lnj/LtlGANr318Klwy
4/19d+J8qDp0WnAdpP13V+K8ein2b4LrLOWQV4Lnp+qpn/H5T8557LXg+kV5
9Z/EObAH965NrNuUB94O1vzSDKoP9H1HM5YNiTW/5nBrfOZiLwcn0fpAtYxq
Gs2lkfjvw/9+rq/AXiZax6jW+DZxPanaYWJwbaL+rQ+uDZWfT47WOqpHVJdo
Xo0l5vbEWlDa77F8flZOvSG6btFYWgSvKe3jTwbXrRdjfyY4b18Ct4Q/S1tj
tMmvWX2j5sFrUPmkVfRedZF0Y/Sa1xyYxH+ZjOuCpsHrUfvRbTnbv1QODF6b
0jM3R9djmuedomscvZM3gzWtah+NX+9hC/e+FKzbVWto3kXsP2FvF70f61u/
GlzvSPNPDt5rVDt0jP7Oivcc9r/waV/o7xDw2a5aAHvRjOsLzfHS8C7VJtH6
RnN+UbBdZwtao6qLc7RfY6+Ycd09K//tlJ+0/srBvxLnuui6UeuxS3R+1DrV
ei2Lz1585nFvqYzrF611nZkcw740eLyqcz8Ozp+qd7pH1//KRX2j69heqiOC
Y6peHhJdSyuHzAker+qmVcF9U408PPp8oR/8Xs5a9MScc4/0W1HaOfwawKVp
P8hZYwTabcFaQucq2+HqGdfya4LzrerxAdF5S2OaklgTaI1sDh6jcs4t0ecy
/bHvSDxvNMeOJt5nNa6n8S+SsYbsHZy3tU8tDD4rkC5dHFyPS8PPDT5nkEbt
H6wVtX91DNYkqnE+gitkrAnHBmswaa2ZwWcC0vk9g+sj7cVLgs8QtPcNCK4R
VCs8EqwJpRvXav/OWEt8EXzeJc3QF96W9n7aNVjHav/9NPiMS7prOLwn7T39
lmA9rD19YF6T6Fkhuk5Q7XB5cG0iPa/zJvXnBebMvcEaUhq+ZLRelAbogP2r
tDX/6GDtrRz3RWKNoZpU53Y6u3iXOOPxOZS2Br4mP149Z2SwJpdu6RysvVWD
3BGs26VV7grWwNIzxaP1xxDiXxWsYVRrjAvWz9LMxaLnmc6+zo7WOjpLnJ3X
GFpTdaLrVZ3p3R59dqaYtaJrAJ036gxStfM79P+HxDpf+e27xJpMteqg4PMH
1do7E2tT5cOXg2s3afJtic9QVC/rjFBng+8T88Xgeke1w5bE2ldnAiuDzxWl
J3XuqDOB6TpDS1zvKOdMDz5HUr15fPR607p7NLgGUY2wLPisT5qzdnTNo/PJ
5cHnn9KczwbXNaqhstFrUmtndX5Naa39CzXdv9A=
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 6], 
          RGBColor[0.528488, 0.470624, 0.701351], Lighting -> {{"Ambient", 
             RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
            "Directional", 
             RGBColor[0.264244, 0.235312, 0.3506755], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             Hue[0.7, 1, 1], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.264244, 0.235312, 0.3506755], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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

            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmXf81tMbxp+eSs95xPn64POQLSt779kwyl4hZGWT+SOrUilNDZJUlNEe
WlQiRBoaVsiqUJpEZvld79d1/jiv77nOfZ7n+XzOue/7uu77u8d1LS+8s1go
FOZWKxRq6O+mUChcptFU46RKoVBP4zTNX9KmgbFQeC8vFA4Wfka4v/BVGi01
n6C16tp7qMY5mo/W2lDZ9hU+WXhw2j9dn68n3FO4t/ABsjcUfkX4BeGVGm00
31ZrJdmmaf8+mvfQWg/ZTtTapcIThCcJHyN8ofAFGkdrfojG2ZqPkn247Ks1
P0NjqPBg4dn6vpPS87wqPCf38w0RHiF8sj5/ufAk4SnCRwifJ3yuxuGaH6zR
RPMRsr8s+6nCVwpPEX5L+AThS4Qv1jhe82M1LtL8Ndlfk/1D/d4JwoPS5y/S
uJFn0dpm2U7R/is0n6y1abIdKXy+8Fjh0cINha8Tni78nvA+wiem73tWeH+N
izV/XGuP6vt2lv0wzQ/V2EnzrTTqaN5ee+7U3u7a002jkeanazyn+e+lQuFm
2S8VPk7jes2f1mc65l67T3hY8N7n9Lez/p6m9foal2n8T/aRWu+v9T30e0ex
V2vdZRuktc36fpzuSuHdZT9S9iM0dtN8P61dKFtr4Ue0dxetHa75s1rrzH1r
XKt5L611kL2XRk+Ns7TemPPSuJrfkv3xZFut37um6D1HaTTHl2RvJ9vR0bae
nInwscLXCfcRfkJ4Tua75Y6/Er5c9geERwk/j28Kny/8iPDDwq2FOwjPF871
7AcKXyrcQfix3OfZVPgZ4V9zn8FD+Ebw2TQTbiU8Vnig8Db6jt05Y609EO0z
+N66YF96SmNVye/Iu1Zp/67clfbcl87kdmIr+Kyi7Lvwblq7R7YGwtcIvyn8
LvEQHG/deacUP8dqDBAeIryt9tcV7ir8kPBpwlcJTxWeIVwRPki4t3Bb4a76
zRV6tpUl+9m50Xc/hBwivER/jyF2Nfas2Jd+1N4ri/apKzQe1HwMzyBbH421
sq/TeFrzflr/oeTP8Nm9K46vgZyxPjtEazWCfbaF8A4V56+nhZ9I8XeP5q9o
rV/uGLhVeEBwbNSt+P2fx+dk25Eck/Jfe+F3c79vH+F+nJ/G+5rHcqHwJTbh
JsIdtWeN8GCNoub3au162cZwJ/i68P3Ck3LfT8d0fhNyxys+hW9NFt4t+UM7
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtl3d8TlcYgK+V+D7jxsX9rFZpVVXV3pvaW2lVVa3S2nuLUCKR2HuLTRIR
EYSIGSEJElvtGVvsTZ/3994/nt/vfZ9zzr33u/ec95yvSLcBbftnNAwjDrLA
VsswrrgMY69tGPtgP3j7GMYn3Cni3aZhxMJbuIY7gFtAvBBc9MvgNowW+Agu
uh93DkaTJ2Q1jPq4YuRv4DIujrFziOdCdsa6GfsLPpp+CbjncJp8J/2mEAfA
O7iOO4hbRLwYXsN/uFjcDOKZcn2Yj7vBfTtwvWrkBvd4hkuiXyh5GHjh3uNS
cTvId8InSMfVgJWMXUfupl9mnq81LhJ3EJcN5437GReFi5fngH/JL3DfJriS
5Bnp9xJ3jHtEkG+BC+An75R+jehXgjwz/d7gTtAvinwbfIR7uIqwhH4h5Jdg
Cvl1xjbH/Uh+HsbJPXANcMXJ38NNXGlYgFtGfhH8ya/SrxmuFPlL+U64Xdw3
iDgYPsNTXCJuPfEGeQ55P7jVuL+Ie8IHuIMrB4u43gry1tAKpjOX1uI/0v8h
+V7iTcQDiAfCdoiGA5Z+gxoe5h95JOyz9F1Uwe0ij4GDls7DWrhqUBX2497h
qnt0Dspc3GbpHPkWt5Y4kbgYfAN5cNG4G8Q1IYRnXsqYdbhj5N9BcchLv3ic
wff9nTyGfvvoVwlfEfbS9hpfmbgclIU9uBe48sQxxI+Jm0BjKOXRdSPr5xBt
n3G1cduJbxPXkVzuL78X94S4qbwv7ruGMZshHOIsnUsV6LeT+AFxQ2gAP3j0
O8n3irV0rpfBrSc+TlwCZnI9X9o34lJlDMzG+eEmydyFUEvXXX7GFoQCEIY7
iytEXBi+hM24C7iviKcyLlCe0dK59AXuCLGL99eDvLs8I+4oLjuuF3lPaITb
gbtLXB/qwffyO3ApxCUlBxs3netPgwhL13sRj9arq8TVoKp8Y9waXAJxUekD
Fm417hBxYQjk946U+gDzIMrSWlaMfiuJ98vvhIKQEzeUPkNgFW0HcT642eSz
ZC1bWsu+xg0mHwQhuAM4E5dA7MXv7UreRX4jbpO8f5kLlq6x0jh/8smwCXcK
lw/nDV6wyNJ1l5W4Hn3qyrfCLcG9Yj3NJg6XdhjOb+tAexf4U+oybdvxWRg7
hziC2A0uyICbi9tCnA1GMrYjY7pBV1lLtEXjM9NvFnEYsTd4geHR9S91YDFt
MXJNXFPyJjAVF4J7JzWZeJ3cDwZxj3ZSo3Eb5dqQCT7TLxC3kvg9tekdvMW1
pG8L+e60raHtA86feBnxG/q8FnAN6dNA6iJty6UNF0y8mvgTfT7Ce1x/+vSD
5ZbWoxw88zzirRJDdsiIG4mbTHyFcZfhAWPH4Wbg7pN35ndU4DqjcAG4m7jf
cGVwvrhZuIcyDtIZOwYXjEsj70S/crIv4oJwd3C34TH9luHiZO3JHJDn4VnG
4qYT36PPXXhCv/m4KJmfMJrrdeJ643GzyR/RpwuuEq4W1ISJtC2g7Tlja5BX
l7WOW4h7gRtGPJY4mbFJ8jw4P9xc3BN5NniKG44bjztJngppuN5c6x9YQlus
zCWeeQLxPOJ0+nTjWarQPgI3EXcedw7uMfYwLhProzP+D6jL2EScietNHs/Y
ZMYm4XxwfXCHcUm4ZFwut46T8Ze4XgrO49Z6I3XnGu44Lo9b15+swyu4k7gC
bq1BUotu4G6Zul8tJG5D3Fb2NtlPZL7DQO7bmfy21Fh5l/yGXrj2ss+aOj8X
2Lr3yR4oe9NbpzZLjU6xdY947tR6qfnJtq7LzS6d8zL3l9m6fzxyaprUtiO2
7jmvnBoptfK48/4y8jtakreCs7bW2Gy4X8k7wAVba3FWXDvy9vINbK1NWXBt
yNvCOVvXeahL15WsryXOOlqFm0s8T+YeXDO1/gQR1yf+Sc4LcBL3JQTwXiaS
3ze1NqyhXy/iv+GZqTVuh637jew7j0ytmZttrbVSc2Ut7MGtx22AjbbW5324
UOIwCIcHps67dcR9iPuaWiOW4oJx02A6PDa1fkfIfCceDulwBJcHJvDMY8iv
m1pDZtCvEXFjuGFqPZuDa0bcHJ5APC4XjGfsKFNr2ArymfIupTZDmql1NMTW
miy1+a6pdXkVrjtxD7hq6noMxNUmruPUyQ2yRvkWL2Gxsy7nuLQuSX3yt3Vt
TcCdIT8L43BZfPRsJPMu2jlvvTJ1z95t614qe6qcv+UcHumc/WUPfWHqfh9j
674u+3sGHz3fyJwNd84kco6T89wK57vIfpnJR89GMj/lLLfV+SbybZY631Tq
Wg765WT+dSTfyftLpP0E7TZuEC4RlyJzBVcIN0KuiTtt6votiBuOGwbNPbrO
8+IGkg+AprhUXH7cUHluxp506oaF64frC03odwyXG9df1hr9jptaS/LhhuAG
QzOPznOZ75Od+SV7j8wPmScBzreXfUvmh8yTIGftyN4j9X6qS+ur1Fk/W2v7
NJfWUqmpE23djyJdumfJ3rXC1j1lpkvrptTPSU4t9sWdIE+BsbbuW5NwF8kv
ga9T28fgjpInwhhbz27nXXomLubMBznjnXHpmamo8+3ljHmfuBJUhgRbz1eH
iS3IDZG2nrOPEucFG7baeqZOdvYx2c+ibD3XnXDp2UrOWNG2nm92uPQcIOcB
+X9xxdT9KsDWvUr2LDknpuHKQwXZB2w9P98iLgNlZb/AZfXR8/VpqbeMi4P/
AWYxQxE=
            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 6], 
          RGBColor[0.772079, 0.431554, 0.102387], Lighting -> {{"Ambient", 
             RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
            "Directional", 
             RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             GrayLevel[0.3], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
v6gGHBpd76hO/BtFv+fX
            "]], 
           Polygon3DBox[CompressedData["
1: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
l8FpaOus6NxAjrhTuGrRXAvnoqWLRXMjHIn2RsNw9tsSa7ddZd87b02MNk6K
5jI4De7bW785LfL5q/Bn0b5CjUGtMVCjXeIYJ66JaWLj78Sx3l/j+MQ1DnHE
NyG37pb6W52eWt+R08mr5BBye7vUuQWfZr91Uvv6b3BNYs2OdoeD4LpqqbkJ
n+Y8D0jt62VF5y5yGLVeD42jEuv3AzJzItzYS/c/U7IPcv77pfZNfBBfPDF1
LQjHcz7VU7+vZ8n1wDq9r0HEH77eN3UuJseQa7qnrrUu4zcSxzix3kejVWLN
i/atVPR+yNnUgg0zv5d9U7/uUzRXwBnUTtWL5k44FC21d9G5jJzGeqsJN8m7
pqO24x3Uwmh83p0rmmvQpGjTfwrOndTI1MrLhNeU+cw4u681ugYfNdXziwvW
+mj+M+CyzHVcvtz8vKhgrYnmP132mkXHLjEMV8IpxObZqbnmS811Cv49mHxS
tL+gydDWcCjrq5SaW+Fg1p+m5mZimNp+19SxvXPRXIdGonaGM+HqstRcWqfo
7wvnUFuSA+CG/xLnhtpF+yM5hdxSt+jcRo7je+6rNX+h6+5510NwGr2InVJz
HZwB9w5KzSX7aHzKWeVdb9QqhtZLnBvgeLTyzqm5f2nBtRM1XHfyUGp9SQ1O
nQsn8vzxqbXUI5nzTlru/I2mp3Ybk1rrw1Fw1cjU/IRmgh8apPa3acJ9hEcL
v15yDUAtMDNxbUqN1kb2s1LXbu8L90Lb0QcpmTPhznOEny95zax9ddQ/72r0
kH247C+X7DP4zkrZa2fOKeSWEalru84l1zuLo95G08A/9VNrHWpazmdx4lr5
/zW68LzEtTs+h+/BwXBxDTSWrlfC6SX/Jr2BdeG/cDrcfgLfPPOa0T4b4/yp
uenVrE1ci8OJ3DsgNVdS8xIPCxP3BngHeR6e492sYZPsv0Q8sCe4aFnivdJf
oP5forl9M9dU9CZWJK61WDP9hGVl3gs1HLXy6sS1HZqO+D8itdb7I3PtRw7D
//A5fG9I6tqX+CNf9Rd+ruQag3xSL3W80ENYqPcvTdxb4LzpRSxJ3Fvge1F7
n59aG6Bh4KeWaeQf/e2buEeH7kLDE4+l1Nr+LI02ic/k0Mw5HX5olVobownh
t2NSa2dyHLkOzYJ2GQcnJ9b8aH9ikN7Eealjk+9Bb2ZR4t4E/kEvZ37iXgTx
QG4blTqX06OhdzMnce+GHl03+Cd17+5t4TPR1sIvlRxjaGVigtjj9+GCYal7
JdvifNBAaKHt8Xvog/L4PWrn2Yl7R79n7kVQo1Cr9NbccYl9tnH4I7G0KfTV
1Lh/aGpu2Rr7R/Oj/V8QPla4p+zFcveIqPX6pO4dTY/8vCniY0HB66kX8TGv
4F5DzfDPFZlrV/ILtRM9q4bCbVL3st7WaBD+WZDtl8xaGL5Huy3P3JulJqI2
WolmyrsmpjZelbkXSH5DG9+UubdxnN7/t/AnoacaxfeD79FuieyzhH/M3Hsh
X1C/3ZC5ljpa9j+FV2fRa0hce7wFp0e8ZZnXPFvXcxPvZUbmWhj9QC28KfiP
mona6VvNdQv9eDjcE+dBjUattjTWTw1HLTcvc6+A/E5t/q7GIcFPVeGCzLUU
+YVaak3mXif5CW28Lr4nNRe116Q43y6pOX9z8BGaF+07MfbbMXXPcUKc7ymp
c/Rt8T3apu61bQj/oEdDr2a+cHnePQ56HR9n/rb1Ij44s5nCsxKf5XGZtUUF
+oYl11Dk8orCM4R/yKzV0ez05r5Hg+Tdk6M3911m7Y6G/y7yIVpjFz0/U7hj
Zp0/r+T+DT7xYOI94itoDmpDzggtAr+TW9Zr7mPd+028j5qK3t634T/UAPS6
asT+Vgl/VHIPg14G3/SSzN9oruwLEn+73yK/UzNRO3EPfW7yNM/ic/cnPnN8
8XNiosw92mmxB3pRVfLe26ex3qbBV59FvLcIvt1LeL7wT8Lvl5wj8N3lwh8K
Tw9cK/L1oUXnY2oa8v82jbsSf/PxuvegovUvfAFf1Rc+Ke//UcB3DYrWr/AR
+aJx0foWPiM/z83ce0df0YuiJ0RvqEnqHuSczP8boGdF7wqN8H7inIN2+Ldg
vYYmRhv/WbB+omdI73BHwXqNGptewF8F6yM4H+6Hg99KvAe4eU3B+ZmeP73/
1QVzGxxHLUKOo7+B5iT3bSy4d9s+9N76gnsV9DzofWwuuF7CX9BjqwrOt+Qs
ctf2gvUi/kwtiuahPqR+RgttKbjew7/Qo2ied5I4w8wx0itxTBA7PxesB6gp
qC2IGfIn/Q9iaWbkO86A2IDzODvOEC6E499MnBPgfnye+mxz6Ct8ulXkE3x9
a8H1GvFGPYbm+zCxz6AFVxR8L89QqywvWI+Qk8hN1Ez0Y+jnUkttk71C3jU2
tfaGgvUT/QB6MWsLXgtronZckLm3Rr1JL40eLLFQM3VvdmH4E/UwvbVFmf93
RD1L7++nzP046l16jYPD3/ZP3YvtEHyTpeaM2Zn/F0dPmN7wyPj9xqn/pzcz
fp8eKL3QxZE/6FnSu6Q+oFeUS81fA+N9tVP3iodGPByYundLjDZPHNPELjFK
/bou9N3/AMIzyas=
            "]], 
           Polygon3DBox[CompressedData["
1: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
DvY/EgYFkw==
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwt0UsrRHEcx+Gf29wHgwUbUWys2LNnK/aGKBkmSkay0bgzLu+BrBXvgawV
74GsFXlOqfM5z3d1zr9zBuer02tNEbGscktEsmv5iCLr7OMVrzVs33GMD3zU
hP3CKb7xXbP2F8v84a9W7Z5CxDYHuM9Ua8QB0zxkhlkd2TkeM8+CTuwiT9nO
Dp3ZnTxniV1q2N28SN7HS454X539rLGLJVXsb2eb4yc/NGO/cpLPfNK4fc9R
3vJGQ3aDvdyjx8Wu72fGDnPJd+SWsvYmM9zgutJ2lSlWuKK25D/QsWOJi3LF
glvz///5Ay2WKnY=
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwt0Vsrw2EAx/FHUZa5M+fjW/IGsDltzK4V78HMmRV33FtKwrSVnKIky60V
d9xbfP7l4tvn1//mefo/I8nc6EJTCCGt0+YQ8kzFQygyxyMucVklu8Ay93mg
e/uENVZYVd1+4zc/+KmG/cuYw9raQ0hwrCWETo6zixNMqttOsYeTnFKvPc0+
znBW/XaaA8xwToP2PIeY5TATzutgjK1suMdPlDvV+cUaX/Vul6PNEo91Zxd5
yTxXou/2Ig+Z5R5f/L9dPnOHT3zUtv3ALd7yRpv2NTdYZUXr9hXXeMFzFewz
rv6/zx8q6D/Q
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0b8rhHEAx/HvLTYWiRL1cBzHZWVnFSaJRYpbWJhIbAo7E8lvx93o9687
ZsX/QGaZvb4ZPr3eTz31fb49yeTcyGwqhJC32qoQEg+D1SHkOMY+TnPGBvQy
h7nODZvQe8yzyJIt6Feu8p0ftqm/uc1fHvDSeYe84hGveWPH+pYnvOO9neoH
nvGRT1bQzzxnmRW70C8sxm9gKV6uJoR9/jh3i1/8jN+v37jCCss2rwvxvtzl
jo3rNQ5xiYvWr6fYy1F2s8d5Xcwxyyw743SGHUyz1TI6YTub2WRtupFpNrA+
vqvr2JL6/z9/K282SQ==
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0UsrRGEAx+F3RKxkXAczZMfeZca9ZK3GN7CgKQ2imRIlUxJZK74DuV/G
ZcsWs2bW2LPzlMWv53825+28p2tmIZ2NhBAymq8O4cRDqjaEe07ymWlOq2Rn
WGaOeX3be/zlAQ9VVeE9jPKBj0rYJfawzD5Ga0LoZz0H2MBGJe0mptjMFg3a
MQ6xlW0atts5wjgTGrU7OMZOjvPTeb18Zzdf+aK4XWQdj3mkSnufP75nlzv6
spf5wTnO6s2e4hMneMdt91fkFm9Z4KZu7A1ec51rurJXeck8c7qwV3jOJS7q
zM7yNPL/f/4AHnE0ug==
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0Tsvg2EcxuFHJyafQWIWs4TE+TxoDCxNNAxOPaBlYJEQdgZiYJEQdgZi
UNVqtYmQCIn4Jq43hl+ue3v+ed+WZDqeagghzKvQGEJ3LITW5hDG2c5pdrJL
c/Yks5xhUlv2Bve5w10d2ic84wUvdW0/8JYVFrjQFMITF1nkEpf1bKdYYpoZ
le0sX7jCVVXsNVaZY16v9jpr0V2s88N7jyzzhve805V9zlMe80gH9jb3mGdO
m3aCGcY5oVm7g1Ns4xh/fb9R/nCE3/zSsP3JoegWvmvQfuMA66yp366yL7qV
JfXaRfbE/v/PH77cPx8=
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0UkrxHEcx/HfjJuIo0kJYzRTskVpMrma4iL7Ojg52J6DyVnxHMhZzrLv
xr7euXP3ksO71+fy61v/f83MYt9CJIQwp6riEArREMrKQ/hgJb+YZEo/dhcj
RSH0sFel9ixjXOKyEvYqW7jODWXsbWa5ywHuuzfIAw7xkEcato85whOeatQ+
4xjPeaFx+5ITvOK1Ju0bTrHAHPfc6+cOu7nFTXXaa2xmniuqs+dZwWnmVGJn
GZj5e6dv3yLBT8b4zrR7b+zgK9vZphe7lc9sYqOe7AY+MsWkHux63jPOWt3Z
1byN/v+fX3JONZg=
          "]]}, {
         GrayLevel[0.2], 
         Line3DBox[{2936, 1045, 2935, 5020, 3115, 2937, 5021, 4345, 4915, 
          2938, 5022, 3116, 2939, 5023, 4346, 4916, 2940, 5024, 3117, 2941, 
          5025, 4347, 4917, 2942, 5026, 3118, 2943, 5027, 4348, 4918, 2944, 
          5028, 3119, 2945, 5029, 3120, 2946}], 
         Line3DBox[{2948, 4349, 4919, 2947, 1061, 2949, 5030, 4350, 4920, 
          2950, 4351, 4921, 2951, 5031, 4352, 4922, 2952, 4353, 4923, 2953, 
          5032, 4354, 4924, 2954, 4355, 4925, 2955, 5033, 4356, 4926, 2956, 
          4357, 4927, 2957, 5034, 3121, 2958}], 
         Line3DBox[{2962, 5035, 3122, 2960, 5036, 3123, 2964, 5037, 1078, 
          2966, 5038, 3124, 2968, 5039, 4362, 4934, 2970, 5040, 3125, 2972, 
          5041, 4365, 4938, 2974, 5042, 3126, 2976, 5043, 4368, 4942, 2978, 
          5044, 3127, 2980, 5045, 3128, 2982}], 
         Line3DBox[{2981, 4944, 4370, 2979, 4943, 4369, 2977, 4941, 4940, 
          4367, 2975, 4939, 4366, 2973, 4937, 4936, 4364, 2971, 4935, 4363, 
          2969, 4933, 4932, 4361, 2967, 4931, 4360, 2965, 4930, 1077, 2963, 
          4929, 4359, 2959, 4928, 4358, 2961}], 
         Line3DBox[{2984, 4371, 4945, 2983, 5046, 3129, 2985, 5047, 4372, 
          4946, 2986, 1094, 2987, 5048, 4373, 4947, 2988, 4374, 4948, 2989, 
          5049, 4375, 4949, 2990, 4376, 4950, 2991, 5050, 4377, 4951, 2992, 
          4378, 4952, 2993, 5051, 3130, 2994}], 
         Line3DBox[{2998, 5052, 3131, 2996, 5053, 3132, 3000, 5055, 5056, 
          3133, 3002, 5057, 3134, 3004, 5058, 1111, 3006, 5059, 3135, 3008, 
          5060, 4385, 4961, 3010, 5061, 3136, 3012, 5062, 4388, 4965, 3014, 
          5063, 3137, 3016, 5064, 3138, 3018}], 
         Line3DBox[{3017, 4967, 4390, 3015, 4966, 4389, 3013, 4964, 4963, 
          4387, 3011, 4962, 4386, 3009, 4960, 4959, 4384, 3007, 4958, 4383, 
          3005, 4957, 1110, 3003, 4956, 4382, 3001, 4955, 4381, 5054, 2999, 
          4954, 4380, 2995, 4953, 4379, 2997}], 
         Line3DBox[{3020, 4391, 4968, 3019, 5065, 3139, 3021, 5066, 4392, 
          4969, 3022, 5067, 3140, 3023, 5068, 4393, 4970, 3024, 1127, 3025, 
          5069, 4394, 4971, 3026, 4395, 4972, 3027, 5070, 4396, 4973, 3028, 
          4397, 4974, 3029, 5071, 3141, 3030}], 
         Line3DBox[{3034, 5072, 3142, 3032, 5073, 3143, 3036, 5075, 5076, 
          3144, 3038, 5077, 3145, 3040, 5079, 5080, 3146, 3042, 5081, 3147, 
          3044, 5082, 1144, 3046, 5083, 3148, 3048, 5084, 4406, 4985, 3050, 
          5085, 3149, 3052, 5086, 3150, 3054}], 
         Line3DBox[{3053, 4987, 4408, 3051, 4986, 4407, 3049, 4984, 4983, 
          4405, 3047, 4982, 4404, 3045, 4981, 1143, 3043, 4980, 4403, 3041, 
          4979, 4402, 5078, 3039, 4978, 4401, 3037, 4977, 4400, 5074, 3035, 
          4976, 4399, 3031, 4975, 4398, 3033}], 
         Line3DBox[{3056, 4409, 4988, 3055, 5087, 3151, 3057, 5088, 4410, 
          4989, 3058, 5089, 3152, 3059, 5090, 4411, 4990, 3060, 5091, 3153, 
          3061, 5092, 4412, 4991, 3062, 1160, 3063, 5093, 4413, 4992, 3064, 
          4414, 4993, 3065, 5094, 3154, 3066}], 
         Line3DBox[{3070, 5095, 3155, 3068, 5096, 3156, 3072, 5098, 5099, 
          3157, 3074, 5100, 3158, 3076, 5102, 5103, 3159, 3078, 5104, 3160, 
          3080, 5106, 5107, 3161, 3082, 5108, 3162, 3084, 5109, 1177, 3086, 
          5110, 3163, 3088, 5111, 3164, 3090}], 
         Line3DBox[{3089, 5004, 4424, 3087, 5003, 4423, 3085, 5002, 1176, 
          3083, 5001, 4422, 3081, 5000, 4421, 5105, 3079, 4999, 4420, 3077, 
          4998, 4419, 5101, 3075, 4997, 4418, 3073, 4996, 4417, 5097, 3071, 
          4995, 4416, 3067, 4994, 4415, 3069}], 
         Line3DBox[{3092, 4425, 5005, 3091, 5112, 3165, 3093, 5113, 4426, 
          5006, 3094, 5114, 3166, 3095, 5115, 4427, 5007, 3096, 5116, 3167, 
          3097, 5117, 4428, 5008, 3098, 5118, 3168, 3099, 5119, 4429, 5009, 
          3100, 1193, 3101, 5120, 3169, 3102}], 
         Line3DBox[{3104, 4430, 5010, 3103, 4431, 5011, 3105, 5121, 4432, 
          5012, 3106, 4433, 5013, 3107, 5122, 4434, 5014, 3108, 4435, 5015, 
          3109, 5123, 4436, 5016, 3110, 4437, 5017, 3111, 5124, 4438, 5018, 
          3112, 4439, 5019, 3113, 1209, 3114}], 
         Line3DBox[{3171, 1390, 3170, 5230, 3350, 3172, 5231, 4440, 5125, 
          3173, 5232, 3351, 3174, 5233, 4441, 5126, 3175, 5234, 3352, 3176, 
          5235, 4442, 5127, 3177, 5236, 3353, 3178, 5237, 4443, 5128, 3179, 
          5238, 3354, 3180, 5239, 3355, 3181}], 
         Line3DBox[{3183, 4444, 5129, 3182, 1406, 3184, 5240, 4445, 5130, 
          3185, 4446, 5131, 3186, 5241, 4447, 5132, 3187, 4448, 5133, 3188, 
          5242, 4449, 5134, 3189, 4450, 5135, 3190, 5243, 4451, 5136, 3191, 
          4452, 5137, 3192, 5244, 3356, 3193}], 
         Line3DBox[{3197, 5245, 3357, 3195, 5246, 3358, 3199, 5247, 1423, 
          3201, 5248, 3359, 3203, 5249, 4457, 5144, 3205, 5250, 3360, 3207, 
          5251, 4460, 5148, 3209, 5252, 3361, 3211, 5253, 4463, 5152, 3213, 
          5254, 3362, 3215, 5255, 3363, 3217}], 
         Line3DBox[{3216, 5154, 4465, 3214, 5153, 4464, 3212, 5151, 5150, 
          4462, 3210, 5149, 4461, 3208, 5147, 5146, 4459, 3206, 5145, 4458, 
          3204, 5143, 5142, 4456, 3202, 5141, 4455, 3200, 5140, 1422, 3198, 
          5139, 4454, 3194, 5138, 4453, 3196}], 
         Line3DBox[{3219, 4466, 5155, 3218, 5256, 3364, 3220, 5257, 4467, 
          5156, 3221, 1439, 3222, 5258, 4468, 5157, 3223, 4469, 5158, 3224, 
          5259, 4470, 5159, 3225, 4471, 5160, 3226, 5260, 4472, 5161, 3227, 
          4473, 5162, 3228, 5261, 3365, 3229}], 
         Line3DBox[{3233, 5262, 3366, 3231, 5263, 3367, 3235, 5265, 5266, 
          3368, 3237, 5267, 3369, 3239, 5268, 1456, 3241, 5269, 3370, 3243, 
          5270, 4480, 5171, 3245, 5271, 3371, 3247, 5272, 4483, 5175, 3249, 
          5273, 3372, 3251, 5274, 3373, 3253}], 
         Line3DBox[{3252, 5177, 4485, 3250, 5176, 4484, 3248, 5174, 5173, 
          4482, 3246, 5172, 4481, 3244, 5170, 5169, 4479, 3242, 5168, 4478, 
          3240, 5167, 1455, 3238, 5166, 4477, 3236, 5165, 4476, 5264, 3234, 
          5164, 4475, 3230, 5163, 4474, 3232}], 
         Line3DBox[{3255, 4486, 5178, 3254, 5275, 3374, 3256, 5276, 4487, 
          5179, 3257, 5277, 3375, 3258, 5278, 4488, 5180, 3259, 1472, 3260, 
          5279, 4489, 5181, 3261, 4490, 5182, 3262, 5280, 4491, 5183, 3263, 
          4492, 5184, 3264, 5281, 3376, 3265}], 
         Line3DBox[{3269, 5282, 3377, 3267, 5283, 3378, 3271, 5285, 5286, 
          3379, 3273, 5287, 3380, 3275, 5289, 5290, 3381, 3277, 5291, 3382, 
          3279, 5292, 1489, 3281, 5293, 3383, 3283, 5294, 4501, 5195, 3285, 
          5295, 3384, 3287, 5296, 3385, 3289}], 
         Line3DBox[{3288, 5197, 4503, 3286, 5196, 4502, 3284, 5194, 5193, 
          4500, 3282, 5192, 4499, 3280, 5191, 1488, 3278, 5190, 4498, 3276, 
          5189, 4497, 5288, 3274, 5188, 4496, 3272, 5187, 4495, 5284, 3270, 
          5186, 4494, 3266, 5185, 4493, 3268}], 
         Line3DBox[{3291, 4504, 5198, 3290, 5297, 3386, 3292, 5298, 4505, 
          5199, 3293, 5299, 3387, 3294, 5300, 4506, 5200, 3295, 5301, 3388, 
          3296, 5302, 4507, 5201, 3297, 1505, 3298, 5303, 4508, 5202, 3299, 
          4509, 5203, 3300, 5304, 3389, 3301}], 
         Line3DBox[{3305, 5305, 3390, 3303, 5306, 3391, 3307, 5308, 5309, 
          3392, 3309, 5310, 3393, 3311, 5312, 5313, 3394, 3313, 5314, 3395, 
          3315, 5316, 5317, 3396, 3317, 5318, 3397, 3319, 5319, 1522, 3321, 
          5320, 3398, 3323, 5321, 3399, 3325}], 
         Line3DBox[{3324, 5214, 4519, 3322, 5213, 4518, 3320, 5212, 1521, 
          3318, 5211, 4517, 3316, 5210, 4516, 5315, 3314, 5209, 4515, 3312, 
          5208, 4514, 5311, 3310, 5207, 4513, 3308, 5206, 4512, 5307, 3306, 
          5205, 4511, 3302, 5204, 4510, 3304}], 
         Line3DBox[{3327, 4520, 5215, 3326, 5322, 3400, 3328, 5323, 4521, 
          5216, 3329, 5324, 3401, 3330, 5325, 4522, 5217, 3331, 5326, 3402, 
          3332, 5327, 4523, 5218, 3333, 5328, 3403, 3334, 5329, 4524, 5219, 
          3335, 1538, 3336, 5330, 3404, 3337}], 
         Line3DBox[{3339, 4525, 5220, 3338, 4526, 5221, 3340, 5331, 4527, 
          5222, 3341, 4528, 5223, 3342, 5332, 4529, 5224, 3343, 4530, 5225, 
          3344, 5333, 4531, 5226, 3345, 4532, 5227, 3346, 5334, 4533, 5228, 
          3347, 4534, 5229, 3348, 1554, 3349}], 
         Line3DBox[{3406, 1735, 3405, 5440, 3585, 3407, 5441, 4535, 5335, 
          3408, 5442, 3586, 3409, 5443, 4536, 5336, 3410, 5444, 3587, 3411, 
          5445, 4537, 5337, 3412, 5446, 3588, 3413, 5447, 4538, 5338, 3414, 
          5448, 3589, 3415, 5449, 3590, 3416}], 
         Line3DBox[{3418, 4539, 5339, 3417, 1751, 3419, 5450, 4540, 5340, 
          3420, 4541, 5341, 3421, 5451, 4542, 5342, 3422, 4543, 5343, 3423, 
          5452, 4544, 5344, 3424, 4545, 5345, 3425, 5453, 4546, 5346, 3426, 
          4547, 5347, 3427, 5454, 3591, 3428}], 
         Line3DBox[{3432, 5455, 3592, 3430, 5456, 3593, 3434, 5457, 1768, 
          3436, 5458, 3594, 3438, 5459, 4552, 5354, 3440, 5460, 3595, 3442, 
          5461, 4555, 5358, 3444, 5462, 3596, 3446, 5463, 4558, 5362, 3448, 
          5464, 3597, 3450, 5465, 3598, 3452}], 
         Line3DBox[{3451, 5364, 4560, 3449, 5363, 4559, 3447, 5361, 5360, 
          4557, 3445, 5359, 4556, 3443, 5357, 5356, 4554, 3441, 5355, 4553, 
          3439, 5353, 5352, 4551, 3437, 5351, 4550, 3435, 5350, 1767, 3433, 
          5349, 4549, 3429, 5348, 4548, 3431}], 
         Line3DBox[{3454, 4561, 5365, 3453, 5466, 3599, 3455, 5467, 4562, 
          5366, 3456, 1784, 3457, 5468, 4563, 5367, 3458, 4564, 5368, 3459, 
          5469, 4565, 5369, 3460, 4566, 5370, 3461, 5470, 4567, 5371, 3462, 
          4568, 5372, 3463, 5471, 3600, 3464}], 
         Line3DBox[{3468, 5472, 3601, 3466, 5473, 3602, 3470, 5475, 5476, 
          3603, 3472, 5477, 3604, 3474, 5478, 1801, 3476, 5479, 3605, 3478, 
          5480, 4575, 5381, 3480, 5481, 3606, 3482, 5482, 4578, 5385, 3484, 
          5483, 3607, 3486, 5484, 3608, 3488}], 
         Line3DBox[{3487, 5387, 4580, 3485, 5386, 4579, 3483, 5384, 5383, 
          4577, 3481, 5382, 4576, 3479, 5380, 5379, 4574, 3477, 5378, 4573, 
          3475, 5377, 1800, 3473, 5376, 4572, 3471, 5375, 4571, 5474, 3469, 
          5374, 4570, 3465, 5373, 4569, 3467}], 
         Line3DBox[{3490, 4581, 5388, 3489, 5485, 3609, 3491, 5486, 4582, 
          5389, 3492, 5487, 3610, 3493, 5488, 4583, 5390, 3494, 1817, 3495, 
          5489, 4584, 5391, 3496, 4585, 5392, 3497, 5490, 4586, 5393, 3498, 
          4587, 5394, 3499, 5491, 3611, 3500}], 
         Line3DBox[{3504, 5492, 3612, 3502, 5493, 3613, 3506, 5495, 5496, 
          3614, 3508, 5497, 3615, 3510, 5499, 5500, 3616, 3512, 5501, 3617, 
          3514, 5502, 1834, 3516, 5503, 3618, 3518, 5504, 4596, 5405, 3520, 
          5505, 3619, 3522, 5506, 3620, 3524}], 
         Line3DBox[{3523, 5407, 4598, 3521, 5406, 4597, 3519, 5404, 5403, 
          4595, 3517, 5402, 4594, 3515, 5401, 1833, 3513, 5400, 4593, 3511, 
          5399, 4592, 5498, 3509, 5398, 4591, 3507, 5397, 4590, 5494, 3505, 
          5396, 4589, 3501, 5395, 4588, 3503}], 
         Line3DBox[{3526, 4599, 5408, 3525, 5507, 3621, 3527, 5508, 4600, 
          5409, 3528, 5509, 3622, 3529, 5510, 4601, 5410, 3530, 5511, 3623, 
          3531, 5512, 4602, 5411, 3532, 1850, 3533, 5513, 4603, 5412, 3534, 
          4604, 5413, 3535, 5514, 3624, 3536}], 
         Line3DBox[{3540, 5515, 3625, 3538, 5516, 3626, 3542, 5518, 5519, 
          3627, 3544, 5520, 3628, 3546, 5522, 5523, 3629, 3548, 5524, 3630, 
          3550, 5526, 5527, 3631, 3552, 5528, 3632, 3554, 5529, 1867, 3556, 
          5530, 3633, 3558, 5531, 3634, 3560}], 
         Line3DBox[{3559, 5424, 4614, 3557, 5423, 4613, 3555, 5422, 1866, 
          3553, 5421, 4612, 3551, 5420, 4611, 5525, 3549, 5419, 4610, 3547, 
          5418, 4609, 5521, 3545, 5417, 4608, 3543, 5416, 4607, 5517, 3541, 
          5415, 4606, 3537, 5414, 4605, 3539}], 
         Line3DBox[{3562, 4615, 5425, 3561, 5532, 3635, 3563, 5533, 4616, 
          5426, 3564, 5534, 3636, 3565, 5535, 4617, 5427, 3566, 5536, 3637, 
          3567, 5537, 4618, 5428, 3568, 5538, 3638, 3569, 5539, 4619, 5429, 
          3570, 1883, 3571, 5540, 3639, 3572}], 
         Line3DBox[{3574, 4620, 5430, 3573, 4621, 5431, 3575, 5541, 4622, 
          5432, 3576, 4623, 5433, 3577, 5542, 4624, 5434, 3578, 4625, 5435, 
          3579, 5543, 4626, 5436, 3580, 4627, 5437, 3581, 5544, 4628, 5438, 
          3582, 4629, 5439, 3583, 1899, 3584}], 
         Line3DBox[{3641, 2080, 3640, 5650, 3820, 3642, 5651, 4630, 5545, 
          3643, 5652, 3821, 3644, 5653, 4631, 5546, 3645, 5654, 3822, 3646, 
          5655, 4632, 5547, 3647, 5656, 3823, 3648, 5657, 4633, 5548, 3649, 
          5658, 3824, 3650, 5659, 3825, 3651}], 
         Line3DBox[{3653, 4634, 5549, 3652, 2096, 3654, 5660, 4635, 5550, 
          3655, 4636, 5551, 3656, 5661, 4637, 5552, 3657, 4638, 5553, 3658, 
          5662, 4639, 5554, 3659, 4640, 5555, 3660, 5663, 4641, 5556, 3661, 
          4642, 5557, 3662, 5664, 3826, 3663}], 
         Line3DBox[{3667, 5665, 3827, 3665, 5666, 3828, 3669, 5667, 2113, 
          3671, 5668, 3829, 3673, 5669, 4647, 5564, 3675, 5670, 3830, 3677, 
          5671, 4650, 5568, 3679, 5672, 3831, 3681, 5673, 4653, 5572, 3683, 
          5674, 3832, 3685, 5675, 3833, 3687}], 
         Line3DBox[{3686, 5574, 4655, 3684, 5573, 4654, 3682, 5571, 5570, 
          4652, 3680, 5569, 4651, 3678, 5567, 5566, 4649, 3676, 5565, 4648, 
          3674, 5563, 5562, 4646, 3672, 5561, 4645, 3670, 5560, 2112, 3668, 
          5559, 4644, 3664, 5558, 4643, 3666}], 
         Line3DBox[{3689, 4656, 5575, 3688, 5676, 3834, 3690, 5677, 4657, 
          5576, 3691, 2129, 3692, 5678, 4658, 5577, 3693, 4659, 5578, 3694, 
          5679, 4660, 5579, 3695, 4661, 5580, 3696, 5680, 4662, 5581, 3697, 
          4663, 5582, 3698, 5681, 3835, 3699}], 
         Line3DBox[{3703, 5682, 3836, 3701, 5683, 3837, 3705, 5685, 5686, 
          3838, 3707, 5687, 3839, 3709, 5688, 2146, 3711, 5689, 3840, 3713, 
          5690, 4670, 5591, 3715, 5691, 3841, 3717, 5692, 4673, 5595, 3719, 
          5693, 3842, 3721, 5694, 3843, 3723}], 
         Line3DBox[{3722, 5597, 4675, 3720, 5596, 4674, 3718, 5594, 5593, 
          4672, 3716, 5592, 4671, 3714, 5590, 5589, 4669, 3712, 5588, 4668, 
          3710, 5587, 2145, 3708, 5586, 4667, 3706, 5585, 4666, 5684, 3704, 
          5584, 4665, 3700, 5583, 4664, 3702}], 
         Line3DBox[{3725, 4676, 5598, 3724, 5695, 3844, 3726, 5696, 4677, 
          5599, 3727, 5697, 3845, 3728, 5698, 4678, 5600, 3729, 2162, 3730, 
          5699, 4679, 5601, 3731, 4680, 5602, 3732, 5700, 4681, 5603, 3733, 
          4682, 5604, 3734, 5701, 3846, 3735}], 
         Line3DBox[{3739, 5702, 3847, 3737, 5703, 3848, 3741, 5705, 5706, 
          3849, 3743, 5707, 3850, 3745, 5709, 5710, 3851, 3747, 5711, 3852, 
          3749, 5712, 2179, 3751, 5713, 3853, 3753, 5714, 4691, 5615, 3755, 
          5715, 3854, 3757, 5716, 3855, 3759}], 
         Line3DBox[{3758, 5617, 4693, 3756, 5616, 4692, 3754, 5614, 5613, 
          4690, 3752, 5612, 4689, 3750, 5611, 2178, 3748, 5610, 4688, 3746, 
          5609, 4687, 5708, 3744, 5608, 4686, 3742, 5607, 4685, 5704, 3740, 
          5606, 4684, 3736, 5605, 4683, 3738}], 
         Line3DBox[{3761, 4694, 5618, 3760, 5717, 3856, 3762, 5718, 4695, 
          5619, 3763, 5719, 3857, 3764, 5720, 4696, 5620, 3765, 5721, 3858, 
          3766, 5722, 4697, 5621, 3767, 2195, 3768, 5723, 4698, 5622, 3769, 
          4699, 5623, 3770, 5724, 3859, 3771}], 
         Line3DBox[{3775, 5725, 3860, 3773, 5726, 3861, 3777, 5728, 5729, 
          3862, 3779, 5730, 3863, 3781, 5732, 5733, 3864, 3783, 5734, 3865, 
          3785, 5736, 5737, 3866, 3787, 5738, 3867, 3789, 5739, 2212, 3791, 
          5740, 3868, 3793, 5741, 3869, 3795}], 
         Line3DBox[{3794, 5634, 4709, 3792, 5633, 4708, 3790, 5632, 2211, 
          3788, 5631, 4707, 3786, 5630, 4706, 5735, 3784, 5629, 4705, 3782, 
          5628, 4704, 5731, 3780, 5627, 4703, 3778, 5626, 4702, 5727, 3776, 
          5625, 4701, 3772, 5624, 4700, 3774}], 
         Line3DBox[{3797, 4710, 5635, 3796, 5742, 3870, 3798, 5743, 4711, 
          5636, 3799, 5744, 3871, 3800, 5745, 4712, 5637, 3801, 5746, 3872, 
          3802, 5747, 4713, 5638, 3803, 5748, 3873, 3804, 5749, 4714, 5639, 
          3805, 2228, 3806, 5750, 3874, 3807}], 
         Line3DBox[{3809, 4715, 5640, 3808, 4716, 5641, 3810, 5751, 4717, 
          5642, 3811, 4718, 5643, 3812, 5752, 4719, 5644, 3813, 4720, 5645, 
          3814, 5753, 4721, 5646, 3815, 4722, 5647, 3816, 5754, 4723, 5648, 
          3817, 4724, 5649, 3818, 2244, 3819}], 
         Line3DBox[{3876, 2425, 3875, 5860, 4055, 3877, 5861, 4725, 5755, 
          3878, 5862, 4056, 3879, 5863, 4726, 5756, 3880, 5864, 4057, 3881, 
          5865, 4727, 5757, 3882, 5866, 4058, 3883, 5867, 4728, 5758, 3884, 
          5868, 4059, 3885, 5869, 4060, 3886}], 
         Line3DBox[{3888, 4729, 5759, 3887, 2441, 3889, 5870, 4730, 5760, 
          3890, 4731, 5761, 3891, 5871, 4732, 5762, 3892, 4733, 5763, 3893, 
          5872, 4734, 5764, 3894, 4735, 5765, 3895, 5873, 4736, 5766, 3896, 
          4737, 5767, 3897, 5874, 4061, 3898}], 
         Line3DBox[{3902, 5875, 4062, 3900, 5876, 4063, 3904, 5877, 2458, 
          3906, 5878, 4064, 3908, 5879, 4742, 5774, 3910, 5880, 4065, 3912, 
          5881, 4745, 5778, 3914, 5882, 4066, 3916, 5883, 4748, 5782, 3918, 
          5884, 4067, 3920, 5885, 4068, 3922}], 
         Line3DBox[{3921, 5784, 4750, 3919, 5783, 4749, 3917, 5781, 5780, 
          4747, 3915, 5779, 4746, 3913, 5777, 5776, 4744, 3911, 5775, 4743, 
          3909, 5773, 5772, 4741, 3907, 5771, 4740, 3905, 5770, 2457, 3903, 
          5769, 4739, 3899, 5768, 4738, 3901}], 
         Line3DBox[{3924, 4751, 5785, 3923, 5886, 4069, 3925, 5887, 4752, 
          5786, 3926, 2474, 3927, 5888, 4753, 5787, 3928, 4754, 5788, 3929, 
          5889, 4755, 5789, 3930, 4756, 5790, 3931, 5890, 4757, 5791, 3932, 
          4758, 5792, 3933, 5891, 4070, 3934}], 
         Line3DBox[{3938, 5892, 4071, 3936, 5893, 4072, 3940, 5895, 5896, 
          4073, 3942, 5897, 4074, 3944, 5898, 2491, 3946, 5899, 4075, 3948, 
          5900, 4765, 5801, 3950, 5901, 4076, 3952, 5902, 4768, 5805, 3954, 
          5903, 4077, 3956, 5904, 4078, 3958}], 
         Line3DBox[{3957, 5807, 4770, 3955, 5806, 4769, 3953, 5804, 5803, 
          4767, 3951, 5802, 4766, 3949, 5800, 5799, 4764, 3947, 5798, 4763, 
          3945, 5797, 2490, 3943, 5796, 4762, 3941, 5795, 4761, 5894, 3939, 
          5794, 4760, 3935, 5793, 4759, 3937}], 
         Line3DBox[{3960, 4771, 5808, 3959, 5905, 4079, 3961, 5906, 4772, 
          5809, 3962, 5907, 4080, 3963, 5908, 4773, 5810, 3964, 2507, 3965, 
          5909, 4774, 5811, 3966, 4775, 5812, 3967, 5910, 4776, 5813, 3968, 
          4777, 5814, 3969, 5911, 4081, 3970}], 
         Line3DBox[{3974, 5912, 4082, 3972, 5913, 4083, 3976, 5915, 5916, 
          4084, 3978, 5917, 4085, 3980, 5919, 5920, 4086, 3982, 5921, 4087, 
          3984, 5922, 2524, 3986, 5923, 4088, 3988, 5924, 4786, 5825, 3990, 
          5925, 4089, 3992, 5926, 4090, 3994}], 
         Line3DBox[{3993, 5827, 4788, 3991, 5826, 4787, 3989, 5824, 5823, 
          4785, 3987, 5822, 4784, 3985, 5821, 2523, 3983, 5820, 4783, 3981, 
          5819, 4782, 5918, 3979, 5818, 4781, 3977, 5817, 4780, 5914, 3975, 
          5816, 4779, 3971, 5815, 4778, 3973}], 
         Line3DBox[{3996, 4789, 5828, 3995, 5927, 4091, 3997, 5928, 4790, 
          5829, 3998, 5929, 4092, 3999, 5930, 4791, 5830, 4000, 5931, 4093, 
          4001, 5932, 4792, 5831, 4002, 2540, 4003, 5933, 4793, 5832, 4004, 
          4794, 5833, 4005, 5934, 4094, 4006}], 
         Line3DBox[{4010, 5935, 4095, 4008, 5936, 4096, 4012, 5938, 5939, 
          4097, 4014, 5940, 4098, 4016, 5942, 5943, 4099, 4018, 5944, 4100, 
          4020, 5946, 5947, 4101, 4022, 5948, 4102, 4024, 5949, 2557, 4026, 
          5950, 4103, 4028, 5951, 4104, 4030}], 
         Line3DBox[{4029, 5844, 4804, 4027, 5843, 4803, 4025, 5842, 2556, 
          4023, 5841, 4802, 4021, 5840, 4801, 5945, 4019, 5839, 4800, 4017, 
          5838, 4799, 5941, 4015, 5837, 4798, 4013, 5836, 4797, 5937, 4011, 
          5835, 4796, 4007, 5834, 4795, 4009}], 
         Line3DBox[{4032, 4805, 5845, 4031, 5952, 4105, 4033, 5953, 4806, 
          5846, 4034, 5954, 4106, 4035, 5955, 4807, 5847, 4036, 5956, 4107, 
          4037, 5957, 4808, 5848, 4038, 5958, 4108, 4039, 5959, 4809, 5849, 
          4040, 2573, 4041, 5960, 4109, 4042}], 
         Line3DBox[{4044, 4810, 5850, 4043, 4811, 5851, 4045, 5961, 4812, 
          5852, 4046, 4813, 5853, 4047, 5962, 4814, 5854, 4048, 4815, 5855, 
          4049, 5963, 4816, 5856, 4050, 4817, 5857, 4051, 5964, 4818, 5858, 
          4052, 4819, 5859, 4053, 2589, 4054}], 
         Line3DBox[{4111, 2770, 4110, 6070, 4290, 4112, 6071, 4820, 5965, 
          4113, 6072, 4291, 4114, 6073, 4821, 5966, 4115, 6074, 4292, 4116, 
          6075, 4822, 5967, 4117, 6076, 4293, 4118, 6077, 4823, 5968, 4119, 
          6078, 4294, 4120, 6079, 4295, 4121}], 
         Line3DBox[{4123, 4824, 5969, 4122, 2786, 4124, 6080, 4825, 5970, 
          4125, 4826, 5971, 4126, 6081, 4827, 5972, 4127, 4828, 5973, 4128, 
          6082, 4829, 5974, 4129, 4830, 5975, 4130, 6083, 4831, 5976, 4131, 
          4832, 5977, 4132, 6084, 4296, 4133}], 
         Line3DBox[{4137, 6085, 4297, 4135, 6086, 4298, 4139, 6087, 2803, 
          4141, 6088, 4299, 4143, 6089, 4837, 5984, 4145, 6090, 4300, 4147, 
          6091, 4840, 5988, 4149, 6092, 4301, 4151, 6093, 4843, 5992, 4153, 
          6094, 4302, 4155, 6095, 4303, 4157}], 
         Line3DBox[{4156, 5994, 4845, 4154, 5993, 4844, 4152, 5991, 5990, 
          4842, 4150, 5989, 4841, 4148, 5987, 5986, 4839, 4146, 5985, 4838, 
          4144, 5983, 5982, 4836, 4142, 5981, 4835, 4140, 5980, 2802, 4138, 
          5979, 4834, 4134, 5978, 4833, 4136}], 
         Line3DBox[{4159, 4846, 5995, 4158, 6096, 4304, 4160, 6097, 4847, 
          5996, 4161, 2819, 4162, 6098, 4848, 5997, 4163, 4849, 5998, 4164, 
          6099, 4850, 5999, 4165, 4851, 6000, 4166, 6100, 4852, 6001, 4167, 
          4853, 6002, 4168, 6101, 4305, 4169}], 
         Line3DBox[{4173, 6102, 4306, 4171, 6103, 4307, 4175, 6105, 6106, 
          4308, 4177, 6107, 4309, 4179, 6108, 2836, 4181, 6109, 4310, 4183, 
          6110, 4860, 6011, 4185, 6111, 4311, 4187, 6112, 4863, 6015, 4189, 
          6113, 4312, 4191, 6114, 4313, 4193}], 
         Line3DBox[{4192, 6017, 4865, 4190, 6016, 4864, 4188, 6014, 6013, 
          4862, 4186, 6012, 4861, 4184, 6010, 6009, 4859, 4182, 6008, 4858, 
          4180, 6007, 2835, 4178, 6006, 4857, 4176, 6005, 4856, 6104, 4174, 
          6004, 4855, 4170, 6003, 4854, 4172}], 
         Line3DBox[{4195, 4866, 6018, 4194, 6115, 4314, 4196, 6116, 4867, 
          6019, 4197, 6117, 4315, 4198, 6118, 4868, 6020, 4199, 2852, 4200, 
          6119, 4869, 6021, 4201, 4870, 6022, 4202, 6120, 4871, 6023, 4203, 
          4872, 6024, 4204, 6121, 4316, 4205}], 
         Line3DBox[{4209, 6122, 4317, 4207, 6123, 4318, 4211, 6125, 6126, 
          4319, 4213, 6127, 4320, 4215, 6129, 6130, 4321, 4217, 6131, 4322, 
          4219, 6132, 2869, 4221, 6133, 4323, 4223, 6134, 4881, 6035, 4225, 
          6135, 4324, 4227, 6136, 4325, 4229}], 
         Line3DBox[{4228, 6037, 4883, 4226, 6036, 4882, 4224, 6034, 6033, 
          4880, 4222, 6032, 4879, 4220, 6031, 2868, 4218, 6030, 4878, 4216, 
          6029, 4877, 6128, 4214, 6028, 4876, 4212, 6027, 4875, 6124, 4210, 
          6026, 4874, 4206, 6025, 4873, 4208}], 
         Line3DBox[{4231, 4884, 6038, 4230, 6137, 4326, 4232, 6138, 4885, 
          6039, 4233, 6139, 4327, 4234, 6140, 4886, 6040, 4235, 6141, 4328, 
          4236, 6142, 4887, 6041, 4237, 2885, 4238, 6143, 4888, 6042, 4239, 
          4889, 6043, 4240, 6144, 4329, 4241}], 
         Line3DBox[{4245, 6145, 4330, 4243, 6146, 4331, 4247, 6148, 6149, 
          4332, 4249, 6150, 4333, 4251, 6152, 6153, 4334, 4253, 6154, 4335, 
          4255, 6156, 6157, 4336, 4257, 6158, 4337, 4259, 6159, 2902, 4261, 
          6160, 4338, 4263, 6161, 4339, 4265}], 
         Line3DBox[{4264, 6054, 4899, 4262, 6053, 4898, 4260, 6052, 2901, 
          4258, 6051, 4897, 4256, 6050, 4896, 6155, 4254, 6049, 4895, 4252, 
          6048, 4894, 6151, 4250, 6047, 4893, 4248, 6046, 4892, 6147, 4246, 
          6045, 4891, 4242, 6044, 4890, 4244}], 
         Line3DBox[{4267, 4900, 6055, 4266, 6162, 4340, 4268, 6163, 4901, 
          6056, 4269, 6164, 4341, 4270, 6165, 4902, 6057, 4271, 6166, 4342, 
          4272, 6167, 4903, 6058, 4273, 6168, 4343, 4274, 6169, 4904, 6059, 
          4275, 2918, 4276, 6170, 4344, 4277}], 
         Line3DBox[{4279, 4905, 6060, 4278, 4906, 6061, 4280, 6171, 4907, 
          6062, 4281, 4908, 6063, 4282, 6172, 4909, 6064, 4283, 4910, 6065, 
          4284, 6173, 4911, 6066, 4285, 4912, 6067, 4286, 6174, 4913, 6068, 
          4287, 4914, 6069, 4288, 2934, 4289}]}, {
         GrayLevel[0.2], 
         Line3DBox[{865, 1045, 866, 4919, 1060, 895, 4928, 1075, 5035, 910, 
          4945, 1090, 925, 4953, 1105, 5052, 940, 4968, 1120, 955, 4975, 1135,
           5072, 970, 4988, 1150, 985, 4994, 1165, 5095, 1000, 5005, 1180, 
          1015, 5010, 1195, 1030}], 
         Line3DBox[{867, 1046, 5020, 868, 1061, 896, 4929, 1076, 5036, 911, 
          1091, 5046, 926, 4954, 1106, 5053, 941, 1121, 5065, 956, 4976, 1136,
           5073, 971, 1151, 5087, 986, 4995, 1166, 5096, 1001, 1181, 5112, 
          1016, 5011, 1196, 1031}], 
         Line3DBox[{869, 1047, 5021, 871, 1062, 5030, 897, 1077, 5037, 912, 
          1092, 5047, 927, 1107, 5054, 5055, 942, 1122, 5066, 957, 1137, 5074,
           5075, 972, 1152, 5088, 987, 1167, 5097, 5098, 1002, 1182, 5113, 
          1017, 1197, 5121, 1032}], 
         Line3DBox[{873, 1049, 5022, 874, 4921, 1064, 899, 4931, 1079, 5038, 
          914, 1094, 929, 4956, 1109, 5057, 944, 1124, 5067, 959, 4978, 1139, 
          5077, 974, 1154, 5089, 989, 4997, 1169, 5100, 1004, 1184, 5114, 
          1019, 5013, 1199, 1034}], 
         Line3DBox[{875, 1050, 5023, 877, 1065, 5031, 900, 4932, 1080, 5039, 
          915, 1095, 5048, 930, 1110, 5058, 945, 1125, 5068, 960, 1140, 5078, 
          5079, 975, 1155, 5090, 990, 1170, 5101, 5102, 1005, 1185, 5115, 
          1020, 1200, 5122, 1035}], 
         Line3DBox[{879, 1052, 5024, 880, 4923, 1067, 902, 4935, 1082, 5040, 
          917, 4948, 1097, 932, 4958, 1112, 5059, 947, 1127, 962, 4980, 1142, 
          5081, 977, 1157, 5091, 992, 4999, 1172, 5104, 1007, 1187, 5116, 
          1022, 5015, 1202, 1037}], 
         Line3DBox[{881, 1053, 5025, 883, 1068, 5032, 903, 4936, 1083, 5041, 
          918, 1098, 5049, 933, 4959, 1113, 5060, 948, 1128, 5069, 963, 1143, 
          5082, 978, 1158, 5092, 993, 1173, 5105, 5106, 1008, 1188, 5117, 
          1023, 1203, 5123, 1038}], 
         Line3DBox[{885, 1055, 5026, 886, 4925, 1070, 905, 4939, 1085, 5042, 
          920, 4950, 1100, 935, 4962, 1115, 5061, 950, 4972, 1130, 965, 4982, 
          1145, 5083, 980, 1160, 995, 5001, 1175, 5108, 1010, 1190, 5118, 
          1025, 5017, 1205, 1040}], 
         Line3DBox[{887, 1056, 5027, 889, 1071, 5033, 906, 4940, 1086, 5043, 
          921, 1101, 5050, 936, 4963, 1116, 5062, 951, 1131, 5070, 966, 4983, 
          1146, 5084, 981, 1161, 5093, 996, 1176, 5109, 1011, 1191, 5119, 
          1026, 1206, 5124, 1041}], 
         Line3DBox[{891, 1058, 5028, 892, 4927, 1073, 908, 4943, 1088, 5044, 
          923, 4952, 1103, 938, 4966, 1118, 5063, 953, 4974, 1133, 968, 4986, 
          1148, 5085, 983, 4993, 1163, 998, 5003, 1178, 5110, 1013, 1193, 
          1028, 5019, 1208, 1043}], 
         Line3DBox[{893, 1059, 5029, 894, 1074, 5034, 909, 4944, 1089, 5045, 
          924, 1104, 5051, 939, 4967, 1119, 5064, 954, 1134, 5071, 969, 4987, 
          1149, 5086, 984, 1164, 5094, 999, 5004, 1179, 5111, 1014, 1194, 
          5120, 1029, 1209, 1044}], 
         Line3DBox[{1033, 1198, 5012, 1018, 1183, 5006, 1003, 5099, 1168, 
          4996, 988, 1153, 4989, 973, 5076, 1138, 4977, 958, 1123, 4969, 943, 
          5056, 1108, 4955, 928, 1093, 4946, 913, 1078, 4930, 898, 1063, 4920,
           872, 1048, 4915, 870}], 
         Line3DBox[{1036, 1201, 5014, 1021, 1186, 5007, 1006, 5103, 1171, 
          4998, 991, 1156, 4990, 976, 5080, 1141, 4979, 961, 1126, 4970, 946, 
          1111, 4957, 931, 1096, 4947, 916, 1081, 4934, 4933, 901, 1066, 4922,
           878, 1051, 4916, 876}], 
         Line3DBox[{1039, 1204, 5016, 1024, 1189, 5008, 1009, 5107, 1174, 
          5000, 994, 1159, 4991, 979, 1144, 4981, 964, 1129, 4971, 949, 1114, 
          4961, 4960, 934, 1099, 4949, 919, 1084, 4938, 4937, 904, 1069, 4924,
           884, 1054, 4917, 882}], 
         Line3DBox[{1042, 1207, 5018, 1027, 1192, 5009, 1012, 1177, 5002, 997,
           1162, 4992, 982, 1147, 4985, 4984, 967, 1132, 4973, 952, 1117, 
          4965, 4964, 937, 1102, 4951, 922, 1087, 4942, 4941, 907, 1072, 4926,
           890, 1057, 4918, 888}], 
         Line3DBox[{1210, 1390, 1211, 5129, 1405, 1240, 5138, 1420, 5245, 
          1255, 5155, 1435, 1270, 5163, 1450, 5262, 1285, 5178, 1465, 1300, 
          5185, 1480, 5282, 1315, 5198, 1495, 1330, 5204, 1510, 5305, 1345, 
          5215, 1525, 1360, 5220, 1540, 1375}], 
         Line3DBox[{1212, 1391, 5230, 1213, 1406, 1241, 5139, 1421, 5246, 
          1256, 1436, 5256, 1271, 5164, 1451, 5263, 1286, 1466, 5275, 1301, 
          5186, 1481, 5283, 1316, 1496, 5297, 1331, 5205, 1511, 5306, 1346, 
          1526, 5322, 1361, 5221, 1541, 1376}], 
         Line3DBox[{1214, 1392, 5231, 1216, 1407, 5240, 1242, 1422, 5247, 
          1257, 1437, 5257, 1272, 1452, 5264, 5265, 1287, 1467, 5276, 1302, 
          1482, 5284, 5285, 1317, 1497, 5298, 1332, 1512, 5307, 5308, 1347, 
          1527, 5323, 1362, 1542, 5331, 1377}], 
         Line3DBox[{1218, 1394, 5232, 1219, 5131, 1409, 1244, 5141, 1424, 
          5248, 1259, 1439, 1274, 5166, 1454, 5267, 1289, 1469, 5277, 1304, 
          5188, 1484, 5287, 1319, 1499, 5299, 1334, 5207, 1514, 5310, 1349, 
          1529, 5324, 1364, 5223, 1544, 1379}], 
         Line3DBox[{1220, 1395, 5233, 1222, 1410, 5241, 1245, 5142, 1425, 
          5249, 1260, 1440, 5258, 1275, 1455, 5268, 1290, 1470, 5278, 1305, 
          1485, 5288, 5289, 1320, 1500, 5300, 1335, 1515, 5311, 5312, 1350, 
          1530, 5325, 1365, 1545, 5332, 1380}], 
         Line3DBox[{1224, 1397, 5234, 1225, 5133, 1412, 1247, 5145, 1427, 
          5250, 1262, 5158, 1442, 1277, 5168, 1457, 5269, 1292, 1472, 1307, 
          5190, 1487, 5291, 1322, 1502, 5301, 1337, 5209, 1517, 5314, 1352, 
          1532, 5326, 1367, 5225, 1547, 1382}], 
         Line3DBox[{1226, 1398, 5235, 1228, 1413, 5242, 1248, 5146, 1428, 
          5251, 1263, 1443, 5259, 1278, 5169, 1458, 5270, 1293, 1473, 5279, 
          1308, 1488, 5292, 1323, 1503, 5302, 1338, 1518, 5315, 5316, 1353, 
          1533, 5327, 1368, 1548, 5333, 1383}], 
         Line3DBox[{1230, 1400, 5236, 1231, 5135, 1415, 1250, 5149, 1430, 
          5252, 1265, 5160, 1445, 1280, 5172, 1460, 5271, 1295, 5182, 1475, 
          1310, 5192, 1490, 5293, 1325, 1505, 1340, 5211, 1520, 5318, 1355, 
          1535, 5328, 1370, 5227, 1550, 1385}], 
         Line3DBox[{1232, 1401, 5237, 1234, 1416, 5243, 1251, 5150, 1431, 
          5253, 1266, 1446, 5260, 1281, 5173, 1461, 5272, 1296, 1476, 5280, 
          1311, 5193, 1491, 5294, 1326, 1506, 5303, 1341, 1521, 5319, 1356, 
          1536, 5329, 1371, 1551, 5334, 1386}], 
         Line3DBox[{1236, 1403, 5238, 1237, 5137, 1418, 1253, 5153, 1433, 
          5254, 1268, 5162, 1448, 1283, 5176, 1463, 5273, 1298, 5184, 1478, 
          1313, 5196, 1493, 5295, 1328, 5203, 1508, 1343, 5213, 1523, 5320, 
          1358, 1538, 1373, 5229, 1553, 1388}], 
         Line3DBox[{1238, 1404, 5239, 1239, 1419, 5244, 1254, 5154, 1434, 
          5255, 1269, 1449, 5261, 1284, 5177, 1464, 5274, 1299, 1479, 5281, 
          1314, 5197, 1494, 5296, 1329, 1509, 5304, 1344, 5214, 1524, 5321, 
          1359, 1539, 5330, 1374, 1554, 1389}], 
         Line3DBox[{1378, 1543, 5222, 1363, 1528, 5216, 1348, 5309, 1513, 
          5206, 1333, 1498, 5199, 1318, 5286, 1483, 5187, 1303, 1468, 5179, 
          1288, 5266, 1453, 5165, 1273, 1438, 5156, 1258, 1423, 5140, 1243, 
          1408, 5130, 1217, 1393, 5125, 1215}], 
         Line3DBox[{1381, 1546, 5224, 1366, 1531, 5217, 1351, 5313, 1516, 
          5208, 1336, 1501, 5200, 1321, 5290, 1486, 5189, 1306, 1471, 5180, 
          1291, 1456, 5167, 1276, 1441, 5157, 1261, 1426, 5144, 5143, 1246, 
          1411, 5132, 1223, 1396, 5126, 1221}], 
         Line3DBox[{1384, 1549, 5226, 1369, 1534, 5218, 1354, 5317, 1519, 
          5210, 1339, 1504, 5201, 1324, 1489, 5191, 1309, 1474, 5181, 1294, 
          1459, 5171, 5170, 1279, 1444, 5159, 1264, 1429, 5148, 5147, 1249, 
          1414, 5134, 1229, 1399, 5127, 1227}], 
         Line3DBox[{1387, 1552, 5228, 1372, 1537, 5219, 1357, 1522, 5212, 
          1342, 1507, 5202, 1327, 1492, 5195, 5194, 1312, 1477, 5183, 1297, 
          1462, 5175, 5174, 1282, 1447, 5161, 1267, 1432, 5152, 5151, 1252, 
          1417, 5136, 1235, 1402, 5128, 1233}], 
         Line3DBox[{1555, 1735, 1556, 5339, 1750, 1585, 5348, 1765, 5455, 
          1600, 5365, 1780, 1615, 5373, 1795, 5472, 1630, 5388, 1810, 1645, 
          5395, 1825, 5492, 1660, 5408, 1840, 1675, 5414, 1855, 5515, 1690, 
          5425, 1870, 1705, 5430, 1885, 1720}], 
         Line3DBox[{1557, 1736, 5440, 1558, 1751, 1586, 5349, 1766, 5456, 
          1601, 1781, 5466, 1616, 5374, 1796, 5473, 1631, 1811, 5485, 1646, 
          5396, 1826, 5493, 1661, 1841, 5507, 1676, 5415, 1856, 5516, 1691, 
          1871, 5532, 1706, 5431, 1886, 1721}], 
         Line3DBox[{1559, 1737, 5441, 1561, 1752, 5450, 1587, 1767, 5457, 
          1602, 1782, 5467, 1617, 1797, 5474, 5475, 1632, 1812, 5486, 1647, 
          1827, 5494, 5495, 1662, 1842, 5508, 1677, 1857, 5517, 5518, 1692, 
          1872, 5533, 1707, 1887, 5541, 1722}], 
         Line3DBox[{1563, 1739, 5442, 1564, 5341, 1754, 1589, 5351, 1769, 
          5458, 1604, 1784, 1619, 5376, 1799, 5477, 1634, 1814, 5487, 1649, 
          5398, 1829, 5497, 1664, 1844, 5509, 1679, 5417, 1859, 5520, 1694, 
          1874, 5534, 1709, 5433, 1889, 1724}], 
         Line3DBox[{1565, 1740, 5443, 1567, 1755, 5451, 1590, 5352, 1770, 
          5459, 1605, 1785, 5468, 1620, 1800, 5478, 1635, 1815, 5488, 1650, 
          1830, 5498, 5499, 1665, 1845, 5510, 1680, 1860, 5521, 5522, 1695, 
          1875, 5535, 1710, 1890, 5542, 1725}], 
         Line3DBox[{1569, 1742, 5444, 1570, 5343, 1757, 1592, 5355, 1772, 
          5460, 1607, 5368, 1787, 1622, 5378, 1802, 5479, 1637, 1817, 1652, 
          5400, 1832, 5501, 1667, 1847, 5511, 1682, 5419, 1862, 5524, 1697, 
          1877, 5536, 1712, 5435, 1892, 1727}], 
         Line3DBox[{1571, 1743, 5445, 1573, 1758, 5452, 1593, 5356, 1773, 
          5461, 1608, 1788, 5469, 1623, 5379, 1803, 5480, 1638, 1818, 5489, 
          1653, 1833, 5502, 1668, 1848, 5512, 1683, 1863, 5525, 5526, 1698, 
          1878, 5537, 1713, 1893, 5543, 1728}], 
         Line3DBox[{1575, 1745, 5446, 1576, 5345, 1760, 1595, 5359, 1775, 
          5462, 1610, 5370, 1790, 1625, 5382, 1805, 5481, 1640, 5392, 1820, 
          1655, 5402, 1835, 5503, 1670, 1850, 1685, 5421, 1865, 5528, 1700, 
          1880, 5538, 1715, 5437, 1895, 1730}], 
         Line3DBox[{1577, 1746, 5447, 1579, 1761, 5453, 1596, 5360, 1776, 
          5463, 1611, 1791, 5470, 1626, 5383, 1806, 5482, 1641, 1821, 5490, 
          1656, 5403, 1836, 5504, 1671, 1851, 5513, 1686, 1866, 5529, 1701, 
          1881, 5539, 1716, 1896, 5544, 1731}], 
         Line3DBox[{1581, 1748, 5448, 1582, 5347, 1763, 1598, 5363, 1778, 
          5464, 1613, 5372, 1793, 1628, 5386, 1808, 5483, 1643, 5394, 1823, 
          1658, 5406, 1838, 5505, 1673, 5413, 1853, 1688, 5423, 1868, 5530, 
          1703, 1883, 1718, 5439, 1898, 1733}], 
         Line3DBox[{1583, 1749, 5449, 1584, 1764, 5454, 1599, 5364, 1779, 
          5465, 1614, 1794, 5471, 1629, 5387, 1809, 5484, 1644, 1824, 5491, 
          1659, 5407, 1839, 5506, 1674, 1854, 5514, 1689, 5424, 1869, 5531, 
          1704, 1884, 5540, 1719, 1899, 1734}], 
         Line3DBox[{1723, 1888, 5432, 1708, 1873, 5426, 1693, 5519, 1858, 
          5416, 1678, 1843, 5409, 1663, 5496, 1828, 5397, 1648, 1813, 5389, 
          1633, 5476, 1798, 5375, 1618, 1783, 5366, 1603, 1768, 5350, 1588, 
          1753, 5340, 1562, 1738, 5335, 1560}], 
         Line3DBox[{1726, 1891, 5434, 1711, 1876, 5427, 1696, 5523, 1861, 
          5418, 1681, 1846, 5410, 1666, 5500, 1831, 5399, 1651, 1816, 5390, 
          1636, 1801, 5377, 1621, 1786, 5367, 1606, 1771, 5354, 5353, 1591, 
          1756, 5342, 1568, 1741, 5336, 1566}], 
         Line3DBox[{1729, 1894, 5436, 1714, 1879, 5428, 1699, 5527, 1864, 
          5420, 1684, 1849, 5411, 1669, 1834, 5401, 1654, 1819, 5391, 1639, 
          1804, 5381, 5380, 1624, 1789, 5369, 1609, 1774, 5358, 5357, 1594, 
          1759, 5344, 1574, 1744, 5337, 1572}], 
         Line3DBox[{1732, 1897, 5438, 1717, 1882, 5429, 1702, 1867, 5422, 
          1687, 1852, 5412, 1672, 1837, 5405, 5404, 1657, 1822, 5393, 1642, 
          1807, 5385, 5384, 1627, 1792, 5371, 1612, 1777, 5362, 5361, 1597, 
          1762, 5346, 1580, 1747, 5338, 1578}], 
         Line3DBox[{1900, 2080, 1901, 5549, 2095, 1930, 5558, 2110, 5665, 
          1945, 5575, 2125, 1960, 5583, 2140, 5682, 1975, 5598, 2155, 1990, 
          5605, 2170, 5702, 2005, 5618, 2185, 2020, 5624, 2200, 5725, 2035, 
          5635, 2215, 2050, 5640, 2230, 2065}], 
         Line3DBox[{1902, 2081, 5650, 1903, 2096, 1931, 5559, 2111, 5666, 
          1946, 2126, 5676, 1961, 5584, 2141, 5683, 1976, 2156, 5695, 1991, 
          5606, 2171, 5703, 2006, 2186, 5717, 2021, 5625, 2201, 5726, 2036, 
          2216, 5742, 2051, 5641, 2231, 2066}], 
         Line3DBox[{1904, 2082, 5651, 1906, 2097, 5660, 1932, 2112, 5667, 
          1947, 2127, 5677, 1962, 2142, 5684, 5685, 1977, 2157, 5696, 1992, 
          2172, 5704, 5705, 2007, 2187, 5718, 2022, 2202, 5727, 5728, 2037, 
          2217, 5743, 2052, 2232, 5751, 2067}], 
         Line3DBox[{1908, 2084, 5652, 1909, 5551, 2099, 1934, 5561, 2114, 
          5668, 1949, 2129, 1964, 5586, 2144, 5687, 1979, 2159, 5697, 1994, 
          5608, 2174, 5707, 2009, 2189, 5719, 2024, 5627, 2204, 5730, 2039, 
          2219, 5744, 2054, 5643, 2234, 2069}], 
         Line3DBox[{1910, 2085, 5653, 1912, 2100, 5661, 1935, 5562, 2115, 
          5669, 1950, 2130, 5678, 1965, 2145, 5688, 1980, 2160, 5698, 1995, 
          2175, 5708, 5709, 2010, 2190, 5720, 2025, 2205, 5731, 5732, 2040, 
          2220, 5745, 2055, 2235, 5752, 2070}], 
         Line3DBox[{1914, 2087, 5654, 1915, 5553, 2102, 1937, 5565, 2117, 
          5670, 1952, 5578, 2132, 1967, 5588, 2147, 5689, 1982, 2162, 1997, 
          5610, 2177, 5711, 2012, 2192, 5721, 2027, 5629, 2207, 5734, 2042, 
          2222, 5746, 2057, 5645, 2237, 2072}], 
         Line3DBox[{1916, 2088, 5655, 1918, 2103, 5662, 1938, 5566, 2118, 
          5671, 1953, 2133, 5679, 1968, 5589, 2148, 5690, 1983, 2163, 5699, 
          1998, 2178, 5712, 2013, 2193, 5722, 2028, 2208, 5735, 5736, 2043, 
          2223, 5747, 2058, 2238, 5753, 2073}], 
         Line3DBox[{1920, 2090, 5656, 1921, 5555, 2105, 1940, 5569, 2120, 
          5672, 1955, 5580, 2135, 1970, 5592, 2150, 5691, 1985, 5602, 2165, 
          2000, 5612, 2180, 5713, 2015, 2195, 2030, 5631, 2210, 5738, 2045, 
          2225, 5748, 2060, 5647, 2240, 2075}], 
         Line3DBox[{1922, 2091, 5657, 1924, 2106, 5663, 1941, 5570, 2121, 
          5673, 1956, 2136, 5680, 1971, 5593, 2151, 5692, 1986, 2166, 5700, 
          2001, 5613, 2181, 5714, 2016, 2196, 5723, 2031, 2211, 5739, 2046, 
          2226, 5749, 2061, 2241, 5754, 2076}], 
         Line3DBox[{1926, 2093, 5658, 1927, 5557, 2108, 1943, 5573, 2123, 
          5674, 1958, 5582, 2138, 1973, 5596, 2153, 5693, 1988, 5604, 2168, 
          2003, 5616, 2183, 5715, 2018, 5623, 2198, 2033, 5633, 2213, 5740, 
          2048, 2228, 2063, 5649, 2243, 2078}], 
         Line3DBox[{1928, 2094, 5659, 1929, 2109, 5664, 1944, 5574, 2124, 
          5675, 1959, 2139, 5681, 1974, 5597, 2154, 5694, 1989, 2169, 5701, 
          2004, 5617, 2184, 5716, 2019, 2199, 5724, 2034, 5634, 2214, 5741, 
          2049, 2229, 5750, 2064, 2244, 2079}], 
         Line3DBox[{2068, 2233, 5642, 2053, 2218, 5636, 2038, 5729, 2203, 
          5626, 2023, 2188, 5619, 2008, 5706, 2173, 5607, 1993, 2158, 5599, 
          1978, 5686, 2143, 5585, 1963, 2128, 5576, 1948, 2113, 5560, 1933, 
          2098, 5550, 1907, 2083, 5545, 1905}], 
         Line3DBox[{2071, 2236, 5644, 2056, 2221, 5637, 2041, 5733, 2206, 
          5628, 2026, 2191, 5620, 2011, 5710, 2176, 5609, 1996, 2161, 5600, 
          1981, 2146, 5587, 1966, 2131, 5577, 1951, 2116, 5564, 5563, 1936, 
          2101, 5552, 1913, 2086, 5546, 1911}], 
         Line3DBox[{2074, 2239, 5646, 2059, 2224, 5638, 2044, 5737, 2209, 
          5630, 2029, 2194, 5621, 2014, 2179, 5611, 1999, 2164, 5601, 1984, 
          2149, 5591, 5590, 1969, 2134, 5579, 1954, 2119, 5568, 5567, 1939, 
          2104, 5554, 1919, 2089, 5547, 1917}], 
         Line3DBox[{2077, 2242, 5648, 2062, 2227, 5639, 2047, 2212, 5632, 
          2032, 2197, 5622, 2017, 2182, 5615, 5614, 2002, 2167, 5603, 1987, 
          2152, 5595, 5594, 1972, 2137, 5581, 1957, 2122, 5572, 5571, 1942, 
          2107, 5556, 1925, 2092, 5548, 1923}], 
         Line3DBox[{2245, 2425, 2246, 5759, 2440, 2275, 5768, 2455, 5875, 
          2290, 5785, 2470, 2305, 5793, 2485, 5892, 2320, 5808, 2500, 2335, 
          5815, 2515, 5912, 2350, 5828, 2530, 2365, 5834, 2545, 5935, 2380, 
          5845, 2560, 2395, 5850, 2575, 2410}], 
         Line3DBox[{2247, 2426, 5860, 2248, 2441, 2276, 5769, 2456, 5876, 
          2291, 2471, 5886, 2306, 5794, 2486, 5893, 2321, 2501, 5905, 2336, 
          5816, 2516, 5913, 2351, 2531, 5927, 2366, 5835, 2546, 5936, 2381, 
          2561, 5952, 2396, 5851, 2576, 2411}], 
         Line3DBox[{2249, 2427, 5861, 2251, 2442, 5870, 2277, 2457, 5877, 
          2292, 2472, 5887, 2307, 2487, 5894, 5895, 2322, 2502, 5906, 2337, 
          2517, 5914, 5915, 2352, 2532, 5928, 2367, 2547, 5937, 5938, 2382, 
          2562, 5953, 2397, 2577, 5961, 2412}], 
         Line3DBox[{2253, 2429, 5862, 2254, 5761, 2444, 2279, 5771, 2459, 
          5878, 2294, 2474, 2309, 5796, 2489, 5897, 2324, 2504, 5907, 2339, 
          5818, 2519, 5917, 2354, 2534, 5929, 2369, 5837, 2549, 5940, 2384, 
          2564, 5954, 2399, 5853, 2579, 2414}], 
         Line3DBox[{2255, 2430, 5863, 2257, 2445, 5871, 2280, 5772, 2460, 
          5879, 2295, 2475, 5888, 2310, 2490, 5898, 2325, 2505, 5908, 2340, 
          2520, 5918, 5919, 2355, 2535, 5930, 2370, 2550, 5941, 5942, 2385, 
          2565, 5955, 2400, 2580, 5962, 2415}], 
         Line3DBox[{2259, 2432, 5864, 2260, 5763, 2447, 2282, 5775, 2462, 
          5880, 2297, 5788, 2477, 2312, 5798, 2492, 5899, 2327, 2507, 2342, 
          5820, 2522, 5921, 2357, 2537, 5931, 2372, 5839, 2552, 5944, 2387, 
          2567, 5956, 2402, 5855, 2582, 2417}], 
         Line3DBox[{2261, 2433, 5865, 2263, 2448, 5872, 2283, 5776, 2463, 
          5881, 2298, 2478, 5889, 2313, 5799, 2493, 5900, 2328, 2508, 5909, 
          2343, 2523, 5922, 2358, 2538, 5932, 2373, 2553, 5945, 5946, 2388, 
          2568, 5957, 2403, 2583, 5963, 2418}], 
         Line3DBox[{2265, 2435, 5866, 2266, 5765, 2450, 2285, 5779, 2465, 
          5882, 2300, 5790, 2480, 2315, 5802, 2495, 5901, 2330, 5812, 2510, 
          2345, 5822, 2525, 5923, 2360, 2540, 2375, 5841, 2555, 5948, 2390, 
          2570, 5958, 2405, 5857, 2585, 2420}], 
         Line3DBox[{2267, 2436, 5867, 2269, 2451, 5873, 2286, 5780, 2466, 
          5883, 2301, 2481, 5890, 2316, 5803, 2496, 5902, 2331, 2511, 5910, 
          2346, 5823, 2526, 5924, 2361, 2541, 5933, 2376, 2556, 5949, 2391, 
          2571, 5959, 2406, 2586, 5964, 2421}], 
         Line3DBox[{2271, 2438, 5868, 2272, 5767, 2453, 2288, 5783, 2468, 
          5884, 2303, 5792, 2483, 2318, 5806, 2498, 5903, 2333, 5814, 2513, 
          2348, 5826, 2528, 5925, 2363, 5833, 2543, 2378, 5843, 2558, 5950, 
          2393, 2573, 2408, 5859, 2588, 2423}], 
         Line3DBox[{2273, 2439, 5869, 2274, 2454, 5874, 2289, 5784, 2469, 
          5885, 2304, 2484, 5891, 2319, 5807, 2499, 5904, 2334, 2514, 5911, 
          2349, 5827, 2529, 5926, 2364, 2544, 5934, 2379, 5844, 2559, 5951, 
          2394, 2574, 5960, 2409, 2589, 2424}], 
         Line3DBox[{2413, 2578, 5852, 2398, 2563, 5846, 2383, 5939, 2548, 
          5836, 2368, 2533, 5829, 2353, 5916, 2518, 5817, 2338, 2503, 5809, 
          2323, 5896, 2488, 5795, 2308, 2473, 5786, 2293, 2458, 5770, 2278, 
          2443, 5760, 2252, 2428, 5755, 2250}], 
         Line3DBox[{2416, 2581, 5854, 2401, 2566, 5847, 2386, 5943, 2551, 
          5838, 2371, 2536, 5830, 2356, 5920, 2521, 5819, 2341, 2506, 5810, 
          2326, 2491, 5797, 2311, 2476, 5787, 2296, 2461, 5774, 5773, 2281, 
          2446, 5762, 2258, 2431, 5756, 2256}], 
         Line3DBox[{2419, 2584, 5856, 2404, 2569, 5848, 2389, 5947, 2554, 
          5840, 2374, 2539, 5831, 2359, 2524, 5821, 2344, 2509, 5811, 2329, 
          2494, 5801, 5800, 2314, 2479, 5789, 2299, 2464, 5778, 5777, 2284, 
          2449, 5764, 2264, 2434, 5757, 2262}], 
         Line3DBox[{2422, 2587, 5858, 2407, 2572, 5849, 2392, 2557, 5842, 
          2377, 2542, 5832, 2362, 2527, 5825, 5824, 2347, 2512, 5813, 2332, 
          2497, 5805, 5804, 2317, 2482, 5791, 2302, 2467, 5782, 5781, 2287, 
          2452, 5766, 2270, 2437, 5758, 2268}], 
         Line3DBox[{2590, 2770, 2591, 5969, 2785, 2620, 5978, 2800, 6085, 
          2635, 5995, 2815, 2650, 6003, 2830, 6102, 2665, 6018, 2845, 2680, 
          6025, 2860, 6122, 2695, 6038, 2875, 2710, 6044, 2890, 6145, 2725, 
          6055, 2905, 2740, 6060, 2920, 2755}], 
         Line3DBox[{2592, 2771, 6070, 2593, 2786, 2621, 5979, 2801, 6086, 
          2636, 2816, 6096, 2651, 6004, 2831, 6103, 2666, 2846, 6115, 2681, 
          6026, 2861, 6123, 2696, 2876, 6137, 2711, 6045, 2891, 6146, 2726, 
          2906, 6162, 2741, 6061, 2921, 2756}], 
         Line3DBox[{2594, 2772, 6071, 2596, 2787, 6080, 2622, 2802, 6087, 
          2637, 2817, 6097, 2652, 2832, 6104, 6105, 2667, 2847, 6116, 2682, 
          2862, 6124, 6125, 2697, 2877, 6138, 2712, 2892, 6147, 6148, 2727, 
          2907, 6163, 2742, 2922, 6171, 2757}], 
         Line3DBox[{2598, 2774, 6072, 2599, 5971, 2789, 2624, 5981, 2804, 
          6088, 2639, 2819, 2654, 6006, 2834, 6107, 2669, 2849, 6117, 2684, 
          6028, 2864, 6127, 2699, 2879, 6139, 2714, 6047, 2894, 6150, 2729, 
          2909, 6164, 2744, 6063, 2924, 2759}], 
         Line3DBox[{2600, 2775, 6073, 2602, 2790, 6081, 2625, 5982, 2805, 
          6089, 2640, 2820, 6098, 2655, 2835, 6108, 2670, 2850, 6118, 2685, 
          2865, 6128, 6129, 2700, 2880, 6140, 2715, 2895, 6151, 6152, 2730, 
          2910, 6165, 2745, 2925, 6172, 2760}], 
         Line3DBox[{2604, 2777, 6074, 2605, 5973, 2792, 2627, 5985, 2807, 
          6090, 2642, 5998, 2822, 2657, 6008, 2837, 6109, 2672, 2852, 2687, 
          6030, 2867, 6131, 2702, 2882, 6141, 2717, 6049, 2897, 6154, 2732, 
          2912, 6166, 2747, 6065, 2927, 2762}], 
         Line3DBox[{2606, 2778, 6075, 2608, 2793, 6082, 2628, 5986, 2808, 
          6091, 2643, 2823, 6099, 2658, 6009, 2838, 6110, 2673, 2853, 6119, 
          2688, 2868, 6132, 2703, 2883, 6142, 2718, 2898, 6155, 6156, 2733, 
          2913, 6167, 2748, 2928, 6173, 2763}], 
         Line3DBox[{2610, 2780, 6076, 2611, 5975, 2795, 2630, 5989, 2810, 
          6092, 2645, 6000, 2825, 2660, 6012, 2840, 6111, 2675, 6022, 2855, 
          2690, 6032, 2870, 6133, 2705, 2885, 2720, 6051, 2900, 6158, 2735, 
          2915, 6168, 2750, 6067, 2930, 2765}], 
         Line3DBox[{2612, 2781, 6077, 2614, 2796, 6083, 2631, 5990, 2811, 
          6093, 2646, 2826, 6100, 2661, 6013, 2841, 6112, 2676, 2856, 6120, 
          2691, 6033, 2871, 6134, 2706, 2886, 6143, 2721, 2901, 6159, 2736, 
          2916, 6169, 2751, 2931, 6174, 2766}], 
         Line3DBox[{2616, 2783, 6078, 2617, 5977, 2798, 2633, 5993, 2813, 
          6094, 2648, 6002, 2828, 2663, 6016, 2843, 6113, 2678, 6024, 2858, 
          2693, 6036, 2873, 6135, 2708, 6043, 2888, 2723, 6053, 2903, 6160, 
          2738, 2918, 2753, 6069, 2933, 2768}], 
         Line3DBox[{2618, 2784, 6079, 2619, 2799, 6084, 2634, 5994, 2814, 
          6095, 2649, 2829, 6101, 2664, 6017, 2844, 6114, 2679, 2859, 6121, 
          2694, 6037, 2874, 6136, 2709, 2889, 6144, 2724, 6054, 2904, 6161, 
          2739, 2919, 6170, 2754, 2934, 2769}], 
         Line3DBox[{2758, 2923, 6062, 2743, 2908, 6056, 2728, 6149, 2893, 
          6046, 2713, 2878, 6039, 2698, 6126, 2863, 6027, 2683, 2848, 6019, 
          2668, 6106, 2833, 6005, 2653, 2818, 5996, 2638, 2803, 5980, 2623, 
          2788, 5970, 2597, 2773, 5965, 2595}], 
         Line3DBox[{2761, 2926, 6064, 2746, 2911, 6057, 2731, 6153, 2896, 
          6048, 2716, 2881, 6040, 2701, 6130, 2866, 6029, 2686, 2851, 6020, 
          2671, 2836, 6007, 2656, 2821, 5997, 2641, 2806, 5984, 5983, 2626, 
          2791, 5972, 2603, 2776, 5966, 2601}], 
         Line3DBox[{2764, 2929, 6066, 2749, 2914, 6058, 2734, 6157, 2899, 
          6050, 2719, 2884, 6041, 2704, 2869, 6031, 2689, 2854, 6021, 2674, 
          2839, 6011, 6010, 2659, 2824, 5999, 2644, 2809, 5988, 5987, 2629, 
          2794, 5974, 2609, 2779, 5967, 2607}], 
         Line3DBox[{2767, 2932, 6068, 2752, 2917, 6059, 2737, 2902, 6052, 
          2722, 2887, 6042, 2707, 2872, 6035, 6034, 2692, 2857, 6023, 2677, 
          2842, 6015, 6014, 2662, 2827, 6001, 2647, 2812, 5992, 5991, 2632, 
          2797, 5976, 2615, 2782, 5968, 
          2613}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
6aoD3ltUA5kQ81KmQRyMdzG9ZkP8yubEXWJWwnpQD0zmfsQVDXekXthi/uBS
rkX5lyUaoCP1lOupqnAYllflZ0H74NhcSL6+fT2QsVOaqXgFAZsqPML8l4fj
5C0nT9WCcI57aBO9D1hUPiQSR7zO0dXKcDWjEs6cuPwoztMN/lLYNWP+ttUb
bPQ1HaVAfFvjek/ja0jfde7GdFMzWq1KHm3kgeRC3YfjL6zgb3FcM6bz6clj
8pt9CAevZgO7MN/L2XvyaVj+OIeMDxAn1AJ7AX/bFksD6DUlK2cUbIpkZ/No
vbAMgGGqzjc7IR3gpGTKQu26KXLC3KtI6EIRNDZP/vWJzQKc9NQiPZrLtvg6
Dy+EV8EFJr4/17QyodPW/hMemmtcvASZ/Jx1QLU18Y50Og3mF1zCMJ90uWcj
uvf96mGaf1tFXTIJGCWfUzYjfDYjeHROTNaBy/XnYu3jMfAqpXQe86GWFeJe
nIqugbrsu1dOdYbDCPVdGcw3+SVVy46TbCWcakkQ48oMAI7O9EDM51cqVrzi
GKYb27mW43PLE9I8WJgxX9qkfzEKtdl5UEbqolGf9xaOPWyrxvROczzpRtOe
4MBwW/Mj5v/5lbvtP33OdMeRFzJ6KVB/t7d/4FMR3B2hF3BB76PU08A6KZYM
lBrFTB6MleCQtqsijvaX1x5eV/cIw4CPM//OnGMp8BalbB+iOfVF/pME3Vow
nLbSDax+WwVv2tmyBBFP+JTub2mnXwRm+ctlQWLFQKdnYHId7ZVxSyz7Z04W
AlEJvVrqwwr4NTFcZop416e0Yww+eZUw8Ef0cTl3IVh9EffDfDEufvSTPqVe
AaQvlOumYspgK+5rwg20fz3MfvkxmbEWPiVJFpfE5cIV+49zmB+9b8bJ1rnE
arD09dqnqy8GxyX6IMyP3iVmqZkP43+zx7p/5WfBiaXeJ5ivum9Pq+ifiRpo
VtjlyZrIg1PULeGYr/qfvJ315Y+1EGR3bCa7Pg3yOOVLMH9we3XOeFexGuCh
w0tW3s6CDFXVBswf/Mopy6YTmdWw+kh7h5Q6AZp7j+1hPtdxRMf/tNyrAoun
558pIv5mnC4tgPlcJ6bhQuocK4DtntSyUWQkcA4yCmJ+zbWh5akvJMth8sH5
2umQOKiZKXbF/Jr1fid9HugoAaPTvq6DUkHwc/tJCaYP3F9Xk8g1UAT5vCYk
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
12QQAQ9/H0/r/RYGc5u/nn2H3/9zp+H9glwofFVmqNAdDwCdBca/doQrfjg2
BmhuCoLV6jq94ad84OKbzoZu8njcJdnQ8f5b8OR1e9iqd/ng6WzPUUzWyb6Z
Equ8vwGwp6hjRrYxB9zN7QrwHEgM5+5rPZsi4F4Q3E4xSIPxbL5jwuR11uyX
Wj7OFQbngo+w0b2JAVl4NL+HvJ57MvOHT/71BYb57xznM/zh9Wca6VHyvMUS
qWO/q28CX4R0YmFMNkjyml7H7wn/Mvwx1XLeHoJcpdtF7mQDTeFBV1qyPtdJ
77GbOO4NToJJf9I3Z0K0psxRFTKn4WHtQ9EOfrBq/FrxFPGMbX02B9aT12P6
NraoYjQQvNfOPVFsToYL675KvCfv21+lrQWXlwKhfGhszFkiEVZE5Tcmk3Vy
I+fuxH/T/uBSzjM9KRAFZyPp2X/h5xE+SqvdUvSD3ydNLhzZHw5ctG4lNuT1
ZxEk/4/jHij2qF0q0vOFmsf3N4oTPvzBvuHFxk2e0LTpvbZ7rhe88wloMiCP
613Zzif2Lw6qEs7Jl88Eg2TuTrYZ8ry5TnEJKzLFED558DLyC2NHqDlyi4fe
3kvYl/FveHiekf7k1FmhejN6sC4Ge2jthRdPvEgvlSa5UX2UwySxB3OzQOLW
yAmSo9u+rVD5GaNTLupHcsru8PsFzC2th+8HMK8cLBvZq8gcrn/9+7IxmcvV
7m9KcB718s6YvCTzcOykwWo9Mh81cfR1OBdiV40UGMj6yGjOj54g68U3eXA9
rhPZrle1eP0sqq88XSTXk7b5DHUdvU2SMy8R3pLZVjNrTPhL+8N7X+QurxdR
7tiXm40V25RJf15f50X1pr1JraoHyc2ra9wje0iOfhn99RPz03RIomMjmcNn
F9ew+ZK5HBS97Y7z2DPgOI7r469QRTKul+kMCWqdPPs8nfyHcHNFC+dt5OjJ
yyOHkZ/D+ivTsgjXMk4/9ZwgnCv8Rq0P+fbBxtejzYT/PvaMJ8wQHtRNlvJB
DrReVLPsIVyiWpiegJyyq1/vK/LJSg/nLux1I/kaC+z5J9OVVL/X7r0fiP0U
v22b6xnSV/d766Oxp5Qi0xMw91PyikuxB4zrft3G/FdYXLj+lOTdVK0GRz7J
v+kfAn8x98qUpk0ESb4ccFZS5SV5w7FmtyDmTBjb3vC9ZA5fH6rNySdzKaQ1
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
vj3kHhjtaO3G++26OnpZHe6FICsWxug35Qp2x8uj8D4wk3Lvz8yBBEi5V3XG
r6MYpM0ybXGf2uFRQyLfnUyIZFvQE/9YBFmBbpdxn3fDSt2ez2IVcN0qxfp+
cSHMnc/cgfuqTnMv6P/bUQ0udsUeSVH5UMM6ICBE+CpAeuWvrEYtPEo20y1f
kwtJHKn8uN8nUTvIwyVTB/nK/hucrmXBPudJI9zvy7l7qrwqsQbq1N62MEfm
w9D56Su43xfw/eOXesE6OLTl9ZqsnHTIcFB8jvtiVR8WUzJMa0EpxNe8ezYF
3luMeuF+k1b6/oSxiWo4r5DNPvA3ETQaf8njftOnlsryBM8qeLVsRvvwdSrc
U1wcTv5EHk/QbNj8uRJqe6wSHl+KBUVJpVbcZ9mx+c7JioRy0NTf1ja1JRKO
hH4twn2KlyefbTwpUAryBgICbXPBEHj/khDuU9gdbB77o1wMSof+/KXnjQT6
jl3/rpEcs0nI+BWuXQCzaxRLf731haL13l54v53PfWyRoyYH6ip/pEQNeIJc
YdZFvI8tpigYzwqxoH15i+xW5lqQXpG99IKsH5swC9W9waXQbOAtMthQCeZv
Q1xw/3rm1juRF01VEBn/hvdUWzG4Nhk4437obT+Z9eKNVbDh5p720PZ8OCbj
b4X7hiq7lkzi+iogmlWbZ8E9AwZZVjPh/to7YyH5t8LlMLlh6Lkyfyo8t1Mw
w32lh726amlzBaDbMxVYvRwNDIKsH3GfRStU5RXuEwSkBq5rcQqHwOoYar9g
0o420aIwGry2PtkuKV0PJepJ9/E8Q4+ymyLX1VRIkV/4q6+Ln4+5Nx1AHu9/
ZfBPgLMY3mknDE88rQZhJrmX+P2Zj8RPu97UKYP24VVGsn8rIUBP7k0MeTxy
R8743xcVMHd1rbLzbCnwKETMeeP3bwQe1Vt+VAEVOuc5LNKKYFZo+jTuh25h
va97em8F7NyQLNZ3Kw+2TqW74r4hn7R94h+GcjjnSbNz3DELHu8QtsF9w9x9
NM/yOUqhpDFidahGNkiL9WrjvmFWcKKI/a1SiPhPd1KsJw3yTiVew/21e8F8
ttt0i2CkfoVRjC4ZAjo1X+B+U8Hy21NrjfIg4NB1pdotcTAgtvwK95vY3+oP
f8nKhs7FT9r+jPHgqDRIh/tNP0y9s3F/5b8muolUPF9nMkTts3yX/74G9zNO
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
iLlUirmVxehI5VX6ln0KJ4hHHdDuD0ev2sbfR/nUY9PRjegPtCK+tFeJT5zb
ykx5xPCLZkXk42Ihpl/Iy9KvvClOfsink4ccaSfwMw+5ku6wfibypDLdwDEX
whM5HkVlMYQvamMEA5ArDK5srQ0h/XS2z7A/gPSVKNe5Puyp/tyuCcxNXk+6
Xe9Ijo4JyVL56RM+9wT902LTpCX66KhsP+WhHioX/GKI753oH/4P/e+k8D8j
9D6t2U9s6Dn9LTNK6D3VaQqU79hxBB1EzxE206C5QrznVdMxyneYxi1k0HMS
HpbQoPdcU92fgL6zwU5DHbl/p9HG7+gBQtpcFP/vfr1WBflYf0HaAHk5fD5X
Fjl5XdrMQeRjQU0hOlXCyxm/qgORk/c3ixogHx/+Wc+BvGzBdZfi5DI7mXrk
yNLznImGhCv/fdlvijmWpt5Zi7zFV6jbifx1N+xsCXLXiKG38ADhkpDnKV+Q
U2TH+s4in7CtPqCO9+t6HApzcV+ut66Tul+307PBE/tyyKC2APtzqjub6s3L
F65YYQ/15uv+xl7ifPt3GftI0k8+Xod4cnTGyNYw4s20Fy3eoS/fyHyUgr7X
zjNwxgXPayh2vkTvo+mMDPMk/lMqFTTKR3zo3GhHPnqQYZ600HXcpw/hnijE
z8OOWLUi/7Mos5mEET7WrVQoUCa8bMlqtA45+dm6o7ZphCNf6cQFcxKuvJLM
NYw8aaqqrOZPuOQ24873XwmnWI/k6yKfTFsos0uTvtxYsViJ/VkxrU715vag
RyVRXI5wJTtKC+9PtGToUfclDGW99dHzIyyfm6H3u9m6UL5/d+PxUvTVvtcB
fD+Ivx5pr1mL3ip5Zvkl+mrtwIQO+quEgirlrXZBs6sliK9CF5xBf+VtGqe8
tenVs50fiO9pc86f7Sb+l23rQHlfIUfgBmviOa4OqzqsiPdwCibcQt9ZxfOo
FT1ns99PF/SeRwsRlO8sV7zje0A8x1Z8/yf0nj/XZCnfuWZtmIL+UHCJ58hj
4hONfu070CPsfGd6kLOXqkRYMgh3B3NIUbxtorhrizXhbJahT0eRuzPs0yne
Fp/4womcvelCuxFyd8u2jRRv2xSI7hUnXDtzj1kHOVdwzpjiW3PxKT/kvz+p
Ddu2EB5cZPeiOHCxIyYUeevro4OVyF8sQewUd5UkuK1hILxyVa7/M/JL+IQm
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
       
       "]], {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRange -> {Full, Full, Full}, 
     DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
       "\"|\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Rho]\\), \
\\(\[RightVector]\\)], \\(1\\)]\\)|  [fm]\"", TraditionalForm], 
       FormBox[
       "\"|\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Rho]\\), \
\\(\[RightVector]\\)], \\(2\\)]\\)|  [fm]\"", TraditionalForm], 
       FormBox[
       "\"\[Sum]\\!\\(\\*SubsuperscriptBox[\\(a\\), \\(n\\), \\((fit)\\)]\\)\
\[CenterDot]\\!\\(\\*SuperscriptBox[\\(e\\), \\(\\(-\\*SubsuperscriptBox[\\(b\
\\), \\(n\\), \\((fit)\\)]\\) \\((\\*SubsuperscriptBox[\\(\[Rho]\\), \\(1\\), \
\\(2\\)] + \\*SubsuperscriptBox[\\(\[Rho]\\), \\(2\\), \\(2\\)])\\)\\)]\\)\"",
         TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, DisplayFunction :> 
     Identity, FaceGridsStyle -> Automatic, ImageSize -> Large, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "RotationControl" -> "Globe"}, 
     PlotRange -> {{1., 12.}, {1., 
      12.}, {-18.0258410895726, -0.008755878103868757}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "1", "2", "3", "4", "5", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Psi]\\), \\(variational\\)]\\)\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
                    "Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    Hue[0.7, 1, 1], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]}, {
                    "Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.12202865833333335`, 0.14283175833333334`, 0.064190125], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1830429875`", ",", "0.21424763749999998`", ",",
                     "0.0962851875`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.14004525`", ",", "0.17289224999999997`", ",", 
                    "0.048721249999999994`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30756835`", ",", "0.18676585`", ",", 
                    "0.147065275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2306315`", ",", "0.0964065`", ",", 
                    "0.05229475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2742634666666667, 0.25883306666666667`, 
                    0.32036026666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.41139519999999996`", ",", "0.3882496`", ",", 
                    "0.4805404`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.41139519999999996`, 0.3882496, 0.4805404], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.7, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[
                    0.6999999999999998, 1., 0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.7`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.7, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.7, 1, 1], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.264244, 0.235312, 0.3506755], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17616266666666666`, 0.15687466666666666`, 
                    0.23378366666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.264244`", ",", "0.235312`", ",", 
                    "0.3506755`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.264244, 0.235312, 0.3506755]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.264244, 0.235312, 0.3506755], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.23627719999999997`, 0.19087386666666667`, 
                    0.14698493333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.35441579999999995`", ",", "0.2863108`", ",", 
                    "0.2204774`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.35441579999999995`, 0.2863108, 0.2204774], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.3`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1286798333333333, 0.07192566666666667, 
                    0.017064500000000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19301974999999993`", ",", "0.1078885`", ",", 
                    "0.02559675`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19301974999999993`, 0.1078885, 0.02559675], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.885893417855555*^9, 3.885893489742448*^9, 3.885973773243619*^9, 
   3.886029759588313*^9, 3.886029804273608*^9, 3.886029870693363*^9, 
   3.886029942135857*^9, {3.886030374355723*^9, 3.886030394440476*^9}, 
   3.886030462586419*^9, 3.88603073926197*^9, 3.886030827859376*^9, {
   3.88603102398645*^9, 3.886031061347703*^9}, {3.886031142256096*^9, 
   3.886031157587884*^9}, {3.8860313190100603`*^9, 3.886031399078905*^9}, 
   3.8860314318359118`*^9, 3.886031708129878*^9, 3.886032023730515*^9, 
   3.886032687641053*^9, 3.886032808261466*^9, 3.886035984925419*^9, 
   3.886036274466262*^9, 3.8860442710083447`*^9, 3.8860448851758966`*^9, {
   3.886044927085291*^9, 3.886044953884457*^9}, 3.8860451363249407`*^9, 
   3.886045336083129*^9, 3.886045483519207*^9, 3.886045678972992*^9, 
   3.886045719903119*^9, 3.886045838343248*^9, {3.886045872840424*^9, 
   3.8860459533051863`*^9}, 3.8860460837011023`*^9, {3.886046150007551*^9, 
   3.886046171049452*^9}, 3.88604797137118*^9, 3.886048942200698*^9, 
   3.886048979269897*^9, 3.88604911871371*^9, 3.886049217579173*^9, 
   3.886050641778501*^9, 3.886050841036642*^9, 3.886051217934525*^9, 
   3.886051518353661*^9, 3.8860515764433107`*^9, 3.886051798135643*^9, {
   3.886051915491355*^9, 3.886051944178385*^9}, 3.886052034619315*^9, 
   3.886053610238865*^9, {3.886053761624339*^9, 3.88605378001589*^9}, 
   3.88605398366967*^9, 3.8860540485591373`*^9, 3.8860552050391417`*^9, 
   3.886055240412912*^9, 3.8860553109904118`*^9, 3.886055420175798*^9, 
   3.886055486372675*^9, 3.886055615779456*^9, 3.8861330083715143`*^9, 
   3.886133097381796*^9, 3.886133169911264*^9, 3.886133239709468*^9, 
   3.88613331276291*^9, 3.886133377998407*^9, 3.8861335335193443`*^9, 
   3.8862226887552853`*^9, 3.8862245415077753`*^9, 3.8862245787894907`*^9, 
   3.886225309119186*^9, 3.886225357004081*^9, 3.886225488982327*^9, 
   3.8862257298744164`*^9, {3.886225760319159*^9, 3.886225860346689*^9}, {
   3.886225893141335*^9, 3.8862259136470623`*^9}, 3.886225957815997*^9, {
   3.886225993727564*^9, 3.886226050023541*^9}, {3.886226110750787*^9, 
   3.886226160721549*^9}, 3.88622620690036*^9, {3.886747307514124*^9, 
   3.88674733079541*^9}, {3.886748804443623*^9, 3.886748828184989*^9}, 
   3.88674896904885*^9},
 CellLabel->
  "Out[470]=",ExpressionUUID->"cee44483-052b-4433-96cd-1d0534bb1346"]
}, Open  ]],

Cell[TextData[{
 "symmetry of the wave function:\nfirst, and foremost, I must not succumb to \
the fallacy of confusing rotational symmetry of a S-wave state, i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", "total"], "=", 
    SuperscriptBox[
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"[", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"[", 
                RowBox[{
                 SubscriptBox["l", "1"], "\[CircleTimes]", 
                 SubscriptBox["l", "2"]}], "]"}], 
               SubscriptBox["l", "12"]], "\[CircleTimes]", 
              SubscriptBox["l", "3"]}], "]"}], 
            SubscriptBox["l", 
             RowBox[{
              RowBox[{"(", "12", ")"}], "3"}]]], "\[CircleTimes]", 
           SubscriptBox["l", "4"]}], "]"}], 
         SubscriptBox["l", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", "12", ")"}], "3"}], ")"}], "4"}]]], 
        "\[CircleTimes]"}], "..."}], "]"}], 
     SubscriptBox["L", "total"]]}], TraditionalForm]],ExpressionUUID->
  "1942c55f-6e0e-43b5-bb55-5a78b2b21915"],
 " , with permutation symmetry.\nIn principle, the variational wave function \
is not guaranteed to be symmetric wrt. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Rho]", "1"], "\[LeftRightArrow]", 
    SubscriptBox["\[Rho]", "2"]}], TraditionalForm]],ExpressionUUID->
  "0500b7d2-a570-4ba7-b30f-11e57ff01fe6"],
 " interchange. The variational code obtains its optimal solution by \
anti-symmetrizing the total wave function,\nwhich means that as long as the \
number of particles is less than the number of fermionic species, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "<", 
    SubscriptBox["N", "F"]}], TraditionalForm]],ExpressionUUID->
  "7899faa5-e52a-4bce-abfb-25058cb2693a"],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "F"], "=", "4"}], TraditionalForm]],ExpressionUUID->
  "2e8d4745-44e5-406f-8ed7-4607a9c0bc2b"],
 " for the two nuclear degrees of freedom, a totally anti-symmetric internal \
spin-isospin\nwave function allows for a totally symmetric -- now wrt. any ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[GothicCapitalP]", 
     RowBox[{"(", "ermutation", ")"}]}], "\[Element]", 
    RowBox[{
     SubscriptBox["\[GothicCapitalS]", "A"], "(", 
     RowBox[{"ymmetric", " ", "group"}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"be08db87-edd5-41d6-a72d-73cf4ed9d3af"],
 " -- spatial wave function.\nThe expansion coefficients in combination with \
a certain pair (for A=3) of width parameters (",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Gamma]", "i", 
    RowBox[{"(", 
     RowBox[{"1", ",", "2"}], ")"}]], TraditionalForm]],ExpressionUUID->
  "90bbac39-b0c0-45e7-b09d-054ea8ebd447"],
 ") does not reflect this symmetry explicitly if we choose different \
numerical values for ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Gamma]", "i", 
    RowBox[{"(", "1", ")"}]], TraditionalForm]],ExpressionUUID->
  "dcb5ecd1-a2fd-48a3-84be-91ba9b78e915"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Gamma]", "i", 
    RowBox[{"(", "2", ")"}]], TraditionalForm]],ExpressionUUID->
  "7674b7d8-3263-454f-acb8-b51924c135c9"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Psi]", "=", 
    RowBox[{
     SuperscriptBox["\[GothicCapitalA]", "-"], "[", " ", 
     RowBox[{"\[CapitalXi]", "\[CircleTimes]", 
      RowBox[{"\[Sum]", 
       RowBox[{
        RowBox[{
         SubscriptBox["c", "i"], "\[CenterDot]", 
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"-", 
            SubsuperscriptBox["\[Gamma]", "i", 
             RowBox[{"(", "1", ")"}]]}], 
           SubsuperscriptBox["\[Rho]", "1", "2"]}]]}], 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", 
           SubsuperscriptBox["\[Gamma]", "i", 
            RowBox[{"(", "2", ")"}]]}], 
          SubsuperscriptBox["\[Rho]", "2", "2"]}]]}]}]}], " ", "]"}]}], 
   TraditionalForm]],ExpressionUUID->"f9e5e5fe-30fa-4106-900c-d8b06826b0c1"],
 "\nHence, we must adapt our cluster basis to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[GothicCapitalA]", "+"], "[", 
    RowBox[{"\[Sum]", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "i"], "\[CenterDot]", 
       SuperscriptBox["e", 
        RowBox[{
         RowBox[{"-", 
          SubsuperscriptBox["\[Gamma]", "i", 
           RowBox[{"(", "1", ")"}]]}], 
         SubsuperscriptBox["\[Rho]", "1", "2"]}]]}], 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", 
         SubsuperscriptBox["\[Gamma]", "i", 
          RowBox[{"(", "2", ")"}]]}], 
        SubsuperscriptBox["\[Rho]", "2", "2"]}]]}]}], " ", "]"}], 
   TraditionalForm]],ExpressionUUID->"e4140b28-fc8a-471d-827f-75d6eb9c8777"],
 ", i.e., the symmetrized spatial wave function.\nECCE:\ni)  if a large set \
of widths was chosen, the symmetrization might already be realized (see \
examples below);\nii) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["r", "_"], "1", "2"], "+", 
     SubsuperscriptBox[
      OverscriptBox["r", "_"], "2", "2"], "+", 
     SubsuperscriptBox[
      OverscriptBox["r", "_"], "3", "2"]}], "=", 
    RowBox[{
     SubsuperscriptBox[
      OverscriptBox["\[Rho]", "\[RightVector]"], "1", "2"], "+", 
     SubsuperscriptBox[
      OverscriptBox["\[Rho]", "\[RightVector]"], "2", "2"]}]}], 
   TraditionalForm]],ExpressionUUID->"3c6f6cd6-e305-48a4-ab5a-0d3175cebcc6"],
 " (see ",
 StyleBox["coordinate_trafos.nb",
  FontFamily->"Universalis ADF Std",
  FontWeight->"Bold"],
 ");"
}], "Text",
 CellChangeTimes->{
  3.8860328580470047`*^9, {3.8860328898220673`*^9, 3.886032904386814*^9}, {
   3.88603300180194*^9, 3.886033111090735*^9}, {3.886033256254785*^9, 
   3.8860333934339437`*^9}, {3.886033435226972*^9, 3.8860335373070383`*^9}, {
   3.886033606393848*^9, 3.886033665968042*^9}, {3.8860337162655*^9, 
   3.8860337756958513`*^9}, {3.886033965373715*^9, 3.886033966558546*^9}, {
   3.886034160506706*^9, 3.8860344123316917`*^9}, {3.8860346422982817`*^9, 
   3.886034683153977*^9}, {3.8860347679067507`*^9, 3.8860348206198483`*^9}, {
   3.88603489931005*^9, 3.886035161189878*^9}, {3.88603519958349*^9, 
   3.886035495717197*^9}, {3.886035548110045*^9, 3.88603556516949*^9}, {
   3.88603570135117*^9, 3.886035806595764*^9}, {3.8860358521389713`*^9, 
   3.886035883230975*^9}},ExpressionUUID->"124754ec-269c-4607-b995-\
ae11898c43e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JacobiWavefunctionSymGrid", "//", "MatrixForm"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacobiWavefunctionGrid", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.886026405255823*^9, 3.8860264521937647`*^9}, 
   3.886044154048481*^9},
 CellLabel->
  "In[791]:=",ExpressionUUID->"16a80f13-56d3-4766-9a5b-0d49e75c13d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.4912620144916233`", "2.794851948391167`", "1.5077758410224966`", 
      "0.6864659913422009`", "0.3573651157265153`", "0.1979522681663287`", 
      "0.08677226641798318`", "0.011091726091419571`", 
      RowBox[{"-", "0.030334994342097684`"}], 
      RowBox[{"-", "0.04359095781307198`"}], 
      RowBox[{"-", "0.03787671160915703`"}], 
      RowBox[{"-", "0.022595802900317322`"}], 
      RowBox[{"-", "0.005339951605463598`"}], "0.008976090503000706`", 
      "0.01804390653129259`", "0.021549860017917147`", 
      "0.020398678899078076`", "0.016024733869362418`", 
      "0.009904442985789212`", "0.003279979076169838`", 
      RowBox[{"-", "0.002949758485431573`"}], 
      RowBox[{"-", "0.008230018223642822`"}], 
      RowBox[{"-", "0.012294833915025971`"}], 
      RowBox[{"-", "0.015092038250346822`"}], 
      RowBox[{"-", "0.01671023418411791`"}]},
     {"2.867246106617216`", "2.2619278596397816`", "1.1779434430857225`", 
      "0.5200091337417292`", "0.27179004506571974`", "0.1567805604585234`", 
      "0.07670716532831275`", "0.021248601079808225`", 
      RowBox[{"-", "0.010406587163134832`"}], 
      RowBox[{"-", "0.022350807307166307`"}], 
      RowBox[{"-", "0.020866428423718098`"}], 
      RowBox[{"-", "0.012412514894196794`"}], 
      RowBox[{"-", "0.0022267733376519854`"}], "0.006279749624012797`", 
      "0.01148153157867003`", "0.013122827173829423`", 
      "0.011786600493498717`", "0.008422477146020927`", 
      "0.0040122086294775705`", 
      RowBox[{"-", "0.0006200375499236188`"}], 
      RowBox[{"-", "0.0048826480003006595`"}], 
      RowBox[{"-", "0.008417313021299777`"}], 
      RowBox[{"-", "0.011061170696929993`"}], 
      RowBox[{"-", "0.01279546995291586`"}], 
      RowBox[{"-", "0.013695567666513623`"}]},
     {"1.4638071166840871`", "1.1511294964275023`", "0.6087309928985357`", 
      "0.2933558655117061`", "0.17539274911047237`", "0.11716666590687214`", 
      "0.07398206313508135`", "0.041829549713556916`", 
      "0.020722507125445305`", "0.00908042382990248`", "0.00424191260190492`",
       "0.003378828340078467`", "0.004140387614712074`", 
      "0.0049443843739214715`", "0.004977778776844836`", 
      "0.0040264508944318`", "0.0022493988306443694`", 
      RowBox[{"-", "0.000024579005278934177`"}], 
      RowBox[{"-", "0.002442079313193171`"}], 
      RowBox[{"-", "0.004708126818874564`"}], 
      RowBox[{"-", "0.006619675967229242`"}], 
      RowBox[{"-", "0.008066958145110069`"}], 
      RowBox[{"-", "0.009018019403305697`"}], 
      RowBox[{"-", "0.00949729249720647`"}], 
      RowBox[{"-", "0.00956461242990311`"}]},
     {"0.5482090598643864`", "0.4484704691173992`", "0.2747302700862419`", 
      "0.16847549059864528`", "0.11949201201634657`", "0.08762938975757777`", 
      "0.06132837768709145`", "0.04042761494389814`", "0.02528535871009686`", 
      "0.015296651493096732`", "0.009246955263206484`", 
      "0.005776533564056277`", "0.00371240590746152`", 
      "0.002227127647006332`", "0.0008529076223451979`", 
      RowBox[{"-", "0.0005910739450949976`"}], 
      RowBox[{"-", "0.00210171756555609`"}], 
      RowBox[{"-", "0.0035868356934078004`"}], 
      RowBox[{"-", "0.004933769128500799`"}], 
      RowBox[{"-", "0.006049224372746738`"}], 
      RowBox[{"-", "0.006875959527301772`"}], 
      RowBox[{"-", "0.007394347861473732`"}], 
      RowBox[{"-", "0.0076159636484839695`"}], 
      RowBox[{"-", "0.007574252590226784`"}], 
      RowBox[{"-", "0.007315289382677548`"}]},
     {"0.24072478528426297`", "0.21146962514882237`", "0.15818928224309817`", 
      "0.11963970428627965`", "0.09409193536744957`", "0.07253916132900803`", 
      "0.05337263520074277`", "0.037431133610668466`", 
      "0.025154280505446304`", "0.016307626712443787`", 
      "0.010238357348257978`", "0.006159578469259441`", 
      "0.003358091486025087`", "0.0013004614476705035`", 
      RowBox[{"-", "0.00034755688553819307`"}], 
      RowBox[{"-", "0.0017550219787063695`"}], 
      RowBox[{"-", "0.0029802313283049863`"}], 
      RowBox[{"-", "0.0040226728103971085`"}], 
      RowBox[{"-", "0.004861513423605159`"}], 
      RowBox[{"-", "0.005478625598819308`"}], 
      RowBox[{"-", "0.005868966218393661`"}], 
      RowBox[{"-", "0.00604259387703008`"}], 
      RowBox[{"-", "0.006022186059736253`"}], 
      RowBox[{"-", "0.005838803590686003`"}], 
      RowBox[{"-", "0.005527540702627663`"}]},
     {"0.13091456249702182`", "0.12344589100293693`", "0.10773508660928817`", 
      "0.09135789945017489`", "0.0750691134018271`", "0.05890921106131539`", 
      "0.04396456817255753`", "0.031218916469145375`", "0.02109641571895359`",
       "0.013516428480909237`", "0.008082412259861414`", 
      "0.004276994311294797`", "0.0016078541869715475`", 
      RowBox[{"-", "0.00031350379675936017`"}], 
      RowBox[{"-", "0.0017513084959127352`"}], 
      RowBox[{"-", "0.0028620336096742923`"}], 
      RowBox[{"-", "0.003726188190162331`"}], 
      RowBox[{"-", "0.004380122454943237`"}], 
      RowBox[{"-", "0.004840307258790267`"}], 
      RowBox[{"-", "0.0051184204112351105`"}], 
      RowBox[{"-", "0.005228750265940514`"}], 
      RowBox[{"-", "0.005190438315460839`"}], 
      RowBox[{"-", "0.005026869957324979`"}], 
      RowBox[{"-", "0.004763864065083672`"}], 
      RowBox[{"-", "0.004427651765511838`"}]},
     {"0.07917315445232152`", "0.07818209959222965`", "0.07414362635712195`", 
      "0.0659026734370755`", "0.054667515186590854`", "0.042629315169436834`",
       "0.031333294798317896`", "0.021630247963037568`", 
      "0.013868484691389009`", "0.00801779465449893`", 
      "0.0038097426326207653`", "0.0008779033373248834`", 
      RowBox[{"-", "0.0011359306694112702`"}], 
      RowBox[{"-", "0.0025227197618312405`"}], 
      RowBox[{"-", "0.003488633896257902`"}], 
      RowBox[{"-", "0.0041641942905775164`"}], 
      RowBox[{"-", "0.004624910671276902`"}], 
      RowBox[{"-", "0.00491262300656656`"}], 
      RowBox[{"-", "0.005052126315492715`"}], 
      RowBox[{"-", "0.005061761958221152`"}], 
      RowBox[{"-", "0.004958891257433794`"}], 
      RowBox[{"-", "0.004761894743213019`"}], 
      RowBox[{"-", "0.004490218600408183`"}], 
      RowBox[{"-", "0.004163558918455707`"}], 
      RowBox[{"-", "0.003800840161254566`"}]},
     {"0.05195132285660501`", "0.05224306203288573`", "0.05100576582905773`", 
      "0.04586316409014321`", "0.03782596527186064`", "0.02899639933484997`", 
      "0.02068464422891291`", "0.013546191797355278`", 
      "0.007845916241909032`", "0.0035688248746536637`", 
      "0.0005231347233187876`", 
      RowBox[{"-", "0.0015577028972375178`"}], 
      RowBox[{"-", "0.0029372928823676787`"}], 
      RowBox[{"-", "0.0038325682680451626`"}], 
      RowBox[{"-", "0.004400099360145742`"}], 
      RowBox[{"-", "0.0047418547364031045`"}], 
      RowBox[{"-", "0.004919491015971898`"}], 
      RowBox[{"-", "0.004969380595167165`"}], 
      RowBox[{"-", "0.004914434427810948`"}], 
      RowBox[{"-", "0.0047717247169968054`"}], 
      RowBox[{"-", "0.004556519494899709`"}], 
      RowBox[{"-", "0.004283870031607552`"}], 
      RowBox[{"-", "0.003968813108188879`"}], 
      RowBox[{"-", "0.0036259499929858583`"}], 
      RowBox[{"-", "0.0032688608820295455`"}]},
     {"0.03576728168028744`", "0.03601222027161899`", "0.03518852213709502`", 
      "0.03150719219352429`", "0.025683708332761474`", 
      "0.019270485266968382`", "0.013235341154679935`", 
      "0.00806010844048993`", "0.003940692976551663`", 
      "0.0008689375656200016`", 
      RowBox[{"-", "0.0012928429121344678`"}], 
      RowBox[{"-", "0.0027380203962672264`"}], 
      RowBox[{"-", "0.0036592007136096783`"}], 
      RowBox[{"-", "0.004216217361924572`"}], 
      RowBox[{"-", "0.004525803700433731`"}], 
      RowBox[{"-", "0.004665361184251463`"}], 
      RowBox[{"-", "0.004682972918749556`"}], 
      RowBox[{"-", "0.004608049863944563`"}], 
      RowBox[{"-", "0.004459756886447118`"}], 
      RowBox[{"-", "0.004252482839381847`"}], 
      RowBox[{"-", "0.0039987746326379065`"}], 
      RowBox[{"-", "0.003710537841587922`"}], 
      RowBox[{"-", "0.0033992532537478544`"}], 
      RowBox[{"-", "0.0030757470334988445`"}], 
      RowBox[{"-", "0.002749838164297263`"}]},
     {"0.024562215020703087`", "0.024580569276288235`", 
      "0.023745844854411138`", "0.021003608312857212`", 
      "0.016823548475368807`", "0.012245769669798498`", 
      "0.007943557548463745`", "0.004260864580967592`", 
      "0.0013399546685211356`", 
      RowBox[{"-", "0.0008227328188129972`"}], 
      RowBox[{"-", "0.002323982567328223`"}], 
      RowBox[{"-", "0.0033013851277571876`"}], 
      RowBox[{"-", "0.003893089431607171`"}], 
      RowBox[{"-", "0.004214796429598318`"}], 
      RowBox[{"-", "0.004352096087306046`"}], 
      RowBox[{"-", "0.004362825637493817`"}], 
      RowBox[{"-", "0.004283917819322701`"}], 
      RowBox[{"-", "0.004138774428259584`"}], 
      RowBox[{"-", "0.0039431406501353305`"}], 
      RowBox[{"-", "0.003708945963680046`"}], 
      RowBox[{"-", "0.0034463922796241805`"}], 
      RowBox[{"-", "0.003164841378123454`"}], 
      RowBox[{"-", "0.0028730189730306116`"}], 
      RowBox[{"-", "0.0025789066355353316`"}], 
      RowBox[{"-", "0.0022895449116745476`"}]},
     {"0.016023070068503554`", "0.015876066126399233`", 
      "0.015040119799041053`", "0.013014207746530754`", 
      "0.010088572331532375`", "0.0069139016329294286`", 
      "0.003937617985369438`", "0.0013979159471143527`", 
      RowBox[{"-", "0.0006042809344393322`"}], 
      RowBox[{"-", "0.002069451138637703`"}], 
      RowBox[{"-", "0.003063551382533091`"}], 
      RowBox[{"-", "0.003681882553478197`"}], 
      RowBox[{"-", "0.00402117805995961`"}], 
      RowBox[{"-", "0.004163468397204291`"}], 
      RowBox[{"-", "0.004170478579692763`"}], 
      RowBox[{"-", "0.004084948040902699`"}], 
      RowBox[{"-", "0.003935100479655654`"}], 
      RowBox[{"-", "0.0037395496661036674`"}], 
      RowBox[{"-", "0.003511246248395211`"}], 
      RowBox[{"-", "0.0032600858373137147`"}], 
      RowBox[{"-", "0.0029943549604603027`"}], 
      RowBox[{"-", "0.0027213783499259406`"}], 
      RowBox[{"-", "0.002447709962570161`"}], 
      RowBox[{"-", "0.0021791134683636026`"}], 
      RowBox[{"-", "0.0019204798805355868`"}]},
     {"0.009414044225654953`", "0.00918271961807336`", 
      "0.008407691452014645`", "0.006946567531912575`", 
      "0.0049667882997339215`", "0.002845448186349695`", 
      "0.0008659504256454911`", 
      RowBox[{"-", "0.0008121511869807704`"}], 
      RowBox[{"-", "0.002119194493006397`"}], 
      RowBox[{"-", "0.0030539009633117004`"}], 
      RowBox[{"-", "0.00365976373266543`"}], 
      RowBox[{"-", "0.004000979691249684`"}], 
      RowBox[{"-", "0.004143695073268607`"}], 
      RowBox[{"-", "0.004144987464602647`"}], 
      RowBox[{"-", "0.004048819592548971`"}], 
      RowBox[{"-", "0.003886617886562376`"}], 
      RowBox[{"-", "0.003680003331557133`"}], 
      RowBox[{"-", "0.0034438860143644863`"}], 
      RowBox[{"-", "0.0031889949976672224`"}], 
      RowBox[{"-", "0.002923579277780922`"}], 
      RowBox[{"-", "0.0026543806776194445`"}], 
      RowBox[{"-", "0.002387103738338393`"}], 
      RowBox[{"-", "0.0021265964660022816`"}], 
      RowBox[{"-", "0.0018768954006144706`"}], 
      RowBox[{"-", "0.0016412270138070277`"}]},
     {"0.004465868148582003`", "0.004209855265532546`", 
      "0.003536391588091949`", "0.0025103487728982904`", 
      "0.0012199653353450227`", 
      RowBox[{"-", "0.00013844603958655105`"}], 
      RowBox[{"-", "0.0013949269287044034`"}], 
      RowBox[{"-", "0.0024461598513103736`"}], 
      RowBox[{"-", "0.003245343376598478`"}], 
      RowBox[{"-", "0.0037904327864280393`"}], 
      RowBox[{"-", "0.004109253213856064`"}], 
      RowBox[{"-", "0.004244030500627826`"}], 
      RowBox[{"-", "0.004239179622334322`"}], 
      RowBox[{"-", "0.004133960478473463`"}], 
      RowBox[{"-", "0.003959571217216706`"}], 
      RowBox[{"-", "0.003739227279891124`"}], 
      RowBox[{"-", "0.003489676828465879`"}], 
      RowBox[{"-", "0.0032230219903032916`"}], 
      RowBox[{"-", "0.0029482501572440454`"}], 
      RowBox[{"-", "0.0026722944436526216`"}], 
      RowBox[{"-", "0.0024006716360426184`"}], 
      RowBox[{"-", "0.002137825497952434`"}], 
      RowBox[{"-", "0.001887298831656655`"}], 
      RowBox[{"-", "0.0016518227904904015`"}], 
      RowBox[{"-", "0.001433376213664142`"}]},
     {"0.0009614579022310931`", "0.0007164447616596112`", 
      "0.00015818475117542174`", 
      RowBox[{"-", "0.0005454042896635651`"}], 
      RowBox[{"-", "0.0013539593866367687`"}], 
      RowBox[{"-", "0.002183203404692835`"}], 
      RowBox[{"-", "0.002937756374684021`"}], 
      RowBox[{"-", "0.0035528179688991434`"}], 
      RowBox[{"-", "0.0039976566908419406`"}], 
      RowBox[{"-", "0.00427009008729104`"}], 
      RowBox[{"-", "0.004387505551887153`"}], 
      RowBox[{"-", "0.004377256354674404`"}], 
      RowBox[{"-", "0.004268929687082502`"}], 
      RowBox[{"-", "0.004089535172235878`"}], 
      RowBox[{"-", "0.0038614060536057626`"}], 
      RowBox[{"-", "0.0036019665358946423`"}], 
      RowBox[{"-", "0.003324442091188716`"}], 
      RowBox[{"-", "0.003038829439046289`"}], 
      RowBox[{"-", "0.0027527573527153875`"}], 
      RowBox[{"-", "0.0024721153319206155`"}], 
      RowBox[{"-", "0.0022014641810662715`"}], 
      RowBox[{"-", "0.0019442915733658154`"}], 
      RowBox[{"-", "0.0017031755379436082`"}], 
      RowBox[{"-", "0.0014799008995902757`"}], 
      RowBox[{"-", "0.0012755551775008`"}]},
     {
      RowBox[{"-", "0.0013529648046558256`"}], 
      RowBox[{"-", "0.0015696895629490133`"}], 
      RowBox[{"-", "0.002017895452785551`"}], 
      RowBox[{"-", "0.0024918359719706025`"}], 
      RowBox[{"-", "0.0029779988125170015`"}], 
      RowBox[{"-", "0.003456544560837301`"}], 
      RowBox[{"-", "0.0038785520609950137`"}], 
      RowBox[{"-", "0.004204478469843958`"}], 
      RowBox[{"-", "0.004414452703949611`"}], 
      RowBox[{"-", "0.004506491748252254`"}], 
      RowBox[{"-", "0.004491337308567252`"}], 
      RowBox[{"-", "0.004386678285248301`"}], 
      RowBox[{"-", "0.004212357704498422`"}], 
      RowBox[{"-", "0.003987240151051432`"}], 
      RowBox[{"-", "0.0037276705149352912`"}], 
      RowBox[{"-", "0.0034470669761172386`"}], 
      RowBox[{"-", "0.003156129859258718`"}], 
      RowBox[{"-", "0.0028632731880079277`"}], 
      RowBox[{"-", "0.002575058135979253`"}], 
      RowBox[{"-", "0.0022965443125380247`"}], 
      RowBox[{"-", "0.0020315521286227304`"}], 
      RowBox[{"-", "0.001782858639631397`"}], 
      RowBox[{"-", "0.0015523516551796356`"}], 
      RowBox[{"-", "0.0013411597032499337`"}], 
      RowBox[{"-", "0.0011497677659728588`"}]},
     {
      RowBox[{"-", "0.0027495931499667064`"}], 
      RowBox[{"-", "0.0029325818256852147`"}], 
      RowBox[{"-", "0.003285455047329856`"}], 
      RowBox[{"-", "0.0036015369919060575`"}], 
      RowBox[{"-", "0.0038809986320694724`"}], 
      RowBox[{"-", "0.00413756161004204`"}], 
      RowBox[{"-", "0.00434958573022318`"}], 
      RowBox[{"-", "0.004493410025082156`"}], 
      RowBox[{"-", "0.004556246223013104`"}], 
      RowBox[{"-", "0.0045364519090510475`"}], 
      RowBox[{"-", "0.004440716432467922`"}], 
      RowBox[{"-", "0.004280673393034377`"}], 
      RowBox[{"-", "0.004069959248224879`"}], 
      RowBox[{"-", "0.003822155718060715`"}], 
      RowBox[{"-", "0.0035496271708873317`"}], 
      RowBox[{"-", "0.003263033643068075`"}], 
      RowBox[{"-", "0.0029712501794781844`"}], 
      RowBox[{"-", "0.0026814787688356706`"}], 
      RowBox[{"-", "0.002399424512107844`"}], 
      RowBox[{"-", "0.0021294773669834253`"}], 
      RowBox[{"-", "0.0018748813401236828`"}], 
      RowBox[{"-", "0.0016378897396617262`"}], 
      RowBox[{"-", "0.0014199087976338681`"}], 
      RowBox[{"-", "0.0012216310666674614`"}], 
      RowBox[{"-", "0.0010431587304654756`"}]},
     {
      RowBox[{"-", "0.003484051076715178`"}], 
      RowBox[{"-", "0.003634280774135809`"}], 
      RowBox[{"-", "0.003909247499612418`"}], 
      RowBox[{"-", "0.004119734475189439`"}], 
      RowBox[{"-", "0.004271915186580724`"}], 
      RowBox[{"-", "0.0043943085440088`"}], 
      RowBox[{"-", "0.004480205740104462`"}], 
      RowBox[{"-", "0.004515551395497579`"}], 
      RowBox[{"-", "0.004492045825193967`"}], 
      RowBox[{"-", "0.004408415039380935`"}], 
      RowBox[{"-", "0.004268973168813523`"}], 
      RowBox[{"-", "0.004081666986044212`"}], 
      RowBox[{"-", "0.0038562597194554903`"}], 
      RowBox[{"-", "0.0036029435702570646`"}], 
      RowBox[{"-", "0.0033314341426222403`"}], 
      RowBox[{"-", "0.0030504643261109825`"}], 
      RowBox[{"-", "0.002767553683900416`"}], 
      RowBox[{"-", "0.0024889453223924086`"}], 
      RowBox[{"-", "0.0022196372166128735`"}], 
      RowBox[{"-", "0.001963465666276`"}], 
      RowBox[{"-", "0.0017232175700098557`"}], 
      RowBox[{"-", "0.0015007575294397235`"}], 
      RowBox[{"-", "0.001297159996326399`"}], 
      RowBox[{"-", "0.0011128391535261246`"}], 
      RowBox[{"-", "0.0009476714179594181`"}]},
     {
      RowBox[{"-", "0.003771315235661282`"}], 
      RowBox[{"-", "0.0038924914344758465`"}], 
      RowBox[{"-", "0.004105683865190624`"}], 
      RowBox[{"-", "0.004246577375295315`"}], 
      RowBox[{"-", "0.004323197468689525`"}], 
      RowBox[{"-", "0.004368220360788791`"}], 
      RowBox[{"-", "0.004382355808818478`"}], 
      RowBox[{"-", "0.004357166013959701`"}], 
      RowBox[{"-", "0.004287146654088243`"}], 
      RowBox[{"-", "0.004171365265448523`"}], 
      RowBox[{"-", "0.0040127887156214785`"}], 
      RowBox[{"-", "0.003817153588064969`"}], 
      RowBox[{"-", "0.0035918142806400373`"}], 
      RowBox[{"-", "0.0033447675413632687`"}], 
      RowBox[{"-", "0.003083924868140821`"}], 
      RowBox[{"-", "0.0028166237355944624`"}], 
      RowBox[{"-", "0.002549333673880569`"}], 
      RowBox[{"-", "0.00228750830164883`"}], 
      RowBox[{"-", "0.002035542132559935`"}], 
      RowBox[{"-", "0.001796800347219621`"}], 
      RowBox[{"-", "0.0015736968519423538`"}], 
      RowBox[{"-", "0.0013678010174281107`"}], 
      RowBox[{"-", "0.0011799577100620206`"}], 
      RowBox[{"-", "0.0010104092708879905`"}], 
      RowBox[{"-", "0.0008589119180537129`"}]},
     {
      RowBox[{"-", "0.0037765037473572903`"}], 
      RowBox[{"-", "0.0038729396671806585`"}], 
      RowBox[{"-", "0.004037521319859538`"}], 
      RowBox[{"-", "0.004132452780161285`"}], 
      RowBox[{"-", "0.0041655634572305865`"}], 
      RowBox[{"-", "0.0041681268032965684`"}], 
      RowBox[{"-", "0.00414396142983059`"}], 
      RowBox[{"-", "0.004087835445650506`"}], 
      RowBox[{"-", "0.003995984546778657`"}], 
      RowBox[{"-", "0.00386777154006204`"}], 
      RowBox[{"-", "0.0037054141731474905`"}], 
      RowBox[{"-", "0.0035133166514163894`"}], 
      RowBox[{"-", "0.0032973035063875466`"}], 
      RowBox[{"-", "0.0030638989838182376`"}], 
      RowBox[{"-", "0.0028197277111093547`"}], 
      RowBox[{"-", "0.002571063212462844`"}], 
      RowBox[{"-", "0.0023235211592949733`"}], 
      RowBox[{"-", "0.0020818796649810494`"}], 
      RowBox[{"-", "0.0018500031476461158`"}], 
      RowBox[{"-", "0.0016308448945822399`"}], 
      RowBox[{"-", "0.0014265044748084114`"}], 
      RowBox[{"-", "0.0012383188708338978`"}], 
      RowBox[{"-", "0.0010669701659616144`"}], 
      RowBox[{"-", "0.0009125971632777773`"}], 
      RowBox[{"-", "0.0007749026750945233`"}]},
     {
      RowBox[{"-", "0.0036169568832669042`"}], 
      RowBox[{"-", "0.003692596500944787`"}], 
      RowBox[{"-", "0.003818566154874185`"}], 
      RowBox[{"-", "0.0038824668356075153`"}], 
      RowBox[{"-", "0.00389104477397749`"}], 
      RowBox[{"-", "0.0038715861628000527`"}], 
      RowBox[{"-", "0.0038287029181029533`"}], 
      RowBox[{"-", "0.003758976592500759`"}], 
      RowBox[{"-", "0.0036597502768050505`"}], 
      RowBox[{"-", "0.0035306343208967674`"}], 
      RowBox[{"-", "0.003373428163901732`"}], 
      RowBox[{"-", "0.0031917038187336453`"}], 
      RowBox[{"-", "0.002990264608534604`"}], 
      RowBox[{"-", "0.0027745873637474027`"}], 
      RowBox[{"-", "0.0025503206625543053`"}], 
      RowBox[{"-", "0.0023228799928211906`"}], 
      RowBox[{"-", "0.0020971554225629793`"}], 
      RowBox[{"-", "0.001877329403758496`"}], 
      RowBox[{"-", "0.0016667908262645145`"}], 
      RowBox[{"-", "0.0014681252658555863`"}], 
      RowBox[{"-", "0.0012831595392303733`"}], 
      RowBox[{"-", "0.0011130401491589125`"}], 
      RowBox[{"-", "0.0009583287783041858`"}], 
      RowBox[{"-", "0.0008191024437278198`"}], 
      RowBox[{"-", "0.0006950502352826604`"}]},
     {
      RowBox[{"-", "0.0033705043000346164`"}], 
      RowBox[{"-", "0.0034286311221611624`"}], 
      RowBox[{"-", "0.0035233469450697396`"}], 
      RowBox[{"-", "0.0035654429452720935`"}], 
      RowBox[{"-", "0.0035602890926526207`"}], 
      RowBox[{"-", "0.0035302369808627746`"}], 
      RowBox[{"-", "0.0034795477542007985`"}], 
      RowBox[{"-", "0.003405845054150094`"}], 
      RowBox[{"-", "0.0033072102319743027`"}], 
      RowBox[{"-", "0.003183458918687869`"}], 
      RowBox[{"-", "0.0030361463009746853`"}], 
      RowBox[{"-", "0.002868287902238465`"}], 
      RowBox[{"-", "0.0026839537622168766`"}], 
      RowBox[{"-", "0.002487820991480043`"}], 
      RowBox[{"-", "0.0022847504603921978`"}], 
      RowBox[{"-", "0.0020794315554245497`"}], 
      RowBox[{"-", "0.0018761174274382578`"}], 
      RowBox[{"-", "0.001678455094030554`"}], 
      RowBox[{"-", "0.001489401659728263`"}], 
      RowBox[{"-", "0.00131121015409156`"}], 
      RowBox[{"-", "0.0011454655681597881`"}], 
      RowBox[{"-", "0.0009931524842716106`"}], 
      RowBox[{"-", "0.0008547388270655253`"}], 
      RowBox[{"-", "0.0007302643406090215`"}], 
      RowBox[{"-", "0.000619426359923062`"}]},
     {
      RowBox[{"-", "0.0030856323217623486`"}], 
      RowBox[{"-", "0.0031289087124818054`"}], 
      RowBox[{"-", "0.00319781320447735`"}], 
      RowBox[{"-", "0.0032238186920368283`"}], 
      RowBox[{"-", "0.0032109057701671696`"}], 
      RowBox[{"-", "0.003176390075395665`"}], 
      RowBox[{"-", "0.0031236886096313314`"}], 
      RowBox[{"-", "0.003051053606928827`"}], 
      RowBox[{"-", "0.0029570906406945594`"}], 
      RowBox[{"-", "0.002841785083262983`"}], 
      RowBox[{"-", "0.0027065350911332367`"}], 
      RowBox[{"-", "0.002553949282529317`"}], 
      RowBox[{"-", "0.002387528004204896`"}], 
      RowBox[{"-", "0.0022112965442362097`"}], 
      RowBox[{"-", "0.002029447796594916`"}], 
      RowBox[{"-", "0.0018460358807160203`"}], 
      RowBox[{"-", "0.001664744038228528`"}], 
      RowBox[{"-", "0.0014887335317594395`"}], 
      RowBox[{"-", "0.0013205676174282341`"}], 
      RowBox[{"-", "0.001162196896015382`"}], 
      RowBox[{"-", "0.0010149892229883084`"}], 
      RowBox[{"-", "0.0008797878303985438`"}], 
      RowBox[{"-", "0.000756983998694566`"}], 
      RowBox[{"-", "0.0006465941961760255`"}], 
      RowBox[{"-", "0.0005483350935723252`"}]},
     {
      RowBox[{"-", "0.00279084168369458`"}], 
      RowBox[{"-", "0.0028214570356621454`"}], 
      RowBox[{"-", "0.002868726218691072`"}], 
      RowBox[{"-", "0.0028823106418456703`"}], 
      RowBox[{"-", "0.002864907931400936`"}], 
      RowBox[{"-", "0.0028291041369793058`"}], 
      RowBox[{"-", "0.002777320374291304`"}], 
      RowBox[{"-", "0.0027082194291804564`"}], 
      RowBox[{"-", "0.0026208036614447637`"}], 
      RowBox[{"-", "0.0025151983595214237`"}], 
      RowBox[{"-", "0.002392686411964932`"}], 
      RowBox[{"-", "0.0022555520224773716`"}], 
      RowBox[{"-", "0.0021068230776189493`"}], 
      RowBox[{"-", "0.0019499677198521288`"}], 
      RowBox[{"-", "0.00178859414929033`"}], 
      RowBox[{"-", "0.0016261903843866634`"}], 
      RowBox[{"-", "0.001465925486320476`"}], 
      RowBox[{"-", "0.0013105192503963612`"}], 
      RowBox[{"-", "0.0011621760524958443`"}], 
      RowBox[{"-", "0.0010225714836394533`"}], 
      RowBox[{"-", "0.0008928774836537501`"}], 
      RowBox[{"-", "0.00077381197478335`"}], 
      RowBox[{"-", "0.000665701253898536`"}], 
      RowBox[{"-", "0.0005685464548741196`"}], 
      RowBox[{"-", "0.00048208837616048577`"}]},
     {
      RowBox[{"-", "0.002501977747755425`"}], 
      RowBox[{"-", "0.0025217947578648164`"}], 
      RowBox[{"-", "0.002550812256929048`"}], 
      RowBox[{"-", "0.0025545054733448714`"}], 
      RowBox[{"-", "0.0025344391726838645`"}], 
      RowBox[{"-", "0.002498954413108776`"}], 
      RowBox[{"-", "0.0024494932319749276`"}], 
      RowBox[{"-", "0.0023850124331952797`"}], 
      RowBox[{"-", "0.002304829944393198`"}], 
      RowBox[{"-", "0.00220918540153797`"}], 
      RowBox[{"-", "0.0020992657449559297`"}], 
      RowBox[{"-", "0.0019770793853134024`"}], 
      RowBox[{"-", "0.0018452452745524222`"}], 
      RowBox[{"-", "0.0017067419867251592`"}], 
      RowBox[{"-", "0.00156465773418604`"}], 
      RowBox[{"-", "0.0014219725516021362`"}], 
      RowBox[{"-", "0.0012813912846879208`"}], 
      RowBox[{"-", "0.0011452337641090638`"}], 
      RowBox[{"-", "0.0010153788716153094`"}], 
      RowBox[{"-", "0.0008932531258603469`"}], 
      RowBox[{"-", "0.0007798518584115516`"}], 
      RowBox[{"-", "0.0006757812357017842`"}], 
      RowBox[{"-", "0.0005813112466656234`"}], 
      RowBox[{"-", "0.0004964323196884684`"}], 
      RowBox[{"-", "0.0004209107245221544`"}]},
     {
      RowBox[{"-", "0.002227350874619545`"}], 
      RowBox[{"-", "0.0022380108714572674`"}], 
      RowBox[{"-", "0.002251667601630432`"}], 
      RowBox[{"-", "0.0022473770133499466`"}], 
      RowBox[{"-", "0.0022257315254634097`"}], 
      RowBox[{"-", "0.002191374995246138`"}], 
      RowBox[{"-", "0.0021448637502689337`"}], 
      RowBox[{"-", "0.0020853824619093482`"}], 
      RowBox[{"-", "0.00201250735501242`"}], 
      RowBox[{"-", "0.0019265699305685644`"}], 
      RowBox[{"-", "0.0018286701342766754`"}], 
      RowBox[{"-", "0.0017205729076379247`"}], 
      RowBox[{"-", "0.0016045353088059888`"}], 
      RowBox[{"-", "0.0014831004824826545`"}], 
      RowBox[{"-", "0.0013588919785318156`"}], 
      RowBox[{"-", "0.0012344342143992962`"}], 
      RowBox[{"-", "0.0011120146119576318`"}], 
      RowBox[{"-", "0.0009935928444478506`"}], 
      RowBox[{"-", "0.0008807546150612441`"}], 
      RowBox[{"-", "0.0007747023284863852`"}], 
      RowBox[{"-", "0.0006762728673070284`"}], 
      RowBox[{"-", "0.0005859728045035486`"}], 
      RowBox[{"-", "0.0005040228925312436`"}], 
      RowBox[{"-", "0.00043040574425667644`"}], 
      RowBox[{"-", "0.0003649126591412266`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.886026333145585*^9, {3.886026408665122*^9, 3.886026452920969*^9}, 
   3.8860264894347258`*^9, 3.886030693894084*^9, 3.886032544083206*^9, 
   3.8860358884133577`*^9, {3.8860441461373177`*^9, 3.886044154799177*^9}, 
   3.886045742049182*^9, 3.886049129610065*^9, 3.886050666671445*^9, 
   3.886051533490567*^9, 3.886052062685923*^9, 3.886054006854252*^9, 
   3.886054071651514*^9},
 CellLabel->
  "Out[792]//MatrixForm=",ExpressionUUID->"7059fd37-b57e-4536-badf-\
50c980b51f84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ii", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacobiWavefunctionFit", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r1", "^", "2"}], "+", " ", 
          RowBox[{"r2", "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "+", "r2"}], ")"}], "^", "2"}]}], ")"}]}], "]"}]}], 
     "&"}], "/@", 
    RowBox[{"fitfunctions", "[", 
     RowBox[{"[", "ii", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"1", "/", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"NormTF", "[", 
    RowBox[{"fitfunctions", "[", 
     RowBox[{"[", "ii", "]"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"norma", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{"(*", 
    RowBox[{
     SuperscriptBox["r1", "2"], " ", 
     SuperscriptBox["r2", "2"]}], "*)"}], " ", 
   RowBox[{
    RowBox[{"JacobiWavefunctionFit", "*", "JacobiWavefunctionFit"}], ",", 
    RowBox[{"{", 
     RowBox[{"r1", ",", 
      RowBox[{"-", "120"}], ",", "120"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r2", ",", 
      RowBox[{"-", "120"}], ",", "120"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.886133636923657*^9, 3.886133646656168*^9}, {
  3.8861337346468678`*^9, 3.886133947947589*^9}, {3.8861339784881783`*^9, 
  3.8861339845190763`*^9}, {3.886134059068728*^9, 3.886134113015136*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"db8682ab-cdf2-4188-aa81-9ee925b01dec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1.2359684806485773`"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "21.326455149064394`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r1", "2"], "+", 
       SuperscriptBox["r2", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r1", "+", "r2"}], ")"}], "2"]}], ")"}]}]]}], "+", 
  RowBox[{"90.78729446653709`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.10047504213358072`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r1", "2"], "+", 
       SuperscriptBox["r2", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r1", "+", "r2"}], ")"}], "2"]}], ")"}]}]]}], "-", 
  RowBox[{"90.1168593826325`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.1000000658123286`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r1", "2"], "+", 
       SuperscriptBox["r2", "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r1", "+", "r2"}], ")"}], "2"]}], ")"}]}]]}]}]], "Output",
 CellChangeTimes->{{3.886133839347389*^9, 3.8861338648460093`*^9}, 
   3.8861339486819344`*^9, 3.886133985302401*^9, {3.88613405960252*^9, 
   3.8861341139537354`*^9}},
 CellLabel->
  "Out[376]=",ExpressionUUID->"b7fa7648-fa97-4a43-9f7d-eb940d1aa10e"],

Cell[BoxData["245.23241580604085`"], "Output",
 CellChangeTimes->{{3.886133839347389*^9, 3.8861338648460093`*^9}, 
   3.8861339486819344`*^9, 3.886133985302401*^9, {3.88613405960252*^9, 
   3.886134113954544*^9}},
 CellLabel->
  "Out[377]=",ExpressionUUID->"c8cc94e6-ff98-4d9e-adcf-37ff87b620e0"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 378, 21, 
   18256381695354149176, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8861339853224983`*^9, {3.886134059611308*^9, 3.886134113963092*^9}},
 CellLabel->
  "During evaluation of \
In[375]:=",ExpressionUUID->"7ac94a4b-33f6-42cb-a040-1d9cf4e18a9c"],

Cell[BoxData["2.222990044086801`"], "Output",
 CellChangeTimes->{{3.886133839347389*^9, 3.8861338648460093`*^9}, 
   3.8861339486819344`*^9, 3.886133985302401*^9, {3.88613405960252*^9, 
   3.886134113993548*^9}},
 CellLabel->
  "Out[378]=",ExpressionUUID->"e1508404-d4ed-4cd0-a24d-13ac50ed2068"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"JacobiWavefunction", "*", "JacobiWavefunction"}], ",", 
   RowBox[{"{", 
    RowBox[{"r1", ",", "0", ",", "200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r2", ",", "0", ",", "200"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.886051834284493*^9, 3.886051887594215*^9}, {
   3.886053649765654*^9, 3.886053652186049*^9}, {3.886053719240501*^9, 
   3.886053720315159*^9}, {3.886053893654677*^9, 3.88605391002241*^9}, 
   3.88605401345356*^9},
 CellLabel->
  "In[343]:=",ExpressionUUID->"b829d9b2-2b60-4a92-9775-9edb2e8fb246"],

Cell[BoxData["1.0000000120398391`"], "Output",
 CellChangeTimes->{
  3.886051827414895*^9, {3.886051865766268*^9, 3.886051888154395*^9}, 
   3.886052065729431*^9, 3.886053653123193*^9, 3.886053722499563*^9, 
   3.8860539108816023`*^9, 3.886054014649313*^9, 3.886054074304994*^9, 
   3.886055434014316*^9, 3.8861336678414288`*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"fe8b0535-aa0c-4c03-a9dd-880fbec895cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"{", "JacobiWavefunctionGrid", "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Psi]\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(\[GothicCapitalA]\), \(+\)]\)\[Psi]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.886026130343711*^9, 3.886026187726478*^9}, {
   3.886026293019896*^9, 3.8860263047989693`*^9}, {3.8860441734305563`*^9, 
   3.886044219323235*^9}, {3.886049094326651*^9, 3.8860490947380238`*^9}, 
   3.886051256842482*^9},
 CellLabel->
  "In[922]:=",ExpressionUUID->"e4eccd3d-1a24-4317-8677-1d8ad964b0e4"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1:eJxlnXlYzF/7x9skhJYxpozM1GjaZtqmmUnktmXfkiVbImRLyr6kSNZIdqUi
Qtmp0L4XlYQksm9pkZKy/+a5fs3H9byf7z+uXt9Rb3evzuece8458ecud52v
pqKiMqiDioq6ivK/xoHKPwdzVmd9deqV2f4/SMl7JbxSPz3IsJ1rMbzzpqoZ
u3f0bOc6DNdfMEfTP1q/nbMYXuO3t3b6pm7tnMNw1xUda9RMNNs5l+ENzZZe
pfI/Gf//Me/f131XXzAnprmdGzO8aNNSx87FH9u5gOF5Yz1ePo970c5NGW4y
xWVC6YZH7dyM4RNlc1Om2Je1cwuGz43O5F1wu9vOrRgue9W0qKVTUTsXM9zg
75AhUrXCdm7D8N1hqw8ZbCpo57YMv3F18bTCvkpux/Cq2Fr/P1X57dye4fVa
+dMG71dyCcPH+J4ZIBmm5A7/vm5cKY/1La+dSxnOb8jWeRqr5DKGr50Y+jd+
nJLLGT7PKrDDhW+57dyR4b1/Z4VrRiq50isV4r9Z8jWvSOmP0isVejrIK+18
uUE712K4afiLbaHG6JUKXRw35+dOF/RKheIeLlnlW9O1nXMY7uc48pXfhQ7t
nMtwwQ21kPqA3+CVCokMJtapdEevVGjJqPPxtW8+gFcqZP51vLVO3+fglQoN
PxH79bfFQ/BKhWxO+C0T/i0Br1Sox4fXfR93KwKvVCi57XgxVeaDVyqU3U36
rrQ6D7xSoYI1Xbt8mZsHXqnQhMklolusPPBKhQ6vMu6TW54LXqlQ2a8X3Jb9
ueCVCh39OFel6/hc8EqFYk0mjpvUKRe8UqEDj/9+Tc/MAa9UyOr7++lLV+WA
VyrUe0hK00ZhDnilQhlT+vbXe5wNXmmR3a0fO3p3Vvqj9EqLJNfWTi7ncTKV
Hyv/7NRpa9zqIz3auQ7Da7WEgo/Nuu2cxfDcyu++c/O6tHMOwx94Vh2a21Gj
nXMZXlOTOrtQ7yd4pUXs4CS7Za5fwCst6rF1Tsk173fglRbZV7UavwusAq+0
qHDkHm7S1PvglRb1IstzySOLwCstmnDqoN+Y6lzwSov6f5gzXbU+G7zSoi4d
Zct7GGSDV1pUVODhXJyYBV5pkZmTYV3l2izwSouu3nSiN8OywCstWit6MG+n
fhZ4pUUX1Q5vkr3IBK+0KEB2XO5zLhO80qLlLeIA2+WZ4JUWvVUNfHPcPhO8
0qKju95Fbq/NAK+0aMqMtw47lmSAVzpktzKwqP8epSdKr3TIZ+fDdWMyWZnK
v6/kHRtGrx22Uy9T+bHyz1srd+mPSVE+71gMD5x7dO2YhI7tnMNw/W7RZ2p/
qLRzLsM9zKN6V5Z9A690yCFZj8fpVA9e6dBUF/bsinevwCsd+tlbZx8NqQCv
dKguy+DDo4gS8EqHNI3zknsL8sErHfpkrH4oMCUbvNKhiBuVPqNHZYFXOmTW
N2zF1CuZ4JUOLYkZcKxifiZ4pUP7OLJR3+wywSsdMvS6kaWvkQle6dCgoG+V
FmczwCsdmnA7tFsVZYBXOjTCvtplxqN08EqHkr7qNRnNTwevdGhklJPfpsY0
8EqHDoVOdbq5Jg280qGmvjlLNH+mglcsqjncWXPCfZ3M//9Y6RWLbnpv2Osp
VnIthnt3OXb56EPtTOXnVfKh903GP7mr9IfF8MeuoXNfOqq1cw7DN77ym/Pm
7/f2PFyGH7C9wdda+AW8YpG8h0tDk+w9eMWi9R7bL5XVPgWvWHS8Ibffcuty
8IpFIT02v8zUuQNesSjAbzhPKM4Dr1jE73xBIjLMAa9YFF347F7+CByvWFTv
0EU9ozELvGLRxLLBMr0UHK9YlBD5yu3ZDhyvWBS++EudhSuOVyzS7aT/eyUb
xysWTd7kqn+rAscrFl18Mdrj0QEcr1i05rFu6sRxOF6x6I1PMStAE8crFq0Y
t3QZbx2OVyyyC/NoXfgqHbziUHP45zujvyl9UHrFoTf6vfR+dlByLYbX39fS
cl2mfH7pMDx9k7pBv0zl+MNi+BH3J50y/ZX+cBh+VW9m76vqTeAVh7ZNi56f
0fUjeMWhcwOilv9ivwCvOHSsW9rSYM+H4BWHjE/rCc1eFINXHAqZt/fVfKMC
8IpDqQaB779k5IJXHHrQK8TiRhN6xaE9p1seeSfngFeK+hzIGtorIge84tBh
+a8O81bngFcc6vZk/vVhg3PAKw513Nqh6aFqDnjFIVd1s0PyW9ngFYekSa3X
xy7JBq84NP6Cq3o881yW/vs8I/nNvfOywCsOFXn2d+/lkwVeKV4v70r1rCzw
ikM5bi9Olt3KBK+4tNIgPGdywd92rvSKS5wEtxM/1yrXZVoMH1WfLJ3x8kc7
12F4/jXVm20PW9o5i+FXx24TeXs1gldc+ttgWuDU8h684pL/PG32l8jn4BWX
ti0X8I4OeQhecSliZ1cXg9XF4BWXnNx2VDeG5YNXXEqvOjvt5ZRc8IpL9Qnz
yru8zAGvuDSpZtI+jgbOr7iU+jRoY6MkF7ziUl9DK5WKwbngFZd6DBlwz9ki
F7ziktsdU25oC3rFpdNLR48KvIxecWk7qzhhjkcOeMWleycDFjl1ygGvuOQw
SbCox2X0ikvV+rKDNROzwSsudTz8O2JAE3rFpdUBnzwXhaFXXJqlmb3lhlUW
eMWjnh7e0+dZfQWvePRr/IAVV0c3g1c8clpto7nqbSN4xSNfE91Ok/vUglc8
+mp4u4cr6y14xaOAsTrOcx48Ba941PF0zO3vF8vBKx5ZiHqYhH8pAq941JJg
1HMs8/0VMHykW8Nmj37Z4BWPTsWvnaYjzQaveOQtXtga8SobvOKRzuaVPW/s
wfGKR4OkEcsutOB4xaOMH9kVQT3RKx497fNkxSt19IpHXX/I0g+Uolc86nPd
n68Tgl7xKM8//lmDHXrFo9qQc6KzT3C84tGcoel2szaiVzyKEa8bwOaiVzxa
tLfr9Vm30CsePV7YYXaYG3rFo+ikQdE/6nG8MqYeXzkfBy+rAa+MSWvca3n8
kI/glTElLjtT+MXgHXhlTOtVT5Xcz38JXhlTv2L3wj3RleCVMbG0Y6uvGd4H
r4zpfmpMTGtBAXhlTNHVu2cKdbPBK2Oa0GH6anNmfitguFHI5Bl8y0zwypj2
z07vTgOywCtjenj6XNRSL/TKmEQPOo7/3h+9MqbnkqlNcVfRK2OS9vpU7/YA
n4PG1CVm97JLqfgcNKY/svGDZwWjV8bEO3bkiqcjemVMJsf7jHZ4i89BY+qZ
bH2StxO9MqbZkdP9LC3QK2N61lliNr4Qn4PGVKF2YyzLC70ypm2ClvTK35ng
lTGVP34/vvYQeiWg5b+OtZ4NfgleCSitl3Tn0aAX4JWAPvBLuiTOfgpeCSjI
e/qGI3cfgVcC2hNnkpNqXQZeCehst8NzPd0LwCsBSSb3ik6KygKvBGRWn/w4
2DYdvBJQY1uHyBMP08ArAVltGbYrpDUDvBLQLnNpd+v56JWAWA96VL48jl4J
aL9u1Zz6BeiVgN7FrTqy7Q56JaAbn1uidjxHrwSkaTm8/GY6eiWguVtjMnYG
olcCUlNfe/yALXoloNPlPl7TnqBXiu/j/K/njm9ArwQk//7Zta8heiWghjq3
sqpE9EpAnq3DVwwYj14JaIzqt8kJ79ErAY18nJm/aiN6ZUoGJ8lv6pEK8MqU
+i9t1qw69gi8MqVuKVtn9v9SDl6Z0s2RW97GPSgFr0yp4dZGtwd1BeCVKYnU
Qx/viM8Gr0xJ6+WhxAimH8Jj+K9VXkaXi9LAK1O67jj/+YgeGeCVKfnK94ak
P8XxypSuvFlWdVWGz0FTWvXjRmPHYTi/MqWt5o66jz+iV6a0P/RetUSM8ytT
uphdXxcuxuegKf1RietWqYbPQVPa/nt62fQ09EpRN15i1qpF6JUpvdbUPT2r
Kz4HTak4sP8e6wvolYJf6MtaPhy9MiXVjjdOvH2BXpnSjUD5sS6r0StTilqX
GjS4Mz4HTSn07SDP6kj0yoyeP0z4fMKsDLwyo8Dz50yPG9wDr8xoUJt37K+n
d8ErMzqfUjl93OkC8MqMum8apBV+IQe8MqOyDbHbG19ngldmpM0547p2JHpl
RsknfMdZh2SAV2a08VSsum8qPgfNyMij/y5nNZxfKXIeUI2sM88Br8xoYJfS
uxN/o1dmNHjK4WIbP5y3m9G8M399Vh5Br8xoUtcbaj2D0Ssz0oxmh1aNQa/M
KEW3g9MOlVzwyow6/tz+yPgcemVGn30Nvu4fgV6Z0YGMd6ET36JXZrT1T82z
mP+ZX5mR1xybxdZ6OL8yo4IHe5pWnEGvzOjRuUHqBVL0yozSQr63BOejVxZU
ou9zsyKrALyyIFuzogNfexaAVxb0KNrscuT0PPDKgvhzYrIMrXLAKwtqfv4l
Oc4lC7yyoKsmHcbr26BXFlQVP/lSnk4meGVBf0IaLs2/nQleWdD37ZOWhd3L
Aq8sKOzYxHHBX9ArC3p6+NLOxc/RKws68vFCc9Q67DNYECsjVlyYg15ZkOWM
/HkaJeiVBQ1LXNOPdR69sqAeO+cUn/VGryzIcK5Tg0tP9MqCXl7et+5FCnql
qI9owwOH6eiVBfWOmjG831f0yoK2yQdkN+5Cryxol/PEx01G6JUF1e7onHvp
CnplQVGXzKdsIfTKgpLfHeieV4peWZH0ddd7EV+ywCsryh28teX0hSzwyopW
Lwg4pa6SBV5Z0bXldaZZlAleWVG0ikm+69EM8MqK6mrnfPa4nQFeWRHrs1d+
xhr0yoq2DWkJ9PDNAq+sKNg8yk4akg1eWVHaARXVmIAc8MqKet1esCDXAfsM
VhRW73adcxK9sqL6n8NMRxeiV1Z0Jj+IPy8FvbIit49Z3B+70Csr8v9m9Fw2
FL2yos79wo1qP+Nz0Io8YzeGjD6AXllRbD6PbWOLXlmRXr7m8p530SsrWrtk
bdlDT/TKijL1p/I+t+Bz0IoG0/xxpdvRKyuiy8V+pT3RKyu6f/H2K5c49EpM
NldIU5CfCl6JSdShdfO9zFTwSkx5uy5u0SlOBa/EFC5f88TeLA28EtPJbdpX
knXTwSsxtTxurao7jl6JaV/luT/ce+iVmHTn1a679x69EtPdNWpbJ9WgV2Iq
jzPSqE9Er8RUH35704YB6JWY6ir7O7sEoVdiykxoePdkD3olpmGXXXMly9Er
MY3WOd76wwG9ElNbm0uDey3O28W0IFbny6dD6JWYxJaiuh3/sx4UU/Qvg/Tx
lThvF5N2yvDDXv7olZi8mtf/9O+CXokpMjfOvSUGvRKT+amnV0ZJ0CsxjS84
d60kD+ftYqq05G58OBm9sqGAhpiSTqm3wCsbClvKqrNQuQ1e2dB3+Zbl60pv
g1c2JH12yuOZaSp4ZUNXHnTdu/lHGnhlQ3e7Hgzy0cXnoA1pjomzGW6H60Eb
uhgyf3q+M/YZbOhP60v5/l454JUN+R0JcnW6hV7ZUNyjwYLAHuiVDQ16Nkib
K0evbGj2LFZNqgi9sqGjb4zCN6ijVzZkvMOP1TcX14M2FLtiafbMNeiVDZ27
c8zlCx+9sqG23fsk8fnZ4JUNPeV1eKm7EL2yIY8l98ZoaaBXNvTt74WKXsz6
Wsrwbo1qS5Id0CvF9+W1VrrsLr6PY0P3gsOqm2ejVzakf7psfOBrfN/ZlnIN
6dSwPrfBK1tKyzXakLkJvbKlPslzTq7amwJe2VJ62feSfFscr2zJPTJgUK0D
PgdtaSBH3CnvEnplS3XePX8JEtErW3IxCSgbcxC9siVtP3epY3/0ypauXzli
+ucsemVLHb7KPVqe4vzKljrO2zapy2uct9vSrbtqvs/zcD1oS69327h83o99
BlsK5Ms+jxiHXtnSfoPkpzNU0Ctbitaz+7Q5IRu8siU/zTFOsRPRK1t619Mg
6kUzvj9oSxtXVchehmeBV7Y0bpvuBK41emVLNdLIzi2F+P6gLV2YHXghew56
ZUtqSZ8OXq/H9wdtqXzDtHcGPdErO9pza0XG8RZ8DtqRv7BqSN+xaeCVHVXE
1wYFDksHr+wo2/8lW5CcAV7Z0YuaPgMMEjPBKztqvF7jPXF/FnhlR3pRnBm8
KdnglR3N3ld+6MQX9MqOTEcufnR2BnplRwX5v2zLD6JXdtRv46bKg7HolR1F
XDmo0nk/eqXIk/igedj/9K/saFCR2egiC/TKjkJfJMaoMOsyG4Z/L8j2Wn0o
G7yyo+U3my9NGIRe2VFVr7Tr5R/xfWc7Oh95QitzD3plR13qzn6LEKFXdpQ1
Z9O6Ymb8kTLc0LN1ZMJC9MqO7ncZLg5VRa/sqOVL6ISd9uiVHQn8rKYP88T3
ne3J4H1H+au9meCVPWl92lE092ImeGVPCy9Zr3+qhvN2e3LiHGmqDcgCr+xp
zYLBVzYwz3cOw0/KN5gvCMf+lT19OVe7ZJBaDnilyOl2JP/jhBzwyp5GRnb2
3bEBvbKnK+YupyuC0St7+ut8LCfcD72yp4fl2+8MHo1e2dOSuqCZSSz0yp7e
6dZsnPMA9zPYU6Wbr+34XeiVPXFMf2qvdEKv7En6asAMFcYfO4ZbB84cdT0M
vbKnHI/F+7tL0St7cvCTd95QifsZ7Mm/TNB5/Fr0yp4KvZIqXvRAr+ypbrB/
379zM8ArezL1n9n/z+F08Mqexn4fOGRmYRp4JaEntf62R/OywSsJ3dCITnhV
ng1eSagPq7navjUbvJLQr4H5o8VMX4jF8JKn6SPTZmL/SkLGY1J2JDLvf3EZ
3rrc5dWqaPRKQtvdDR+WxqJXEgr2qZow5SB6pXj9VfJ5549eSSiSLXjT3QW9
klCCVLCV3Q29kpAB299sRSnuv5IQS1fXoWgHeiWh7yUvTlo4o1cS2uKYddX5
M+6TkVDlETe19ZHolSJPU7K1owt6JSFVA/ble3WZ4JWEVkrIZW8YeiUhjXjV
0Xm26JWE2BcbLXedzACvJHQ1zSk65Wk6eCWhudPuGKbroVcSenbzQol4OHrl
QDWL3h8R3swFrxxIf/Ktij03csErBxpiF/BIh+nP6DC8KetsvvBgLnjlQKV+
uYYbV+aCVw7kZ/C5++eRueCVA/190/byEzOv5jHcO1bYVFOFXjmQR2iic1gE
euVAiw769652R68UOQ03ckvY6JUDiasry/yYnyMLhvfu+VDFbQ965UDOPd4/
LBmCXjkQJVpEurfh/isH+vzTMPv8efTKgWZd/nDz/FT0yoHqsww8fdXQKwfa
3eeej008euVABe/V7a3Go1cOtDxB/eCMNxnglQPtvDRtcQcBeuVA0WYZnOY5
6JUDRex6tjvrOO7rcyCHfUv/dCnHfX1Smps/nB0szAevpPRqxTzjth754JWU
Fgvqz8jeYF9USj8kHwxOHswDr6RUrDF6r4VdHnglpWPFqgNbc9ErKW2vP7P1
3GT0SkrTOpkYVn9Cr6Q0IHTYBdcd6JWU8kp4ri/F6JWU1hjzLM2q8X0cKSV3
3ts/Ogy9ktKvxL0RW13QKyn9LnT4tPkX7heVUpDmr4DPV9ArKfWJ9578dC56
JaWr4sylD3TRKyklDbPul5WG+0Wl5JyntzB7AXolpb2u5fXdu6JXUspZs3nR
C0/0SkotKVetpp/B/aKK72/qjT0W73C/qJSePjhrX8tHr6QktTd3cZiJXsno
hpNPadcf6JWMpt0xmnbtOXolo75J/dOXMPuadBie7hIxKtkgH7yS0URLdge3
neiVjLbUXDj6pwG9kpHb2tU1o6ahVzIqOZPQd20peiUjiV/E3aTJ6JWMOu7i
iEuY/eemDH+zvWHT4QPolYw6fJqodnUweiWjli4j5z38lgVeyaj/vLHnDl5A
r2TUyHlyPdITvZKRccDRPWEs9EpGWaWqk+7m4j5kGYV5/sjl+qFXMuIG2cce
5qJXMpo/sjSrcgfuQ5bRysv6fbIf4D5kGa2OWhO00RC9khGfP3Jz9Cz0Skbe
Pd3tc06kglcyuhVvPDrgaQp4Jad+1u+Tu9vj+zhyamtV7W6qh+/jyKm2RNA4
6wZ6JaekRWOqRgvRKzm5Z79ySNqEXsnJ8YfFY7O76JWcLh6S237ug17JqTBA
bdP+EPRKThOeVOwcpo5eyenuxBFLtA6hV3KKqxMtiPyf953ldD965KSD77LA
KzmZp2YMqTyGXslpzc4BuismoFdyejFVkp6kiV7JKXLn47O8FNzfLqe+ywMT
m5eiV3Ly5RK7pRd6JScNzcbHc8Nwf7ucFupMi7/2Jh28ktPyLx+ezbBDr+QU
ftZgWMPGNPBKTvJbW2f/yUkFr+TkfTbRia+FXslp6ZsOoZ9GoleO1Lqutbbf
RxyvHGlbSvfIjXk4XjlS90ttrpfnoleO9GS4k3VsKT4HHSl6UszDc73RK0d6
sNvQ5LQXeuVI+930Nl65gfN2R4pX/3ZnNwe9cqTOpTRRxPS1BAzvFCK8zTVF
rxwp77Zv2Jki3CfjSBOvjApSWYdeOZL+d6/052L0ypGmronyF3/IBK8c6Tqr
SM05Gs9NOFKoXf8fWyajV460MHVx5uBO6JUj3Qt6e2fbygzwSvF1j8e79bmf
Dl450uktjUOumqFXjmR2edX72xvSwCtHWjT50O3CO6nglSPpvIpKXsJGrxxJ
b6mhh4NHCnjlSB6WGQ8Szyj7nBrtvHGgHuv55Z7vlOe5lFzh16eTJyPWKzmb
eb1R06hP4gmdgauQ9vbpCV/udGrnfOb1rbquTXbqyv2lfOb1c9PPZH1T+dzO
hczrb7s83Bb+uBy4CjWuuvRoxCHlPkAR83oz34iKHiGFwFUodevHyo4z2v0P
/HcOtMDCcsE8lQLgKuT/bk1cenO754H/znsu7dLP+nTvfOAqZKQ5XWhjpXz9
v3OdDekhWxKM84CrkMDoftxKpl+qrLMWRVX/3iR4xm6vG5vhY3ov3jr3vfJ8
AZ/hMXkLjuVr1kF9tKii5mTj/l8lUActErTe9eqyNRv+vVpU992CPdsjC/5d
WsTuzXlanpMJ+bXo6Lzv0y6zMiG/Dt120vleeFp5bpTN8FE3e3XnTlKeg+Az
PD+ANXDNmg+QX4e+r1h+7/uLIsivQ6+XSnwnKvcTBv47x+SW3tJhm3I8Z/Lr
UPHqxHjDLhmQX4c+HyqqMLyRBvlZtLRh+PuLR5XnyNgMP5STr1fu+Be8ZdH6
17mn6tmvIT+L1IbOU1kZXQD5WeTy178mm4v1Z1HU1pqYrcuw/iwKEo93HJ6I
9WcR9/CW0d1yMiA/hz426YbG3VKew2UzXJB0/MDNlBbIzyFenMiHUp9Afg6d
dO741vJzHuTnUP/IGV0Hn8+B/BzqfCnRtatxDuTn0GDbM083KOeTgf/OTXQr
OT0meFAW5OeS7RjNxQkXfmX8d34u2eRxdDVf1EJ+LpkfP+TpOvA+5OfSlJxt
PVb3yoX8XGr8McX5jVMu5OfSxl6O10PKMT+XtqyfuMjsGebnknPnrwGTsjA/
j7hvkpz0OU2Qn0dVPE9D1b8vIT+PwuoMTnxm5oFChm+r+yys2J0N+XkUyLE2
PqKJ+Xl0uOLR54nxmJ9HcfPtbdQSMD+PeBt2arWGYH5jel6do1J66T3kNybh
0j/lfaofQn5jWvvFb9E5Zr+ckOHXguynVpRlQX5j6nyO17gpG/0xpn3e/ute
zMb8xnTbPK9TnDvmN6ZLB9xCvtlgfgGVRwXdMfWthvwCennRZ+WyZ3chv4C0
m5876qqnQ34Bjf9zprmjCtZfQGPuOvTa/hDzC8huiPbFbu6YX0Bu1k2/X4zC
/AKa8itq3ldDzG9KZw6k2O4e9hDym9Le5xrsS6PzIL8pVT72+rNhOeY3Jb3l
+9/NTMf8ptTn3Ox388Tojyn166410vsA5jelYrbthHvrML8pmW9a31VImN+M
XpZpzb+7vgTym5HvxqbhWcz+TD7DL7Qte5QzMBPym9HKex/so5n9MCKGz3jy
5GZeKOY3I88Qlx2TH2J+M+ryYqHDuiuY34zGOX9Yz/XB/Bak/nbtyRGO+ZDf
glyDNqjPYtYXfIZv7Mjv9nMo+m9BtzIupmtY4fhjQXKtPuO1UzC/Bf3e8c7+
QA3mt6CJS4qDD2VgfgvK7WUYenQt5reiEw9VxrhNyYL8VuTyLWu6+/kMyG9F
wUlFT0b9xPxWVPGgeo/PEsxvRRsf86PFsZjfipJ8trtGZGF+K8o7mtFn9WHM
b0VZrUfnlI7H/GL6PtxV1ZfZR8Rm+F3xlmGuFemQX0w+9asDdL2zIb+Y6hJ/
Vs/xwPxiKvT4Vn3EFfOLadSHqIZbCzG/mORTX41YOhDziylVkm2r/RvnPzaU
63pX5LrwNuS3odjW4yMudcP629CUgbFFlhcxvw19nTaYU2qK+W2oOnHEpLI3
OP7Y0ISEg2ljlfsMmfw2FO+Qrqt3Pwvy21DJ9eKSHocwvy01pA3s1kszBfLb
kvT6N7dqAfpvS+fvLFEf8hHz21KIpYe7ygv8+bWlqxXXDbm+mN+WdmhnhO8P
wPy2NP9385A/czC/LVU8W+9Uaon57UhQ8/q1K7N/ns3wj6UakxxMsiC/HQ1e
GpV4yjQH8tvRYvbOpeOPY347Wuj2ucWrI+ZXfN3F067q9sD8drQgTk9+4xfO
3+yoWGNvxcQInL/Zk3zMM34f5v1BNsP33Hte1zgOx097sm2bECFfgPnt6dMO
nYJPszG/Pc2+bvX48SWcf9rTNZuScvdUnH/ak9tJcef55zC/PXV6+uHKn1/p
kF9Ci7WLcju/y4b8EmrTH7Do1oocyC8hTa/14XqRmF9Cp00F9voWmF9CIcvX
1q6bh/klNHiY5jH3FZhfQv0/xxSae2J+CXXuol7dfw3md6CEnF4VpZdyIb8D
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
      "], {{{
         RGBColor[0.880722, 0.611041, 0.142051], 
         EdgeForm[None], 
         Specularity[
          GrayLevel[1], 3], 
         StyleBox[
          GraphicsGroup3DBox[{
            Polygon3DBox[CompressedData["
1:eJxNmwf8l2MXxp/fc9//Em2FaCijXdJSKRpWNlkRStlk71GRRPam18pI2aJo
aAnZZK8iO157j/f6dp3/x9vnczrnuZ/79zz3c89zrnP9W44YvcexZaF/VUWR
pDaQVCSU7aKCraUv0MX+0v0lAyQHhB4o2TVZT1CdA6UHSbaRHBR6W8keqrOz
9EWqM1J6sGRHyW7J9y9U+aHSOxWut7vKd5CeqPLDaQfvkZwg2Veyn+RYyRDJ
XmjV31N6kurvKXs32RfLHh3390Yn60tUfpL00MLfdLxkn3ju3snPvlR1joh3
8qyToy7ffRTt45skwyXbSbaPNm1VuL94Vr+43j/5WVfpmQfIPlr21aXbsqWk
r6SjZG1JI0kHScO47ixpLFmH5ybfP0e/3Up2A9lnyR6a3HdXyh4RbaHvzpYc
Uri/900ej8tVZ1hyv1wj+7TCY8a9fZK/7zLGMbmvr5V9UPL3Xyf74OTfXC/7
DOmDow/ODM37T5UMi+ful1x2hepvFt+xbuE+oP8Ys7U12X6T/l3yhOpfqevv
Vf826QmSCyWPq/xS6e9Ufo/0ZZLLJbdKLoh6N0vOl4yXPKz6p0t/qfpXS58h
OVNyTeizJHdLLqn4uY8kl32l+ndJT4p7M5Pf/1+VL5P9seza0q9K3pe9pvSP
0u9I3pW8puvl0mslt+8UyamSlySPSh6TTJFMlFwkuSP0xZIXaIdkhmRWctm3
em8D6V/UN78yBrLPlpxDPdU5V3qV6jwr/YDkQclilT8k/afKn6cv4rlL4z73
5qjO9dI/qs5c2TfJ/kn2k8n9/ovs+cnt+1X2vOT+/Vn2Itn3y/6j9DNoC+14
WnJfxfcWqs506d9V51HZ42R/Lfux5PH5RvZ/pM+LMbtRMkYytuK2oPnNU8n9
8ZfqL0ges99kL5aeVvE7ZieP6w8qXyJ9b7TjFZW/LV1Lun/yvBujOgOS97gT
Zdfhd7J/ZA9S+U/S81VexVyQvUpSt+L7P0W9dyTvSjLzq3A9xud9yQcxTugP
JaXqfC79haQ+/Rd1x+hd70nP0rsmyP5e9pOy12TMZX8nOV3lS6QfYq3JXir7
Ydas7EWyH5R9Lt8oe2bp9tEunrsGfSz9X8kFyXqe6oxP/qa5smsyJoXrrVXx
O2nHqaozX/oB1Rmb/B2Py/5T+iPJx5IjmT/St6v8bulL2DMlj0hukNzI79lj
2EP4BuZu4d/MiPs3hYyVjJPcIblIcrHkLsmkeO4RetfV0reV3iOWS1ZI7pNc
Vfje4apzhfStqnN+cn/PkV3Rd31WeAzGJbf9CZWfJ/tT2bNl/y29UvKJ5J/Q
3Dss+ZtuYc9hX2T/lEwLzfvulVwZ7WjHGBfel0/Rb+dK31/6ec9JnpfsnLzf
j1f5xtJr0veSjSS14nqg6jSXPrn0WdhV0k2yQ/IeOrb0mdRD0rPwGdU9rgcn
1x2nOn2Tn32a7B2T654nu5/surLPkL2l7DVor+zW0nUK32srqRffs7lkPUmT
wu3KxWpXoWhW2F/guneyv3CC/mspXbPwczeU1IjrPsm/O0l1NpWuHe9jTJ4t
PL85q/sUPhc5H7aQ9JKcrd++Jv1o6fn7auFr1t4rcc38fVPyVowf/f2C5Bz9
9g3px0rPb+6zZlgTrxe+xxpYFtdnqf7L0jNUfyfZvWWfL/vM5Oc9Unp+vVS4
3jbJY3m6ygclf/+ppc822s7vt03u3zNVvn3yeX+u7O2S583ZpdfGOZRLhief
qTeofGLynrKg9Dx+sfrdfJfm9xrS30m/KXmLszM0e9/OGpzEfi69S/ae9av0
YAaNPV96x+x18rP05pLH6D/p/pKnZH8r3VMyW/YX0t0ks2R/Jt1d8rjsz6W3
z15LP0pvIZkj+0vp7SR/yf5BelvJH7K/l95AcgxjJt0k2696Q3o9yZGMhXSL
bP/sHemWkhNlvyvdXHIc4yjdRfKo7E+kd5PU4IyQbprtI74lPVDyNHNEurHk
MOaPdG/JPOaR9NaSxcwL6QP1jEGSbfAx8IHpU/X/ftJbVXx9u8q34+zHV8EH
ps/xk6X7SwbgY+BzSn/IfJDuJektOSDu85t9Jf3iuf307oXMR+lb2CsYV/12
L+k+ki0r9rfxr/DT+qjek7JXSfeVLJD9dba/NDXOyimyB+OfyL4DP1z2e6Xb
xfN4x13J7ftA5XfiP8t+X/bNye19o/S5fZTkaMk62X75MumOkgdlfyR9EGOs
+6UW+n6y68n+R3qf7LP2b+mDmSuyk+ocILuh7IrsodlnJJvEONmTZTeRfV62
r7C+7NE8S3Yd2XvLro1vID2e/pK9gcr3lF0L/0R6uGQH2VnlhzDXZVfJHil7
J9k1ZDdgDrGPSB/KOlF5TZUfJntX1pfsI2Tvji8h+0jZe8heU/bRsofIXkv2
MdnjVFv2kOyz/E/pVtnxxnvSF2T7rE1VZ1K2r7mh7E2y/eYPeE/22fy7dCPJ
KPY36Y0lp8h+X7q15HTZH0q3yfbFl0t3kjzMnirdOfs8XindTnKW7BXUzfaJ
G+m9F8q+XXYz2WfJvlZ2Y9lnZ/ua68g+LnuO1pU9Mdt/bS77Ytl3ym4he0y2
D7ee7BOz10B92SfIHiq7nuzTZV8le23Zp8m+QnZD2SfLHia7gexzZd8ge90q
+4VHxpy7jxhK+hPNw/uT5+Cnsp9L9juT9EfSz1TsC38cGp/3+WSdpT+Rfq5i
v/jT0Pjd+Oz4jjzrK8krkle5l3y/KuKS0yqOK17kjGD+4GsTH8n+ovR6aiXZ
SHIN5zjPIAbB5+R9snsw/vR57ActmAOxL6BbSq5N1i+q/nWcL7Jf4ozgHJH9
cun9YhPJprGGeSf1esazeffnPKPi+GNVfNNrXCfrmvEdxCUzKz4znpTMl/xX
8nrFZ8zryf1VhzMH/4r5IP2N9LKo91byb+pLv5n8vnrJZ9G8eO4X0Rbe+Wzy
eyrJsdMCycJo3+OSJyqOsRZV7O9/KHkqxonvmBX1liS3/W/1ydPJv/tH9jP4
YBU7KXzDnIqvaevsuF6a/Owy9nj6kv5lb24jaSvpKmkiWV9yr+odKr2ydNwz
UjJKMk3lB0t/pPLpsg9hDpaONYdLRlQcX6K5x/7aI8aKvWSLmAvEoidVPJ+Y
ZwdV/NzLkn30p/FFk8+PFaXjLt5Pmx5Q+Wjpz0rHrMdWfE1sfExcE9OeGO8g
vjq84nX1oH57AvOldOx1WNwjBj2+4nvEqcfF9dTks3C56l+eHCM9I/uK5Hj1
WeJ96XUk61Z8/nDdpeL9uHNc36j6nRhP1b8p+f5rpffd7tFHA2Mc2lV8djEe
3SrevzeP68nJZcv02xuS675S+vxuL+lQ8VndseL3dYvx3CDaRBvXi3uNJI0l
VybrpXrORcnxz8LSscuYwnHLxckxwyKVX5ocdy2RfVXy854jzk0e59dlX5Ic
Wz4le1JyfLiY32af1y21741I9gFv5LfS5+F/4kvrugZxGz526DVKYyrEBWBF
H/J8la0rvTz5/nrSG0nXIr6UtJPUB1eQrGBeSTdhj4n7XOfw9fHxm3Nd+rkp
ypoWjh1aha8LgDgEP0UyOvTepf3+lhEH/IqPwbyQ/i35fhfp46X3kexbOlag
bovCMQXvIU5nGROzr184juA+8RExE7ET7fhI5fVUtr50G+m6pa+/Zl5Jb8KY
EO+xPzDmsv+q+Ppj3Wuo6w2Yj9KNJI3ZY/kd8YrkK91rL72R9JfxjlbshdF3
LaXfT3524+Tf1JbUkXzAWDNW0u8xl5hnnAl8W+l7zejf6Ov2MT4NQ35V/d8q
Lvul4ut39PufpRsmt/WPSjxX9u8VX7+b/Lu1pddXeRHv61t6TtDuoyS7S/Yo
jTuCP7YvHHffL31P6TieeJ5r4njieXy+g3VvW8l2koNYb3H9g347iO9gL5Te
QTJYMkKyfVz/mPy7Dsm+Ln4dfvJPyXU7Jp+n+Kn4VfjU+BVDY19gD2WfYH3h
m+Gv4qsPjX2pe9zfJfZX9tndY5/dM645Q9nH8G/6xHvw5/B70fjD/eI+7QOT
7Rh9dLju7cJeJfkZv1q6U3J83SZiPWLwTSI2JN4l7uWa2JoYm3rE2O3iGly3
fcSD4L2dIk4EF9g45nrjWOvcI35uHc8dpnoDS/f70TGerLfvkse7LT5UtHc3
yaGSnUq3e5Rkx7g+QDIgnjWUdkj6S75hj2UtSH+fXNZO+ltiBNltOP/Z62S3
lv4l+T2dk8/TA2L8VsUa25jxZQ3FXAT3IN4HowCjA9MAxwDXAO8A5yC+Bh8g
Hiem7l84N0EMDt4OrkLMTexdjR+gwevBQNDkBcBUwFbIN5CbIB4EPwc/IddA
ngK8hTwFOQj2erCqG2M/Zl+ezLslt0pukRySXDalNP4Pfl6dW0ATrxL7ky8g
30HsP6hw3oTcBPfB5LvHt+4S+/7N8T7aCs4/Ku4Rf9Fu+mN1DqQwXoEmDwKG
snfcIw9BfoJ20WfkMsh/VOdpwOoHFMb/uTcoyogzyQFRl5xIv3gG30TfjCyc
YwDXoozcCt83vHBugP4mrieeJy+DJg/C9x0R30D7yEcQq5P34XnkC4ZEGRgB
OY0R8VxyPZSRQ2Fsj453kEvineQ4OkrWjn18TIwbuCT4CjgLexi5GMZvcml8
C5yLOBCsGA3ORq5kIv1fOo/D2N9UOj8CPnlz6bwJcRn5EXIxq99XOm8CZgh+
2DP2d85S+pd8CjFhD103jXufJ5/rG0pvxllR+ozqEpqzi3WGH0C9lbHvN5X+
JM62ZtJdpZuU3u97SVrEbz6N86Z5rGPuc/1ZcrtaJPse9BO47tBo44kxF8j7
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
jQ+BrwR/G78F/wVsgbMcjOJ/aPNYyA==
             "]], 
            Polygon3DBox[CompressedData["
1:eJw1mnfgl9MXx+99nvsxs7JFNKiEFJGIrIxIJZXsvcsK2bLHTzbZ0aCUSBHZ
W1ZCRmTvvbff+9X7+ON8P+c89z7P9z53nPM+7/O02HdI38FVSul0/Sn6fVi/
P+q3SU7p3Dqlh2R/J3th2efIbilpq2tLSD6Q3q2RUhfpG0ke0AMe1O/X6r+A
+p+t9k3UvoGubSiZrvZNG+7bVTJD9iP6/UX9l1D/89R/Y7V3rnzPfWrfUtfO
5H71+Uf6DOlfSK/V/yzZm6v/prq2meRR9d9d166Xfrb6rCS7tdp/V9/fJJfL
fkBtn6otyT5TfbeTnK9r2+nSkmpvqf6/qO1nyaWy91D7DWo/T+2ryL5f9h+y
J6j9eNkvSV9d+qaSq9X2ouyW0jeWXCV7HUkvXTuI95T+vH5XVltnyRWyZ8pe
UXonxif7OdnLSe8guUz2a7K7SO8juUH2VNmvJs/xKbJvl3yua0PVfqzG84b0
zaUPktystjmVxzZAcpPsVyv/716S62V3lAzQtSMlv0u/X78f6dl/S4bLfkH2
qtljuFL265XfrZ/kRtmbab421rVNJA/p/3dvWO8meVj2FuozXPr6et4f0ls1
vBa/8n5qn66299T2u+QMtXdV+3r0l0xT+zT9zkneg6eq/V7ZbyXv0dNkr63+
C+raApJR6n9BzOGyev7Wsh+t/Oymss9X232y30nec6fLPlZyj669LHu9Yn1W
8h47WW1nM3/SB0h2lL2B5EBd2zHWs7NkP+nbS36WfrJ+m6pve8lmso+RTNG1
F2Svq+c3NN4DNJb9JfvJLrL3k76vZJ/ic7iC+naUbK57j5bcrWvPyV5L7XUj
+kr2lv0Re0v66ZI71HchtR8i/WDJQWo/i/XSvf0kO8RZ6iK9j6Sn7A8qP+tE
yfjYS8dJHyG5S/bXss9kr0imyl6wEc+WHKjnn8N+07MGSXqpfQG1H5jjHdX+
sdoPzX7GRLVXat9b+l4I66X2Xrr3IElftZ8nexvpe0t6y95HMkrXrpDdTv0/
k36M7r1IMlltl1TuO0wyUPaprL30dSTdZZ8reyvpe0h2kn2p7P1YW8musi+s
PBeHSnaWPaJy3+NYc9mfyD4C3yeZFL5i++Rn9JG9sN7nsOx3PETju7jyXBwj
6a/2iyrP/RGsgewPK6/9KZIJsveS3KRrF6u9le7/X+W9dqRkF7XtLblZ1y6V
vQbtcSab6/6dis9W5+Q53F5tJ8huIn11STfZnSSDWCPJD9I3kgyR3j/O+3H6
XVh9W0o24TxwlqSvKtlY9on4eultJZuyH2XrJ60s6Srly8rvcpVkiuwuksN1
bWfJb9LbaX4yAUZynca7Pu/EGkt+kr6eZA/WiLgjfUPJIdJ7S36Vvqburyo/
43rd3152YQySG2WvJbtR+dpNsj/Fl3HWJXfq/t0k1+nacA1hebW3Vf9/1faP
ZCTxQO1/qn2S7JNk3yZ9fPJ8H6y28bLvkn4Ne0T2npIbde1C2aup/xeVz87l
krvjrL+YHGNOkv1V5bM5UnKP7Jdlt8320dcwP7V9ZWvJ59IX0fgOz7Gn9Pw1
ZP8l/U/mWHabhsf+N/fTXttXNpN8In11fDo+RPKx9NbEIM4Efp32hp/1B/5c
939TeW/fJJlGbK8dm1tIPpPepnbsbk7clL6M7r+Ce2O+Juj6PXrX6ySHxV69
TPqEmL8FJbPV937J0/gH5kD6vZKn8FfEFOkPSp7hPEnelP6I5Fnpi0re417J
TOlNOEPSn5M8z3xJ3pH+BNekLyX5IfsZs6SPjTM8f07xt7XvvYt7GEtx7N8W
DEI8L9bxQYtLb157btmD70pfufZcsiZzOYvqs3Wyj1lU+vuSq6RfKVlT+iq1
14I99470F3WtR/I9TaTPk1yePGdtpL9X7Ou41lb6krrn2+w5erk2HvtWba9H
PASv/SD9zYiH4Kmfpc+N+Eb8+036vIivT8pu6FlfJeMz8NAnyfGJ/Ur8/zA5
3pzI3GoMl0gfIWldvD5v6f4fY37BY58nx0/i5S0RU/Dxe6r/uNpncojswbKX
4Exk74mXpL9bfNb4H6tLX4z1UtsLiPTFiUnZe+bF2viSsc8O/MP+maO272J+
Vqu9dxcCV0hftfbexUfMk/48mFL3biFZWHozXWtaGSO+Lf3Hynv75PBnnO9h
2e8zPvwdbfuF/+Z8n5Yd84i/xMvh2TGYePczfi/7GvHzB85H9jPxF5y/s7P3
J/HlJ9nXZD8Tf1HV3tvgzcfw5ZJr+Z8a/9Ia/+/Sx6ntYsl0tf0me7T0CyX3
yf5V9ijp53HmwtfdyVmTPF4by94h/cl4/ujamGJ+DNfzf8HPZo8R//B9+Cww
9yNqf4Kzkb0HwOPfVx7L0MAP31Uey9ERrx/XPRskx6y/eLdibM+1vzmbYEiw
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
mZ6MuTYoxr/kzGMinsO3sXZwTFcX8x/E4uOT+YlhtTEhZ2zLYv6CthOS+Vnw
5GCwWnK9CP6Ttfgsm78Evx6rtqHJfC/8D76dMwLfQ70ATg383LEYr+LLBwc+
Bd8dBvZLrm+R/xH7Dw68yHrD2XUJfwOeJTYfFniQegKcJvnIOsX49QDpBybz
CeBtsAVjBF/DvzJ2OJgbYr3hHDuHf2N/LFObD2O+tpY+rDJGIH8Fn4M1jkrG
88T/9rX5XvI76jes9TeSW4rj55q1+erbY/2Wq82/8f/XabgvnNitxXwoe/Pj
bD6X/bd0bT4H//FobY6EPXFxMf9L30/iPLHflq/ND91cnH8w1qOT+d03anNw
8Euji/ln9tKX2Xwz/DM6nBb3gxdWrJ0Pj437V6jNRzHeDg0/C58wpjhfhWPB
B5wte8lG1PIkx8j+RZKzOZYdivPhLdV/i8AXnOeJ2RzOsPAvk7M5npOL+Vq4
i4lx3jmP5GKTw//gT6dkx9TTwt+SO08Lf0x9artsTLxv+Kvp0u+L8S7acC1w
F8kR4b/IlaeHP6MetEM25oZPov5FrOMa9SHmntrdqpX5uY917aVkDp39T70J
rLBTdj2L+hY6OQN8CnO7MP6jMt9HPGHscCrDw/+T+06JeMHaNGF/VuYr8K3U
JlaszM+yl+HWl6vM77L3qDWsXJn/ZW/BnS9dmS/8mTnLruGCp8Ajq2TXeMFT
PxVzLctLti3mo5asjA+pn8Mn87/Am/Dz1Md6ZOck8KcfFHOxz5IzSP9Q8nxy
js75pf5Ebbhvdr3go2Iulz4diusJtJGjwX+DD95Prrniv6gngu1YY+qPTRpe
S3LEweFPH8vOETk/nF2w3Z6V6zX4c7j6hyPecj7Z69RkOc/gcWqucwN/gDep
gTeL/Qy+p6Y9O/wx8ZKzs0jl88F5QWeNR4d/oSbbLfIb8Dc1wx6RTxGbwSb7
VK4v4a+pMc8LPAj+pebOmmwX8YcaadfA80s04uxJjpa9eCO4KsmRshdrhC4Z
Iruj7MUq76lxMX/zue44D5yP+brk8DjPvDt7pmdxfkSNcsvA8xk+JBsjguc/
KebWOROdivMVauBvBt4C7/Ju7wZeJT7DFY+XnFCMj+B2ZmTjG/AO+gMRL4ml
YMf9K9evyU+o6XaP/I14ydq8Iuks/dNifVbgZfAfY3kj8CL48u3kGj35FHia
sb0T+Rh4lL3wduBP8Cb3zol8h/yHmv/rkV+QH7yW/M0D+R/5B22vRb7wY/HZ
4psJ8Ar5LFzmMpIexdiGbw04c/C/nB9i35Q4H/BxcClwJvB5nB/aqGlRr4f/
GpXMEcHvcR4nJ9cEqceDdcG2+ybXk6n37py8n6i3w7eNTua04AOZP3KN6TGf
8GNw/iPD//5bnKsvKRlUCKLW4TDgO+ETqUXCOf3Ht1F7G57MH7JfpiVzRHzP
QH18r+TzQT0d/hAuCQ7toPC3YI1psb/+Ls41FpMMKK6H7568P/+rn/Ou1Myo
f/9RnJvBefUNf/dPMkfN+fqzOJdcRNIv1gtsSR/8IXwvWICYBr+LPyU3zXE+
qM9Sk7kq4hnfu8ApwW8OjfNC7ru0ZI9iboTYvWty/R1uBGyzY/L3BXAV5B69
k+v95MpgKdaM+jy5NliOOeN7gr+Kxw6nBH9HfZ9ncz743gEuBazXP7leD3cD
tmPO+H4A/hks010yvri+T1/8F9+T/FM813B4A2O+WmV/Q0T+Tf67WvY3OOTP
jAcusVXMJ/MP900f8mPqX8RC+A3qt/DzxDrqNdSXqYcRa8GH1HOpbxLbwHPU
j1n/NbK/aeof+w8url3sR+plxD74G/h/6pvETviVjwO7gU12q/y9Afk23D4x
sVf404HZHCL8P/UCuFVqnvDb7H/+FzVy+CrmB65wjdiPfK/B2lEz4vsV8B0c
JjGIfAIuBm5tmeTvP6j/wlH2C/+Lv4bL+UlyW3Eu2NyvOf97B3K5ZoYE879v
oH4DR0mM5fsO6hdwoIMiPpC7tFDfhZK/nwD7tpa+aPL3F3zfwt6Dg+X7DPhC
9u6ekuOKuTG4nKWSvxcivvCt1sCIN9Rn+BaMGA0/ST0VDndAxB/w4m7ZHCvf
f8E1wRUun/z9EFwTXNziyd9vEN8YO/eAL6mVgOXgWKnH/x+LJvLt
             "]]}], 
          Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0TkyBGEAhuHfvo51rJmEAIldRMAkRCL72Pe9FEoxxQmQcAUm4QpIOAMJ
ZyAh8XQJnnrn6+qpv2e6YW57ZCsjhHBOJtHnen6zQmjXYRaJZ4eQ0hseaLVf
9TO6l4Qd9+VWEiTtpB5xFdVO6zPv0TX7W0sc2kTa7tcxxmlz/oROMkW7Pa1J
ZuiwZ3WOeTrtBV1kiS57WVdYpdte03U26LE3dYtteu0d3WWUR8/Tp43EuLW/
PO8bT1zYd3rJIQf2tA7SwpRdqT/+mw8G7Be955pm+1QXGKLCbtM6ajlzZo1W
U0XKjmtldC8ndrmWUcqxXaIxijmyi7SQAg7sfM0jl307Rx0b/PSwl/n//v8A
pnUwpg==
          "]]}, {
         GrayLevel[0.2], 
         Line3DBox[{1019, 1218, 1018, 834, 1020, 1219, 1021, 1220, 1022, 835, 
          1023, 1221, 1024, 1222, 1025, 836, 1026, 1223, 1027, 1224, 1028, 
          837, 1029, 1225, 1030, 1226, 1031, 838, 1032, 1227, 1033, 1228, 
          1034, 839, 1035, 1229, 1036, 1230, 1037, 840, 1038, 1231, 1039, 
          1232, 1040, 841, 1041, 1233, 1042}], 
         Line3DBox[{76, 77, 650, 78, 79, 80, 651, 81, 82, 83, 652, 84, 85, 86,
           653, 87, 88, 89, 654, 90, 91, 92, 655, 93, 94, 95, 656, 96, 97, 98,
           657, 99, 100}], 
         Line3DBox[{1044, 1234, 1043, 858, 1045, 1235, 1046, 1236, 1047, 859, 
          1048, 1237, 1049, 1238, 1050, 860, 1051, 1239, 1052, 1240, 1053, 
          861, 1054, 1241, 1055, 1242, 1056, 862, 1057, 1243, 1058, 1244, 
          1059, 863, 1060, 1245, 1061, 1246, 1062, 864, 1063, 1247, 1064, 
          1248, 1065, 865, 1066, 1249, 1067}], 
         Line3DBox[{151, 152, 674, 153, 154, 155, 675, 156, 157, 158, 676, 
          159, 160, 161, 677, 162, 163, 164, 678, 165, 166, 167, 679, 168, 
          169, 170, 680, 171, 172, 173, 681, 174, 175}], 
         Line3DBox[{1069, 1250, 1068, 882, 1070, 1251, 1071, 1252, 1072, 883, 
          1073, 1253, 1074, 1254, 1075, 884, 1076, 1255, 1077, 1256, 1078, 
          885, 1079, 1257, 1080, 1258, 1081, 886, 1082, 1259, 1083, 1260, 
          1084, 887, 1085, 1261, 1086, 1262, 1087, 888, 1088, 1263, 1089, 
          1264, 1090, 889, 1091, 1265, 1092}], 
         Line3DBox[{226, 227, 698, 228, 229, 230, 699, 231, 232, 233, 700, 
          234, 235, 236, 701, 237, 238, 239, 702, 240, 241, 242, 703, 243, 
          244, 245, 704, 246, 247, 248, 705, 249, 250}], 
         Line3DBox[{1094, 1266, 1093, 906, 1095, 1267, 1096, 1268, 1097, 907, 
          1098, 1269, 1099, 1270, 1100, 908, 1101, 1271, 1102, 1272, 1103, 
          909, 1104, 1273, 1105, 1274, 1106, 910, 1107, 1275, 1108, 1276, 
          1109, 911, 1110, 1277, 1111, 1278, 1112, 912, 1113, 1279, 1114, 
          1280, 1115, 913, 1116, 1281, 1117}], 
         Line3DBox[{301, 302, 722, 303, 304, 305, 723, 306, 307, 308, 724, 
          309, 310, 311, 725, 312, 313, 314, 726, 315, 316, 317, 727, 318, 
          319, 320, 728, 321, 322, 323, 729, 324, 325}], 
         Line3DBox[{1119, 1282, 1118, 930, 1120, 1283, 1121, 1284, 1122, 931, 
          1123, 1285, 1124, 1286, 1125, 932, 1126, 1287, 1127, 1288, 1128, 
          933, 1129, 1289, 1130, 1290, 1131, 934, 1132, 1291, 1133, 1292, 
          1134, 935, 1135, 1293, 1136, 1294, 1137, 936, 1138, 1295, 1139, 
          1296, 1140, 937, 1141, 1297, 1142}], 
         Line3DBox[{376, 377, 746, 378, 379, 380, 747, 381, 382, 383, 748, 
          384, 385, 386, 749, 387, 388, 389, 750, 390, 391, 392, 751, 393, 
          394, 395, 752, 396, 397, 398, 753, 399, 400}], 
         Line3DBox[{1144, 1298, 1143, 954, 1145, 1299, 1146, 1300, 1147, 955, 
          1148, 1301, 1149, 1302, 1150, 956, 1151, 1303, 1152, 1304, 1153, 
          957, 1154, 1305, 1155, 1306, 1156, 958, 1157, 1307, 1158, 1308, 
          1159, 959, 1160, 1309, 1161, 1310, 1162, 960, 1163, 1311, 1164, 
          1312, 1165, 961, 1166, 1313, 1167}], 
         Line3DBox[{451, 452, 770, 453, 454, 455, 771, 456, 457, 458, 772, 
          459, 460, 461, 773, 462, 463, 464, 774, 465, 466, 467, 775, 468, 
          469, 470, 776, 471, 472, 473, 777, 474, 475}], 
         Line3DBox[{1169, 1314, 1168, 978, 1170, 1315, 1171, 1316, 1172, 979, 
          1173, 1317, 1174, 1318, 1175, 980, 1176, 1319, 1177, 1320, 1178, 
          981, 1179, 1321, 1180, 1322, 1181, 982, 1182, 1323, 1183, 1324, 
          1184, 983, 1185, 1325, 1186, 1326, 1187, 984, 1188, 1327, 1189, 
          1328, 1190, 985, 1191, 1329, 1192}], 
         Line3DBox[{526, 527, 794, 528, 529, 530, 795, 531, 532, 533, 796, 
          534, 535, 536, 797, 537, 538, 539, 798, 540, 541, 542, 799, 543, 
          544, 545, 800, 546, 547, 548, 801, 549, 550}], 
         Line3DBox[{1194, 1330, 1193, 1002, 1195, 1331, 1196, 1332, 1197, 
          1003, 1198, 1333, 1199, 1334, 1200, 1004, 1201, 1335, 1202, 1336, 
          1203, 1005, 1204, 1337, 1205, 1338, 1206, 1006, 1207, 1339, 1208, 
          1340, 1209, 1007, 1210, 1341, 1211, 1342, 1212, 1008, 1213, 1343, 
          1214, 1344, 1215, 1009, 1216, 1345, 1217}]}, {
         GrayLevel[0.2], 
         Line3DBox[{626, 826, 627, 834, 642, 842, 650, 850, 658, 858, 666, 
          866, 674, 874, 682, 882, 690, 890, 698, 898, 706, 906, 714, 914, 
          722, 922, 730, 930, 738, 938, 746, 946, 754, 954, 762, 962, 770, 
          970, 778, 978, 786, 986, 794, 994, 802, 1002, 810, 1010, 818}], 
         Line3DBox[{4, 29, 1021, 54, 79, 104, 1046, 129, 154, 179, 1071, 204, 
          229, 254, 1096, 279, 304, 329, 1121, 354, 379, 404, 1146, 429, 454, 
          479, 1171, 504, 529, 554, 1196, 579, 604}], 
         Line3DBox[{628, 827, 629, 835, 643, 843, 651, 851, 659, 859, 667, 
          867, 675, 875, 683, 883, 691, 891, 699, 899, 707, 907, 715, 915, 
          723, 923, 731, 931, 739, 939, 747, 947, 755, 955, 763, 963, 771, 
          971, 779, 979, 787, 987, 795, 995, 803, 1003, 811, 1011, 819}], 
         Line3DBox[{7, 32, 1024, 57, 82, 107, 1049, 132, 157, 182, 1074, 207, 
          232, 257, 1099, 282, 307, 332, 1124, 357, 382, 407, 1149, 432, 457, 
          482, 1174, 507, 532, 557, 1199, 582, 607}], 
         Line3DBox[{630, 828, 631, 836, 644, 844, 652, 852, 660, 860, 668, 
          868, 676, 876, 684, 884, 692, 892, 700, 900, 708, 908, 716, 916, 
          724, 924, 732, 932, 740, 940, 748, 948, 756, 956, 764, 964, 772, 
          972, 780, 980, 788, 988, 796, 996, 804, 1004, 812, 1012, 820}], 
         Line3DBox[{10, 35, 1027, 60, 85, 110, 1052, 135, 160, 185, 1077, 210,
           235, 260, 1102, 285, 310, 335, 1127, 360, 385, 410, 1152, 435, 460,
           485, 1177, 510, 535, 560, 1202, 585, 610}], 
         Line3DBox[{632, 829, 633, 837, 645, 845, 653, 853, 661, 861, 669, 
          869, 677, 877, 685, 885, 693, 893, 701, 901, 709, 909, 717, 917, 
          725, 925, 733, 933, 741, 941, 749, 949, 757, 957, 765, 965, 773, 
          973, 781, 981, 789, 989, 797, 997, 805, 1005, 813, 1013, 821}], 
         Line3DBox[{13, 38, 1030, 63, 88, 113, 1055, 138, 163, 188, 1080, 213,
           238, 263, 1105, 288, 313, 338, 1130, 363, 388, 413, 1155, 438, 463,
           488, 1180, 513, 538, 563, 1205, 588, 613}], 
         Line3DBox[{634, 830, 635, 838, 646, 846, 654, 854, 662, 862, 670, 
          870, 678, 878, 686, 886, 694, 894, 702, 902, 710, 910, 718, 918, 
          726, 926, 734, 934, 742, 942, 750, 950, 758, 958, 766, 966, 774, 
          974, 782, 982, 790, 990, 798, 998, 806, 1006, 814, 1014, 822}], 
         Line3DBox[{16, 41, 1033, 66, 91, 116, 1058, 141, 166, 191, 1083, 216,
           241, 266, 1108, 291, 316, 341, 1133, 366, 391, 416, 1158, 441, 466,
           491, 1183, 516, 541, 566, 1208, 591, 616}], 
         Line3DBox[{636, 831, 637, 839, 647, 847, 655, 855, 663, 863, 671, 
          871, 679, 879, 687, 887, 695, 895, 703, 903, 711, 911, 719, 919, 
          727, 927, 735, 935, 743, 943, 751, 951, 759, 959, 767, 967, 775, 
          975, 783, 983, 791, 991, 799, 999, 807, 1007, 815, 1015, 823}], 
         Line3DBox[{19, 44, 1036, 69, 94, 119, 1061, 144, 169, 194, 1086, 219,
           244, 269, 1111, 294, 319, 344, 1136, 369, 394, 419, 1161, 444, 469,
           494, 1186, 519, 544, 569, 1211, 594, 619}], 
         Line3DBox[{638, 832, 639, 840, 648, 848, 656, 856, 664, 864, 672, 
          872, 680, 880, 688, 888, 696, 896, 704, 904, 712, 912, 720, 920, 
          728, 928, 736, 936, 744, 944, 752, 952, 760, 960, 768, 968, 776, 
          976, 784, 984, 792, 992, 800, 1000, 808, 1008, 816, 1016, 824}], 
         Line3DBox[{22, 47, 1039, 72, 97, 122, 1064, 147, 172, 197, 1089, 222,
           247, 272, 1114, 297, 322, 347, 1139, 372, 397, 422, 1164, 447, 472,
           497, 1189, 522, 547, 572, 1214, 597, 622}], 
         Line3DBox[{640, 833, 641, 841, 649, 849, 657, 857, 665, 865, 673, 
          873, 681, 881, 689, 889, 697, 897, 705, 905, 713, 913, 721, 921, 
          729, 929, 737, 937, 745, 945, 753, 953, 761, 961, 769, 969, 777, 
          977, 785, 985, 793, 993, 801, 1001, 809, 1009, 817, 1017, 
          825}]}, {}, {}}}, VertexNormals -> CompressedData["
1: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
4bG75U8tiUD6+qsc4/8DHhxmVg==
       "]], {}, {{}, {}}}, Axes -> True, 
    AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {360., 347.60929157824967`}, 
    Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "RotationControl" -> "Globe"}, PlotRange -> {Full, Full, Full}, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}}, SphericalRegion -> True, 
    Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
    0.42769327351158737`, 
    ViewPoint -> {1.1168544991007052`, -2.452181657167379, 
     2.0468124359819897`}, 
    ViewVertical -> {-0.250718786250936, 0.5504817406805105, 
     0.7963102055092681}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Psi]\"", 
       "\"\\!\\(\\*SuperscriptBox[\\(\[GothicCapitalA]\\), \
\\(+\\)]\\)\[Psi]\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Specularity", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.880722, 0.611041, 0.142051], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"Lighting", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.886026163976506*^9, 3.88602618845158*^9}, 
   3.886026306382625*^9, 3.886030717935584*^9, 3.886032650590288*^9, 
   3.886035892911552*^9, 3.886044161479762*^9, 3.8860442211273537`*^9, 
   3.886045756810337*^9, 3.88604611582535*^9, {3.88604907068862*^9, 
   3.886049095386044*^9}, 3.8860491384883213`*^9, 3.886049237364027*^9, 
   3.886050674643743*^9, 3.886051537959271*^9, 3.886051589788022*^9, 
   3.8860518138284893`*^9, 3.886052067250102*^9, 3.8860540177157373`*^9, 
   3.886054076246479*^9, 3.886055436395791*^9, 3.8860555112280283`*^9},
 CellLabel->
  "Out[922]=",ExpressionUUID->"2180a805-9236-4d62-945e-972ccc30cc39"]
}, Open  ]],

Cell["\<\
open issues:
i)  sign of the wave function must not (?) affect observables, in general, \
the scattering lengths, in particular.
ii)\
\>", "Text",
 CellChangeTimes->{{3.886035950130375*^9, 
  3.886036022398511*^9}},ExpressionUUID->"e3a4b569-8afc-41cd-a05d-\
2746d6018163"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "[", "N_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"row", "\[Equal]", "col"}], ",", 
      RowBox[{"2", " ", "\"\<(2\[Alpha])\>\""}], ",", 
      RowBox[{"1", " ", "\"\<(2\[Alpha])\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"row", ",", "1", ",", 
      RowBox[{"N", "-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"col", ",", "1", ",", 
      RowBox[{"N", "-", "1"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"nn", ",", "\"\<) \>\"", ",", 
       RowBox[{
        RowBox[{"mat", "[", "nn", "]"}], "//", "MatrixForm"}], ",", 
       "\"\<  |A|=\>\"", ",", 
       RowBox[{"Det", "[", 
        RowBox[{"mat", "[", "nn", "]"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"nn", ",", "1", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.886136119054984*^9, 3.8861363631429577`*^9}, {
  3.886137056404779*^9, 3.8861370737036448`*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"da439fcd-72c6-44e3-8f51-af3af6a496c1"],

Cell[BoxData[
 TemplateBox[{
  "Det", "matsq", 
   "\"Argument \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) is not a non-empty square matrix.\"", 2, 390, 
   25, 18256381695354149176, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8861363305985613`*^9, 3.886136364321763*^9, {3.886137063655924*^9, 
   3.886137074304483*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"80e4df1b-50e4-4ac6-8f17-3a25da9fee76"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"{", "}"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"Det", "[", 
    RowBox[{"{", "}"}], "]"}]}],
  SequenceForm[1, ") ", 
   MatrixForm[{}], "  |A|=", 
   Det[{}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074307291*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"c7862a56-966e-4bcc-a759-d95eb42dfea2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}],
  SequenceForm[2, ") ", 
   MatrixForm[{{2 "(2\[Alpha])"}}], "  |A|=", 2 "(2\[Alpha])"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.8861370743077106`*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"a14f3f67-25c8-4095-a806-cc2465cd5c11"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"3", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"3", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "2"]}]}],
  SequenceForm[3, ") ", 
   MatrixForm[{{2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])"}}], "  |A|=", 3 "(2\[Alpha])"^2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074308241*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"7b1efbe5-70ce-4f90-a917-1cb4ce9aa8d9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"4", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"4", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "3"]}]}],
  SequenceForm[4, ") ", 
   MatrixForm[{{2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])"}}], "  |A|=", 4 
   "(2\[Alpha])"^3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074308794*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"ca356ce5-f474-4a05-9aff-67e257f43ab7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"5", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"5", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "4"]}]}],
  SequenceForm[5, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])"}}], 
   "  |A|=", 5 "(2\[Alpha])"^4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074309305*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"db87f89c-f8a4-4fe3-bd09-ba7b4ca6dd60"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"6", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"6", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "5"]}]}],
  SequenceForm[6, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])"}}], "  |A|=", 6 "(2\[Alpha])"^5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.88613707430982*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"67db3ec7-dfd7-48c1-ae58-e33a04655408"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"7", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"7", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "6"]}]}],
  SequenceForm[7, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", 2 "(2\[Alpha])"}}], "  |A|=", 7 "(2\[Alpha])"^6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.8861370743103933`*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"22550f41-52fc-49e3-b075-66f25580181d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"8", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"8", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "7"]}]}],
  SequenceForm[8, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])"}}], "  |A|=", 8 
   "(2\[Alpha])"^7],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074311049*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"7b8f88d2-f12a-4aa4-b122-90dd3b83a6ec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"9", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"9", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "8"]}]}],
  SequenceForm[9, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])"}}], 
   "  |A|=", 9 "(2\[Alpha])"^8],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074311846*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"b88a77f2-c3d7-440f-969f-d3e335e7e67b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"10", "\[InvisibleSpace]", "\<\") \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{
        "2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}], "\<\"(2\[Alpha])\"\>"},
       {"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", \
"\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", "\<\"(2\
\[Alpha])\"\>", "\<\"(2\[Alpha])\"\>", 
        RowBox[{"2", " ", "\<\"(2\[Alpha])\"\>"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"  |A|=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"10", " ", 
    SuperscriptBox["\<\"(2\[Alpha])\"\>", "9"]}]}],
  SequenceForm[10, ") ", 
   MatrixForm[{{
     2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 "(2\[Alpha])", 
      "(2\[Alpha])"}, {
     "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 
      "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", "(2\[Alpha])", 2 
      "(2\[Alpha])"}}], "  |A|=", 10 "(2\[Alpha])"^9],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88613633060318*^9, 3.886136364324345*^9, {3.886137063690413*^9, 
   3.886137074312769*^9}},
 CellLabel->
  "During evaluation of \
In[389]:=",ExpressionUUID->"811f4135-e086-4085-b00c-9acb009a248b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NormTF", "[", "testcore", "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "/", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"NormT", "[", "testcore", "]"}], "2"]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.886220043251102*^9, 3.88622010669744*^9}, {
  3.886220140938747*^9, 3.886220189251519*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"62394fa1-6c9e-4f73-8543-946f6acf8f8c"],

Cell[BoxData["84.47143681854145`"], "Output",
 CellChangeTimes->{{3.886220054213173*^9, 3.8862201074782352`*^9}, {
   3.88622014804198*^9, 3.886220190353408*^9}, {3.886220403334009*^9, 
   3.886220427787387*^9}, 3.886220502848435*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"b1f1b5fb-cb1d-4be6-acb1-281f38ef1e7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bnd", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testcore", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"13.3", ",", "1.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"103.3", ",", "2.5"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unfi", "=", "testcore"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormT", "[", 
   RowBox[{"core_", ",", 
    RowBox[{"N_", ":", "3"}]}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"core", "[", 
         RowBox[{"[", "ii", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{
        RowBox[{"core", "[", 
         RowBox[{"[", "jj", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Pi", "^", 
           RowBox[{"(", 
            RowBox[{"N", "-", "1"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"N", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"core", "[", 
                 RowBox[{"[", "ii", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"core", "[", 
                 RowBox[{"[", "jj", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"N", "-", "1"}], ")"}]}]}], ")"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"3", "/", "2"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", "1", ",", 
        RowBox[{"Length", "[", "core", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"jj", ",", "1", ",", 
        RowBox[{"Length", "[", "core", "]"}]}], "}"}]}], "]"}], ",", "2"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"no", "=", 
    RowBox[{"NormT", "[", "unfi", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Print", "[", "\"\<---------------------\>\"", "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Norm=\>\"", ",", "no"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<---------------------\>\"", "]"}], 
      "\[IndentingNewLine]", "nfifu"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          SqrtBox["no"]}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", "unfi"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "\"\<Normalized: \>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"nofi", "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SqrtBox["no"]], " ", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"r1", "^", "2"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"r2", "^", "2"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"r1", " ", "r2"}], ")"}]}]}], ")"}]}], "]"}]}], 
          "&"}], "/@", "unfi"}], "]"}], "\[IndentingNewLine]", "numi1"}], "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "Pi"}], ")"}], "^", "2"}], " ", 
         RowBox[{"r1", "^", "2"}], " ", 
         RowBox[{"r2", "^", "2"}], " ", "nofi", "*", "nofi"}], ",", 
        RowBox[{"{", 
         RowBox[{"r1", ",", "0", ",", "bnd"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"r2", ",", "0", ",", "bnd"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<---------------------\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Unnormalized: \>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"unofi", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx1", "^", "2"}], "+", 
             RowBox[{"ry1", "^", "2"}], "+", 
             RowBox[{"rz1", "^", "2"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx2", "^", "2"}], "+", 
             RowBox[{"ry2", "^", "2"}], "+", 
             RowBox[{"rz2", "^", "2"}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx1", " ", "rx2"}], "+", 
             RowBox[{"ry1", " ", "ry2"}], "+", 
             RowBox[{"rz1", " ", "rz2"}]}], ")"}]}]}], ")"}]}], "]"}]}], 
     "&"}], "/@", "unfi"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numi2", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"unofi", "*", "unofi"}], ",", 
     RowBox[{"{", 
      RowBox[{"rx1", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rx2", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ry1", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ry2", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rz1", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rz2", ",", 
       RowBox[{"-", "bnd"}], ",", "bnd"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), \(2  \[Pi]\)]\)d\[Phi]\
\!\(\*SubsuperscriptBox[\(\[Integral]\), \(-1\), \(1\)]\)d(cos\[Theta])\
\[Integral]\!\(\*SuperscriptBox[\(\[Rho]\), \(2\)]\)d\[Rho] \
\!\(\*SuperscriptBox[\(\[CapitalPsi]\), \(*\)]\)\[CapitalPsi] = \>\"", ",", 
   "numi2", ",", 
   "\"\<\!\(\*OverscriptBox[\(\(\\\ \)\(\(=\)\(\\\ \)\)\), \(?\)]\)\>\"", ",",
    "no"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormTF", "[", "testcore", "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "/", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"NormT", "[", "testcore", "]"}], "2"]]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<---------------------\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.886137687563052*^9, 3.8861376960526657`*^9}, {
   3.8861378746776133`*^9, 3.886138081028365*^9}, {3.886138150016366*^9, 
   3.886138197033593*^9}, {3.886138235904414*^9, 3.88613828665664*^9}, 
   3.8861383318276777`*^9, {3.8861383936028976`*^9, 3.886138501690277*^9}, {
   3.8861385583535757`*^9, 3.8861386208997393`*^9}, {3.886138677646489*^9, 
   3.8861387748513927`*^9}, 3.886138814083364*^9, {3.8861388508962193`*^9, 
   3.886138878720912*^9}, {3.8861389137362432`*^9, 3.886139066655684*^9}, {
   3.886139732667962*^9, 3.886139831913512*^9}, {3.886139867931203*^9, 
   3.886139920497748*^9}, {3.88613998928804*^9, 3.8861400628045397`*^9}, {
   3.886140095328641*^9, 3.886140159181925*^9}, {3.8861401912996407`*^9, 
   3.886140191690345*^9}, {3.886140262831954*^9, 3.8861402915580187`*^9}, {
   3.886140341552541*^9, 3.886140418906557*^9}, {3.886140500266655*^9, 
   3.886140638335527*^9}, {3.886140734001038*^9, 3.886140776587687*^9}, {
   3.886140871957653*^9, 3.886140883093769*^9}, {3.886141028276374*^9, 
   3.886141031879979*^9}, {3.886141110579072*^9, 3.8861411447713423`*^9}, {
   3.8861421213393373`*^9, 3.8861421214106817`*^9}, {3.8861421524058447`*^9, 
   3.8861421568011303`*^9}, 3.886142193376709*^9, {3.886143449542006*^9, 
   3.886143452593552*^9}, {3.886143621478788*^9, 3.886143648190003*^9}, {
   3.886143840773917*^9, 3.8861438596125174`*^9}, {3.886143900977839*^9, 
   3.886143919234111*^9}, {3.886143960175706*^9, 3.8861440168541203`*^9}, {
   3.886145891256851*^9, 3.8861459224480333`*^9}, {3.8861462311049643`*^9, 
   3.886146320655026*^9}, {3.886146356248159*^9, 3.886146382075163*^9}, {
   3.8861464245005713`*^9, 3.886146431492311*^9}, {3.88621894651313*^9, 
   3.886219154526558*^9}, {3.886219352216084*^9, 3.886219358708963*^9}, 
   3.886219406473542*^9, {3.886219600941052*^9, 3.8862197023767138`*^9}, {
   3.886219735389263*^9, 3.886219793845868*^9}, {3.886220226381144*^9, 
   3.886220269024935*^9}, {3.886220464661744*^9, 3.886220470373295*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"126ad689-d7b6-4c0f-a0f2-0df3308a1f2e"],

Cell[CellGroupData[{

Cell[BoxData["\<\"---------------------\"\>"], "Print",
 CellChangeTimes->{
  3.8861401526022177`*^9, 3.886140300500639*^9, 3.88614034230476*^9, 
   3.8861403886644278`*^9, 3.886140419581808*^9, 3.886140532541243*^9, 
   3.886140573450674*^9, 3.8861406694301243`*^9, 3.886140746321416*^9, 
   3.8861407772457314`*^9, 3.886140883864285*^9, 3.886141032419701*^9, 
   3.886141961654092*^9, 3.886142125346233*^9, 3.886142157500805*^9, 
   3.8861422086792917`*^9, 3.886143649586739*^9, 3.886143920277761*^9, 
   3.886143961947783*^9, {3.886144000209907*^9, 3.886144017652835*^9}, {
   3.8861458932227077`*^9, 3.886145923000825*^9}, 3.886146325703895*^9, {
   3.886146360167789*^9, 3.886146382619124*^9}, {3.886146427732685*^9, 
   3.886146432560564*^9}, 3.8862191643990726`*^9, 3.886219359393681*^9, 
   3.8862194079004927`*^9, {3.8862197073533993`*^9, 3.886219794385833*^9}, {
   3.886220255807227*^9, 3.886220269680799*^9}, 3.88622047802099*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"b6faab19-bacf-4286-930e-fda004279b9a"],

Cell[BoxData["\<\"Unnormalized: \"\>"], "Print",
 CellChangeTimes->{
  3.8861401526022177`*^9, 3.886140300500639*^9, 3.88614034230476*^9, 
   3.8861403886644278`*^9, 3.886140419581808*^9, 3.886140532541243*^9, 
   3.886140573450674*^9, 3.8861406694301243`*^9, 3.886140746321416*^9, 
   3.8861407772457314`*^9, 3.886140883864285*^9, 3.886141032419701*^9, 
   3.886141961654092*^9, 3.886142125346233*^9, 3.886142157500805*^9, 
   3.8861422086792917`*^9, 3.886143649586739*^9, 3.886143920277761*^9, 
   3.886143961947783*^9, {3.886144000209907*^9, 3.886144017652835*^9}, {
   3.8861458932227077`*^9, 3.886145923000825*^9}, 3.886146325703895*^9, {
   3.886146360167789*^9, 3.886146382619124*^9}, {3.886146427732685*^9, 
   3.886146432560564*^9}, 3.8862191643990726`*^9, 3.886219359393681*^9, 
   3.8862194079004927`*^9, {3.8862197073533993`*^9, 3.886219794385833*^9}, {
   3.886220255807227*^9, 3.886220269680799*^9}, 3.8862204780215693`*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"3f6dfaca-f142-442d-99ee-c6cf590f68cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"103.3`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2.5`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx1", "2"], "+", 
          SuperscriptBox["ry1", "2"], "+", 
          SuperscriptBox["rz1", "2"]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rx1", " ", "rx2"}], "+", 
          RowBox[{"ry1", " ", "ry2"}], "+", 
          RowBox[{"rz1", " ", "rz2"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx2", "2"], "+", 
          SuperscriptBox["ry2", "2"], "+", 
          SuperscriptBox["rz2", "2"]}], ")"}]}]}], ")"}]}]]}], "+", 
  RowBox[{"13.3`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "1.5`"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx1", "2"], "+", 
          SuperscriptBox["ry1", "2"], "+", 
          SuperscriptBox["rz1", "2"]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"rx1", " ", "rx2"}], "+", 
          RowBox[{"ry1", " ", "ry2"}], "+", 
          RowBox[{"rz1", " ", "rz2"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx2", "2"], "+", 
          SuperscriptBox["ry2", "2"], "+", 
          SuperscriptBox["rz2", "2"]}], ")"}]}]}], ")"}]}]]}]}]], "Output",
 CellChangeTimes->{
  3.886137696842328*^9, 3.8861377507507963`*^9, 3.88613785459977*^9, 
   3.8861379102637367`*^9, 3.886137977078844*^9, 3.886138010321496*^9, {
   3.886138048142976*^9, 3.88613806267899*^9}, 3.8861382025686083`*^9, 
   3.886138236712792*^9, 3.886138334826393*^9, 3.886138394484507*^9, {
   3.886138442731866*^9, 3.8861384785371532`*^9}, 3.886138625011817*^9, {
   3.886138678999895*^9, 3.8861387374349833`*^9}, 3.8861387764370823`*^9, {
   3.8861388606596413`*^9, 3.88613887985753*^9}, {3.8861389152577467`*^9, 
   3.886138942540612*^9}, {3.886138977237033*^9, 3.886139021308393*^9}, 
   3.886139052731038*^9, {3.886139737495667*^9, 3.886139766405717*^9}, 
   3.886139834557521*^9, 3.886139926996562*^9, {3.886140005858865*^9, 
   3.886140032491105*^9}, 3.886140065672864*^9, 3.886140096436301*^9, 
   3.886140152606744*^9, 3.886140300505378*^9, 3.8861403423057756`*^9, 
   3.886140388665229*^9, 3.88614041958251*^9, 3.886140532542397*^9, 
   3.886140573451611*^9, 3.886140669430995*^9, 3.886140746322761*^9, 
   3.886140777246894*^9, 3.8861408838652067`*^9, 3.8861410324213552`*^9, 
   3.8861419616551332`*^9, 3.886142125347698*^9, 3.886142157501781*^9, 
   3.8861422086805477`*^9, 3.886143649588059*^9, 3.886143920278777*^9, 
   3.88614396194921*^9, {3.8861440002108*^9, 3.886144017653796*^9}, {
   3.886145893223662*^9, 3.886145923002445*^9}, 3.8861463257055387`*^9, {
   3.886146360169389*^9, 3.886146382620658*^9}, {3.8861464277349043`*^9, 
   3.886146432562333*^9}, 3.886219164401112*^9, 3.88621935939507*^9, 
   3.886219407902286*^9, {3.886219707355237*^9, 3.886219794387237*^9}, {
   3.886220255808566*^9, 3.886220269682181*^9}, 3.886220478022126*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"3473d891-de8e-4a86-bf80-efd22347f8b1"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "slwcon", 
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 279, 24, 
   18256972856502835814, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.886219707740636*^9, 3.886219794570259*^9}, {
   3.886220255982862*^9, 3.886220269857068*^9}, 3.886220478034148*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"2118fdc3-4422-4ff5-99a2-1b0d0f014629"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "eincr", 
   "\"The global error of the strategy GlobalAdaptive has increased more than \
\\!\\(\\*RowBox[{\\\"2000\\\"}]\\) times. The global error is expected to \
decrease monotonically after a number of integrand evaluations. Suspect one \
of the following: the working precision is insufficient for the specified \
precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"805.0228198064881`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.8297920310273206`\\\"}]\\) for the integral and error \
estimates.\"", 2, 279, 25, 18256972856502835814, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.886219707740636*^9, 3.886219794570259*^9}, {
   3.886220255982862*^9, 3.886220269857068*^9}, 3.886220483123107*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"519351f6-4356-44a0-8bb6-b93df9a4e545"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(0\\), \\(2  \
\[Pi]\\)]\\)d\[Phi]\\!\\(\\*SubsuperscriptBox[\\(\[Integral]\\), \\(-1\\), \
\\(1\\)]\\)d(cos\[Theta])\[Integral]\\!\\(\\*SuperscriptBox[\\(\[Rho]\\), \
\\(2\\)]\\)d\[Rho] \\!\\(\\*SuperscriptBox[\\(\[CapitalPsi]\\), \\(*\\)]\\)\
\[CapitalPsi] = \"\>", "\[InvisibleSpace]", "805.0228198064881`", 
   "\[InvisibleSpace]", "\<\"\\!\\(\\*OverscriptBox[\\(\\(\\\\ \
\\)\\(\\(=\\)\\(\\\\ \\)\\)\\), \\(?\\)]\\)\"\>", "\[InvisibleSpace]", 
   "804.6875207535431`"}],
  SequenceForm[
  "\!\(\*SubsuperscriptBox[\(\[Integral]\), \(0\), \(2  \[Pi]\)]\)d\[Phi]\!\(\
\*SubsuperscriptBox[\(\[Integral]\), \(-1\), \
\(1\)]\)d(cos\[Theta])\[Integral]\!\(\*SuperscriptBox[\(\[Rho]\), \(2\)]\)d\
\[Rho] \!\(\*SuperscriptBox[\(\[CapitalPsi]\), \(*\)]\)\[CapitalPsi] = ", 
   805.0228198064881, 
   "\!\(\*OverscriptBox[\(\(\\ \)\(\(=\)\(\\ \)\)\), \(?\)]\)", 
   804.6875207535431],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8861401526022177`*^9, 3.886140300500639*^9, 3.88614034230476*^9, 
   3.8861403886644278`*^9, 3.886140419581808*^9, 3.886140532541243*^9, 
   3.886140573450674*^9, 3.8861406694301243`*^9, 3.886140746321416*^9, 
   3.8861407772457314`*^9, 3.886140883864285*^9, 3.886141032419701*^9, 
   3.886141961654092*^9, 3.886142125346233*^9, 3.886142157500805*^9, 
   3.8861422086792917`*^9, 3.886143649586739*^9, 3.886143920277761*^9, 
   3.886143961947783*^9, {3.886144000209907*^9, 3.886144017652835*^9}, {
   3.8861458932227077`*^9, 3.886145923000825*^9}, 3.886146325703895*^9, {
   3.886146360167789*^9, 3.886146382619124*^9}, {3.886146427732685*^9, 
   3.886146432560564*^9}, 3.8862191643990726`*^9, 3.886219359393681*^9, 
   3.8862194079004927`*^9, {3.8862197073533993`*^9, 3.886219794385833*^9}, {
   3.886220255807227*^9, 3.886220269680799*^9}, 3.886220483128519*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"0139c2be-f279-49d6-927b-adefbaac40e5"],

Cell[BoxData["84.47143681854145`"], "Output",
 CellChangeTimes->{
  3.886137696842328*^9, 3.8861377507507963`*^9, 3.88613785459977*^9, 
   3.8861379102637367`*^9, 3.886137977078844*^9, 3.886138010321496*^9, {
   3.886138048142976*^9, 3.88613806267899*^9}, 3.8861382025686083`*^9, 
   3.886138236712792*^9, 3.886138334826393*^9, 3.886138394484507*^9, {
   3.886138442731866*^9, 3.8861384785371532`*^9}, 3.886138625011817*^9, {
   3.886138678999895*^9, 3.8861387374349833`*^9}, 3.8861387764370823`*^9, {
   3.8861388606596413`*^9, 3.88613887985753*^9}, {3.8861389152577467`*^9, 
   3.886138942540612*^9}, {3.886138977237033*^9, 3.886139021308393*^9}, 
   3.886139052731038*^9, {3.886139737495667*^9, 3.886139766405717*^9}, 
   3.886139834557521*^9, 3.886139926996562*^9, {3.886140005858865*^9, 
   3.886140032491105*^9}, 3.886140065672864*^9, 3.886140096436301*^9, 
   3.886140152606744*^9, 3.886140300505378*^9, 3.8861403423057756`*^9, 
   3.886140388665229*^9, 3.88614041958251*^9, 3.886140532542397*^9, 
   3.886140573451611*^9, 3.886140669430995*^9, 3.886140746322761*^9, 
   3.886140777246894*^9, 3.8861408838652067`*^9, 3.8861410324213552`*^9, 
   3.8861419616551332`*^9, 3.886142125347698*^9, 3.886142157501781*^9, 
   3.8861422086805477`*^9, 3.886143649588059*^9, 3.886143920278777*^9, 
   3.88614396194921*^9, {3.8861440002108*^9, 3.886144017653796*^9}, {
   3.886145893223662*^9, 3.886145923002445*^9}, 3.8861463257055387`*^9, {
   3.886146360169389*^9, 3.886146382620658*^9}, {3.8861464277349043`*^9, 
   3.886146432562333*^9}, 3.886219164401112*^9, 3.88621935939507*^9, 
   3.886219407902286*^9, {3.886219707355237*^9, 3.886219794387237*^9}, {
   3.886220255808566*^9, 3.886220269682181*^9}, 3.886220483130233*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"c21752dd-729a-4121-96b4-978e1216a09b"],

Cell[BoxData["\<\"---------------------\"\>"], "Print",
 CellChangeTimes->{
  3.8861401526022177`*^9, 3.886140300500639*^9, 3.88614034230476*^9, 
   3.8861403886644278`*^9, 3.886140419581808*^9, 3.886140532541243*^9, 
   3.886140573450674*^9, 3.8861406694301243`*^9, 3.886140746321416*^9, 
   3.8861407772457314`*^9, 3.886140883864285*^9, 3.886141032419701*^9, 
   3.886141961654092*^9, 3.886142125346233*^9, 3.886142157500805*^9, 
   3.8861422086792917`*^9, 3.886143649586739*^9, 3.886143920277761*^9, 
   3.886143961947783*^9, {3.886144000209907*^9, 3.886144017652835*^9}, {
   3.8861458932227077`*^9, 3.886145923000825*^9}, 3.886146325703895*^9, {
   3.886146360167789*^9, 3.886146382619124*^9}, {3.886146427732685*^9, 
   3.886146432560564*^9}, 3.8862191643990726`*^9, 3.886219359393681*^9, 
   3.8862194079004927`*^9, {3.8862197073533993`*^9, 3.886219794385833*^9}, {
   3.886220255807227*^9, 3.886220269680799*^9}, 3.8862204831319847`*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"a582be5e-59e3-4be9-aeee-a16f69440039"]
}, Open  ]],

Cell["compare two wave functions:", "Text",
 CellChangeTimes->{{3.8867475168079233`*^9, 
  3.886747524959813*^9}},ExpressionUUID->"9c55d2f5-3be2-4dfa-a10f-\
781d1e4fecd9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"wfkts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalLambda]=2\!\(\*SuperscriptBox[\(fm\), \(-1\)]\) (1)\>\"", 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.00000000"}], ",", "2.99846000", ",", 
           "87.70266000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "114.00000000"}], ",", "2.99846000", ",", 
           "5.63243400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"217.00000000", ",", "2.99846000", ",", "0.37438900"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "448.00000000"}], ",", "2.99846000", ",", 
           "0.16720500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "18.00000000"}], ",", "2.99846000", ",", 
           "0.05830700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"132.00000000", ",", "1.88413100", ",", "87.70266000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.88413100", ",", "5.63243400"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.88413100", ",", "0.37438900"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.88413100", ",", "0.16720500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.88413100", ",", "0.05830700"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "135.00000000"}], ",", "1.84067000", ",", 
           "87.70266000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.84067000", ",", "5.63243400"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.84067000", ",", "0.37438900"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.84067000", ",", "0.16720500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.84067000", ",", "0.05830700"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6.00000000", ",", "1.16158100", ",", "87.70266000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"29.00000000", ",", "1.16158100", ",", "5.63243400"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "972.00000000"}], ",", "1.16158100", ",", 
           "0.37438900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.16158100", ",", "0.16720500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "676.00000000"}], ",", "1.16158100", ",", 
           "0.05830700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00000000", ",", "0.58080100", ",", "87.70266000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.00000000", ",", "0.58080100", ",", "5.63243400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "245.00000000"}], ",", "0.58080100", ",", 
           "0.37438900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "180.00000000"}], ",", "0.58080100", ",", 
           "0.16720500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"276.00000000", ",", "0.58080100", ",", "0.05830700"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00000000", ",", "1.79563100", ",", "20.23515500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"613.00000000", ",", "1.79563100", ",", "1.49799000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"736.00000000", ",", "1.79563100", ",", "0.68679100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.79563100", ",", "0.16133100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "695.00000000"}], ",", "1.79563100", ",", 
           "0.04821400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3.00000000"}], ",", "0.64739100", ",", 
           "20.23515500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "247.00000000"}], ",", "0.64739100", ",", 
           "1.49799000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"566.00000000", ",", "0.64739100", ",", "0.68679100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "0.64739100", ",", "0.16133100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "593.00000000"}], ",", "0.64739100", ",", 
           "0.04821400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.00000000", ",", "0.27178500", ",", "20.23515500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "14.00000000"}], ",", "0.27178500", ",", 
           "1.49799000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"28.00000000", ",", "0.27178500", ",", "0.68679100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "992.00000000"}], ",", "0.27178500", ",", 
           "0.16133100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "939.00000000"}], ",", "0.27178500", ",", 
           "0.04821400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00000000", ",", "0.07598900", ",", "20.23515500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.00000000"}], ",", "0.07598900", ",", 
           "1.49799000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "0.07598900", ",", "0.68679100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "256.00000000"}], ",", "0.07598900", ",", 
           "0.16133100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "993.00000000"}], ",", "0.07598900", ",", 
           "0.04821400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00000000", ",", "0.02113500", ",", "20.23515500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.00000000", ",", "0.02113500", ",", "1.49799000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4.00000000"}], ",", "0.02113500", ",", 
           "0.68679100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"26.00000000", ",", "0.02113500", ",", "0.16133100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "241.00000000"}], ",", "0.02113500", ",", 
           "0.04821400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.00000000"}], ",", "9.41323800", ",", 
           "9.73871500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "11.00000000"}], ",", "9.41323800", ",", 
           "3.27891800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "9.41323800", ",", "1.24945000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"12.00000000", ",", "9.41323800", ",", "0.30162000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "16.00000000"}], ",", "9.41323800", ",", 
           "0.06918000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00000000", ",", "6.95680600", ",", "9.73871500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"17.00000000", ",", "6.95680600", ",", "3.27891800"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "26.00000000"}], ",", "6.95680600", ",", 
           "1.24945000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "27.00000000"}], ",", "6.95680600", ",", 
           "0.30162000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"38.00000000", ",", "6.95680600", ",", "0.06918000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4.00000000", ",", "3.18046300", ",", "9.73871500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "114.00000000"}], ",", "3.18046300", ",", 
           "3.27891800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "23.00000000"}], ",", "3.18046300", ",", 
           "1.24945000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"206.00000000", ",", "3.18046300", ",", "0.30162000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6.00000000", ",", "3.18046300", ",", "0.06918000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00000000", ",", "1.20215600", ",", "9.73871500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "84.00000000"}], ",", "1.20215600", ",", 
           "3.27891800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "458.00000000"}], ",", "1.20215600", ",", 
           "1.24945000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "1.20215600", ",", "0.30162000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"297.00000000", ",", "1.20215600", ",", "0.06918000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00000000", ",", "0.00998100", ",", "9.73871500"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.00000000"}], ",", "0.00998100", ",", 
           "3.27891800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.00000000", ",", "0.00998100", ",", "1.24945000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "12.00000000"}], ",", "0.00998100", ",", 
           "0.30162000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"50.00000000", ",", "0.00998100", ",", "0.06918000"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"798.00000000", ",", "1.96850500", ",", "1.79491500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "817.00000000"}], ",", "1.96850500", ",", 
           "1.49045300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"38.00000000", ",", "1.96850500", ",", "0.35302400"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"505.00000000", ",", "1.96850500", ",", "0.12444800"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"224.00000000", ",", "1.96850500", ",", "0.03872200"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "507.00000000"}], ",", "0.98375600", ",", 
           "1.79491500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "0.98375600", ",", "1.49045300"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "268.00000000"}], ",", "0.98375600", ",", 
           "0.35302400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"211.00000000", ",", "0.98375600", ",", "0.12444800"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"107.00000000", ",", "0.98375600", ",", "0.03872200"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"241.00000000", ",", "0.52581400", ",", "1.79491500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "292.00000000"}], ",", "0.52581400", ",", 
           "1.49045300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"643.00000000", ",", "0.52581400", ",", "0.35302400"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10.00000000", ",", "0.52581400", ",", "0.12444800"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"449.00000000", ",", "0.52581400", ",", "0.03872200"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "182.00000000"}], ",", "0.19091600", ",", 
           "1.79491500"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"280.00000000", ",", "0.19091600", ",", "1.49045300"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "779.00000000"}], ",", "0.19091600", ",", 
           "0.35302400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"616.00000000", ",", "0.19091600", ",", "0.12444800"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"652.00000000", ",", "0.19091600", ",", "0.03872200"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"115.00000000", ",", "0.12835100", ",", "1.79491500"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "174.00000000"}], ",", "0.12835100", ",", 
           "1.49045300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"379.00000000", ",", "0.12835100", ",", "0.35302400"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"528.00000000", ",", "0.12835100", ",", "0.12444800"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"107.00000000", ",", "0.12835100", ",", "0.03872200"}], 
          "}"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalLambda]=2\!\(\*SuperscriptBox[\(fm\), \(-1\)]\) (2)\>\"", 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01061740"}], ",", "4.13404400", ",", 
           "0.27286900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00820667", ",", "4.13404400", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00232704"}], ",", "4.13404400", ",", 
           "0.06354700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00663043", ",", "3.47668300", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00824312", ",", "3.47668300", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00882996", ",", "3.47668300", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.48249900", ",", "1.41086700", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.05509460"}], ",", "1.41086700", ",", 
           "0.18057100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.31809900", ",", "1.41086700", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.50162500"}], ",", "1.26632400", ",", 
           "0.27286900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.07544860", ",", "1.26632400", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.33183300"}], ",", "1.26632400", ",", 
           "0.06354700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.17321700", ",", "0.84262700", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.03289340", ",", "0.84262700", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.16311400", ",", "0.84262700", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.13230000"}], ",", "0.25662000", ",", 
           "0.27286900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.18971000", ",", "0.25662000", ",", "0.18057100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.27975700"}], ",", "0.25662000", ",", 
           "0.06354700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.45883000", ",", "0.24733700", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3.86811000"}], ",", "0.24733700", ",", 
           "0.18057100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.44169500", ",", "0.24733700", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00315959", ",", "0.00556100", ",", "0.27286900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00699255"}], ",", "0.00556100", ",", 
           "0.18057100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01162550", ",", "0.00556100", ",", "0.06354700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00052919", ",", "9.20551700", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00090575"}], ",", "9.20551700", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00019846"}], ",", "9.20551700", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.05794020", ",", "1.92216500", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.09777030"}], ",", "1.92216500", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.10221100"}], ",", "1.92216500", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.03306620"}], ",", "1.31386900", ",", 
           "1.90963000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.06791630", ",", "1.31386900", ",", "0.22164800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.20769300", ",", "1.31386900", ",", "0.06304600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.03301990", ",", "1.00860000", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.15354300"}], ",", "1.00860000", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.25679100"}], ",", "1.00860000", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01307010"}], ",", "0.22007800", ",", 
           "1.90963000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00014706", ",", "0.22007800", ",", "0.22164800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.12907900"}], ",", "0.22007800", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.02167700", ",", "0.12481900", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.04734000"}], ",", "0.12481900", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.32768600"}], ",", "0.12481900", ",", 
           "0.06304600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02038300"}], ",", "0.08951100", ",", 
           "1.90963000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.77814700", ",", "0.08951100", ",", "0.22164800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.75664800", ",", "0.08951100", ",", "0.06304600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00690824", ",", "0.07059200", ",", "1.90963000"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.24339700"}], ",", "0.07059200", ",", 
           "0.22164800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.59746100"}], ",", "0.07059200", ",", 
           "0.06304600"}], "}"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalLambda]=2\!\(\*SuperscriptBox[\(fm\), \(-1\)]\) (3)\>\"", 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00003985"}], ",", "28.93343500", ",", 
           "8.14015400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00008490", ",", "28.93343500", ",", "2.02633800"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00009128"}], ",", "28.93343500", ",", 
           "0.20892100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00004409"}], ",", "28.93343500", ",", 
           "0.05748900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02124960"}], ",", "3.99549000", ",", 
           "8.14015400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01175290", ",", "3.99549000", ",", "2.02633800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.04258900", ",", "3.99549000", ",", "0.20892100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.03245410", ",", "3.99549000", ",", "0.05748900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.01857420", ",", "3.28474000", ",", "8.14015400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00039555", ",", "3.28474000", ",", "2.02633800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.13621500"}], ",", "3.28474000", ",", 
           "0.20892100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.09707020"}], ",", "3.28474000", ",", 
           "0.05748900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.12769200"}], ",", "2.13081300", ",", 
           "8.14015400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.68782000"}], ",", "2.13081300", ",", 
           "2.02633800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.21003000", ",", "2.13081300", ",", "0.20892100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"1.96609000", ",", "2.13081300", ",", "0.05748900"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.12476600", ",", "2.09270100", ",", "8.14015400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"1.68829000", ",", "2.09270100", ",", "2.02633800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3.24403000"}], ",", "2.09270100", ",", 
           "0.20892100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.96768000"}], ",", "2.09270100", ",", 
           "0.05748900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00156092"}], ",", "0.57153000", ",", 
           "8.14015400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00793339", ",", "0.57153000", ",", "2.02633800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.12095900"}], ",", "0.57153000", ",", 
           "0.20892100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.10130100"}], ",", "0.57153000", ",", 
           "0.05748900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00090765", ",", "0.22240800", ",", "8.14015400"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00609011"}], ",", "0.22240800", ",", 
           "2.02633800"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.10509800"}], ",", "0.22240800", ",", 
           "0.20892100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.10601300"}], ",", "0.22240800", ",", 
           "0.05748900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00004640"}], ",", "0.03258400", ",", 
           "8.14015400"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00035185", ",", "0.03258400", ",", "2.02633800"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00207193", ",", "0.03258400", ",", "0.20892100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.06372250"}], ",", "0.03258400", ",", 
           "0.05748900"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00007173", ",", "26.66306300", ",", "6.18343100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00009780", ",", "26.66306300", ",", "3.24273200"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00005451", ",", "26.66306300", ",", "0.30546600"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00009078"}], ",", "26.66306300", ",", 
           "0.07883700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00450774"}], ",", "8.99687400", ",", 
           "6.18343100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00166127"}], ",", "8.99687400", ",", 
           "3.24273200"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00036307"}], ",", "8.99687400", ",", 
           "0.30546600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00060409", ",", "8.99687400", ",", "0.07883700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00589721", ",", "2.89441100", ",", "6.18343100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02183350"}], ",", "2.89441100", ",", 
           "3.24273200"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.02113000", ",", "2.89441100", ",", "0.30546600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.01951180", ",", "2.89441100", ",", "0.07883700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00089911", ",", "1.39270100", ",", "6.18343100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.03354480"}], ",", "1.39270100", ",", 
           "3.24273200"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.09503350", ",", "1.39270100", ",", "0.30546600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.10006400", ",", "1.39270100", ",", "0.07883700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00129447", ",", "0.50269000", ",", "6.18343100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.00399663", ",", "0.50269000", ",", "3.24273200"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.08306720", ",", "0.50269000", ",", "0.30546600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.14796000", ",", "0.50269000", ",", "0.07883700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.07600330"}], ",", "0.18057700", ",", 
           "6.18343100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.11713100", ",", "0.18057700", ",", "3.24273200"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.03755000"}], ",", "0.18057700", ",", 
           "0.30546600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.05630690"}], ",", "0.18057700", ",", 
           "0.07883700"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.07364650", ",", "0.17538800", ",", "6.18343100"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.11357400"}], ",", "0.17538800", ",", 
           "3.24273200"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.00878000", ",", "0.17538800", ",", "0.30546600"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"0.21179100", ",", "0.17538800", ",", "0.07883700"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00043247"}], ",", "0.04319200", ",", 
           "6.18343100"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.00066286", ",", "0.04319200", ",", "3.24273200"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.00434642"}], ",", "0.04319200", ",", 
           "0.30546600"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.06282520", ",", "0.04319200", ",", "0.07883700"}], 
          "}"}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rmax", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grdPoints", "=", "22"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r1r2Range", "=", 
   RowBox[{"Subdivide", "[", 
    RowBox[{"Rmax", ",", 
     RowBox[{"grdPoints", "-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunction", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], " ", 
            RowBox[{"r1", "^", "2"}]}], "-", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], " ", 
            RowBox[{"r2", "^", "2"}]}]}], "]"}]}], "&"}], "/@", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"wfkts", "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", "3"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lgnds", "=", 
   RowBox[{"wfkts", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"JacobiWavefunctionGrid", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"#", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r1", "\[Rule]", "R1"}], ",", 
          RowBox[{"r2", "\[Rule]", "R2"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"R1", ",", "r1r2Range"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"R2", ",", "r1r2Range"}], "}"}]}], "]"}], "&"}], "/@", 
    "JacobiWavefunction"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"JacobiWavefunctionGrid", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "lgnds"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<|\!\(\*SubscriptBox[OverscriptBox[\(\[Rho]\), \(\[RightVector]\)], \
\(1\)]\)|  [fm]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[OverscriptBox[\(\[Rho]\), \(\[RightVector]\)], \
\(2\)]\)|  [fm]\>\"", ",", 
      "\"\<\[Sum]\!\(\*SubsuperscriptBox[\(a\), \(n\), \((fit)\)]\)\
\[CenterDot]\!\(\*SuperscriptBox[\(e\), \(\(-\*SubsuperscriptBox[\(b\), \
\(n\), \((fit)\)]\) \((\*SubsuperscriptBox[\(\[Rho]\), \(1\), \(2\)] + \
\*SubsuperscriptBox[\(\[Rho]\), \(2\), \(2\)])\)\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8867475427998343`*^9, 3.8867476316242437`*^9}, {
  3.8867476722032757`*^9, 3.88674768659622*^9}, {3.886747725896761*^9, 
  3.886748041974771*^9}, {3.886748319559003*^9, 3.886748333137691*^9}, {
  3.8867483901390467`*^9, 3.886748479732635*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"7a6e192f-e08e-4894-813d-73ef54a4554f"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1: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
m6d3lpdNWgUeFLTx58+lL+f+7/nqnc1LZwxxtwMPCto26dadb2etwYOCDt+w
amauXAIelJTMqlzc/AM9KKnjvqEbe3xFD0paubc+XbMFPSipcd+gobt+oAcl
9W2XlKNZgh6U1Nm3pueItehBSR8PmqfP+In3F0qynRnW4u2C9xdKmj5L5ud1
Ex8/KOmHcI9dbWf0oKTJle2qOUJ8PKkks09j1vQwwecXStLr9WS2Tgc8T6uk
oSnur05fwtcflHSLhpe6OeHrUa0d7ll0c2b/7/nqJf2WPnEbvBo8KGlV2L6a
gvkrwIOSFtad+6zYugw8KGnZEc3tdN8GPCiJ2fyiJ6Pt5yz+nq+ebr/tF+/+
79dzfNV/z1tdqN4oVrm/hTmDnuuL3rdM+fN7azu3XX/1h6uf19w6mDNoc5No
5LCev+eFPdquf33bvDxPowbmDNot7bvF4tSf32/Zp+36pIuLZk3YUwVzBq2S
lUTYWP+ek27b9RXnxJb3n72AOYN+8pfXVO/5PS/Ub7s+sPH8zfZDn8CcQRNi
JjyPev7792VZ/T2n3bRrgeXaFfdgziDHsUun9OL/+b1JRm3XH5mx2G/i/Jsw
Z1Bt2NPVes2/f/9Vqknb9Zeum5+XCi7BnEE9vFxro97+/r0c9Pdc94VrX2c5
HzgL89aeV1Itri39Pa/4e95bNWTtjEnGx2DOIMstBbqp33//3H3h33PgwpFm
Q7Mbc2DOoOG1y3s2n/89Z/09B35Ql6d4/DUd5gyaViN+PLPs99zq7/lw28UN
iSfHJ8OcQWbJ2cX7+v+eH/57bryneX9FH1EszBmkLOUcyukeC26Z1HHEMdtN
+9AnkyabWMqHTqwFh0yK/KQ1ecWLN+CNSUdDa6f9SHwFrpjUt1ZxveVXBfhh
0tsC+33by8vBCZPStT9tYdmVgQcmFV9YGXu/9jrc7kzSlitijAbj7c4kkzE3
eMEeZ+B2ZNKth0cjbq/G25FJS07crJP0w9uLSboG27oVOuPtwqSuDh9eHNyT
BJ2ZVFkUEu13KQY6syj3fc3wpwtroTOLcrzCF6hXVEPn1vuNwAdDIza9hs4s
0nfb1u7B4pfQmUXrTruMnfbxOXRmUdyKRZO4Ix5BZxa1X/e6fKz4LnRm0cvX
kw76Di6FzixqlD95y2QXQ2cWnX/qa17Q4TR0ZpGD2TfNiIAj0JlF6k7aOaPb
74fOLPrUPLZj/fU06MyijQO22+97lAidW7tpm+kqxmJnNrF7bZ08b3E1dGYT
a1DugOlVr6EzmxJrRtp/3P0KOrPpUj/WT8NC/D7JpvIen7/3G/8UOrOp8Ykg
v4X/ADqzSXDi6stJabehc+vnOWDV2Qq1q9CZTUfCazwHxF+AzmzKPR2Q4tO7
ADqzSaHa+k1vUh50ZpN/M8+n2TcbOrNJ65KdnrBiN3RmU5y56YIz+3ZAZzZd
ObfQJcw3GjpzyLL/8jU7yqugM4f4ZoO9q7xfQWcOzXxv6blnXSV05pD9kvjd
ooLn0JlDl05bDev75/eot3XmkNqwU3LTU2XQmUPPnZbxtLLwfoRDI8dGGQ5w
LIHOHHo1d2d893uF0JlDJSc9luVcyYfOHFoyosc2/euHoTOHMuorm+7uyoTO
HOq/M/RNVm4qdObQvc411j/1tkNnDiXtcmRUekRBZx3yNDEzXcF6CZ11aF7Y
2cft/9yPt3XWIUe2YXVN9wrorENJHUL0k7IfQ2cd+rTp/lyr8vvQWYe06o93
Dvzz+0it/p6T7P0z+fzRy9egsw6Z8R5mJ2YXQ2cdMh5iv7Zd5RnorEPDs6p6
fZuI97M6dFqtu1WV5UHorEMeMxbNrQ7dA511KPHti4PSszuhsw7Z+keMWGUd
D51b54xwz0EzIqEzlza0O6nJV1RAZy5lP/qme836GXTmEn9eHw++5WPozCXm
6IZSbvgD6Myl9c/Sdtn43IXOXJq0tHCpRPsmdOaSXuSiwNOVJdCZS+P2LvN6
8vw8dOZSycptK66wCqAzl8wlqoePzudBZy4pxz/bocvcD5255PLL0Wf+Knx8
wqU3V/UaNNTxcUjrx1V/vkgRiY83uNR/7osIhigcOhvQ9BSb53kvy6GzAVU2
aJ3cMPgRdDagXiV3enU8cR86G9DdKF9Z76S70NmA1OqmFpiOuwWdDch3dfW1
xRpXobMBMZd6qW0dUAydDWj+CbvA3VZnobMBjf6SFei99Dh0NqCG+sthlycd
hs6t8/TgBUMvZUJnA6oeZZ2qMWU3dDagQ1a+AWNoB3Q2oIPj3uQNPBYNnQ0o
cmb4k+N7Q6Ezjxa+3xCcdfUedOaRe2TB5ej1ZdCZRyO2xIxxdb0DnXnEO3Yz
Jr3+JnTmUU7d0uTryVehM488uqrNVNlehM48utZSv3DCgULozCN1M+9Kd7uT
0JlHm/PvdfxYlwedebRu40NxxLv90JlHXI3IwsbMDOjMo+wdfNHDDTuhM4/m
OKvaufnHQ2ceJXJyGXVlkdCZR10Wzg4I6RwCnfnkfyfSlzvpNnTm046HurpD
6BZ05pNqV1Hze7vr0JlPnYxTi90CrkBnPt3kbDJZvfgidObT7VWTDGwmnofO
fKoc/sN8rfQUdOZT9QU/rbL3R6Ezn1YsnzrEO/kQdOaT/TzTTtH7M6Ezn3rJ
TJ5ZXtgNnfl0a9s09vSIROjMp4Y3tVaqpzHQmU9vv7BuRf35ude2znxq6buw
3tM5EDob0+tH9uubPlyFzsYUkudU+XbRFehsTC+EelVmaiXQ2Zg2FKRYtOta
DJ2NKXnRp6KbVYXQ2ZgKqs496RV9CjobE5//mD2m9hh0NqZXz4tMTNm50Ln1
8/zoLHwu2AedjSlr7NLOh6rSobMxWRvP19s8eSd0NibvR4lTP/75uSrW3/Na
Xp3Pm7QsjYLOxqT3wGr/TIet0NmYPvXSPLa81h86Cyh20sL9H3KKobOAluTd
tIjcXASdBbTzZXxVj6Lz0FlAfe17GKYYnoPOAppXPTb77doC6CygC4Mc9B+V
HIPOAtpt+9Rh4ZZc6Cwgg6bMFI3D+6GzgM5MKClbsnUPdBZQg13aj9XpqdBZ
QBtlRdLmvB3QWUDF+6zbi/783jnW33NQh+xKHD7+uV9r6ywgq8g3uqW6QdBZ
QKaFcWcGbfGDzkLy7T1175Rl56CzkDjnDR4xjp2BzkKyeLRWeHHgKegspFVa
8TtnNudDZyGtCTg7onLrUegspPWhOeaf++dCZyEd3LLzoEb1fujcen3C8Xyl
1V7oLKSPEj2F3aHd0FlIPWZFR348mwSdhZR2mq9ccSIOOgup8ExUSU1FJHQW
0ozCffobum6FzkIKb+jn0qV3AHQW0uShbu1j472hs4hed9TcM+RQPnQWUUP3
+Olqm45DZxHtE45weXXgKHQWUULRyFHFy/Ogs4jKrtZVT314CDqLKDVXGTLu
2T7oLCIVh5E2SbkXOotI40vWkF890qCziMLKNZXD26dAZxEFfg3NP8hJgM4i
WmqfsmrH1GjoLKIfqurVnf/8XDnr77kd/wmaIxcvCYTOIvr5KGA2Y54fdBZR
zd6AjcneHtBZTCxuV/MB93Ohs5g8330dKPx1GDqLyftDytU5boegs5jSTomj
JKoc6CymRCeR78XjWdBZTPdenE5s0dsDncVkfyZTYHh8N3QWk47DqLUmqhTo
LKYWa7rifDMBOoupf6NiwlFJDHQW0woDi+rjZ8Khs5hm2S80d7YMhs5iOilQ
fevd3R86i8nAwiNx5iEv6CymbaKew00L3aCzhGpmDGfMr98HnSVkf3v1jc2X
sqGzhC6Pn9s0XSMLOkuooL+BLRXtgc4SOr7FPExong6dJcSbalKjtj8VOkvo
e7FRxvaZydBZQrMszbp8PpgAnSXU/PHt7qMBMdBZQkvyC8U/rkdAZwkZldnV
vjgYAp0lNMzoRHeGRwB0ltDhZvNfB3R9oXPr1zU4odfJgRuhs4Tq3Ytzpsx1
gc5SkrU/GjTWPQM6S6nP4PMt1vvSobOUqoYGHa5clwadpZRp9/7L7iep0FlK
CweUffI33AmdpfTcq9fBILtE6Cwlo9I9Rz1y4qGzlIIX3/nw0iQGOkuJmT+4
uvxVBHSWUvK5Ljkq6Vbo3Pr5++xgt5+4BTpLSeu8F2NiZz/oLCXVDLfxdfUe
0FlKTToFnPlsV+jc2kG2YFaj0gk6y6iuVOEcPn8XdJaRJXPUxeQ//65cW2cZ
jSizPhsdkAydZfTCJVUteUwidJZR365Fd2/8cdjWWUZBo2ZkHq6Lhc4y2m1f
II7gRkNnGfUUW919UhEOnWW0Z1q4NP5ZCHSW0caA3LJ2i7dA59bPP43yLNf4
QWcZjap6kLdQbRN0ltGicdtfLh/oBp1ldGCv5wj5knXQWUYfRxq4c86ugs5y
Spqd/clIsB06y2mEw65X85ckQGc59djRPq2SFw+d5XRRQ7NX+uZY6Cyns681
RqsSo6GznL67dgr8ERQJneV0JMHrJuN6GHSW06zDY9aXpgdDZzl5vL/740l+
AHSWk/Yz1ZYTRn7QufXzdLPOK9TaBJ3ltMei3WFVuBt0ltP4BeE/Nz1bB53l
VJcS08Nb3QE6yyk7fcWddtHLoLOC4st2LkjeHw2dFVTOnXfvdK9o6Kyg+vaW
YSdNo6CzgtwPlvXe9z4COivons+pTpf+/L6vts4KSr29b+zcihDorKAbjhc+
ZccGQmcF9RnE0XeY5w+dFRTsoFulOcYXOisoY+GWI9nvPaCzgpaoBVb7/3KF
zgpa/nXhi5RD66CzgpbOWuUTpeYAnRV0QHnB/1T9MuisoDl7Gr8MfWUFnZV0
a2pA46RjYdBZSco+5f4vy0Khs5Ik7iFse9et0FlJVZ0i94+KC4bOSlIP0lhr
MT8QOiupt2btZUmlP3RWku1TJ13JDD/orKQFygXvAqO8oLOSvpiOdGh31R06
K8mAu6jurct66KykPo/PJLlnOkFnJdm4uAy7e3QVdFaS+9TtRbP7LIPOStpo
Y9hnkZ8VdFZSpobNpmLb+dD5q2rg0dR+Xexxr92o6pfmL+gqwP31L9Wvsu0L
Dp3DPfUX1dcpJysuxOE++odKb9gYp+7nce/cohLWqXxK3+J++bNK/e3Fjw5L
cI/8XaWT9i3cT3ITOv9UhbYsrNrUhPvBTyp9ix7Rfntx/9ugGhh9bPPj3seg
c7NK9PHj46Iy3A9+VO3Xjj1v/QX3g99UvsK6a0bDcT/bpJow6buY3x/2sK1v
H8f9al7fHTu3b33cUjTXPQL2sL6axAt84Xn5Pe5h1an7xQXfDOXQ2VeD5PuP
PDKejp01adz4sbV8Nejsq0Yb1x6YdIGJnTXo6WDdCeZBsJf37UAfPidXNNpg
ZzUaG+sfNWEydPZtR/UThnTUvYx72A6ku7qfetos6OzLIO2fc2p63cLO7Wjp
i/4lExthD+vbnj7IvVk/X8J+0Febsr3OWUwww313Z3rfPO0m2cG5C9+upJUR
+nR9DO5htWlimmRn99mw7/btREfdfj7wcMN9d1da4+PqPdID9rC+WrT+h3zo
WgXuuzvR04TI8VIx7Lt9uxBrz4GQDgtwD6tFPJfvB79bwr7btyP9WjEkMbYf
du5CH4ec6dxgBXtYXyZ5OP10iViNnTvSXI07x91WYufOVBJa9tZ2A3SmbjQ1
9nk/n1M1/3b27U4FpfW9Cve8+bdz69u8F2qOS87jHrYbPXyvtiSMAftu6k6W
axaa7d727N/Ovj3o5WjxSaYb7GELWaQe9TS27PMd6NydXN13PDMbc+3fztSD
dDilNYs+wh7Wl0UTRiacX/bo1L+dC7vR/TBDpU4v3Hf3oFdSvxjlL9jDEovy
bAX1s4tg3+3bjYKHWbh/8IZ9d2F3euN3ephxKexhqSeN00xThSS8gc69qGbq
m0/mDlXQuTcx64YyFiTgHrYnqT7dexszG/bd1Iv6TxO69Nn3GDr3JrvNByu+
9YJzPoVsGtJnyPgPC3Hf3Ysm1U7sYV11GTr3JtPVV90uqM5DZzZpJNR6VFSc
hM49qeb15ax3F3Khc2/S83iVMm9YFnRmk4gVu2T1Hdh3+/ak2lGDnTvJYN9d
2It8dnbvnfoM9rDUh9JXOy/ZzIB9t29fEjdVck+9rITO/eh93/FnNc1wD9uH
ktvb5BTdegad+9I8zqfNj50fQud+FMs+Utx+C+xhCzm0fKReZMduuO/uS2X7
qp+PNIPzUdSPGvbvSXcsgXNQvhzqf6k5hRMO++7CPmR55Vxu6BDcd/ejD6HO
A08o9kJnDnlVvDQfkAb7bt8+VDd7n+hxQgJ07kt769/O2HUe9rDUn162BD0q
lFRCZ10668AtYv/p2dZZj9wX7eKc2Y972Nb3c8qL0fFsOXTWJeVut0c7+92D
zno0oVeeeeEt2MMW6tB20XpGjhj33br0ttRo4ETXIuisR6P2RwV1+A57WF8d
Ott+6XTbzrDvLuxPu3/uSBlvcgA66xE79sjgh70zoLMOjXH9tL4mBfbdvv3J
JGdoare7cdBZl7yXO9WN7Bfxb+dULh0RnFzGPv3s386kT0U7jgYUDH/8b+cK
fTrAcJm/l/ng386+XBpUXFR1cf/9fztzW7tqVd+Yduf2v51b345qpze2WxHs
Ya24JPJ/G7Z2Bu679cnSZPEil+OF/3ZO1aevM9cu3TYy/9/OxKXmnelp/oGw
767gku1lxgjzJ9n/dvbVJ+vQqWFLGmAPy+WS4aWz8/gvkv7tXMiliW65357+
jPm3s5U+dYkyfZKSGAadDeihhlrDt3mPoPMAKjtgujHzz7872dZ5AI3kf5t0
5hzsYX0N6FPyg6b8q3eg8wA6N8b0eV+369B5AD37trXkSfdL0NmAkgf32No+
uQg6t37cLkuXDh98GjoPoCkPNizYcOoIdDYg5wePvwzrDvvuCgMqqanq/TVj
L3QeQAWM03PXXtgFnQ3oaE3GLqEe7LsLDcju7OiPj/Rg3201gJ5W2+rYd9gK
nXnEfmgwdqpDGXQ2pPdhuml7Xt2GzoZkdLdylW417GF9eSS4UqW/yvcGdDak
i673Dt98UQKdDan6zBS1/Fewh219K/+uFblAjvtuQzoR2Tzhsks+dDaktbPz
5/oFH4bOPIrubZmptgX23RU88q+rvXxvezp0NqTrVnNMxReToDOPtDPtLnyz
gX13IY8sV8c6mRPsu60MqXB4hcJ8VRB05tPWtdc0z3JvQWcjeuYwSWMvvxQ6
G5G/b35tihPsYX35FJE/+vOoyZehsxG5689xrtUqgs5G9DPr9sPziaehM596
dI2Yom1TAJ2N6EROSOc3qiPQ2YgGqa+pYTnuh858KungGndnKuy7K/jk2/hp
z85rqdDZiEz6rs6rZW2Hznz6/l6yecJZ2HcX8qnb5LJuSQ/CoHPr+5n+Kivk
UQB0NqZxRRciPJlXoLMJ1cmalZHXLkJnE/IYcPrbSt0L0NmYjjk7JiztXASd
TcjLtu5K9tcz0NmE4vNWnemadhw6G1Nj6mPe9+G47zahTg57UnbMPASdTYhn
3Ly9OnEvdDamQZ06JO2PgX13hTHdGvJ6cL+4ZOhsQtmyBQ25x2OhszEtNNOc
pBwN++5CY+rwZvWOlUtCoLMJjQkOK+2zfDN0FtA8rjR/nEkRdB5II2MionL3
F0LngRT5/NA73hnYw/oK6MOPC50DQ85A54HkPjp0r/aifOg8kGaMtNPSug57
WCsBPfo0QP3Vt8PQeSB9qa+uZ1pmQ+eBdOHe6zibyDToLKATh1IWPVoE++4K
AZX3m3kqQrYdOg+kb0OWidudjoLOAnpn8oE9s3EbdBaQ3ujwFzMNA6HzQMoN
2lJh2s8XOgvp4cnyces6nYHOg+iLzttw5tST0HkQvdDK9jiseww6C2mBx8LV
3ILj0HkQXVqq0+WnXh50HkRxDiYsi4/7obOQ9v8MZRxXx333IFqqteWI54YM
6DyIdNoP2ljishM6C+mZkaa29zjYd1cIaeqerhN2r46FzoPocrr6piXDwqGz
kIZujIy88jwEOre+/9TQlhKpP3QeRHaDXV93a/KEziJyqm2IVrw5Bp1NSWuT
YxdbgyPQ2ZRGvruz+h3rMHQWUb/S26Y/HHOhsymV3tlPnfrmQGdTmuDILaz/
AntYKxEVOrppGvrsgc6mlJ+xrOV7UCp0NiX3p5/Wb/i+HTqL6KjjyOCm3Hjo
LKIXa5lX1AZFQWdTqvyQoDsmLQQ6iygh43vdTBnsuwtFdCn6plrfQF/obEoj
9mznHOrr/m/nGWIat2fIyRF+h//tnCqmaQOZB7O/5/zbuV5Mlo9OOL8IgD0s
ialb6Pfx4Rf3/ds5UkxHy22naN/f82/nCjHp9rl86uS03f92FospzOt0j0sD
YN/tK6aKnOtPt59K/LfzLTHlnXR/qO0W+29nrpjYWrfycx9F/9vZSUybpjb+
/H4p7N/OrW+1axd0mLBjy7+dWWI6KOx3Y2jd5n87W4kpmWU/lK3Y9G/nw2I6
Lvt1xydyPXSWkI4LozblWxZ0llB2ZpnPKK290FlC3c82z0y+DXtYktCTk6dC
z6dnQGcJrafFn55r7YbOEiq23X4y2yoJOktIOcps+qFlSdBZQq/sxt1p3hkH
nSV0vdf2qytPREJnCW0J3WNbqoB9t5OEBl+MOXTjaxB0lpCjb9DP2VqbobOE
quqWuGk3+EBnCV1MF64KvrsBOktorMaRsOtz10FnKRms0pyey0iHzlJa/9GM
GBWp0FlKFz0P9XbpkQKdpVRZGMNSZ8C+O1JKU6cwXFryEqGzlJp1Ps68cSgO
OkvJM3bJ7Oy6OOgspXtqjheSnaOgs5QcYnbEdjQOhc5S6nE1T9f+QAh0lhLf
ZYnIqMgfOktJJ9Auru6sF3SWUsO42eOG5sK+20pKG9qVTzB+7AKdpeS+cpQX
+7IDdJbRtFoGx9EwBTrL6FLP7gFT2yVCZxnNlVh8vRUJe1iS0bCSYNdNb7dD
ZxlVzhG5u32Jhc4yclu+PNHkz7/r1NZZRoNPelVM8I2CzjJ6kvn06vbGUOgs
o8gXGl7KG1ugs4yG+Nba61YHQGcZ+U87fKG6uy90ltFGRq85g/58X23rLCNp
drHXuY+u0FlGcZ86a1wxd4LOMuIbXn3S0cEeOsvpsddsvYMb46GznIzfhzgc
+7N/aessp3MXP0t+boY9LMnpR3j7DdZOMdBZTqxpqU/uLYuEznJ6J9l8WfR4
K3SWU1Fx76axZ0Ohs5xGaXtZLDEOhM5yujGpxnSm1A86y+mss+d2x0Jf6Cwn
Zsma4f13b4TOciLFm4lNXV2gs5xq82uf+O6DfbeVnL5WbWU5MlZBZzl9ixGm
JUfaQGcF+TR24zEtoqCzghw/fh86vkMEdFbQEIYicNYP2MOSgnaNy+s7xzQc
OivozGlG7aAVIdBZQYxeDYaDcwOgs4IUiSXbxx7YAp0VdLF5YrebEj/orCB5
GWfIxmUe0FlBLg2fU1RDYN/tpKDv/Uub5z5xgc4K0hOVjxfy10Dn1s/TU+K8
OWM1dFaQaenilE8D7KCzgnjHlzSfsV30b2dGvSrjyCpryakDMGfQNSrbafgz
+9/+rdfvyHbzjTkN389br1/hbTXsc3zav7dL6/XRurt+LRu+C+YMajHxOmRn
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
3X3bQdVXHfQ866X2zVUFdVQ93EHPsx6WVQ+fW4b6GD/++x7tpMHqW+cOt7ii
c4TpeVOv09XONHvq/mUnyeSCsvVtnacp39rR853mNneV7B9UH8mOnu84hiUq
uQ9Q/V51el4TdqxrW/8U6rlDnZ7XvAl6v//tEerzqtPzF8Ekk9+PR9D7/01d
r+TAk4eSC99uRPMU6ncNucqpVylTs9A8RZDJd9znTrX8Tp3XyTaXyee8eBJ+
0gj14aVorpDyavdi1F+VYXKxm/bXMtH5p2xKTL7wU5yOiinqq6gwuULrlavb
d6LndDUmZ7vv153uTv1OGfT8Iv7P3b6IDZQODHp+odq3XClOGZ3rTc8v0j47
+Jy9hPbroOcUvfMuS3I3orp37D/dMhVA8PN9imulqc/L4ASIXy+wk5KOpuYO
jJlM/ktQzM7Qn5o7ACEmn/k0aomTCTr3fB6Tj6Z9k338Dp3TLcbkfXMO3Uqe
Rt03M6WY/PMNpT/WleicUxkm13333H4kjvJVphyTvzSd0dfpS/3uMpWYfMZI
QrVJHHXfzFRhcvmRp1vHzai+U6Yaky9+AOadu0c9z9bTc4QQm4SN+3So62E9
PUfIffFMzSiM+t3V03OENI+gltNPqd9dPT1HWHpy6nB2JeXbenqOcFZEQObx
Uep7qafnCHbjv+aoonPl2L5T9y9loM+lWR+M1tsw6D6/1Gr9cokp6JxuSSZ/
5N9ePrIAncNL99V/rxxN/OlE+U2c7odXJHjYy3RQ901xuh++6pVPca0jdf0X
p/vbg9PLfeI90f42v/57nx2qYAfXAc5VQVS/mjEZIH6Up5OrR4TiVQJM7jvt
kl14D7quijD5p9ZfGw9sR+cySzJ5G+h/wfWYmg920H1mEe6AXN4ydB4r3Tfu
vfng7Ae0v0cH3Te2tvltMiWC+n596T5w48vHW2qfU30DX7oP7HCtY4CzkHqu
9KX7wHM3N/HLqVB9IV+63/vGbHxfrCN6Thyl7pvqoGhrgsknf9S/pX53kCfd
3c32ohn1b2cyea9lln1tNerfCjF5SFtZ9pl9aJ3MPCbvm/5Tf+ZeND8VY3Le
wOX9aaiOYkgx+Y6k0kU6/Oj6I8Pk1v63A7LnUXUmQ47J1STjqqbYUHoylJj8
ksR557Yv6LqkwuQjPLeuNAVQvmKoMXn325aXv0rRuUh037WqyzWvbgrap4Lu
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
TV0dFoL7AfKk5UIMzbQQ3A+QG6eIHjmSFYL7AXKVrw/5emNDcD9AHiLhZjzN
IAT3A+TR93x6Xj8n/DCRR7h1XWW/POGHifkvR8bU22sJP0Defn6T0+1FhB8g
1050eVs1QtQPkF+qv/N33UminoT87SPJ+dYSvrgfIA/tMi3V0PDC/QC5jrqj
JruQO+4HyJVFN3cUc7ngfoD8esLwNjt0vjlLbiLJQcds9npiX7hCbcB/X2xa
g3so7gfIn1tr5Lc6h+J+mFjP//Ol7YEjobgfILevCVe3KQrF/QB5+69dhR6F
obgfIPfUXbz0BfN16NyE8uHQSHYLol8NuSmDJ159SijuB8gP3jP9IJRC+AFy
r5xdynVTCD9A7tL62CfPmPAD5A/dfqv6uhH3C8hN3jxacmNHIO4HyAt2F0z5
qkDUD5CLxCtw/2nyw/0A+du/HfdSPYjnTchLvJKyVr3zwv0AecKi8/2H3rrj
foB8acB93dcdLrgfJr5H79elzr+dcD9Azv7GXmyalgPuB8hX/pW7em4h6q/S
uQn77xyndJ5Q63BYchMbbxvOKJpKzStZchONEj/ZJWuouRVLbmLuZU8n6zBq
nsKSm0hMe3wy9TfVr2bJTeQ/O2icvxft50zPkWtu/po904X63llyE1HRGlfd
i6n+OUtuYpXuptjKndT6BJbcxK+XxTvH0DlrLLmJ1f3Vi79oorktnZvQ4sx5
n/sdrQuicxO8h1/uHK+k1pmz5Cayh602bJCn5jgsuYmaipRpD96gc5Ho3ET9
8vEwow1o/1U6N6FecHH0tSg6B43OTaw/oDTHI5i6zrPkJtZM+mKcg86zZslN
LHkT+OnAS7TPKp2bUN77Z1f2X2pOwZKbSOExUlCvoOYOLLmJp7kz4o0KqXki
S27i9R49m9gCSn+W3IRtS9b79cNo/kjnJva0ybwXqKbmpCy5iUclqmeXHUXr
dujcxPvC1CMNdpSvWHIThQkrzvKfo+aeLLkJ8ZMNY53taH0OnZvwqlinEPKQ
mtew5CZ6+RTalnKjfdfp3ATPjyqR9lZ0/gudm6gRTH/i/pF6nmLJTcwR1xRS
34I4nZsQS23NCC6n+lcsuQkjvaorUZ3onAg6N+F23H6jJDqnmyU3scxzvZTK
GOV/ltyEtEIJT7UvNZ9iyU10Plpipm1IzYlYchOMX9aiboeo+SBLbuKsg+3x
Tnbqd8qSmwjpddAVuoP+np6HrnA8U3WjG82h6NxEy+2jylXMPDKdmxCc90Bz
yJjKF7PkJh5N6tF1L6P6Qiy5iRWaM8GVJbOp6xE9N7xy+VSqszl1rjpLbuIF
116+SmX0u6DngDlnl8ffBNR1hiU38cvpYMx7Mcr/LLkJt51fwXstNNejcxMW
L542KAag8+no3ISJRuvcD5+o9QYsuQmnHyk9/M1o3106N+Gz0SPx4Fzqe2fJ
TfieSxlMrKb65Cy5iRt/Lq0J+EH1c1hyE21nF+3pv0GdZ8SSm1BWFZiVG0Cd
V8KSmwBSO/JLrlH3BZbcxGmH185e16jrDEtuon3K04dvjlDXDZbcxPKwxL2N
ttT1iiU3UdZxqc9NivInS27igA7Y/XoM3Wfp3MSf+nuFAhHo/kjnJiqCHm28
cxLdB+nchN9Kde/URWgfbDo30dG4zqzOgTr3gSU3sVItd4FZPdXvYslNXOCt
81apps6HYslNnPUwsdSwp+YXLLmJaPsV5oLsJhSncxNtT7y2c6eJU5zOTZx+
twv4rULndNC5iWtKbDJrl1LrKFhyEwu49ys6Tqbu4yy5ie3x/AoXXlA6sOQm
DumdceA8gq5X9DyrcI9g045NaD9nep51IShP4ps22k+bnmfJf738oscQcXqe
dYvHXfhlPnodep41pB36ZHk0qm/p3ERhuJOHd7ISpQM9b0rumOefsBadGyXJ
5KcufuJOK6f0Z8lNdF1pi7cJo66TLLkJA0mJ+z1fKd+y5CacB3Yd8FagdGDJ
TcQV9stW/0Gcnr9sL4ue+fsaqrvo3MQd+Y3rdkegvjqdm5C9ZC3aGIc4nZvQ
59KznPQQzUfo3ES3hVhXSewOitO5CfEpNlf23Z9PcTo3Ebh2V6dL2Srq/dC5
iW5xqSYVT9TPoXMTHHrJPMHTUB+Gzk1seffBpiIdnftDzy9Wror6dkmA0oEl
N/Hs4QYtHtSvZslNsLeeyHY5i85poucUMb39DaNK6PdI5yaGrTyzjC5T+rDk
Jq6WmZ34mk3NHVhyEyGTn578tZ+aO7DkJsJezBE62U6de8WSmyjdL6vcv4C6
vrHkJritejaXXRCl6g06N/HS+WDrtRfU+XEsuYmOz6ZaCWup5x2W3MSlLJ/z
kfqUziy5iSKtvYu+8lF6suQmRk7z1uRtQOfV0rkJiWqnBamoz8ySm7C7cap0
ySbE6TnCi33Pzh2fhzg9R/jLFSHDv4d6fZbchCX75JlVM6m6jiU3Uet7ctX+
XKo/wJKbuPRK9LHMF9THo3MTmf5GD3WzqPsIS27C87vqcuccKeo+Jcnkrypa
ih1l0flWdF/d7lgjryZ6/yy5Cd7hlzfYLiFO98OHXkWUCr2mPhdLbmJdXRww
kUbPNXRuYsDxEBArpuooltyE1W1L+8YqdN4inZsQbnky6h9Efb8suYmM5ueN
00So+wVLbsLUwSbTs4rSkyU3kWPK/vC+Abqu0n3jtv1B7b1B6HpI9435JleM
cPlRnCU3cUogQabGlnodltzE00JD7qtKlA4suYnRDXYzOk9Tvy+W3MTA0vuW
b4rR8x2dm/gxpGOioYb6P3RuYnQos2SNAfre6dxExrBWQRwvum7QuYmUsba9
PSdQ34nOTdzRfiYNONB9mc5N3FeUM3+gic7Lo3MTp+cJFjrNR+cV0rkJ/r6U
Rb+vI07nJoY/vm3l5aDqCpbcxF29vZnzL6C/p3MT9dU3N86egjidm2iSXqLi
NA+db0L3XaflpRmdR+cDsuQmCu0eORxyQuev0X1XzrFj57dsR+c50n3X6ZzP
nB4aUjqz5CaO5Ytpzl+B+mx0buKCKVghYoDOhaH7otpxWy5IoH4RS27C8e6T
8ejtVF3EkpsA7x4NXTyKzkWl+4einznuSbOhc1vovt9ScQX3+1fR+6FzE+/F
RfcuZfY36NxEm3xyxTkvirPkJn7sLaopMkLne9K5iYqhIqH7/ujcBEkmbzy6
RW89qgNZchNeEdbBd6YjTvfTJMaf/tr9GuVQ6H7agrc/7TZWoBwE3R/j+mJR
XStK+ZMlN6E9LlTUjOYjLLmJDT5ctyVnoTkUnZtoUqz3LkZ9A5bchNKyL63f
wxGncxPftQrdP55BORo6N6H1OLXlAvO8Dzo3seXJEmPP7YjTuYnsD18/z+FH
56vSuYnDD7a93SWP8iB0buLkwn0hS9C5Niy5ia3dJRdf5qHzg+jchOG+/cnP
0DyLJTdxNC6r5CKaV7LkJjQvMeYcaUP5CLrvtOdh6ljEC5SPoPtOmW8H9WSb
0DkpdN8pt4H7VNBHdN4E3V962q+1/3UA9bzMmPYfZ7ADB/umdp7F1H4UYBaT
M6ScHMF1aj95MJ/JOcQW8O5VpfZDyKRzDbO3XPX/VULt/59J5xTaxdJ4uedQ
+zln0jmF7Z5nvce7qXxrJp07UNg57OuUROXvTOncwabzul/Oa1E5O1M6R9Ap
JcTW7Uv1u0zpHEFn648fFX9QLpX/P842A5gzTkzKOov2FZFg8q6/nLyMhShH
r8Dkh6XXaFQUUTnTTHrde/X3hVn3jlD9t0yWff6HPUdymOvA2SkuAnoDFPSn
L0b7FUxj8u+byjc+2YL2Y5/F5NG85dcOTEL7sc9ncmkfc666W9T+zAx6nXBz
iSu76AVqfw8Gve53CudSlYfLKZ0Z9LrfwRHL36Io18+g1/GOrP8btNqYyjkC
eh1vTVjprk/hVD4a0OtyLzR4b4sLp3JbgF6Xa6uy8dcZOUoHBs9//P/rVy8d
6QtB+5PwM/nim5Pc7x+h/CMuweSBH17WPXpG5bvFFZg8Nn9587Z31P4MCfT6
0pqNhm1JCVSePYFeF+qZojEyXYtap81A50pLAKML5a8fh1H7cjAm/ccn9jHW
iNo7mR/l/acy+ZLN35fUL6X2k6mi1/UVvY5UUR6m9gGootfvnfhxddO8+Wgf
AHr9Hnj2bbhfj9r32I5ev1fNO2vfNEtqHwY7ej3eD92/YvMdqPysHb0ez4DH
YbBAj/q92NHr63qdYuUm21M6qNPr6ywrwoLWD1P9UnV6vZzwRfdlekuoXKQ6
vV4usshE7NpB1I+lvkf43LH40+vn/KvRuQz8TJ4jz+0SYo72c17A5Nq5C+15
9qJzOiSY/ETrC5Xt5WjfVwUmP70i9OIcU2ofEga9HswiNDst0Qf1J+l1XP0f
VwocA1RfEVDfL6y3HVuiWi6xo31+JJhcsXSzmaUhysVT3/vE/p/fjII2nkP7
nU5l8u5TgamuGWg/EHp9zunMtJT106ncPYNeh/P2Vpe852Xq9Rn0Ohw914h9
5xSp7wuwrMOZpryy8iS1bwag19sEGhYuLjhO5WoBvd5mYaJ/6cId1P6HgF5v
s2fo8LaQTCpfDOj1M9O5NRkNZ6h+uDi9fibrwpTD669T/XBxej2MT+z0gMI6
qs8sTq+H2ZQbxcPfT+WIGdP/47AeZsS838+zjdpPpmoWk39aLPFObxWVl6+a
z+QVKz/euu1G5fI66PUngUfqhh/zUteZDno9ybeQZ+8iPlK+7aDXk7j09ta9
raGu/770OpAewaI/Ry5SeTFfev3G3Wq3mlgXtA8eug6ogy8+J07GrKf+vwwJ
Ji8Y8c7ORud6MBSYnNP/pYwT2i+OQc/x9XdWdD1bj/LL9Lzeh29yjU09+l5Y
9jl0MOGonYk4PZc/37XnjkoX9XkBPZd3EIu6FqxM5dTE6bn8xSu5ovt2UjqI
0/P35OsyMQ/uoe+dnr9vW8snqDKbev/i9Pw9PMTjzttD1HVAnJ6zq+6wjf6t
Qs1HxOk5e33Xu2M61tTvjo+es/NENZS9+0X1pfnouXndXs5jP8SpOoqPnpv3
zZfb7KqB+leUr2DdeGCxaHD7EJXPYsxi8nXX2Wa97EXXgflMLmZZ+eq1PvV5
q+g59fyFR5erW1Oft4qeO5tZHRHZqXWY4vTc2Xq8cMXLMyj3Tc+Rf+rdPzHq
S/nfjp4jOxlKA/lPKA9Lz39tdHxu119F56hS10lYj71+w90T+Zf63dlJMPkS
tqyyE7WUb+0UmHxcNnvynrmUnoX0vHLnapdyjvSAf+q6LxyzjAOtka/ouk61
+WeCOC/yFV3XyfZ921rxOemfuk5//VaBlFnx/9R1d0bKPYIM0RyQruvEfAMe
VExBfRi6rhtzneZrNYfxT11n1j97fvOC6H/qulPt6+QGxg/9U9fZvxXY4Bcc
/09d94F/75q84vR/6rrreq9fPLGK/Keu27yBIzL6Huov0XWdxoM8r+7P+/6p
695rpfi0lqMcEDvFRQD38JtDy01RvUfXdb1jvmNqj9D+b3Rdt/SAjXjXVZT/
peu6R56nw0+/Q8/ddF237/nl+E2Bzv/UdUbb0tlSm1T1/+N0Xbe1z97sZpfm
P3Wdcu2h60DY95+6bv2aW3ELZdH8ka7rll+7tvtSQfg/dV3xPLY4hZHwf+q6
YcGYE5x/kc50XbdsyZ3B1QPh/9R1pc18d5I/y/73/lnqumUGzrZ8hlr/1HVD
r98XnCrw/6eu+9XH96JsED0X03Xdoi2Rn0w/W/xT1zGmDlWLj+pSutF1nWz8
9tAZYob/cZa6znPt7DbbJnQ+OF3XxfPWnC/zpXIWLHXdMuGRVJNIKq/BUtet
aL/W9GGcyuOw1HX19s8bn1wf/C/vw1LXeT88/8QkzPifum7rc41l5iXu/9R1
cxXCJufr+fxT1/HcDkrjmOf/T103c9bXnuIc1Eei67oTksXR0y6gvjpd16lf
83PsX4g4XdcZNfwsW+xPzQtY6rqBE3557z8bUZyu6/zcqyNPDKPnULquG5SY
XuIVgfrbdF0npaJyLvcAmpvTdV3KO/WwiwXU/IKlrjvZ1N1utmvtP3WdYfzG
g+dyUM6FruvO31eXW+20hvIDXdcV7hHp3KioTXG6rpvdYjDPLMngn7qOI+OC
7Zl3m/+p61wb5NakX7f5p65rsivJP5ru+k9dt/Xgmz+eMeicaLqu63pb26d5
H+lA13VZW6Yq71nq/09d55wifyxQFnG6rvscPLj9YJzPP3XdgEH3NPVfnv/U
dQai92w4aiz+qeuAX/zefGN0zjhd1xlbtIIy1JdgqesGp9z4IBrk+U9dt6ju
6OsqazRPp+u6Lq7oPu65qH9L13Vvcx+cc0D5LJa6zsr8XEt1EepX03Xd53fN
/V2LvP6p61pKFcZTV6D7Jl3Xub4snL//L+pn0nXd1b+C3LJeqL9K13Xzc2Yb
uvagviJd15l71Nb6HEHnjdJ13ZfsElPtN2juTNd1N57/DpUPDfqnrosf91SO
QestWeq671UVh9pjUH+SruvUrg/tLA9BnK7rFlhv9veSQZyu66Z+fDtzUxnq
f9J1nc+iJVHP8gL+qes2ffk8aovWqbLUdfWyr6YXolwMS133bNOwuvYd1A+n
67rGJ04rZW+iPidd19n/r6wzj6c6/eJ4CymEGi23xXQlV7KVRKsno0WppmlB
ZY1kv3ZqGBIqCoWIREq0IYUkIqmEGtlSCv2KTGViUiL9zvN6uXOdZ/59e7nP
OZ9zvt/vuec+3/Os1tqYJ+hPDqvrrPqWShUcFvQthXVdnPsvCvYhAi6s687d
7z74IFhwDrWwrlvnObk5v8LzP3WdVsTKKQs9BH05YV1XVnn+wzxJ1//UdSMt
u62u99j8p66LTVPuzUsT9BWFdV1ybvCy3CuCvqKwrovmDPi1XvT4T13XJldS
XPmYOQ89AOoiTp+BSc3QnFjBebvAq1J3NfC8h+adCs7VBX5UO4qT5zk0N1Jw
ri7wJpv7ofKRgvmHvH956ZfgGNmcoXl0gvNzgX+a1X4yLW+oD9YirOuStR7J
fKsTfO8T1nWnKnYdjT0x1B+zENZ1avNurFYfMfQ9JUtY191MUud6fD+B/QK/
w36SGFU+qh3bDzzq2eiwzpfPsJ3A13nbz5U6WobtofM9vto3jwi4hNcFzkvn
K8f4C/pUo4Y4h9xXSo2epfIG6w9cWT5zjnPTa8ZODtm/wubOk6ZWrD/wbPe9
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
wiI=
      "], {{{
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
Z3NKrE/cD7cJ1i0ehdsF58ePZfZdyvmeyuwnpancA+8dvD/Kf8qXSo8ZDpcE
6xmHwjtLrHMcnFlblo4yGN5eYp9wAlw52OdLZ5bmLL99Clw12AfIF4zO7FuO
xpYmH3JM5j1CPmEUHIN9iXzKyMz+R++rlHzsaXC1YD+jvxeCn4P8rP4mH3ui
fEewJjEA3lJizWmEHktwjNkf/rfEmtMgeFuJdaOBmfVw+Sr5rKMy70cnyRcF
3/sxmV9r/9Lf82n/Ohmuon0KvjPNk5PyrjPuBZ8OP5ieo2Jw1ZieCo7ZVRN8
PDhmVz3oheA8oJ9y2+B4fzD8CrxTnwu/G6zNHKncP1hHOVb5frAmpPrUO8H5
gepNz8Kr4F7wc1p38rfwlcH53CdJW1ae90XSz6Xn/wyHvPPUiUmXluY/JWng
ylknJR27MTbmXAftnrceq3uuuoHqB1Nz1nhGYt8P2X9Bh2pbE4Jzo+HSYYJz
HdWVXoMnaZ6nmOdHuDp8HTwVrgFfDzfLOS5SnfX7vO04xifDVeCr4Sl511Wv
lW/HNsi5tvoD41Wx1zDeClsz51qsag0LdE3+Pi3vWu3N8o1wffiW4PxMtbA3
g3Mp1e9eDtYMhkg7gr/N+35cEZxj/VfDhX+Ga8M3wm2xdXP+jJ/y/vwbGP8F
riPdF54hfwWPh/fEVsv596g+Ml+/P++awkLp03lrMyu5xacH652rMscA0maW
w6cEazZ/Z95/FQ8rJlEcIp1GdTTFJ9IFVb9TvKFcMMf1Lw7WSDZkjs9VE1Bt
QLXPklLbD4JjWtWIp6dYtB78Q4lj4CZpT9S+31S+P8Woqjv/WOKYVP5ZrxUD
N0i+WvFy48zX1bRTvK26tWLmhthfSpynVkgxqnJTnXhRcD6ahy8LzkdL4cuD
6yxz4Up511BmwBXzrrlMg0vzrsvMgyvnvQ5Uf9Jr1YOW6FnkvQ5Uy9EzUK1n
MbZq3jWg3/TM8l5nqg/puqrj/ILN510/mgkX8q5hzdJayjuf3p45T/k875xF
cbjyb/UAXBqsy6q+f05wPv1v5nxKGq3qrWOD17TqYbquNFTVshW3KxdX/8D5
wbWkOVq/eecrimFUD1uY99q4L7iucY3Wclqb0jxvD85ZO6a5rbmsOS3NUXNY
9oG0FprAtwbnu9XSutPvqpnWsvxSU/i2YF8in9IorW+tc32e1uM+2AfTemwH
PxS89neH70hrfw/4zuDP0Zppnta77F3Bn6nftVdad3un36i1Jh3y4WA/IX+h
11qzrbH3B+f3+8OPBmsAI5Lvkq4g3fXtYD1gaPID0h765+zPpVVIT34pOL/v
nbNPlp5xcM5+XrqFNM/ng32t6peaZ6fm3dPSmvFT4HvTPi6tomKazwuTn382
+Un9vnuDdRRppE8G6ygHwE8Ea3Kjkk9elfYX7SnSFaQtvxGsZUpb1r4jPUMa
7GPBWov081eD9Qnpsc8Eaxvdc97jpFX0gJ8O1j+65LzfSWdqm56j/HML+O5g
fVS1MNXLVO9S3evGnGtestOC/66a2WU51+NuzrkeLY3wjpzrVvJFl8DfBdfg
dO73wbUp1W1VA1XNSnU91exUd7sFnhFc1xsPzwyuv6kOp9d6n+q+V+Vc77tW
cye4xno1/GNwje9KzbXgGt8V8OTg2qveNyW41naD1kdwTe16za/g76Jao66r
ev2l2Elp39e9UL1P2qfqtrOD+zhez7n2p96NR3Kuw0o3vU9+KlhbvSfnWqd6
Rh6FFwf3fTwFLw3u9Xgy51qtej0eg38L7iV5PudaYcNUz1XNV9rtvfKBaV9u
Cd8T3G/ykHxgcP35QXhBsB78Cvx3cB/KyznXE6UNvwGvDNZQ38653iotVjUU
9RWojqweA9U01efyAvxnsE58FzwnWHtWPWVNcE3ygZxr0J8V3ceworI1k/cz
a0GrCo4PpQ9PK3gfkX6ztOBawAbVaKI1iu3wtoL7E7bCvxacb6r3aXXBcaP0
5wrRMbBi4a0Fx9LSiv8uOO9T/rdntD5QKo06WmdQ3adOdN69g+v/UbB2txH+
reDeg/Xw4oJ7FdbBcwreE1VLah2d16iuMaPg3gb93pkF77nSA+cXvOeuSb9F
8bA0al1Teag08JrRse82zqlW5t4D1Qr3i45pVUMJZZ4n0snrlbkXQrXIXcrc
t6A64/zodSd9Xv02WqfS9jcX3BOypbLvuXJn9ZvpuymXVx3hn4J7TjZV9vnK
lfZJ91k9KpsZX19wD8m/8KaCcy7p8OVl7v1QrVDnKGeR9r6u4JxF+v+CguON
tbx3bsExw+rKfu7Ku1UXUI+W9gX50THRWqXqOyVlnv+aj6Oj9U/VUGYXrBWo
X+6FaN+r9zaK1k9yqoNE6ycVVFeJju2lsT8bvXak674Yvb9Ir341el+Tpl1W
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
6doenQvr/xf8H++QggE=
            "]], 
           Polygon3DBox[CompressedData["
1:eJxFm3e4FEXXxGfZ6eXOcGdBRYmCCEgGFUkCAgIigkowgBkDBgRzflExYUIx
Z8Wcc8aAOYCAZBAESQpmDCAq8tXv1jzP90c/t2u7Z3buzHSfOlVnmxx72rBx
1aIo+rcYRbH+vpRG0YmFKHpb4IJyFL0pfLrwh8IXC18nXCl8sfAJwpcKr9Vx
36qdm0TRu8LnavwctSXCrwuPU3+s2hzhfXXc25o7V+3mEEVvaPw0jX2gz8fr
fNcK1xAeL3y88M3CWzU30meTdfwrwqeof7LaTOEbhGupP0HzT9T8q4U3aPpv
apdp/D+1uzXeuhRFV2p8ksZrCl+q+aOFd8yiaI3mHi/8i/r76O+bwrPVJgd/
/w6av73ajTrXjcLbqr+N2nXCAzT/Lc2do3aT5g8Wfl/9RWq3C3+lczbXZ9cI
d9D8V3X8GB07TZ9dpO9/TfhU4feE/ye8gf9JuImu9zLhd1Lfy081PkH4ZeGT
hN8RvlB4svB2wpcLnyR8k3Bt4SuETxZ+W/hs4U+ELxX+XPgZ4afVNuu73hI+
S/2PNX6Jxj9Ifb/uUvtO47cLF9WP1W4Vnqv/p57mnqf/Z0fhjzX+iMYeVvtN
+GuNt9f4bRrvLvy+xm/X2G1qq4UXarwx36Xx5sKfaPxRjX0b+/9drPGd1b9c
4600vkC4Ee+ecDPhjzT/Ic1/UO0X4f019qHGlqjdofv9pebvoM/OEq6n8ec1
/zjNfZNr1vk/FL5f+D61HzQ+Um2F5t6tY7/RsaP0t47mnqPPGmhstj7bXvhM
4brCi4SbcK3CLYXnCNcVPle4ofAs4drCZwjXEZ6p73tF3/WyWkH9QRp7T2ML
1W7Td32qz57Q2ONqf2r+e8I3q3+T2grh6cLPqv+jjrtC179c599N/bt0fC+N
36PxzhrvpHa38DKNt9H4TRrvIjxV42dq7Ay1BcIvCo9W/wS1z4UP0NyPNPcr
tTt1PfUz349j9PmP6l+j+b8L/6F2ueZ/Jvykjl3PM9L1fKw5y7V37KLxVRVR
NF+4Ie+2cBPNnyfcgHdVeCfuj45/lXdFn12l42cLvyH8ulpQ/0u1qTwvtQr2
Gh0zRMcO1LX11PwDddzHwkvV7tJnMzTnBc19Xm2L5n4h/CLvRuz1vkTf30z9
qzW/vcbna3yaxv9iTWr8fuE2wm3VHtP434nf1xYl3++Yd6rga+qlz+rl199T
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
3YT31jP5q2hOB3+H7x0beU511mbqZ1eOrQ92Tc2VSsKdhXsJHy9cGVsPgs+N
Fj5BrYaO7yd8svq1YvOPvYSPYyy2PrVP6ndlm9j8DH7Iu8QxNXV879TnymLr
UQNSx+JtY/M38gu4HpwPvXuo8B08+/j/+QlcHE6OXsoewl7CHrS6wvoifJgc
9XWNP56aL78QO56zBlmL7AEbKqynoMWhyb2l+U8Kj1T/5dj716Op+fezsfk6
eiDaxChiRGJ9Az6PJnZfYv0frltP7ZY8n22k/o5qdwjflbp/Xez48kLqXH9q
bP5/Z2pufW3s+ETOQO4wKX/fb0t97qtjx7s7UnPpa2LHT/TUY4SPJiZq/jOp
883XY/Obp1Pno6/F5jPsuey9VXtqhfdU9lb24O8qnL+jzaLRPqvzTUnNlx6P
na+hdxMLE7UrNH6g8C2s3dj5FnoL/AnN7MlcT4Dvo6m+ILy73td1Re/hP1ZY
XyZ+oHE9mlhvJJ8h5385sf6G9okGOi3xns7ezp65Wcc/nDqfeip2vgMnh5uz
5/5Z4fxqXJSvocQxg9hBzPipwvoJ/A+N+kGN35o6tk6MzTfQXPn+qGT/Z3Di
/e8K/R8HCY9L7Wfhax0qfHpqvwXfZUQeT94VfofPyK9T+wn4CiM1fkrqsYGx
z3dyav8PH3B4zkc+iPwdQ3X8San9NHy1YRofm9ovwTc5pOw4RDxCk0a/OCI2
X+Mc+D/wR+IPnsU4ne9U4Wnq76d5B5ftV8LX0GjOyfPdl9R/kZiT8024Jxx0
ROK4SHxEM8EPvCQ1nzsjNt89LrV+iI54YNn59GuRNfD+5KOJ35/zgvdXNHLW
55ZgvxMeDZ/mGvGDyHPId9iDDiG/iJ27sGeNCM7byN/Y0w7Fr4mdK7AnHhzM
s+Hb3DP8x5GxuS/P6NZg/v1JZA/lYF3LCanvJTr/EF3P6NT/KzrR0LJ5Ofyc
Z3YLOX7qY/FhDtP4IbG5wtTI/ic8Gj7NM8TfRb9gDE91oL7v4tR8Gs3xjMR5
BfkF7xT+EzwePs87hL9Djsz+eUFwPEOjmCJ8SfD1Dkgcby8Nvt6eiffXC4Pj
J/k3uQY5B37Zsan1N3S4A8r2i9Hm0OgmkPul5hsnxdZP0FyIz5cFv4/DE8fX
a4Lf70GJ+cHlwe/zgYnj61XB7yscG75wdfB6gXMRz68Mfh/hyfBlrgn9+aDE
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
obaTekveHfYI9gpq8qjNuyFyvfj/AY5XANA=
            "]], 
           Polygon3DBox[CompressedData["
1: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

            "]]}]}, {
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
             RGBColor[
             0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
            "Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[
             0.15473514000000002`, 0.21284718000000002`, 
              0.29811516000000005`], 
             ImageScaled[{2, 0, 2}]}}], 
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
mfetC39fcW2ibY3vk+aH7vUvFddTLpRmW3G9ph38TcX6Xpsa61fKv97l/FXF
mmFrxeSp81DNJeXLypve5fO0S51f1y3u/97Fs+gJHwU3ghsHx349uU537I2w
H6r7ExwrKgbXOvqrWL/S/WbBn3L9K1Prcqo1SEdVvvCJtLiKa0bti/uvfFO5
Z52i/qW9vUtqPVAaYC+4cbVz0q7w/vAB8BWpdW/VL/4stBfVu7bOXJf5LHNe
rDrRx5n1SeVT0sOlZ07T/lO2jig98fmS9Ubl16vKjuOUZ00qWXvU/78sW1dU
ziI9X3mK/v9+2VqmNM25JftI5Up6j11TawJrNE+Cc4qraqw3S3fW/ZL2rrzp
A8bsklorWF3oq8rpPix0V+Vin5eto+p9VpatVyv/Ut1BubPqVp9z7ob9EPgg
7WOpNVjVbi5OrV1ozsvnSJerk9jHyNdUV9vvSXfaovDbyn+3TeyrpXdtV/hq
5dfbJPY50uU2T1zHlKatmqbWS51iXWvOy8/tqD02tT6zd+K5o7Wv63ZInVPL
V7SHd4P3TLx2lLPvoBghtd64R+J9RvuN9DjtEcq7t0rs/2XbOrGmoVhTdTTp
FaoDrspcD5VW/zXn7TPX/r5QrYzxx1dbH5Zmoprjh5xvTh1Tqpa0V2b9XNrv
7pn1/K8y179UJ1qTeT/Uvqj7qH1QOf6WvLYzXA/eN3GdTvWv96WnpY4jVYfq
BO8J7wPvnLlOulo6W+pYQTWvkcG5z5PYt4NPg5tmjueVO/eAG+Su5dwte269
e2lmvUK1vMnwW8G1x7nwAbnrVXfAzXPr6cvgz4NrYosz6yTS5yfA7wfXxxbA
5+TW1pfDHwfX2V4odBLVHKfDHwTX6Z6H989dM7sNTuAlifXYAC9PrHO+KT2W
8XPgV4O1+lnSD4P9or57ZPyrmoNwHfgNPX/42OC8W1r0ncF75YNws9ya10uZ
a2eqIS6EM+wrEmuqFXhZYh14U3hpYu13SXCddBq8LFgfm5FZq1QtdSpcw/hX
Euu37wTXeedlroOozjgfPiu3vrYEbptbO9OcPC54/7oYviB33VTPvX3u+rfm
6oW5a96ab+fn1to0b9vlrqdq7rXKrbvJ70l30v4rvXoufAA8EZ4XXOedlDnn
VS2vg2Kb3HqffEjr3BqofOlTwXv7GPlV7K/zHZvBLXNrgloj2he0F3fKrKNK
V5wJvxBcm54CvxZco3kObpq7Jr0ocw1IdZnZmesR2hOle5+XW3vVvibdVfuF
9o0zctew9ewaF7mq9qPTcteqdZ+l9yqGuR8+N7fGqvjtzNw17xfh03PXzjUn
W+TWIrUec/g1rncWfHSw7iF9rFrPAvsxcG14ofZD+ODgOFp61+bY35TvhEvw
fMVncC09I/hIrbXgfEXaXRX2OdgPhzdE1iV8YGZtWfHegMxasWK5h+F7g2O5
h+D/GD+b8Y3gQcFx8hB4S675duJagzRkxbGPwTOj9RFpdHvljrGuwf5rxX0L
h8B/wHXgQ+G9c2tw18H75K7X9oG/DO5BeBl+AF5fck2qbu6Y7Cp4j9xxWC94
YHBc+ii8V3D+J01yt9y1ZPmrPXPHcL3h+sE5n7TfO4Jjfun/0s8V2w+FhwTn
FMPgYcGxmfKUtcH5vHzRmuCeAfmx1cH9EvKBq4L3Be0PZ8E3llybU7+K+i7k
H04J1vRUy7snOGZWXWllcD+G1u8RcNeS9dKUz/9S4lpSGV6UuO6jGqX6EDTP
Pwnuf9Dc24IxbyWuAZ0QrD2qVriJ+oIS14+Uf2mPVJw1OjjGfhr7k8Gx91Pw
g8H5gepco4Jj9dHw4OB8SvWXjTz3aVzz4My6t+I9xX3aRxRnjsI+PDhGHQn/
y/iZjD8MPiNYu1PdsGFwPi39Vnq1crfh8IjgmPYJ+JHgvE91on1z1/77ZY5/
FM93hk8Krvt30XeJ1hmlcT0RnZ93LnQ59Q901T4SrZ2pbrI4WlNT3WRkdK4u
jXREdC4kfXVUtF4pbfOpaD1XWt/U6BhLdYQZ0XqitPRF0Xqi6jijo3VbaX1f
R+fD6sdYF50nq3/jm+g8XD0eX0XrAurNmB6tD0pj/y06D1eN5vdoDUt1jT+i
tRvVTX6N1lZUB/k+WldSvWZstKYszXN9tI6gms630bqAesDWRmsQ6t9YE60F
qCdkVXTOr96SL6NzfvV7rI7WCNQf8kW0TqFejjHRGrp0zqejdXDpmcOj+8+k
686J1gGl88+N1vtUF5gYrfMqpp0Qrb8rX5gXrW9K258frVeqbvVctC6pusaC
aO1SdbEXozVT1eDGR+vs0g9nRWuaqmvMjtYcVXdYGK1Xqn73QrRmqhrf89Fa
qmpw06Ljb9WJJkdr1tKHn43Wo6UzPxTdz6Sc9+Ho3iPlTUOj++qUpzwe3W8n
nX9YdG+cahADo/vhpBWMi9b0pRs/Et23pLzs0eg+MOV0z0TXEqRpPxbdb6c8
dHB0T55yuiHRPXzK9aZEa8rSZgdF90gppz41d5+W4opfojVE1fV+iNZA1cNw
VO4cXmvz6Ny6idb1kbnzVfnMI3LnqPKl0s/Vk9MN/iA6f1Nt673oXEt12Hej
8wrV/Y/PnVsqhjwpdz6vvf7E3Dm/4r13onMP1cVOyJ3rKkY6OLfuoHjsoNw5
v/boA3P3Kt0LH5Jb09He1zB3Hq694+Tcubrih1Ny94soZthZfrXkPbdZcN9U
d7hR7nxee98/fJ4J3MMDMtcNpT+odj8rOPdX/f3Q3DqR9tb52LcrYqQ5wbqO
YqfDcmtG2otPC+5rugw+PLcuoP33/eicWX0Rx+XWPhQzH5tbi5Hffi06F1KN
8u/oGvx+2Jvk1m7k51+PzgdUf3wlOi9SbfHV6HxJ9cQV0XmRaoifRecq6of5
PFpPVI/Tn9E6r3rzfozWptUT+FO0Rqxewe+idUbVhVdG65Xqs/orWtdW7+jP
0TqyegKXR+sI6ht5OVq3Uv/GJ9H5jHp+Po3OW9Sf9lF0Pq+6+ZLoOoTq2h9G
6w6q138cnYOpF6hxbq1Ke9nb0fm/aqnH5Na/tNcsjdba1FuyLFpfU3/IG9G5
rmq7b0bnXar5/i+3jqb97q1orUE13x8r7h09CPt+uXvUbsysH0pHXa/9Wvsx
/Iniq8x9oZ9mrolo7j0q3Slzr+N7mWsfqtsOKltnld6qv7fNXDtYmbl+Kt1S
edD6xDq2NPM8c0/pR5zXJdbApZNvnllP1mfYSrFR8RmkY6un5R7VKINrFq9n
rgOqv0X1wXbBtTn1EakWc4ZitrJjVdW77yi7V0Hal3LG94I1BOV3b8MNijyx
Y3DtTz1C6qOQxqU1q/qk6pSqbb8RrNUod1NdUra7y675SmtVjnlxcC1OPUIh
cx/vB5ljIvXP3Cm9JXMN5UvO22Xuv9V9k9YjzUe9x4pTNi+591i9keoleC1z
/K66/61l1/LUW9g2c+5ymO552X2Y6ut4FftXwX2sK+A/g+tKb2SOr7eWPym7
b1B9Gq9g3xBcL3oT/k/5JvxW5hy0Yck926ozqv+wTeYaq2ofqlnslrnXby3n
FsGakXTKPTP3Cq7L3AMgnVO1u1bBvYiKpVWbUz+eYmzVN1TnUC1ftQ/1FD3G
9XfNXOvR9XfK3Aute7hH5jqOrr9PoePpc9XP3cfZF/sPieeranbKIdS/JG1Z
n131G/XZLA3WKJT//sba2avIHaRP1i05zvwd3qfII6Qtb1Oyf1sHbw/vn1nD
3KFkn1wlXaLk/KhNsEam3OQnxuxerE31ABxccj61PrjmpmenWvwBJedQ38E7
ww3g5sH1evXsSZvVPKmfWWvdpeQ8a8fgtSndQDG2arXKc8cE62Hq4VG+0LjI
d3YIXjvKf68N1gbVw7ZtcC1KWsT20jpKzh8/C9ZUpZ98FKyjShtZU/G82heu
HTwnlVeqnq75o7yydXAvpXKiDYzfv+RcTznO8f8/V7HXKzlWV61NPWwP8Lx6
BOuL6t+7OlgzVL/c4mBtTTpG++AeSz131b/0mR/mtV2CtU316S0Mrlkof1ev
lOom0uBVg9NcuK/s56Vav/oYVWtTv9z9ZdcBpU09BHcI7uFULqB8V/NBPeTy
ebpvGiffIk1WvveC4H5R5ZvdgvXU/sV6UY+H+h6lJ6smLn+wLriPQGtT+7x6
xdT72ja4Z1U5rPyoaorqR5E/lG57PfZXgnU56UuqP6q/boB6P4LrcvInqlfq
dQ8W9Ur16Q2Ezw3ug+3JmEnRPRDqJVAPoX6XoZ607XP3H0vb2S53f7N0EmkJ
mqu9ys75NM+vlcabu3dZudLXFfftar1IG9M81+8+tsm9Vttl1qjU89kP+9a5
9xL5OuWjmhv6DYh6CPWbEfXhSN/SXLqx7Hmr33pIP1xfcV+x1o7yRfUO6rch
A6J/76FaWyX4Nybqg6pRLllyL5P6G1WHUk9RJXOdVP58x9x95Mr1lBPLP+i3
J6XMddJ3OO+cu59bcVQ5cx1Te2i9zP3I2n93yt0jrnzwi4p7lrWWt83dIy79
Sn0j6v3WPZE2ozWu319IU1FPpH73UZ25P+2dYu3r9zXqrfo3uN9PPlw6jXxU
T8b/W/HvEdRX9nfFv39Rb610PvmrW8rWIOWX9HsZ6YjqQ7u57H7+fsVeLB1I
vk6/ZaiXuz9ec2/33PUtzZ9S8O8g1KumPg/Nbf2uJ2au+Soe2DV3n73i29UV
933Lh2zktbcX+9FWueMG7Tvl4N/1qJ9NvdC3FPuaNFf55+tVd8jdN6/4//8A
Tqj/qg==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtm3WcHVUShUegO8y7PcAii7u76wKLLu4kuLu7u7smEDw4QQMkwYK7O4st
7u4u+32c/uP+5p5Xt+/r6dddVedU9bRb7rb2rj1dXV2/93Z1jcXfdTtdXcfw
wdgDurqmH7era3DV1bUqeEvGm3VX14rYT2P+B/Mb+7u6BoCnBz8Arlj/MOvP
AV/PGI895sN+APMvsV/N+nXAR4PHwjYd6zcAnwgeBzwT+O3S1XUp53IJYxLm
L7LfcOz3MKZizfPgq5jfxZgCPC/H78/8C/a/iv3XBB8B7sE2LfvNwB7Xs9e9
4F+w94HPAt8A/hb8Gngo+BxGP/PH2f8Cjr+ZMSFrxme/OZg/yv7jsN84rDmT
tddj+4bjn2L9MOyjGf/ksyfBFzMfxZgYXLH+NNZfy/xr1n/t9QBfAH4f/C34
IPCF4A/A/eBZOfZhvm8A31fAs4AfAtfgicDzgJ8AF/DTfN8l4FsZk7DHP7HP
x/wp7P3Y/wGeE/wYuA88AXgu8OPgDnhi8LzgJ8ENuBc8ldcb3At+lP3PBd/I
+Af7Pwu+nPkdjMnAg1h/PPOa+Qys/y//7xn8P3tw/EBwjX067PeDxwa/jP30
3lwTr00X9sn9PbH3YJ+Gz4Zju4v9fuZ6rI/9BOwDwDNif4Hvvxp8N2NKPnsE
PJT5DYzxwb/3cQ08P/brYv3sHL8x+BPwRODnWH8F+E7G5Kyfgu+7gu+7g/lP
fN9j2M/HdhNjAj77i/0mYz6G47s5/hnsl4FvZ0yKfQX234/579in9P+vci5D
2+s1BLwa860Yb7HmDPCKzDdlvA4+E7wS880Yb4AvBW/OfGXG/8CXVFm7Yms/
Dbw8840Yr4Ln5/u3Zv4V83/y/TOBdwF/4F78P8NYvwn4P+33nQtel/mSjBfB
K7H+QOZ/Mp+K41f2fgT/BZ4afCXrtwGvwXiHz3bH/hTzmfnfbmf/K6p8/+qM
t30GwdsyX5PxLnhXru/ZzIe4B8eehX0V5lu0/99UfLYo8+eZT8D37QZ+EjwT
+9/G/udU2Wvb9vsXwb4j82+ZT8L6WcG7gz8CX8b6OcF7gz8FXwG+iOM3BC/X
Xq8lsOvwfmA+KcfPCN4Z/L7XmvVDWb8WeLv2/C8Eb8B8WcYr/j9NrofXZTjr
l+f4fcG/YZuC/WYD7wH+GHw59gtYtz54GcZ/+Wwu7Psw/4z5ldhPr/Lb+Bu9
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
s2vvrD2+9pDaH2rvrz289pjaU2hvrz2+9ozaI2Lv7xMl9ZzlGB910rP2YZWe
K3vZ7iuJlYu0/v/Gklg7N+Mu88MSLWXWNt+4pWTtwm28vbXEty/VxuvRJbHM
GGesuwE8V2/itfnGyBJ9zhhmLBtVEgsXb+PtRSXajBqMWsyIEn3PHMBc4KaS
WDp/my89VhLbjEHGojtK/tdl2/zgoZJYZwwzlj1coocZA42F8h9j21ptPnBz
iR5pzDZ231YSO4xhxrLbS/RVY4qx5dGS2GdMNDZeWKIdqbGotexdom1c2Oor
h5ZoBWoKagsHl2gJ9ihviv2QEq1BjUGt4cAS7UBNQW3hoJK1agpqC/uXaB32
hG/I8WeWaFEftc/DkSX9Sw+1/PmIkn63+xjbgA8HX9OTnvstwQeUaBdqKGop
+5RoI2o0ajX7lmgnaiZqJ3uVaDFqMGoxe5RoBdZo1Y/2LNFm1BDUEg4r+S41
E7WT/UrOXU1GbWb3kl5qNQO1g7NKtDQ1NrU2+au5x3qtv7i/JFcxhzGXOb5J
P6k+Qd8wrEl9xpzR3PHiEt+hPqkedVnJtfKaqUddVVK/+NzfpL2e+hb1FfU9
+7OMbUswmk76t6x1L97yyatL+hUmZVwFHlISy19mnAY+rUTbUN9SH/V+Nvef
qs0Pzy3xdeqd6p8nNukv1QfqC9W+vJfkh9a7Lijxteqf6nnHNdGu1FDUUk5o
0u9qTmFucTbr/9sTPVb98oESPdycz9xveMm5eE7yk2tK+jHMr+Uv95Tkmn/X
Bcz1S3LNldr8+q4SPdoc1lz2zpLcdXnGC9jHlOS25rTmtveW1Bv+rju0+/ls
L9Dmr/onc9PV2nz+2hIt1/xcPnN9Sb1KzVft95IS7VFNVG30ihItTA1MLezK
kvqPGplamb93T28+u5z9Li/RytQo1SovLemHU9NU2/T+Ucv8pY0/w0q0VzVO
tU7vJ7VNjxmGfXBJf4WasNrwGSX9FWrgauHeD96L3pPqXcuX5FbmVOZWy5Xk
VuZU5larlvh+fb6+3/4zY789hfL9FUt8vzHKWLVKSWww5hh77G8z9vhOwYTm
5yWxzBzCXGKlEpsxxFiyWsn7CsYcY4/9HWv3pGd+GvlAyfsOxkBj4ZolsdCY
amxdoyS2GgONhfbHGQvdc5JO+neMre4xBXi9kr2N0cbqdUpisTHYWLxuSew2
Rhur7R8111G/kO/bP+f7Ajswpu9Ej1NLOqDNtz4ryfXN0c3VPy6ppcoZ5A4f
lnCD4W0++FEJl5AzyB0+KKn9yVnkLp+W5Prm+Ob6n4Nv7k2Pifnu+yXcRo4g
V9i85Nw8R/nuJyXc4Po2n1UPlDue1Obr6ptqaYe0+bL6itxHDfMv8Asl/ZFy
IrmR+p9a4j5tvqw+o5Z4TJvfv1TSfyhHlas+WaLVqNl80omeJtc6ouUXO5bk
br4Dpt6/fQlXkePJ9XYo6ZeXw8hlTinxRfok6xtHl/g6fZ761TEl/bNq/Gr9
R5Vo+9ZD1LuOLfG1+lzrH4+X9O/IYeWyJ5f0M1sTsjZ0UomvfL3NZ44r6Y9W
E1cbH1pSb7aGYy1H/2ptyZqz+eTpJbUoa1bWrk4tqS1ZU7K2pL+01vOFzxzr
zy/pZbJmZe1K/2stxRqe+e45JbUia0TWis4rqW1Z07K2ZTwwthhj5HcnlPhi
ffJB+vuS/nFrZtbOji+JHcYQ6zlbl2gt1mvUJ3cBD+5JD5H1nZ1KcmtzbnPv
bUvet1OTUZvZpkSbUbNRu9m45H0mc3hz+e1KuLs9VdZ7di55v8Cc3dzd/j9z
fetB6nFblWg7ajpqO/anyhXUT9XXvN/Vdg5jLNrJ+ymH9qQetVCbn27Ym9/4
Q+Nfk3q3mpfa1xYl7/epEakVbVryvpIcQa6wZYmWZL1K/XLDkvcd5CxyF/sB
5RLWq9Rjz2uipam5qb3JP+xxNCd8B/vQJtqbGplamfFG7cweO+uHdzd5/0QO
Khf1+ZWLqj/I74135s7m0Oo1xzR5v8Ian7W+wU20QjU5tbmlS97vkWNXbf5q
rmzO/Fwn/kTu7Dsfs/pbNOnnU4NUizyriRapBqkWeXST2qA5vrm++d61PXnn
Y2v2O6OJtqcmqTZ5RJP+f2t41vJ8/qw92iNvPcn3D+Qi9piqb1/QRPtTc1N7
G9JEa1SDVIv0fja3NMe03uv7EnJNe9p/6sv7Cva6q79b39Lfyr3Vz9Rj7mry
vqWcXG5u/79cUz3b+uyCJVxVDiuXXbiEq8pJ5aanN9Eq1TDVMvdr8r+rgauF
799EC7eGZC1p9ybvX6lJq037PHlveo+u1sn9ZWwxxqhXHtSkdqdmr3Z/cBPt
Xs1e7X6PJtq2mrra+lFN3pexZmvt1ufZ2uy93pPt8+yz4jOjfurz57PlM6Z+
tleT99uswVqLPbJJrdUar7XeA5rUwqyRWSvbs0ltwRqGtQz5hb5bH269Uv+s
r9XnHtXmd2rT3lM3tnzBWpvvaO0APrDJ3JqltUv5jL5HHzSojQ8+Wz5j8nv5
iL5DH7JRyy/0TfqorTp5P1BfoE+w/idf8Nn1Gba+uG+TfkFr0Nai9e9yFzmM
9f/TmvTzqkmrTS9S8n6rmoXahf36ajf2BFvP2bvJ+8LWrK1dH9qkdmJNxdrK
PCXvd6kZqB3IZ+W6cl71youbaL9q0mrTFzbpF1IzVju+qIl2rGasdmz+rLbv
OV7byftBahHWfz5v++/VInyH6B3wHCXvr6oZqB3YH692YD/C3/Xdkvdl1QjU
CuTf5uLm5Oq/xzbpHbCnwN4C+bba/iSMO7Ef1uT9mL97CPoT7zfqTY/Kx9gv
bdLPo2audn55E5uanNqc7wupHVkfs35+ZRNtTk1Obc7+D7Ux9XD1T+O9tSrf
0dmj1RPkQnIi9fvDm/Qy/N3j0J/3E9Q+rJ9Zjz6/Sf+TNQZrDfOVvG+uhqWW
tU+TfmB7GuxtOKRJ7cuamLWxJUveN1QjUytbokQrU0NTS5Of9famZ/tK43WT
XiprLtZeFivRWtRg1GJObVIbsWZj7UY9xNqLPdv2lyxe8v61Go1azSlNaj/W
VKytnNzku6wJWRvy/RG1PN8hsB747xJtVc1x7DYfktvZ42u/g/qIXEfOY73g
7Ca1HmtA1oL+D1UUSpU=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt13m4jmUaAPBPMY6iZqYmXWnshewKOSLSojTX1EzNtNiONevBwbEcuyMU
FZOthURZs0Qhu0LLVNNyzWgmM8rWURQqWWp+z+X+4/3j+X33s7zP+yz3V6lT
7p/6XpDJZD7ylPD0L5PJnCyZyaz/VSYz1g9NL85k2pfOZI6xhawru4Hdzz5m
k1hTVpGtYf2yMplreZULM5md7DWWx2qwauwddi/7UHmCuo3VvZr10+8Jto6N
Ydlsi7gCdRvwhur+i3Vm3ysvFZcrrjlbz/LF1ea1xH3A1rHBrBaryd5nO9ho
1ohls8/ZC+wOdk57B7U3l7VlX4uZz3JYPTaftRb3MzvE5rF57HZ2lh1gz7Od
bBxron5zfexj29ko1pA1Yf9hq1kfVoVVYNvZfewj5Ynay9ZeBbaJDRNXjzcQ
9ynLYceVF4nrFXO1kQ0VV5fXF/cJe4uNZTeyZux/bIB5/lF5o7oT1L2Z5bHT
bAubzFqxreqOUPd63kjdPex1ca+wPDaNlRKz0HMXy7AidV9McypuOGvBWseY
57JBLDvm5V02h/Vm9ePdtrBnWN/ot2HMyzw2hDVjt8T3XcqeZ53ZcHacLWHP
sU5sGPsuzQvbwEaxBayc8a5mL7Peaf2yDHuDvc4K2DxWlj3LctkNMQc7tPcc
6x9rqEms8UXsGdaR5bOjbAGbydqyAewwe5GNYbeze2L9Pc8GsMaxJnexxexZ
lsOGsGPsZTaHdWCD2TdpTbKRrBW7O77RQjaLtWN5rIi9xGaz9mwgO8Ie8n5f
Kc/1zdv5brXYBnFrxA3lc8T9RsxmtpUVsmWsClvu6c5+z37H1qk7W1yvWKdp
/W1ma9lS1o9NZSXUW8OWsFw2hRVnf/b8Q/lRY2liLOXV7Sruy1jjPVlltlJc
T3Ur8nLRxwJ2J/tF3Ffi5qf3ZW1YMXFH2IK0j7S3iY1NbapbQcxrbDkbwJ5i
WWwdW8kGsadZabaKLWQ92Xh2Jp05bBUbzGawMuKWsbmsCytgJ8S14NvTdzS+
KsaSld5D3AJxPfg4cafZK+wF1o2NYj+w5Wwe68pGsu/Zq2wR68Mms2LaX8Hm
s+5sNPtRXEu+Q3mofqvqtxTrLu4AW8J6s2vYdHHZ6n7LPmaPs0nibor5S3t6
Cvt32jfskRjzr5X3pL5jfKNirhp71ivnaq+sumcvymT+m+Y69tvk2FuHPVti
nmfEutrrWct6xb68Qnmq5wZWpL13tTfeWMYZX112ku1hBewxdgsrqe5JNpPl
swpsv7jtrAubzG5mxcV9y6aziaxJnO3pDpjEivS7jeWLm20s1yrf6Nmg3E/c
leLOebdBrKS4TWwSeyD1y0plnT9PH2MPpXOXFWcbWCG7jw1lF7GtbApry4ax
i9k2NpW1YyNYGbaDPcU6st2skDU1npbGtz+d46wEeyPO9vvZP9O6jDNxeKzx
fWmds76xB69Kd6Uni22OO+BBdb9I3zL26tQ4Ow94NsaemRb7aH86P1n/2Efl
lceb03rse+19pr0R2itkDdiP7HM2mg1hFdkBtoN1Y6NYDXaUfcAGsFmsB6sT
d/x6NoN1YzVZdbaWzWSPRC5QM86mp1lXdl3kIGvYYHYh262PWfq4lz3JOrCq
cScvY7W8yxLl+8UVE3fQN39CXPu4u8uLWypuKmvHKrOr2WL2OHs4zqur2Ets
CmvLKsUZtoiNZbXZcX18oo98NobVYt/FvhzM6qSzV72HWQlWZCzDWWlx29kT
rL24p9TtyK4RW1Efy9k0lhO5WWW2gj3KGrEz6n6hbmFaf6wyO8R2sh5sJKvG
vmbvsVw2ml3HjrEPWV5az6wSO8jeZN3T2mXXsiOxf/uy4awKO8x2sZ6sgFVl
X7HdrFc6m1gnVi3yyZXsb6wzq86qslWsgTl4Vbm7umXUPW5e6rGVLIeVYkfZ
BHWvV/cU28vGqNswnU3ierPL2Clx77BHI99opY+DKT9lF2Sdz0/Hxnp5hJ0R
s4rls9tZH30cZa+yIaw+68WOsJVsIKvNerNv2Oqom3LMbmw/Wxx5XVX2R328
n+4d1pBdxXqKK2IrWF7c3W3EvcvGsPrsCnYP+4AVskasHOug7tqUH8W9cML7
vi1ugne7KfKrA+L6ivtWea244ZHz92CH2XLWj9VIc8AOpdwg8vHqKafR3q3a
Ox3r6hl2N3tP3FjWgJVNuRRrJe4nto/NYbeyt9JZxWqwS1hztjXlPawiK8Ga
pfuDDWIVWPG0NljT2DOfxL31ZLqT2DdxlkxM+yOd5XG+fBjn/SDvkWFvsWms
DctOZ13K31i59CeJ5Yr7jr3GCljDlLOKaxnn2t64e2ax5nFHfRb3zEzWjJ2I
e2saa8o2pVyNXc2KpbyYtRD3Q5yTM9gf2N/T3cuuZ1eygcZyruT5vZ/uijtY
+5TDxb1fJfZCR7aOjWDXsZ9YV+2dYq/EGrol7XN2iX7fjDnISWcxuzTmZTrr
xLpo782S5//7ZUduMVlcnbhrd8SdfCTlPmxI5JPVlHt7fol1VRDznMuKiXs9
/vvdk9YaOxv7Y0i8Wzf2U6z7gfE/5VO2OPLi/MgnP/a8FLl3XuT3vTw/K6+J
9XxXOv9YTXH72KY4Y29jO1P+FnN1KevsfbeVPP9/tVGsv05sc3yPBvHd2rHV
aRyxTo+Z59baezvlR6wOu0zcneydlKuxuuxylqPuG2F1Ire4Q9zulPux2uy3
4v4qbjHryy5nX4r7S8oJWZ84w75gbVN+GnumQpx/hdqr7n33svVxrz6U/tPF
+isXd8rDbEX6rxBr8gh7kC1j/SP3OcQeSPl95ENl4258XB/14/7YFXf8ofQ/
gg2MnLqy8v8Bl/4yPA==
            "]]}]}, {}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0jssQ2EAhuEfRVu07hYhVmFjFzY2g7BhFjZ2YWOwCRu7sLELEXG/96Lq
kohJ2MVz0qRvnm847Tn5T7um50Zny0IIaypXtNt0Gw+hl18cYkiEMIE5tdrL
7OEmB7nHY43bec7yl0tM+NFObdj93OUIjzjFBeXsVf5wm/FkCAe80KVilSFc
sZLXrOINb1Vt30Xf4T0TfOCjkvYTa5hhLbPR/VRn55niM9Ms8EX1dpENfGUj
3/iuc7V7vv3oObjFb8+9wnll7Ekecpg77GOH1u04F/njfGaY45HG7F0OcIPd
XIrOUs32OP+8j0F+sid6F2rRR4Vr+MYmFtnIBhXseuaZZpYp1unJruUDa3jH
ZOl1hxvbbcIVq3nBKjqKcGbHeEqfcFJR+v/8A4dyRtU=
          "]]}, {
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0jtIFVAcx/G/CjfwAYoIOoqQuOQYQW45pnINCZMIM7EGyzEC3Yp8dlNz
sTGE2nr7uPkoH6sINTeY3bqWZaYVYR9o+PL5jYdzTmX71WR3TkSk9MHY1B+9
z48oyY3YZzWLCiLq2Kwq+zJPsI+NHOcjXbIXeYPvmOI28/IipuwKplnLDdbz
nDJ2Dw95i2WFEff5RE91+0jEM/bzOQf4gi81aE9ziDMc5iznNGKneYevmOI8
F3TXXuQolzjG13yjcXuZ97jCCa5yTY9V43yTLOVN/nXua2zVln2K6zzGWZYz
Vw/srPsY4Vte5wIf6qI9xtPs5XF2MalK+yQLeJR73qWYv73VL11JRBywi/vs
5E/uqcP+wXbu8gK/85vO2zts41e28gu3ddbOsoWfeYafmFHS/sgmbrEh8f//
/AM9UVm9
          "]]}, {
         GrayLevel[0.2], 
         Line3DBox[{2260, 2589, 2259, 1314, 2261, 3309, 3519, 2262, 3310, 
          3520, 2263, 2590, 2264, 3624, 2591, 2265, 3311, 3521, 2266, 3312, 
          3522, 2267, 2592, 2268, 3625, 2593, 2269, 3313, 3523, 2270, 3314, 
          3524, 2271, 2594, 2272, 3626, 2595, 2273, 3315, 3525, 2274, 3316, 
          3526, 2275, 2596, 2276, 3627, 2597, 2277, 3317, 3527, 2278, 3318, 
          3528, 2279, 2598, 2280}], 
         Line3DBox[{2282, 2599, 2281, 3628, 2600, 2283, 1330, 2284, 3319, 
          3529, 2285, 2601, 2286, 3629, 2602, 2287, 3630, 2603, 2288, 3320, 
          3530, 2289, 2604, 2290, 3631, 2605, 2291, 3632, 2606, 2292, 3321, 
          3531, 2293, 2607, 2294, 3633, 2608, 2295, 3634, 2609, 2296, 3322, 
          3532, 2297, 2610, 2298, 3635, 2611, 2299, 3636, 2612, 2300, 3323, 
          3533, 2301, 2613, 2302}], 
         Line3DBox[{2304, 2614, 2303, 3637, 2615, 2305, 3638, 2616, 2306, 
          1346, 2307, 2617, 2308, 3639, 2618, 2309, 3640, 2619, 2310, 3641, 
          2620, 2311, 2621, 2312, 3642, 2622, 2313, 3643, 2623, 2314, 3644, 
          2624, 2315, 2625, 2316, 3645, 2626, 2317, 3646, 2627, 2318, 3647, 
          2628, 2319, 2629, 2320, 3648, 2630, 2321, 3649, 2631, 2322, 3650, 
          2632, 2323, 2633, 2324}], 
         Line3DBox[{2326, 2634, 2325, 3324, 3534, 2327, 3325, 3535, 2328, 
          3326, 3536, 2329, 2635, 2330, 1377, 2331, 3327, 3537, 2332, 3328, 
          3538, 2333, 2636, 2334, 3651, 2637, 2335, 3329, 3539, 2336, 3330, 
          3540, 2337, 2638, 2338, 3652, 2639, 2339, 3331, 3541, 2340, 3332, 
          3542, 2341, 2640, 2342, 3653, 2641, 2343, 3333, 3543, 2344, 3334, 
          3544, 2345, 2642, 2346}], 
         Line3DBox[{2348, 2643, 2347, 3654, 2644, 2349, 3335, 3545, 2350, 
          3336, 3546, 2351, 2645, 2352, 3655, 2646, 2353, 1393, 2354, 3337, 
          3547, 2355, 2647, 2356, 3656, 2648, 2357, 3657, 2649, 2358, 3338, 
          3548, 2359, 2650, 2360, 3658, 2651, 2361, 3659, 2652, 2362, 3339, 
          3549, 2363, 2653, 2364, 3660, 2654, 2365, 3661, 2655, 2366, 3340, 
          3550, 2367, 2656, 2368}], 
         Line3DBox[{2370, 2657, 2369, 3662, 2658, 2371, 3663, 2659, 2372, 
          3341, 3551, 2373, 2660, 2374, 3664, 2661, 2375, 3665, 2662, 2376, 
          1409, 2377, 2663, 2378, 3666, 2664, 2379, 3667, 2665, 2380, 3668, 
          2666, 2381, 2667, 2382, 3669, 2668, 2383, 3670, 2669, 2384, 3671, 
          2670, 2385, 2671, 2386, 3672, 2672, 2387, 3673, 2673, 2388, 3674, 
          2674, 2389, 2675, 2390}], 
         Line3DBox[{2392, 2676, 2391, 3342, 3552, 2393, 3343, 3553, 2394, 
          3344, 3554, 2395, 2677, 2396, 3345, 3555, 2397, 3346, 3556, 2398, 
          3347, 3557, 2399, 2678, 2400, 1440, 2401, 3348, 3558, 2402, 3349, 
          3559, 2403, 2679, 2404, 3675, 2680, 2405, 3350, 3560, 2406, 3351, 
          3561, 2407, 2681, 2408, 3676, 2682, 2409, 3352, 3562, 2410, 3353, 
          3563, 2411, 2683, 2412}], 
         Line3DBox[{2414, 2684, 2413, 3677, 2685, 2415, 3354, 3564, 2416, 
          3355, 3565, 2417, 2686, 2418, 3678, 2687, 2419, 3356, 3566, 2420, 
          3357, 3567, 2421, 2688, 2422, 3679, 2689, 2423, 1456, 2424, 3358, 
          3568, 2425, 2690, 2426, 3680, 2691, 2427, 3681, 2692, 2428, 3359, 
          3569, 2429, 2693, 2430, 3682, 2694, 2431, 3683, 2695, 2432, 3360, 
          3570, 2433, 2696, 2434}], 
         Line3DBox[{2436, 2697, 2435, 3684, 2698, 2437, 3685, 2699, 2438, 
          3361, 3571, 2439, 2700, 2440, 3686, 2701, 2441, 3687, 2702, 2442, 
          3362, 3572, 2443, 2703, 2444, 3688, 2704, 2445, 3689, 2705, 2446, 
          1472, 2447, 2706, 2448, 3690, 2707, 2449, 3691, 2708, 2450, 3692, 
          2709, 2451, 2710, 2452, 3693, 2711, 2453, 3694, 2712, 2454, 3695, 
          2713, 2455, 2714, 2456}], 
         Line3DBox[{2458, 2715, 2457, 3363, 3573, 2459, 3364, 3574, 2460, 
          3365, 3575, 2461, 2716, 2462, 3366, 3576, 2463, 3367, 3577, 2464, 
          3368, 3578, 2465, 2717, 2466, 3369, 3579, 2467, 3370, 3580, 2468, 
          3371, 3581, 2469, 2718, 2470, 1503, 2471, 3372, 3582, 2472, 3373, 
          3583, 2473, 2719, 2474, 3696, 2720, 2475, 3374, 3584, 2476, 3375, 
          3585, 2477, 2721, 2478}], 
         Line3DBox[{2480, 2722, 2479, 3697, 2723, 2481, 3376, 3586, 2482, 
          3377, 3587, 2483, 2724, 2484, 3698, 2725, 2485, 3378, 3588, 2486, 
          3379, 3589, 2487, 2726, 2488, 3699, 2727, 2489, 3380, 3590, 2490, 
          3381, 3591, 2491, 2728, 2492, 3700, 2729, 2493, 1519, 2494, 3382, 
          3592, 2495, 2730, 2496, 3701, 2731, 2497, 3702, 2732, 2498, 3383, 
          3593, 2499, 2733, 2500}], 
         Line3DBox[{2502, 2734, 2501, 3703, 2735, 2503, 3704, 2736, 2504, 
          3384, 3594, 2505, 2737, 2506, 3705, 2738, 2507, 3706, 2739, 2508, 
          3385, 3595, 2509, 2740, 2510, 3707, 2741, 2511, 3708, 2742, 2512, 
          3386, 3596, 2513, 2743, 2514, 3709, 2744, 2515, 3710, 2745, 2516, 
          1535, 2517, 2746, 2518, 3711, 2747, 2519, 3712, 2748, 2520, 3713, 
          2749, 2521, 2750, 2522}], 
         Line3DBox[{2524, 2751, 2523, 3387, 3597, 2525, 3388, 3598, 2526, 
          3389, 3599, 2527, 2752, 2528, 3390, 3600, 2529, 3391, 3601, 2530, 
          3392, 3602, 2531, 2753, 2532, 3393, 3603, 2533, 3394, 3604, 2534, 
          3395, 3605, 2535, 2754, 2536, 3396, 3606, 2537, 3397, 3607, 2538, 
          3398, 3608, 2539, 2755, 2540, 1566, 2541, 3399, 3609, 2542, 3400, 
          3610, 2543, 2756, 2544}], 
         Line3DBox[{2546, 2757, 2545, 3714, 2758, 2547, 3401, 3611, 2548, 
          3402, 3612, 2549, 2759, 2550, 3715, 2760, 2551, 3403, 3613, 2552, 
          3404, 3614, 2553, 2761, 2554, 3716, 2762, 2555, 3405, 3615, 2556, 
          3406, 3616, 2557, 2763, 2558, 3717, 2764, 2559, 3407, 3617, 2560, 
          3408, 3618, 2561, 2765, 2562, 3718, 2766, 2563, 1582, 2564, 3409, 
          3619, 2565, 2767, 2566}], 
         Line3DBox[{2568, 2768, 2567, 3719, 2769, 2569, 3720, 2770, 2570, 
          3410, 3620, 2571, 2771, 2572, 3721, 2772, 2573, 3722, 2773, 2574, 
          3411, 3621, 2575, 2774, 2576, 3723, 2775, 2577, 3724, 2776, 2578, 
          3412, 3622, 2579, 2777, 2580, 3725, 2778, 2581, 3726, 2779, 2582, 
          3413, 3623, 2583, 2780, 2584, 3727, 2781, 2585, 3728, 2782, 2586, 
          1598, 2587, 2783, 2588}], 
         Line3DBox[{2785, 3114, 2784, 1959, 2786, 3414, 3729, 2787, 3415, 
          3730, 2788, 3115, 2789, 3834, 3116, 2790, 3416, 3731, 2791, 3417, 
          3732, 2792, 3117, 2793, 3835, 3118, 2794, 3418, 3733, 2795, 3419, 
          3734, 2796, 3119, 2797, 3836, 3120, 2798, 3420, 3735, 2799, 3421, 
          3736, 2800, 3121, 2801, 3837, 3122, 2802, 3422, 3737, 2803, 3423, 
          3738, 2804, 3123, 2805}], 
         Line3DBox[{2807, 3124, 2806, 3838, 3125, 2808, 1975, 2809, 3424, 
          3739, 2810, 3126, 2811, 3839, 3127, 2812, 3840, 3128, 2813, 3425, 
          3740, 2814, 3129, 2815, 3841, 3130, 2816, 3842, 3131, 2817, 3426, 
          3741, 2818, 3132, 2819, 3843, 3133, 2820, 3844, 3134, 2821, 3427, 
          3742, 2822, 3135, 2823, 3845, 3136, 2824, 3846, 3137, 2825, 3428, 
          3743, 2826, 3138, 2827}], 
         Line3DBox[{2829, 3139, 2828, 3847, 3140, 2830, 3848, 3141, 2831, 
          1991, 2832, 3142, 2833, 3849, 3143, 2834, 3850, 3144, 2835, 3851, 
          3145, 2836, 3146, 2837, 3852, 3147, 2838, 3853, 3148, 2839, 3854, 
          3149, 2840, 3150, 2841, 3855, 3151, 2842, 3856, 3152, 2843, 3857, 
          3153, 2844, 3154, 2845, 3858, 3155, 2846, 3859, 3156, 2847, 3860, 
          3157, 2848, 3158, 2849}], 
         Line3DBox[{2851, 3159, 2850, 3429, 3744, 2852, 3430, 3745, 2853, 
          3431, 3746, 2854, 3160, 2855, 2022, 2856, 3432, 3747, 2857, 3433, 
          3748, 2858, 3161, 2859, 3861, 3162, 2860, 3434, 3749, 2861, 3435, 
          3750, 2862, 3163, 2863, 3862, 3164, 2864, 3436, 3751, 2865, 3437, 
          3752, 2866, 3165, 2867, 3863, 3166, 2868, 3438, 3753, 2869, 3439, 
          3754, 2870, 3167, 2871}], 
         Line3DBox[{2873, 3168, 2872, 3864, 3169, 2874, 3440, 3755, 2875, 
          3441, 3756, 2876, 3170, 2877, 3865, 3171, 2878, 2038, 2879, 3442, 
          3757, 2880, 3172, 2881, 3866, 3173, 2882, 3867, 3174, 2883, 3443, 
          3758, 2884, 3175, 2885, 3868, 3176, 2886, 3869, 3177, 2887, 3444, 
          3759, 2888, 3178, 2889, 3870, 3179, 2890, 3871, 3180, 2891, 3445, 
          3760, 2892, 3181, 2893}], 
         Line3DBox[{2895, 3182, 2894, 3872, 3183, 2896, 3873, 3184, 2897, 
          3446, 3761, 2898, 3185, 2899, 3874, 3186, 2900, 3875, 3187, 2901, 
          2054, 2902, 3188, 2903, 3876, 3189, 2904, 3877, 3190, 2905, 3878, 
          3191, 2906, 3192, 2907, 3879, 3193, 2908, 3880, 3194, 2909, 3881, 
          3195, 2910, 3196, 2911, 3882, 3197, 2912, 3883, 3198, 2913, 3884, 
          3199, 2914, 3200, 2915}], 
         Line3DBox[{2917, 3201, 2916, 3447, 3762, 2918, 3448, 3763, 2919, 
          3449, 3764, 2920, 3202, 2921, 3450, 3765, 2922, 3451, 3766, 2923, 
          3452, 3767, 2924, 3203, 2925, 2085, 2926, 3453, 3768, 2927, 3454, 
          3769, 2928, 3204, 2929, 3885, 3205, 2930, 3455, 3770, 2931, 3456, 
          3771, 2932, 3206, 2933, 3886, 3207, 2934, 3457, 3772, 2935, 3458, 
          3773, 2936, 3208, 2937}], 
         Line3DBox[{2939, 3209, 2938, 3887, 3210, 2940, 3459, 3774, 2941, 
          3460, 3775, 2942, 3211, 2943, 3888, 3212, 2944, 3461, 3776, 2945, 
          3462, 3777, 2946, 3213, 2947, 3889, 3214, 2948, 2101, 2949, 3463, 
          3778, 2950, 3215, 2951, 3890, 3216, 2952, 3891, 3217, 2953, 3464, 
          3779, 2954, 3218, 2955, 3892, 3219, 2956, 3893, 3220, 2957, 3465, 
          3780, 2958, 3221, 2959}], 
         Line3DBox[{2961, 3222, 2960, 3894, 3223, 2962, 3895, 3224, 2963, 
          3466, 3781, 2964, 3225, 2965, 3896, 3226, 2966, 3897, 3227, 2967, 
          3467, 3782, 2968, 3228, 2969, 3898, 3229, 2970, 3899, 3230, 2971, 
          2117, 2972, 3231, 2973, 3900, 3232, 2974, 3901, 3233, 2975, 3902, 
          3234, 2976, 3235, 2977, 3903, 3236, 2978, 3904, 3237, 2979, 3905, 
          3238, 2980, 3239, 2981}], 
         Line3DBox[{2983, 3240, 2982, 3468, 3783, 2984, 3469, 3784, 2985, 
          3470, 3785, 2986, 3241, 2987, 3471, 3786, 2988, 3472, 3787, 2989, 
          3473, 3788, 2990, 3242, 2991, 3474, 3789, 2992, 3475, 3790, 2993, 
          3476, 3791, 2994, 3243, 2995, 2148, 2996, 3477, 3792, 2997, 3478, 
          3793, 2998, 3244, 2999, 3906, 3245, 3000, 3479, 3794, 3001, 3480, 
          3795, 3002, 3246, 3003}], 
         Line3DBox[{3005, 3247, 3004, 3907, 3248, 3006, 3481, 3796, 3007, 
          3482, 3797, 3008, 3249, 3009, 3908, 3250, 3010, 3483, 3798, 3011, 
          3484, 3799, 3012, 3251, 3013, 3909, 3252, 3014, 3485, 3800, 3015, 
          3486, 3801, 3016, 3253, 3017, 3910, 3254, 3018, 2164, 3019, 3487, 
          3802, 3020, 3255, 3021, 3911, 3256, 3022, 3912, 3257, 3023, 3488, 
          3803, 3024, 3258, 3025}], 
         Line3DBox[{3027, 3259, 3026, 3913, 3260, 3028, 3914, 3261, 3029, 
          3489, 3804, 3030, 3262, 3031, 3915, 3263, 3032, 3916, 3264, 3033, 
          3490, 3805, 3034, 3265, 3035, 3917, 3266, 3036, 3918, 3267, 3037, 
          3491, 3806, 3038, 3268, 3039, 3919, 3269, 3040, 3920, 3270, 3041, 
          2180, 3042, 3271, 3043, 3921, 3272, 3044, 3922, 3273, 3045, 3923, 
          3274, 3046, 3275, 3047}], 
         Line3DBox[{3049, 3276, 3048, 3492, 3807, 3050, 3493, 3808, 3051, 
          3494, 3809, 3052, 3277, 3053, 3495, 3810, 3054, 3496, 3811, 3055, 
          3497, 3812, 3056, 3278, 3057, 3498, 3813, 3058, 3499, 3814, 3059, 
          3500, 3815, 3060, 3279, 3061, 3501, 3816, 3062, 3502, 3817, 3063, 
          3503, 3818, 3064, 3280, 3065, 2211, 3066, 3504, 3819, 3067, 3505, 
          3820, 3068, 3281, 3069}], 
         Line3DBox[{3071, 3282, 3070, 3924, 3283, 3072, 3506, 3821, 3073, 
          3507, 3822, 3074, 3284, 3075, 3925, 3285, 3076, 3508, 3823, 3077, 
          3509, 3824, 3078, 3286, 3079, 3926, 3287, 3080, 3510, 3825, 3081, 
          3511, 3826, 3082, 3288, 3083, 3927, 3289, 3084, 3512, 3827, 3085, 
          3513, 3828, 3086, 3290, 3087, 3928, 3291, 3088, 2227, 3089, 3514, 
          3829, 3090, 3292, 3091}], 
         Line3DBox[{3093, 3293, 3092, 3929, 3294, 3094, 3930, 3295, 3095, 
          3515, 3830, 3096, 3296, 3097, 3931, 3297, 3098, 3932, 3298, 3099, 
          3516, 3831, 3100, 3299, 3101, 3933, 3300, 3102, 3934, 3301, 3103, 
          3517, 3832, 3104, 3302, 3105, 3935, 3303, 3106, 3936, 3304, 3107, 
          3518, 3833, 3108, 3305, 3109, 3937, 3306, 3110, 3938, 3307, 3111, 
          2243, 3112, 3308, 3113}]}, {
         GrayLevel[0.2], 
         Line3DBox[{969, 1299, 970, 1314, 999, 1329, 3628, 1014, 1344, 3637, 
          1029, 1359, 1044, 3534, 1374, 1059, 1389, 3654, 1074, 1404, 3662, 
          1089, 1419, 1104, 3552, 1434, 1119, 1449, 3677, 1134, 1464, 3684, 
          1149, 1479, 1164, 3573, 1494, 1179, 1509, 3697, 1194, 1524, 3703, 
          1209, 1539, 1224, 3597, 1554, 1239, 1569, 3714, 1254, 1584, 3719, 
          1269, 1599, 1284}], 
         Line3DBox[{971, 1300, 972, 3519, 1315, 1000, 1330, 1015, 1345, 3638, 
          1030, 1360, 1045, 3535, 1375, 1060, 3545, 1390, 1075, 1405, 3663, 
          1090, 1420, 1105, 3553, 1435, 1120, 3564, 1450, 1135, 1465, 3685, 
          1150, 1480, 1165, 3574, 1495, 1180, 3586, 1510, 1195, 1525, 3704, 
          1210, 1540, 1225, 3598, 1555, 1240, 3611, 1570, 1255, 1585, 3720, 
          1270, 1600, 1285}], 
         Line3DBox[{973, 1301, 974, 3520, 1316, 1001, 3529, 1331, 1016, 1346, 
          1031, 1361, 1046, 3536, 1376, 1061, 3546, 1391, 1076, 3551, 1406, 
          1091, 1421, 1106, 3554, 1436, 1121, 3565, 1451, 1136, 3571, 1466, 
          1151, 1481, 1166, 3575, 1496, 1181, 3587, 1511, 1196, 3594, 1526, 
          1211, 1541, 1226, 3599, 1556, 1241, 3612, 1571, 1256, 3620, 1586, 
          1271, 1601, 1286}], 
         Line3DBox[{975, 1302, 976, 1317, 3624, 1002, 1332, 3629, 1017, 1347, 
          3639, 1032, 1362, 1047, 1377, 1062, 1392, 3655, 1077, 1407, 3664, 
          1092, 1422, 1107, 3555, 1437, 1122, 1452, 3678, 1137, 1467, 3686, 
          1152, 1482, 1167, 3576, 1497, 1182, 1512, 3698, 1197, 1527, 3705, 
          1212, 1542, 1227, 3600, 1557, 1242, 1572, 3715, 1257, 1587, 3721, 
          1272, 1602, 1287}], 
         Line3DBox[{977, 1303, 978, 3521, 1318, 1003, 1333, 3630, 1018, 1348, 
          3640, 1033, 1363, 1048, 3537, 1378, 1063, 1393, 1078, 1408, 3665, 
          1093, 1423, 1108, 3556, 1438, 1123, 3566, 1453, 1138, 1468, 3687, 
          1153, 1483, 1168, 3577, 1498, 1183, 3588, 1513, 1198, 1528, 3706, 
          1213, 1543, 1228, 3601, 1558, 1243, 3613, 1573, 1258, 1588, 3722, 
          1273, 1603, 1288}], 
         Line3DBox[{979, 1304, 980, 3522, 1319, 1004, 3530, 1334, 1019, 1349, 
          3641, 1034, 1364, 1049, 3538, 1379, 1064, 3547, 1394, 1079, 1409, 
          1094, 1424, 1109, 3557, 1439, 1124, 3567, 1454, 1139, 3572, 1469, 
          1154, 1484, 1169, 3578, 1499, 1184, 3589, 1514, 1199, 3595, 1529, 
          1214, 1544, 1229, 3602, 1559, 1244, 3614, 1574, 1259, 3621, 1589, 
          1274, 1604, 1289}], 
         Line3DBox[{981, 1305, 982, 1320, 3625, 1005, 1335, 3631, 1020, 1350, 
          3642, 1035, 1365, 1050, 1380, 3651, 1065, 1395, 3656, 1080, 1410, 
          3666, 1095, 1425, 1110, 1440, 1125, 1455, 3679, 1140, 1470, 3688, 
          1155, 1485, 1170, 3579, 1500, 1185, 1515, 3699, 1200, 1530, 3707, 
          1215, 1545, 1230, 3603, 1560, 1245, 1575, 3716, 1260, 1590, 3723, 
          1275, 1605, 1290}], 
         Line3DBox[{983, 1306, 984, 3523, 1321, 1006, 1336, 3632, 1021, 1351, 
          3643, 1036, 1366, 1051, 3539, 1381, 1066, 1396, 3657, 1081, 1411, 
          3667, 1096, 1426, 1111, 3558, 1441, 1126, 1456, 1141, 1471, 3689, 
          1156, 1486, 1171, 3580, 1501, 1186, 3590, 1516, 1201, 1531, 3708, 
          1216, 1546, 1231, 3604, 1561, 1246, 3615, 1576, 1261, 1591, 3724, 
          1276, 1606, 1291}], 
         Line3DBox[{985, 1307, 986, 3524, 1322, 1007, 3531, 1337, 1022, 1352, 
          3644, 1037, 1367, 1052, 3540, 1382, 1067, 3548, 1397, 1082, 1412, 
          3668, 1097, 1427, 1112, 3559, 1442, 1127, 3568, 1457, 1142, 1472, 
          1157, 1487, 1172, 3581, 1502, 1187, 3591, 1517, 1202, 3596, 1532, 
          1217, 1547, 1232, 3605, 1562, 1247, 3616, 1577, 1262, 3622, 1592, 
          1277, 1607, 1292}], 
         Line3DBox[{987, 1308, 988, 1323, 3626, 1008, 1338, 3633, 1023, 1353, 
          3645, 1038, 1368, 1053, 1383, 3652, 1068, 1398, 3658, 1083, 1413, 
          3669, 1098, 1428, 1113, 1443, 3675, 1128, 1458, 3680, 1143, 1473, 
          3690, 1158, 1488, 1173, 1503, 1188, 1518, 3700, 1203, 1533, 3709, 
          1218, 1548, 1233, 3606, 1563, 1248, 1578, 3717, 1263, 1593, 3725, 
          1278, 1608, 1293}], 
         Line3DBox[{989, 1309, 990, 3525, 1324, 1009, 1339, 3634, 1024, 1354, 
          3646, 1039, 1369, 1054, 3541, 1384, 1069, 1399, 3659, 1084, 1414, 
          3670, 1099, 1429, 1114, 3560, 1444, 1129, 1459, 3681, 1144, 1474, 
          3691, 1159, 1489, 1174, 3582, 1504, 1189, 1519, 1204, 1534, 3710, 
          1219, 1549, 1234, 3607, 1564, 1249, 3617, 1579, 1264, 1594, 3726, 
          1279, 1609, 1294}], 
         Line3DBox[{991, 1310, 992, 3526, 1325, 1010, 3532, 1340, 1025, 1355, 
          3647, 1040, 1370, 1055, 3542, 1385, 1070, 3549, 1400, 1085, 1415, 
          3671, 1100, 1430, 1115, 3561, 1445, 1130, 3569, 1460, 1145, 1475, 
          3692, 1160, 1490, 1175, 3583, 1505, 1190, 3592, 1520, 1205, 1535, 
          1220, 1550, 1235, 3608, 1565, 1250, 3618, 1580, 1265, 3623, 1595, 
          1280, 1610, 1295}], 
         Line3DBox[{993, 1311, 994, 1326, 3627, 1011, 1341, 3635, 1026, 1356, 
          3648, 1041, 1371, 1056, 1386, 3653, 1071, 1401, 3660, 1086, 1416, 
          3672, 1101, 1431, 1116, 1446, 3676, 1131, 1461, 3682, 1146, 1476, 
          3693, 1161, 1491, 1176, 1506, 3696, 1191, 1521, 3701, 1206, 1536, 
          3711, 1221, 1551, 1236, 1566, 1251, 1581, 3718, 1266, 1596, 3727, 
          1281, 1611, 1296}], 
         Line3DBox[{995, 1312, 996, 3527, 1327, 1012, 1342, 3636, 1027, 1357, 
          3649, 1042, 1372, 1057, 3543, 1387, 1072, 1402, 3661, 1087, 1417, 
          3673, 1102, 1432, 1117, 3562, 1447, 1132, 1462, 3683, 1147, 1477, 
          3694, 1162, 1492, 1177, 3584, 1507, 1192, 1522, 3702, 1207, 1537, 
          3712, 1222, 1552, 1237, 3609, 1567, 1252, 1582, 1267, 1597, 3728, 
          1282, 1612, 1297}], 
         Line3DBox[{997, 1313, 998, 3528, 1328, 1013, 3533, 1343, 1028, 1358, 
          3650, 1043, 1373, 1058, 3544, 1388, 1073, 3550, 1403, 1088, 1418, 
          3674, 1103, 1433, 1118, 3563, 1448, 1133, 3570, 1463, 1148, 1478, 
          3695, 1163, 1493, 1178, 3585, 1508, 1193, 3593, 1523, 1208, 1538, 
          3713, 1223, 1553, 1238, 3610, 1568, 1253, 3619, 1583, 1268, 1598, 
          1283, 1613, 1298}], 
         Line3DBox[{1614, 1944, 1615, 1959, 1644, 1974, 3838, 1659, 1989, 
          3847, 1674, 2004, 1689, 3744, 2019, 1704, 2034, 3864, 1719, 2049, 
          3872, 1734, 2064, 1749, 3762, 2079, 1764, 2094, 3887, 1779, 2109, 
          3894, 1794, 2124, 1809, 3783, 2139, 1824, 2154, 3907, 1839, 2169, 
          3913, 1854, 2184, 1869, 3807, 2199, 1884, 2214, 3924, 1899, 2229, 
          3929, 1914, 2244, 1929}], 
         Line3DBox[{1616, 1945, 1617, 3729, 1960, 1645, 1975, 1660, 1990, 
          3848, 1675, 2005, 1690, 3745, 2020, 1705, 3755, 2035, 1720, 2050, 
          3873, 1735, 2065, 1750, 3763, 2080, 1765, 3774, 2095, 1780, 2110, 
          3895, 1795, 2125, 1810, 3784, 2140, 1825, 3796, 2155, 1840, 2170, 
          3914, 1855, 2185, 1870, 3808, 2200, 1885, 3821, 2215, 1900, 2230, 
          3930, 1915, 2245, 1930}], 
         Line3DBox[{1618, 1946, 1619, 3730, 1961, 1646, 3739, 1976, 1661, 
          1991, 1676, 2006, 1691, 3746, 2021, 1706, 3756, 2036, 1721, 3761, 
          2051, 1736, 2066, 1751, 3764, 2081, 1766, 3775, 2096, 1781, 3781, 
          2111, 1796, 2126, 1811, 3785, 2141, 1826, 3797, 2156, 1841, 3804, 
          2171, 1856, 2186, 1871, 3809, 2201, 1886, 3822, 2216, 1901, 3830, 
          2231, 1916, 2246, 1931}], 
         Line3DBox[{1620, 1947, 1621, 1962, 3834, 1647, 1977, 3839, 1662, 
          1992, 3849, 1677, 2007, 1692, 2022, 1707, 2037, 3865, 1722, 2052, 
          3874, 1737, 2067, 1752, 3765, 2082, 1767, 2097, 3888, 1782, 2112, 
          3896, 1797, 2127, 1812, 3786, 2142, 1827, 2157, 3908, 1842, 2172, 
          3915, 1857, 2187, 1872, 3810, 2202, 1887, 2217, 3925, 1902, 2232, 
          3931, 1917, 2247, 1932}], 
         Line3DBox[{1622, 1948, 1623, 3731, 1963, 1648, 1978, 3840, 1663, 
          1993, 3850, 1678, 2008, 1693, 3747, 2023, 1708, 2038, 1723, 2053, 
          3875, 1738, 2068, 1753, 3766, 2083, 1768, 3776, 2098, 1783, 2113, 
          3897, 1798, 2128, 1813, 3787, 2143, 1828, 3798, 2158, 1843, 2173, 
          3916, 1858, 2188, 1873, 3811, 2203, 1888, 3823, 2218, 1903, 2233, 
          3932, 1918, 2248, 1933}], 
         Line3DBox[{1624, 1949, 1625, 3732, 1964, 1649, 3740, 1979, 1664, 
          1994, 3851, 1679, 2009, 1694, 3748, 2024, 1709, 3757, 2039, 1724, 
          2054, 1739, 2069, 1754, 3767, 2084, 1769, 3777, 2099, 1784, 3782, 
          2114, 1799, 2129, 1814, 3788, 2144, 1829, 3799, 2159, 1844, 3805, 
          2174, 1859, 2189, 1874, 3812, 2204, 1889, 3824, 2219, 1904, 3831, 
          2234, 1919, 2249, 1934}], 
         Line3DBox[{1626, 1950, 1627, 1965, 3835, 1650, 1980, 3841, 1665, 
          1995, 3852, 1680, 2010, 1695, 2025, 3861, 1710, 2040, 3866, 1725, 
          2055, 3876, 1740, 2070, 1755, 2085, 1770, 2100, 3889, 1785, 2115, 
          3898, 1800, 2130, 1815, 3789, 2145, 1830, 2160, 3909, 1845, 2175, 
          3917, 1860, 2190, 1875, 3813, 2205, 1890, 2220, 3926, 1905, 2235, 
          3933, 1920, 2250, 1935}], 
         Line3DBox[{1628, 1951, 1629, 3733, 1966, 1651, 1981, 3842, 1666, 
          1996, 3853, 1681, 2011, 1696, 3749, 2026, 1711, 2041, 3867, 1726, 
          2056, 3877, 1741, 2071, 1756, 3768, 2086, 1771, 2101, 1786, 2116, 
          3899, 1801, 2131, 1816, 3790, 2146, 1831, 3800, 2161, 1846, 2176, 
          3918, 1861, 2191, 1876, 3814, 2206, 1891, 3825, 2221, 1906, 2236, 
          3934, 1921, 2251, 1936}], 
         Line3DBox[{1630, 1952, 1631, 3734, 1967, 1652, 3741, 1982, 1667, 
          1997, 3854, 1682, 2012, 1697, 3750, 2027, 1712, 3758, 2042, 1727, 
          2057, 3878, 1742, 2072, 1757, 3769, 2087, 1772, 3778, 2102, 1787, 
          2117, 1802, 2132, 1817, 3791, 2147, 1832, 3801, 2162, 1847, 3806, 
          2177, 1862, 2192, 1877, 3815, 2207, 1892, 3826, 2222, 1907, 3832, 
          2237, 1922, 2252, 1937}], 
         Line3DBox[{1632, 1953, 1633, 1968, 3836, 1653, 1983, 3843, 1668, 
          1998, 3855, 1683, 2013, 1698, 2028, 3862, 1713, 2043, 3868, 1728, 
          2058, 3879, 1743, 2073, 1758, 2088, 3885, 1773, 2103, 3890, 1788, 
          2118, 3900, 1803, 2133, 1818, 2148, 1833, 2163, 3910, 1848, 2178, 
          3919, 1863, 2193, 1878, 3816, 2208, 1893, 2223, 3927, 1908, 2238, 
          3935, 1923, 2253, 1938}], 
         Line3DBox[{1634, 1954, 1635, 3735, 1969, 1654, 1984, 3844, 1669, 
          1999, 3856, 1684, 2014, 1699, 3751, 2029, 1714, 2044, 3869, 1729, 
          2059, 3880, 1744, 2074, 1759, 3770, 2089, 1774, 2104, 3891, 1789, 
          2119, 3901, 1804, 2134, 1819, 3792, 2149, 1834, 2164, 1849, 2179, 
          3920, 1864, 2194, 1879, 3817, 2209, 1894, 3827, 2224, 1909, 2239, 
          3936, 1924, 2254, 1939}], 
         Line3DBox[{1636, 1955, 1637, 3736, 1970, 1655, 3742, 1985, 1670, 
          2000, 3857, 1685, 2015, 1700, 3752, 2030, 1715, 3759, 2045, 1730, 
          2060, 3881, 1745, 2075, 1760, 3771, 2090, 1775, 3779, 2105, 1790, 
          2120, 3902, 1805, 2135, 1820, 3793, 2150, 1835, 3802, 2165, 1850, 
          2180, 1865, 2195, 1880, 3818, 2210, 1895, 3828, 2225, 1910, 3833, 
          2240, 1925, 2255, 1940}], 
         Line3DBox[{1638, 1956, 1639, 1971, 3837, 1656, 1986, 3845, 1671, 
          2001, 3858, 1686, 2016, 1701, 2031, 3863, 1716, 2046, 3870, 1731, 
          2061, 3882, 1746, 2076, 1761, 2091, 3886, 1776, 2106, 3892, 1791, 
          2121, 3903, 1806, 2136, 1821, 2151, 3906, 1836, 2166, 3911, 1851, 
          2181, 3921, 1866, 2196, 1881, 2211, 1896, 2226, 3928, 1911, 2241, 
          3937, 1926, 2256, 1941}], 
         Line3DBox[{1640, 1957, 1641, 3737, 1972, 1657, 1987, 3846, 1672, 
          2002, 3859, 1687, 2017, 1702, 3753, 2032, 1717, 2047, 3871, 1732, 
          2062, 3883, 1747, 2077, 1762, 3772, 2092, 1777, 2107, 3893, 1792, 
          2122, 3904, 1807, 2137, 1822, 3794, 2152, 1837, 2167, 3912, 1852, 
          2182, 3922, 1867, 2197, 1882, 3819, 2212, 1897, 2227, 1912, 2242, 
          3938, 1927, 2257, 1942}], 
         Line3DBox[{1642, 1958, 1643, 3738, 1973, 1658, 3743, 1988, 1673, 
          2003, 3860, 1688, 2018, 1703, 3754, 2033, 1718, 3760, 2048, 1733, 
          2063, 3884, 1748, 2078, 1763, 3773, 2093, 1778, 3780, 2108, 1793, 
          2123, 3905, 1808, 2138, 1823, 3795, 2153, 1838, 3803, 2168, 1853, 
          2183, 3923, 1868, 2198, 1883, 3820, 2213, 1898, 3829, 2228, 1913, 
          2243, 1928, 2258, 1943}]}, {}, {}, {}, {}, {}}}, 
      VertexNormals -> CompressedData["
1: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
BEY8+3fsQWajd/iO2zlwX5i/N5oUAWoHpo7CNhHHF/3bKE6BdaFdimjEEchm
IvEw3/kuducpN4Mj0qH1srlUJIc3HGstWbxM5Ku3yC8GiR0HPoOCPzkyTrBb
7Xo2MR/S8lLGR8aDsaCeftWR3N0agtne2xB1Q6pu/xuZ38MhKiUp76SfMfQx
pIQQ9az2Pf/lVf0NAbEICArp0oU9dmfOEfUFfbUXCu+d8+G8gmhWS34zcOR8
CX8zuxNHpLIeDvicgMHOR8uf2FtAyMDMkHMHZ179I8wxUQHxu9P53843Qep1
tkt3Zgh9hGfdTy5VwdbHw0YyO+v1rJ4686md73jmfhG1Y/dtGDOw1U+TvAcy
x85Squ7gl9Zi73Cy1YO+P5NwuM5dOPJpP4n5zn12cWlGyujdBUbOQip7w1q4
T8mY83knjqzGNacUHrwLnlcnTjkt3YQh55SMN//t8H9MXq7b8Q6cYzktcqnh
Guzr97XJ2rFn0uHkkKmA29B7+v3hF2crYEz9b7HbyjIaLedKPj9wE1SC2UP/
XC2BYwY/jxG6jWTSNp6HflyDwMWvY8mPz4OOE3NJwI4f4FU6YXZe8Qqkbr/f
l/RtJ65WO3Ly7PgBluKX+g5VpeB0Mf0QjX8GGMer/KLY+e69W4J5HO8KYLWd
zVLV4Th07wv+hIi4IPzOekHvDHjVbGtqz0cDlVHPNUInK4703qju9Enw9Z8f
OFsTAif+NscSuk4UtGbdX7VSwYL3kbUDpz/8Sy2/RMz9YLbbTWUslABFJ7df
33DygBW6L1WE/l2SpIX8V7JokBwUXOlndYAdt7afqNO5aW7oDWyFgjDMsbk6
W8H/SLrueCy/N2yGJNkrskeys8dj771H9t5bdoTsvfemIrOkkluitOSrZFTI
SkMoIoXf+zy/f6/P+3nf5z3Xue9z3+ec57psAt/8RNeFw6IA3ZI+X/hzlCsU
5qgLY38ITVH9pcePvDQeKmaC4VpWundZH+TWDezp4/gaWI3pGaCJAbf0IJ+h
2T7YiIhYYcPhN/lWCVKTK+Ati92z49E78GQu/1QuDvfFe37K7W4DuPsPnyEL
vw07H1XOG+H4naBPL6vCrSuJ5qRfX97rgf08ofQ53LxS4bxoK5B5Aybamv5y
dHeBYvycjDUun3xut50Zb78JFh5f8b/vt8O2ePXBfVy8v10weVhofxNGddXI
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
n9Xan5NpBm5PAgC5HEce
       "]], {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRange -> {Full, Full, Full}, 
     DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
       "\"|\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Rho]\\), \
\\(\[RightVector]\\)], \\(1\\)]\\)|  [fm]\"", TraditionalForm], 
       FormBox[
       "\"|\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Rho]\\), \
\\(\[RightVector]\\)], \\(2\\)]\\)|  [fm]\"", TraditionalForm], 
       FormBox[
       "\"\[Sum]\\!\\(\\*SubsuperscriptBox[\\(a\\), \\(n\\), \\((fit)\\)]\\)\
\[CenterDot]\\!\\(\\*SuperscriptBox[\\(e\\), \\(\\(-\\*SubsuperscriptBox[\\(b\
\\), \\(n\\), \\((fit)\\)]\\) \\((\\*SubsuperscriptBox[\\(\[Rho]\\), \\(1\\), \
\\(2\\)] + \\*SubsuperscriptBox[\\(\[Rho]\\), \\(2\\), \\(2\\)])\\)\\)]\\)\"",
         TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, DisplayFunction :> 
     Identity, FaceGridsStyle -> Automatic, ImageSize -> Large, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "RotationControl" -> "Globe"}, 
     PlotRange -> {{1., 22.}, {1., 22.}, {-0.8987312400000004, 
      0.0026254690745978345`}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[CapitalLambda]=2\\!\\(\\*SuperscriptBox[\\(fm\\), \\(-1\\)]\\) (1)\
\"", "\"\[CapitalLambda]=2\\!\\(\\*SuperscriptBox[\\(fm\\), \\(-1\\)]\\) \
(2)\"", "\"\[CapitalLambda]=2\\!\\(\\*SuperscriptBox[\\(fm\\), \\(-1\\)]\\) \
(3)\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.30100577`", ",", "0.22414668499999998`", ",", 
                    "0.090484535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2642166`", ",", "0.18331229999999998`", ",", 
                    "0.04261530000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19699838300000003`", ",", "0.252204821`", ",", 
                    "0.33320940200000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.15473514000000002`", ",", 
                    "0.21284718000000002`", ",", "0.29811516000000005`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.886748437656518*^9, 3.886748480257766*^9}},
 CellLabel->
  "Out[267]=",ExpressionUUID->"b66c26bc-fc52-41b4-8623-f7b73d0a7491"]
}, Open  ]]
},
WindowSize->{960., 1052.25},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.1 for Linux x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a328b483-e448-448f-9c86-1bfe9b4836d7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1274, 29, 87, "Input",ExpressionUUID->"653e6f27-b0ac-45fc-bdc8-97ea1f24bb4a",
 InitializationCell->True],
Cell[1857, 53, 529, 7, 33, "Output",ExpressionUUID->"1892d7a4-8632-4b45-9570-9ead22d18b1e"]
}, Open  ]],
Cell[2401, 63, 3642, 67, 108, "Input",ExpressionUUID->"58b6ae4e-cc02-4d48-9cb9-35e73a732b50",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6068, 134, 7538, 131, 296, "Input",ExpressionUUID->"bf83628a-d951-423c-bbe8-0c24586b1e07",
 InitializationCell->True],
Cell[13609, 267, 2595, 40, 42, "Print",ExpressionUUID->"5c08c234-1ded-43fd-820a-f7570f7ddc58"]
}, Open  ]],
Cell[16219, 310, 918, 23, 67, "Input",ExpressionUUID->"ca19f55d-800e-4f0d-8de0-39c420dba2ab",
 InitializationCell->True],
Cell[17140, 335, 2750, 62, 152, "Input",ExpressionUUID->"933eaeb0-c9b9-438c-96db-3602df43d9f2",
 InitializationCell->True],
Cell[19893, 399, 32874, 719, 1132, "Input",ExpressionUUID->"1d34d1fa-fb94-4a35-9d0c-11b452365a0a",
 InitializationCell->True],
Cell[52770, 1120, 30992, 527, 878, "Input",ExpressionUUID->"3028559a-662e-4356-b9b5-ada81c3f8385",
 InitializationCell->True],
Cell[83765, 1649, 7564, 161, 627, "Input",ExpressionUUID->"90416275-401e-4491-8557-84af7f68d3db",
 InitializationCell->True],
Cell[91332, 1812, 29831, 762, 2047, "Input",ExpressionUUID->"c4b5c0e5-01ff-487e-a8a0-12d32a2683dd",
 InitializationCell->True],
Cell[121166, 2576, 4500, 113, 294, "Input",ExpressionUUID->"672176f5-b77a-4100-870a-a75327cd82d5",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[125691, 2693, 13521, 330, 956, "Input",ExpressionUUID->"cd73a3e1-b8d3-4358-be63-70dd031a36fc"],
Cell[139215, 3025, 1430, 37, 44, "Print",ExpressionUUID->"8afd81e4-2bcf-459c-96fd-715b4dd5ea90"],
Cell[140648, 3064, 447, 10, 22, "Message",ExpressionUUID->"2a06eacc-2630-4d49-aaf1-7f77ff362c6f"],
Cell[CellGroupData[{
Cell[141120, 3078, 1423, 36, 44, "Print",ExpressionUUID->"d86a2140-44a0-460d-bdbc-89e982796c40"],
Cell[142546, 3116, 1407, 35, 44, "Print",ExpressionUUID->"3eda8c46-818a-49f6-985b-73577feab6a9"],
Cell[143956, 3153, 1441, 38, 44, "Print",ExpressionUUID->"493fac36-27f3-4150-9c24-597533e3adf1"],
Cell[145400, 3193, 1453, 38, 44, "Print",ExpressionUUID->"ba682bd9-8114-4462-9ef2-606c385dc125"]
}, Open  ]],
Cell[146868, 3234, 4032, 80, 328, "Output",ExpressionUUID->"c23e4530-2c2a-4606-8f9f-33d12e09972e"],
Cell[150903, 3316, 490958, 8306, 483, "Output",ExpressionUUID->"cee44483-052b-4433-96cd-1d0534bb1346"]
}, Open  ]],
Cell[641876, 11625, 6604, 173, 376, "Text",ExpressionUUID->"124754ec-269c-4607-b995-ae11898c43e2"],
Cell[CellGroupData[{
Cell[648505, 11802, 364, 8, 51, "Input",ExpressionUUID->"16a80f13-56d3-4766-9a5b-0d49e75c13d3"],
Cell[648872, 11812, 27668, 575, 457, "Output",ExpressionUUID->"7059fd37-b57e-4536-badf-50c980b51f84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[676577, 12392, 1730, 48, 95, "Input",ExpressionUUID->"db8682ab-cdf2-4188-aa81-9ee925b01dec"],
Cell[678310, 12442, 1400, 40, 38, "Output",ExpressionUUID->"b7fa7648-fa97-4a43-9f7d-eb940d1aa10e"],
Cell[679713, 12484, 296, 5, 33, "Output",ExpressionUUID->"c8cc94e6-ff98-4d9e-adcf-37ff87b620e0"],
Cell[680012, 12491, 537, 12, 38, "Message",ExpressionUUID->"7ac94a4b-33f6-42cb-a040-1d9cf4e18a9c"],
Cell[680552, 12505, 295, 5, 33, "Output",ExpressionUUID->"e1508404-d4ed-4cd0-a24d-13ac50ed2068"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680884, 12515, 597, 13, 29, "Input",ExpressionUUID->"b829d9b2-2b60-4a92-9775-9edb2e8fb246"],
Cell[681484, 12530, 412, 7, 33, "Output",ExpressionUUID->"fe8b0535-aa0c-4c03-a9dd-880fbec895cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[681933, 12542, 697, 16, 29, "Input",ExpressionUUID->"e4eccd3d-1a24-4317-8677-1d8ad964b0e4"],
Cell[682633, 12560, 108719, 1847, 367, "Output",ExpressionUUID->"2180a805-9236-4d62-945e-972ccc30cc39"]
}, Open  ]],
Cell[791367, 14410, 282, 8, 81, "Text",ExpressionUUID->"e3a4b569-8afc-41cd-a05d-2746d6018163"],
Cell[CellGroupData[{
Cell[791674, 14422, 1228, 33, 92, "Input",ExpressionUUID->"da439fcd-72c6-44e3-8f51-af3af6a496c1"],
Cell[792905, 14457, 503, 12, 22, "Message",ExpressionUUID->"80e4df1b-50e4-4ac6-8f17-3a25da9fee76"],
Cell[CellGroupData[{
Cell[793433, 14473, 639, 19, 23, "Print",ExpressionUUID->"c7862a56-966e-4bcc-a759-d95eb42dfea2"],
Cell[794075, 14494, 1072, 28, 23, "Print",ExpressionUUID->"a14f3f67-25c8-4095-a806-cc2465cd5c11"],
Cell[795150, 14524, 1260, 32, 38, "Print",ExpressionUUID->"7b1efbe5-70ce-4f90-a917-1cb4ce9aa8d9"],
Cell[796413, 14558, 1513, 38, 55, "Print",ExpressionUUID->"ca356ce5-f474-4a05-9aff-67e257f43ab7"],
Cell[797929, 14598, 1844, 44, 72, "Print",ExpressionUUID->"db87f89c-f8a4-4fe3-bd09-ba7b4ca6dd60"],
Cell[799776, 14644, 2277, 54, 89, "Print",ExpressionUUID->"67db3ec7-dfd7-48c1-ae58-e33a04655408"],
Cell[802056, 14700, 2768, 62, 106, "Print",ExpressionUUID->"22550f41-52fc-49e3-b075-66f25580181d"],
Cell[804827, 14764, 3334, 71, 122, "Print",ExpressionUUID->"7b8f88d2-f12a-4aa4-b122-90dd3b83a6ec"],
Cell[808164, 14837, 3976, 80, 139, "Print",ExpressionUUID->"b88a77f2-c3d7-440f-969f-d3e335e7e67b"],
Cell[812143, 14919, 4759, 98, 156, "Print",ExpressionUUID->"811f4135-e086-4085-b00c-9acb009a248b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[816951, 15023, 417, 11, 37, "Input",ExpressionUUID->"62394fa1-6c9e-4f73-8543-946f6acf8f8c"],
Cell[817371, 15036, 317, 5, 33, "Output",ExpressionUUID->"b1f1b5fb-cb1d-4be6-acb1-281f38ef1e7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817725, 15046, 9210, 235, 585, "Input",ExpressionUUID->"126ad689-d7b6-4c0f-a0f2-0df3308a1f2e"],
Cell[CellGroupData[{
Cell[826960, 15285, 1048, 16, 23, "Print",ExpressionUUID->"b6faab19-bacf-4286-930e-fda004279b9a"],
Cell[828011, 15303, 1044, 16, 23, "Print",ExpressionUUID->"3f6dfaca-f142-442d-99ee-c6cf590f68cc"]
}, Open  ]],
Cell[829070, 15322, 3369, 75, 38, "Output",ExpressionUUID->"3473d891-de8e-4a86-bf80-efd22347f8b1"],
Cell[832442, 15399, 582, 12, 38, "Message",ExpressionUUID->"2118fdc3-4422-4ff5-99a2-1b0d0f014629"],
Cell[833027, 15413, 1124, 19, 86, "Message",ExpressionUUID->"519351f6-4356-44a0-8bb6-b93df9a4e545"],
Cell[834154, 15434, 2001, 34, 37, "Print",ExpressionUUID->"0139c2be-f279-49d6-927b-adefbaac40e5"],
Cell[836158, 15470, 1807, 26, 33, "Output",ExpressionUUID->"c21752dd-729a-4121-96b4-978e1216a09b"],
Cell[837968, 15498, 1051, 16, 23, "Print",ExpressionUUID->"a582be5e-59e3-4be9-aeee-a16f69440039"]
}, Open  ]],
Cell[839034, 15517, 171, 3, 35, "Text",ExpressionUUID->"9c55d2f5-3be2-4dfa-a10f-781d1e4fecd9"],
Cell[CellGroupData[{
Cell[839230, 15524, 31641, 832, 2434, "Input",ExpressionUUID->"7a6e192f-e08e-4894-813d-73ef54a4554f"],
Cell[870874, 16358, 293043, 4899, 480, "Output",ExpressionUUID->"b66c26bc-fc52-41b4-8623-f7b73d0a7491"]
}, Open  ]]
}
]
*)

